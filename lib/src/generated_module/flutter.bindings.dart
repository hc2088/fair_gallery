// ignore_for_file: unused_import, unnecessary_import, implementation_imports, unused_shown_name, deprecated_member_use, prefer_single_quotes, unused_element, unused_field, duplicate_import, prefer_const_constructors
import 'package:flutter/rendering.dart';
import 'package:flutter/gestures.dart';
import 'dart:math' as math;
import 'dart:ui' as ui;
import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/physics.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/services.dart';

import 'package:fair/fair.dart';

// Value inspected from Xcode 11 & iOS 13.0 Simulator.
const BorderSide _kDefaultRoundedBorderSide = BorderSide(
  color: CupertinoDynamicColor.withBrightness(
    color: Color(0x33000000),
    darkColor: Color(0x33FFFFFF),
  ),
  style: BorderStyle.solid,
  width: 0.0,
);
const Border _kDefaultRoundedBorder = Border(
  top: _kDefaultRoundedBorderSide,
  bottom: _kDefaultRoundedBorderSide,
  left: _kDefaultRoundedBorderSide,
  right: _kDefaultRoundedBorderSide,
);

const BoxDecoration _kDefaultRoundedBorderDecoration = BoxDecoration(
  color: CupertinoDynamicColor.withBrightness(
    color: CupertinoColors.white,
    darkColor: CupertinoColors.black,
  ),
  border: _kDefaultRoundedBorder,
  borderRadius: BorderRadius.all(Radius.circular(5.0)),
);

const CupertinoDynamicColor _kThumbColor = CupertinoDynamicColor.withBrightness(
  color: Color(0xFFFFFFFF),
  darkColor: Color(0xFF636366),
);
const EdgeInsetsGeometry _kHorizontalItemPadding =
    EdgeInsets.symmetric(vertical: 2, horizontal: 3);
const double kMinInteractiveDimensionCupertino = 44.0;
const Color _kDefaultTabBarInactiveColor = CupertinoColors.inactiveGray;
const Color _kDefaultTabBarBorderColor = CupertinoDynamicColor.withBrightness(
  color: Color(0x4C000000),
  darkColor: Color(0x29000000),
);

const double _defaultRefreshTriggerPullDistance = 100.0;
const double _defaultRefreshIndicatorExtent = 60.0;
var buildRefreshIndicator = CupertinoSliverRefreshControl.buildRefreshIndicator;
const double _kDefaultDiameterRatio = 1.07;
const double _kSqueeze = 1.45;
const double _kDefaultIndicatorRadius = 10.0;
const Color _kDefaultNavBarBorderColor = Color(0x4D000000);
const Border _kDefaultNavBarBorder = Border(
  bottom: BorderSide(
    color: _kDefaultNavBarBorderColor,
    width: 0.0, // One physical pixel.
    style: BorderStyle.solid,
  ),
);
const _defaultHeroTag = "";
const Duration _snackBarDisplayDuration = Duration(milliseconds: 4000);

class _DefaultHeroTag {
  const _DefaultHeroTag();
  @override
  String toString() => '<default FloatingActionButton tag>';
}

const double _kMenuDividerHeight = 16.0;
const Color _kColor = Color(0xA0B71C1C);
const double _kHeight = 12.0; // height of banner
const TextStyle _kTextStyle = TextStyle(
  color: Color(0xFFFFFFFF),
  fontSize: _kHeight * 0.85,
  fontWeight: FontWeight.w900,
  height: 1.0,
);

const int defaultRowsPerPage = 10;
const double kMiddleSpacing = 16.0;

double _inverseLerp(double min, double max, double t) {
  assert(min <= max);
  double value = (t - min) / (max - min);

  // If the device incorrectly reports a pressure outside of pressureMin
  // and pressureMax, we still want this recognizer to respond normally.
  if (!value.isNaN) {
    value = clampDouble(value, 0.0, 1.0);
  }
  return value;
}

const double _epsilonDefault = 1e-3;
const TextStyle _kDefaultPlaceholderStyle = TextStyle(
  fontWeight: FontWeight.w400,
  color: CupertinoColors.placeholderText,
);

// Builds a toolbar just like the default iOS toolbar, with the right color
// background and a rounded cutout with an arrow.
Widget _defaultToolbarBuilder(
    BuildContext context, Offset anchor, bool isAbove, Widget child) {
  return _CupertinoTextSelectionToolbarShape(
    anchor: anchor,
    isAbove: isAbove,
    child: DecoratedBox(
      decoration: const BoxDecoration(color: _kToolbarDividerColor),
      child: child,
    ),
  );
}

// Clips the child so that it has the shape of the default iOS text selection
// toolbar, with rounded corners and an arrow pointing at the anchor.
//
// The anchor should be in global coordinates.
class _CupertinoTextSelectionToolbarShape
    extends SingleChildRenderObjectWidget {
  const _CupertinoTextSelectionToolbarShape({
    required Offset anchor,
    required bool isAbove,
    super.child,
  })  : _anchor = anchor,
        _isAbove = isAbove;

  final Offset _anchor;

  // Whether the arrow should point down and be attached to the bottom
  // of the toolbar, or point up and be attached to the top of the toolbar.
  final bool _isAbove;

  @override
  _RenderCupertinoTextSelectionToolbarShape createRenderObject(
          BuildContext context) =>
      _RenderCupertinoTextSelectionToolbarShape(
        _anchor,
        _isAbove,
        null,
      );

  @override
  void updateRenderObject(BuildContext context,
      _RenderCupertinoTextSelectionToolbarShape renderObject) {
    renderObject
      ..anchor = _anchor
      ..isAbove = _isAbove;
  }
}

const Size _kToolbarArrowSize = Size(14.0, 7.0);

const Color _kToolbarDividerColor = Color(0xFF808080);

class _RenderCupertinoTextSelectionToolbarShape extends RenderShiftedBox {
  _RenderCupertinoTextSelectionToolbarShape(
    this._anchor,
    this._isAbove,
    RenderBox? child,
  ) : super(child);

  @override
  bool get isRepaintBoundary => true;

  Offset get anchor => _anchor;
  Offset _anchor;
  set anchor(Offset value) {
    if (value == _anchor) {
      return;
    }
    _anchor = value;
    markNeedsLayout();
  }

  bool get isAbove => _isAbove;
  bool _isAbove;
  set isAbove(bool value) {
    if (_isAbove == value) {
      return;
    }
    _isAbove = value;
    markNeedsLayout();
  }

  // The child is tall enough to have the arrow clipped out of it on both sides
  // top and bottom. Since _kToolbarHeight includes the height of one arrow, the
  // total height that the child is given is that plus one more arrow height.
  // The extra height on the opposite side of the arrow will be clipped out. By
  // using this approach, the buttons don't need any special padding that
  // depends on isAbove.
  final BoxConstraints _heightConstraint = BoxConstraints.tightFor(
    height: _kToolbarHeight + _kToolbarArrowSize.height,
  );

  @override
  void performLayout() {
    if (child == null) {
      return;
    }

    final BoxConstraints enforcedConstraint = constraints.loosen();

    child!.layout(_heightConstraint.enforce(enforcedConstraint),
        parentUsesSize: true);

    // The height of one arrow will be clipped off of the child, so adjust the
    // size and position to remove that piece from the layout.
    final BoxParentData childParentData = child!.parentData! as BoxParentData;
    childParentData.offset = Offset(
      0.0,
      _isAbove ? -_kToolbarArrowSize.height : 0.0,
    );
    size = Size(
      child!.size.width,
      child!.size.height - _kToolbarArrowSize.height,
    );
  }

  // The path is described in the toolbar's coordinate system.
  Path _clipPath() {
    final BoxParentData childParentData = child!.parentData! as BoxParentData;
    final Path rrect = Path()
      ..addRRect(
        RRect.fromRectAndRadius(
          Offset(0.0, _kToolbarArrowSize.height) &
              Size(
                child!.size.width,
                child!.size.height - _kToolbarArrowSize.height * 2,
              ),
          _kToolbarBorderRadius,
        ),
      );

    final Offset localAnchor = globalToLocal(_anchor);
    final double centerX = childParentData.offset.dx + child!.size.width / 2;
    final double arrowXOffsetFromCenter = localAnchor.dx - centerX;
    final double arrowTipX = child!.size.width / 2 + arrowXOffsetFromCenter;

    final double arrowBaseY = _isAbove
        ? child!.size.height - _kToolbarArrowSize.height
        : _kToolbarArrowSize.height;

    final double arrowTipY = _isAbove ? child!.size.height : 0;

    final Path arrow = Path()
      ..moveTo(arrowTipX, arrowTipY)
      ..lineTo(arrowTipX - _kToolbarArrowSize.width / 2, arrowBaseY)
      ..lineTo(arrowTipX + _kToolbarArrowSize.width / 2, arrowBaseY)
      ..close();

    return Path.combine(PathOperation.union, rrect, arrow);
  }

  @override
  void paint(PaintingContext context, Offset offset) {
    if (child == null) {
      return;
    }

    final BoxParentData childParentData = child!.parentData! as BoxParentData;
    _clipPathLayer.layer = context.pushClipPath(
      needsCompositing,
      offset + childParentData.offset,
      Offset.zero & child!.size,
      _clipPath(),
      (PaintingContext innerContext, Offset innerOffset) =>
          innerContext.paintChild(child!, innerOffset),
      oldLayer: _clipPathLayer.layer,
    );
  }

  final LayerHandle<ClipPathLayer> _clipPathLayer =
      LayerHandle<ClipPathLayer>();
  Paint? _debugPaint;

  @override
  void dispose() {
    _clipPathLayer.layer = null;
    super.dispose();
  }

  @override
  void debugPaintSize(PaintingContext context, Offset offset) {
    assert(() {
      if (child == null) {
        return true;
      }

      _debugPaint ??= Paint()
        ..shader = ui.Gradient.linear(
          Offset.zero,
          const Offset(10.0, 10.0),
          const <Color>[
            Color(0x00000000),
            Color(0xFFFF00FF),
            Color(0xFFFF00FF),
            Color(0x00000000)
          ],
          const <double>[0.25, 0.25, 0.75, 0.75],
          TileMode.repeated,
        )
        ..strokeWidth = 2.0
        ..style = PaintingStyle.stroke;

      final BoxParentData childParentData = child!.parentData! as BoxParentData;
      context.canvas.drawPath(
          _clipPath().shift(offset + childParentData.offset), _debugPaint!);
      return true;
    }());
  }

  @override
  bool hitTestChildren(BoxHitTestResult result, {required Offset position}) {
    // Positions outside of the clipped area of the child are not counted as
    // hits.
    final BoxParentData childParentData = child!.parentData! as BoxParentData;
    final Rect hitBox = Rect.fromLTWH(
      childParentData.offset.dx,
      childParentData.offset.dy + _kToolbarArrowSize.height,
      child!.size.width,
      child!.size.height - _kToolbarArrowSize.height * 2,
    );
    if (!hitBox.contains(position)) {
      return false;
    }

    return super.hitTestChildren(result, position: position);
  }
}

// Values extracted from https://developer.apple.com/design/resources/.
// The height of the toolbar, including the arrow.
const double _kToolbarHeight = 43.0;

// Values extracted from https://developer.apple.com/design/resources/.
const Radius _kToolbarBorderRadius = Radius.circular(8);

// Standard iOS 10 tab bar height.
const double _kTabBarHeight = 50.0;

// Used for iOS "Inset Grouped" margin, determined from SwiftUI's Forms in
// iOS 14.2 SDK.
const EdgeInsetsDirectional _kDefaultInsetGroupedRowsMargin =
    EdgeInsetsDirectional.fromSTEB(20.0, 0.0, 20.0, 10.0);

/// Default value for [thickness] if it's not specified in [CupertinoScrollbar].
const double defaultThickness = 3;

/// Default value for [thicknessWhileDragging] if it's not specified in
/// [CupertinoScrollbar].
const double defaultThicknessWhileDragging = 8.0;

/// Default value for [radius] if it's not specified in [CupertinoScrollbar].
const Radius defaultRadius = Radius.circular(1.5);

/// Default value for [radiusWhileDragging] if it's not specified in
/// [CupertinoScrollbar].
const Radius defaultRadiusWhileDragging = Radius.circular(4.0);
mixin _ScrollUnderFlexibleConfig {
  TextStyle? get collapsedTextStyle;
  TextStyle? get expandedTextStyle;
  EdgeInsetsGeometry? get collapsedTitlePadding;
  EdgeInsetsGeometry? get collapsedCenteredTitlePadding;
  EdgeInsetsGeometry? get expandedTitlePadding;
}

// Variant configuration
class _MediumScrollUnderFlexibleConfig with _ScrollUnderFlexibleConfig {
  _MediumScrollUnderFlexibleConfig(this.context);

  final BuildContext context;
  late final ThemeData _theme = Theme.of(context);
  late final ColorScheme _colors = _theme.colorScheme;
  late final TextTheme _textTheme = _theme.textTheme;

  static const double collapsedHeight = 64.0;

  @override
  TextStyle? get collapsedTextStyle =>
      _textTheme.titleLarge?.apply(color: _colors.onSurface);

  @override
  TextStyle? get expandedTextStyle =>
      _textTheme.headlineSmall?.apply(color: _colors.onSurface);

  @override
  EdgeInsetsGeometry? get collapsedTitlePadding =>
      const EdgeInsetsDirectional.fromSTEB(48, 0, 16, 0);

  @override
  EdgeInsetsGeometry? get collapsedCenteredTitlePadding =>
      const EdgeInsets.fromLTRB(16, 0, 16, 0);

  @override
  EdgeInsetsGeometry? get expandedTitlePadding =>
      const EdgeInsets.fromLTRB(16, 0, 16, 20);
}

class _LargeScrollUnderFlexibleConfig with _ScrollUnderFlexibleConfig {
  _LargeScrollUnderFlexibleConfig(this.context);

  final BuildContext context;
  late final ThemeData _theme = Theme.of(context);
  late final ColorScheme _colors = _theme.colorScheme;
  late final TextTheme _textTheme = _theme.textTheme;

  static const double collapsedHeight = 64.0;

  @override
  TextStyle? get collapsedTextStyle =>
      _textTheme.titleLarge?.apply(color: _colors.onSurface);

  @override
  TextStyle? get expandedTextStyle =>
      _textTheme.headlineMedium?.apply(color: _colors.onSurface);

  @override
  EdgeInsetsGeometry? get collapsedTitlePadding =>
      const EdgeInsetsDirectional.fromSTEB(48, 0, 16, 0);

  @override
  EdgeInsetsGeometry? get collapsedCenteredTitlePadding =>
      const EdgeInsets.fromLTRB(16, 0, 16, 0);

  @override
  EdgeInsetsGeometry? get expandedTitlePadding =>
      const EdgeInsets.fromLTRB(16, 0, 16, 28);
}

Widget _defaultFieldViewBuilder(
    BuildContext context,
    TextEditingController textEditingController,
    FocusNode focusNode,
    VoidCallback onFieldSubmitted) {
  return _AutocompleteField(
    focusNode: focusNode,
    textEditingController: textEditingController,
    onFieldSubmitted: onFieldSubmitted,
  );
}

// The default Material-style Autocomplete text field.
class _AutocompleteField extends StatelessWidget {
  const _AutocompleteField({
    required this.focusNode,
    required this.textEditingController,
    required this.onFieldSubmitted,
  });

  final FocusNode focusNode;

  final VoidCallback onFieldSubmitted;

  final TextEditingController textEditingController;

  @override
  Widget build(BuildContext context) {
    return TextFormField(
      controller: textEditingController,
      focusNode: focusNode,
      onFieldSubmitted: (String value) {
        onFieldSubmitted();
      },
    );
  }
}

/// Default stroke width.
const double defaultStrokeWidth = 2.5;
const double _kMinThumbExtent = 18.0;
const double _kScrollbarThickness = 6.0;
const Duration _kScrollbarFadeDuration = Duration(milliseconds: 300);
const Duration _kScrollbarTimeToFade = Duration(milliseconds: 600);
const Set<TargetPlatform> _kMobilePlatforms = <TargetPlatform>{
  TargetPlatform.android,
  TargetPlatform.iOS,
  TargetPlatform.fuchsia,
};

/// The default way to convert an option to a string in
/// [displayStringForOption].
///
/// Simply uses the `toString` method on the option.
String defaultStringForOption(dynamic option) {
  return option.toString();
}

const int _kColorDefault = 0xFF000000;
Widget _buildCupertinoDialogTransitions(
    BuildContext context,
    Animation<double> animation,
    Animation<double> secondaryAnimation,
    Widget child) {
  final CurvedAnimation fadeAnimation = CurvedAnimation(
    parent: animation,
    curve: Curves.easeInOut,
  );
  if (animation.status == AnimationStatus.reverse) {
    return FadeTransition(
      opacity: fadeAnimation,
      child: child,
    );
  }
  return FadeTransition(
    opacity: fadeAnimation,
    child: ScaleTransition(
      scale: animation.drive(_dialogScaleTween),
      child: child,
    ),
  );
}

const List<BoxShadow> _kSwitchBoxShadows = <BoxShadow>[
  BoxShadow(
    color: Color(0x26000000),
    offset: Offset(0, 3),
    blurRadius: 8.0,
  ),
  BoxShadow(
    color: Color(0x0F000000),
    offset: Offset(0, 3),
    blurRadius: 1.0,
  ),
];

const List<BoxShadow> _kSliderBoxShadows = <BoxShadow>[
  BoxShadow(
    color: Color(0x26000000),
    offset: Offset(0, 3),
    blurRadius: 8.0,
  ),
  BoxShadow(
    color: Color(0x29000000),
    offset: Offset(0, 1),
    blurRadius: 1.0,
  ),
  BoxShadow(
    color: Color(0x1A000000),
    offset: Offset(0, 3),
    blurRadius: 1.0,
  ),
];

const Map<TargetPlatform, PageTransitionsBuilder> _defaultBuilders =
    <TargetPlatform, PageTransitionsBuilder>{
  TargetPlatform.android: ZoomPageTransitionsBuilder(),
  TargetPlatform.iOS: CupertinoPageTransitionsBuilder(),
  TargetPlatform.macOS: CupertinoPageTransitionsBuilder(),
};

const Duration _kDefaultHighlightFadeDuration = Duration(milliseconds: 200);

// An eyeballed value for a smooth scrolling experience.
const double _kDefaultAutoScrollVelocityScalar = 7;
// The curve and initial scale values were mostly eyeballed from iOS, however
// they reuse the same animation curve that was modeled after native page
// transitions.
final Animatable<double> _dialogScaleTween = Tween<double>(begin: 1.3, end: 1.0)
    .chain(CurveTween(curve: Curves.linearToEaseOut));

// Modifier key masks.

/// No modifier keys are pressed in the [metaState] field.
///
/// Use this value if you need to decode the [metaState] field yourself, but
/// it's much easier to use [isModifierPressed] if you just want to know if
/// a modifier is pressed.
const int modifierNone = 0;
Widget _defaultTransitionsBuilder(
    BuildContext context,
    Animation<double> animation,
    Animation<double> secondaryAnimation,
    Widget child) {
  return child;
}

NavigatorState _defaultNavigatorFinder(BuildContext context) =>
    Navigator.of(context);
int _kDefaultSemanticIndexCallback(Widget _, int localIndex) => localIndex;

/// flutterVersion = '3.3.9';
/// dartVersion = '2.18.5';
/// widgetCount = 418;
/// apiCount = 999;
Map<String, dynamic> flutterComponents = {
  'Ticker': (props) => Ticker(
        props['pa'][0],
        debugLabel: props['debugLabel'],
      ),
  'TickerFuture.complete': (props) => TickerFuture.complete(),
  'TickerCanceled': (props) => TickerCanceled(
        props['pa'][0],
      ),
  'Priority.idle': Priority.idle,
  'Priority.animation': Priority.animation,
  'Priority.touch': Priority.touch,
  'Priority.kMaxOffset': Priority.kMaxOffset,
  'SchedulerPhase.idle': SchedulerPhase.idle,
  'SchedulerPhase.transientCallbacks': SchedulerPhase.transientCallbacks,
  'SchedulerPhase.midFrameMicrotasks': SchedulerPhase.midFrameMicrotasks,
  'SchedulerPhase.persistentCallbacks': SchedulerPhase.persistentCallbacks,
  'SchedulerPhase.postFrameCallbacks': SchedulerPhase.postFrameCallbacks,
  'SchedulerPhase.values': SchedulerPhase.values,
  'Tween': (props) => Tween(
        begin: props['begin'],
        end: props['end'],
      ),
  'ReverseTween': (props) => ReverseTween(
        props['pa'][0],
      ),
  'ColorTween': (props) => ColorTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'SizeTween': (props) => SizeTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'RectTween': (props) => RectTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'IntTween': (props) => IntTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'StepTween': (props) => StepTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'ConstantTween': (props) => ConstantTween(
        props['pa'][0],
      ),
  'CurveTween': (props) => CurveTween(
        curve: props['curve'],
      ),
  'TweenSequence': (props) => TweenSequence(
        props['pa'][0],
      ),
  'FlippedTweenSequence': (props) => FlippedTweenSequence(
        props['pa'][0],
      ),
  'TweenSequenceItem': (props) => TweenSequenceItem(
        tween: props['tween'],
        weight: props['weight']?.toDouble() ?? 0,
      ),
  'AnimationController': (props) => AnimationController(
        value: props['value']?.toDouble(),
        duration: props['duration'],
        reverseDuration: props['reverseDuration'],
        debugLabel: props['debugLabel'],
        lowerBound: props['lowerBound']?.toDouble() ?? 0.0,
        upperBound: props['upperBound']?.toDouble() ?? 1.0,
        animationBehavior:
            props['animationBehavior'] ?? AnimationBehavior.normal,
        vsync: props['vsync'],
      ),
  'AnimationController.unbounded': (props) => AnimationController.unbounded(
        value: props['value']?.toDouble() ?? 0.0,
        duration: props['duration'],
        reverseDuration: props['reverseDuration'],
        debugLabel: props['debugLabel'],
        vsync: props['vsync'],
        animationBehavior:
            props['animationBehavior'] ?? AnimationBehavior.preserve,
      ),
  'AnimationBehavior.normal': AnimationBehavior.normal,
  'AnimationBehavior.preserve': AnimationBehavior.preserve,
  'AnimationBehavior.values': AnimationBehavior.values,
  'AnimationStatus.dismissed': AnimationStatus.dismissed,
  'AnimationStatus.forward': AnimationStatus.forward,
  'AnimationStatus.reverse': AnimationStatus.reverse,
  'AnimationStatus.completed': AnimationStatus.completed,
  'AnimationStatus.values': AnimationStatus.values,
  'SawTooth': (props) => SawTooth(
        props['pa'][0],
      ),
  'Interval': (props) => Interval(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        curve: props['curve'] ?? Curves.linear,
      ),
  'Threshold': (props) => Threshold(
        props['pa'][0]?.toDouble(),
      ),
  'Cubic': (props) => Cubic(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'ThreePointCubic': (props) => ThreePointCubic(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
        props['pa'][4],
      ),
  'Curve2DSample': (props) => Curve2DSample(
        props['pa'][0]?.toDouble(),
        props['pa'][1],
      ),
  'CatmullRomSpline': (props) => CatmullRomSpline(
        props['pa'][0],
        tension: props['tension']?.toDouble() ?? 0.0,
        startHandle: props['startHandle'],
        endHandle: props['endHandle'],
      ),
  'CatmullRomSpline.precompute': (props) => CatmullRomSpline.precompute(
        props['pa'][0],
        tension: props['tension']?.toDouble() ?? 0.0,
        startHandle: props['startHandle'],
        endHandle: props['endHandle'],
      ),
  'CatmullRomCurve': (props) => CatmullRomCurve(
        props['pa'][0],
        tension: props['tension']?.toDouble() ?? 0.0,
      ),
  'CatmullRomCurve.precompute': (props) => CatmullRomCurve.precompute(
        props['pa'][0],
        tension: props['tension']?.toDouble() ?? 0.0,
      ),
  'CatmullRomCurve.validateControlPoints': (props) =>
      CatmullRomCurve.validateControlPoints(
        props['pa'][0],
        tension: props['tension']?.toDouble() ?? 0.0,
        reasons: as(props['reasons']),
      ),
  'FlippedCurve': (props) => FlippedCurve(
        props['pa'][0],
      ),
  'ElasticInCurve': (props) => ElasticInCurve(
        props['pa'][0]?.toDouble() ?? 0.4,
      ),
  'ElasticOutCurve': (props) => ElasticOutCurve(
        props['pa'][0]?.toDouble() ?? 0.4,
      ),
  'ElasticInOutCurve': (props) => ElasticInOutCurve(
        props['pa'][0]?.toDouble() ?? 0.4,
      ),
  'Curves.linear': Curves.linear,
  'Curves.decelerate': Curves.decelerate,
  'Curves.fastLinearToSlowEaseIn': Curves.fastLinearToSlowEaseIn,
  'Curves.ease': Curves.ease,
  'Curves.easeIn': Curves.easeIn,
  'Curves.easeInToLinear': Curves.easeInToLinear,
  'Curves.easeInSine': Curves.easeInSine,
  'Curves.easeInQuad': Curves.easeInQuad,
  'Curves.easeInCubic': Curves.easeInCubic,
  'Curves.easeInQuart': Curves.easeInQuart,
  'Curves.easeInQuint': Curves.easeInQuint,
  'Curves.easeInExpo': Curves.easeInExpo,
  'Curves.easeInCirc': Curves.easeInCirc,
  'Curves.easeInBack': Curves.easeInBack,
  'Curves.easeOut': Curves.easeOut,
  'Curves.linearToEaseOut': Curves.linearToEaseOut,
  'Curves.easeOutSine': Curves.easeOutSine,
  'Curves.easeOutQuad': Curves.easeOutQuad,
  'Curves.easeOutCubic': Curves.easeOutCubic,
  'Curves.easeOutQuart': Curves.easeOutQuart,
  'Curves.easeOutQuint': Curves.easeOutQuint,
  'Curves.easeOutExpo': Curves.easeOutExpo,
  'Curves.easeOutCirc': Curves.easeOutCirc,
  'Curves.easeOutBack': Curves.easeOutBack,
  'Curves.easeInOut': Curves.easeInOut,
  'Curves.easeInOutSine': Curves.easeInOutSine,
  'Curves.easeInOutQuad': Curves.easeInOutQuad,
  'Curves.easeInOutCubic': Curves.easeInOutCubic,
  'Curves.easeInOutCubicEmphasized': Curves.easeInOutCubicEmphasized,
  'Curves.easeInOutQuart': Curves.easeInOutQuart,
  'Curves.easeInOutQuint': Curves.easeInOutQuint,
  'Curves.easeInOutExpo': Curves.easeInOutExpo,
  'Curves.easeInOutCirc': Curves.easeInOutCirc,
  'Curves.easeInOutBack': Curves.easeInOutBack,
  'Curves.fastOutSlowIn': Curves.fastOutSlowIn,
  'Curves.slowMiddle': Curves.slowMiddle,
  'Curves.bounceIn': Curves.bounceIn,
  'Curves.bounceOut': Curves.bounceOut,
  'Curves.bounceInOut': Curves.bounceInOut,
  'Curves.elasticIn': Curves.elasticIn,
  'Curves.elasticOut': Curves.elasticOut,
  'Curves.elasticInOut': Curves.elasticInOut,
  'AlwaysStoppedAnimation': (props) => AlwaysStoppedAnimation(
        props['pa'][0],
      ),
  'ProxyAnimation': (props) => ProxyAnimation(
        props['pa'][0],
      ),
  'ReverseAnimation': (props) => ReverseAnimation(
        props['pa'][0],
      ),
  'CurvedAnimation': (props) => CurvedAnimation(
        parent: props['parent'],
        curve: props['curve'],
        reverseCurve: props['reverseCurve'],
      ),
  'TrainHoppingAnimation': (props) => TrainHoppingAnimation(
        props['pa'][0],
        props['pa'][1],
        onSwitchedTrain: props['onSwitchedTrain'],
      ),
  'AnimationMean': (props) => AnimationMean(
        left: props['left'],
        right: props['right'],
      ),
  'AnimationMax': (props) => AnimationMax(
        props['pa'][0],
        props['pa'][1],
      ),
  'AnimationMin': (props) => AnimationMin(
        props['pa'][0],
        props['pa'][1],
      ),
  'Category': (props) => Category(
        props['pa'][0],
      ),
  'DocumentationIcon': (props) => DocumentationIcon(
        props['pa'][0],
      ),
  'Summary': (props) => Summary(
        props['pa'][0],
      ),
  'PartialStackFrame': (props) => PartialStackFrame(
        package: props['package'],
        className: props['className'],
        method: props['method'],
      ),
  'PartialStackFrame.asynchronousSuspension':
      PartialStackFrame.asynchronousSuspension,
  'RepetitiveStackFrameFilter': (props) => RepetitiveStackFrameFilter(
        frames: as<PartialStackFrame>(props['frames']) ?? const [],
        replacement: props['replacement'],
      ),
  'ErrorDescription': (props) => ErrorDescription(
        props['pa'][0],
      ),
  'ErrorSummary': (props) => ErrorSummary(
        props['pa'][0],
      ),
  'ErrorHint': (props) => ErrorHint(
        props['pa'][0],
      ),
  'ErrorSpacer': (props) => ErrorSpacer(),
  'FlutterErrorDetails': (props) => FlutterErrorDetails(
        exception: props['exception'],
        stack: props['stack'],
        library: props['library'] ?? 'Flutter framework',
        context: props['context'],
        stackFilter: props['stackFilter'],
        informationCollector: props['informationCollector'],
        silent: props['silent'] ?? false,
      ),
  'FlutterError': (props) => FlutterError(
        props['pa'][0],
      ),
  'FlutterError.fromParts': (props) => FlutterError.fromParts(
        props['pa'][0],
      ),
  'FlutterError.wrapWidth': FlutterError.wrapWidth,
  'FlutterError.resetErrorCount': (props) => FlutterError.resetErrorCount(),
  'FlutterError.dumpErrorToConsole': (props) => FlutterError.dumpErrorToConsole(
        props['pa'][0],
        forceReport: props['forceReport'] ?? false,
      ),
  'FlutterError.addDefaultStackFilter': (props) =>
      FlutterError.addDefaultStackFilter(
        props['pa'][0],
      ),
  'FlutterError.defaultStackFilter': (props) => FlutterError.defaultStackFilter(
        props['pa'][0],
      ),
  'FlutterError.reportError': (props) => FlutterError.reportError(
        props['pa'][0],
      ),
  'DiagnosticsStackTrace': (props) => DiagnosticsStackTrace(
        props['pa'][0],
        props['pa'][1],
        stackFilter: props['stackFilter'],
        showSeparator: props['showSeparator'] ?? true,
      ),
  'DiagnosticsStackTrace.singleFrame': (props) =>
      DiagnosticsStackTrace.singleFrame(
        props['pa'][0],
        frame: props['frame'],
        showSeparator: props['showSeparator'] ?? true,
      ),
  'AbstractNode': (props) => AbstractNode(),
  'WriteBuffer': (props) => WriteBuffer(
        startCapacity: props['startCapacity'] ?? 8,
      ),
  'ReadBuffer': (props) => ReadBuffer(
        props['pa'][0],
      ),
  'LicenseParagraph': (props) => LicenseParagraph(
        props['pa'][0],
        props['pa'][1],
      ),
  'LicenseParagraph.centeredIndent': LicenseParagraph.centeredIndent,
  'LicenseEntryWithLineBreaks': (props) => LicenseEntryWithLineBreaks(
        props['pa'][0],
        props['pa'][1],
      ),
  'LicenseRegistry.addLicense': (props) => LicenseRegistry.addLicense(
        props['pa'][0],
      ),
  'ObserverList': (props) => ObserverList(),
  'HashedObserverList': (props) => HashedObserverList(),
  'CachingIterable': (props) => CachingIterable(
        props['pa'][0],
      ),
  'Factory': (props) => Factory(
        props['pa'][0],
      ),
  'SynchronousFuture': (props) => SynchronousFuture(
        props['pa'][0],
      ),
  'Unicode.LRE': Unicode.LRE,
  'Unicode.RLE': Unicode.RLE,
  'Unicode.PDF': Unicode.PDF,
  'Unicode.LRO': Unicode.LRO,
  'Unicode.RLO': Unicode.RLO,
  'Unicode.LRI': Unicode.LRI,
  'Unicode.RLI': Unicode.RLI,
  'Unicode.FSI': Unicode.FSI,
  'Unicode.PDI': Unicode.PDI,
  'Unicode.LRM': Unicode.LRM,
  'Unicode.RLM': Unicode.RLM,
  'Unicode.ALM': Unicode.ALM,
  'TextTreeConfiguration': (props) => TextTreeConfiguration(
        prefixLineOne: props['prefixLineOne'],
        prefixOtherLines: props['prefixOtherLines'],
        prefixLastChildLineOne: props['prefixLastChildLineOne'],
        prefixOtherLinesRootNode: props['prefixOtherLinesRootNode'],
        linkCharacter: props['linkCharacter'],
        propertyPrefixIfChildren: props['propertyPrefixIfChildren'],
        propertyPrefixNoChildren: props['propertyPrefixNoChildren'],
        lineBreak: props['lineBreak'] ?? '\n',
        lineBreakProperties: props['lineBreakProperties'] ?? true,
        afterName: props['afterName'] ?? ':',
        afterDescriptionIfBody: props['afterDescriptionIfBody'] ?? '',
        afterDescription: props['afterDescription'] ?? '',
        beforeProperties: props['beforeProperties'] ?? '',
        afterProperties: props['afterProperties'] ?? '',
        mandatoryAfterProperties: props['mandatoryAfterProperties'] ?? '',
        propertySeparator: props['propertySeparator'] ?? '',
        bodyIndent: props['bodyIndent'] ?? '',
        footer: props['footer'] ?? '',
        showChildren: props['showChildren'] ?? true,
        addBlankLineIfNoChildren: props['addBlankLineIfNoChildren'] ?? true,
        isNameOnOwnLine: props['isNameOnOwnLine'] ?? false,
        isBlankLineBetweenPropertiesAndChildren:
            props['isBlankLineBetweenPropertiesAndChildren'] ?? true,
        beforeName: props['beforeName'] ?? '',
        suffixLineOne: props['suffixLineOne'] ?? '',
        mandatoryFooter: props['mandatoryFooter'] ?? '',
      ),
  'TextTreeRenderer': (props) => TextTreeRenderer(
        minLevel: props['minLevel'] ?? DiagnosticLevel.debug,
        wrapWidth: props['wrapWidth'] ?? 100,
        wrapWidthProperties: props['wrapWidthProperties'] ?? 65,
        maxDescendentsTruncatableNode:
            props['maxDescendentsTruncatableNode'] ?? -1,
      ),
  'MessageProperty': (props) => MessageProperty(
        props['pa'][0],
        props['pa'][1],
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'StringProperty': (props) => StringProperty(
        props['pa'][0],
        props['pa'][1],
        description: props['description'],
        tooltip: props['tooltip'],
        showName: props['showName'] ?? true,
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        quoted: props['quoted'] ?? true,
        ifEmpty: props['ifEmpty'],
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'DoubleProperty': (props) => DoubleProperty(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
        ifNull: props['ifNull'],
        unit: props['unit'],
        tooltip: props['tooltip'],
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        showName: props['showName'] ?? true,
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'DoubleProperty.lazy': (props) => DoubleProperty.lazy(
        props['pa'][0],
        props['pa'][1],
        ifNull: props['ifNull'],
        showName: props['showName'] ?? true,
        unit: props['unit'],
        tooltip: props['tooltip'],
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'IntProperty': (props) => IntProperty(
        props['pa'][0],
        props['pa'][1],
        ifNull: props['ifNull'],
        showName: props['showName'] ?? true,
        unit: props['unit'],
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'PercentProperty': (props) => PercentProperty(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
        ifNull: props['ifNull'],
        showName: props['showName'] ?? true,
        tooltip: props['tooltip'],
        unit: props['unit'],
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'FlagProperty': (props) => FlagProperty(
        props['pa'][0],
        value: props['value'],
        ifTrue: props['ifTrue'],
        ifFalse: props['ifFalse'],
        showName: props['showName'] ?? false,
        defaultValue: props['defaultValue'],
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'IterableProperty': (props) => IterableProperty(
        props['pa'][0],
        props['pa'][1],
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        ifNull: props['ifNull'],
        ifEmpty: props['ifEmpty'] ?? '[]',
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        showName: props['showName'] ?? true,
        showSeparator: props['showSeparator'] ?? true,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'EnumProperty': (props) => EnumProperty(
        props['pa'][0],
        props['pa'][1],
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'ObjectFlagProperty': (props) => ObjectFlagProperty(
        props['pa'][0],
        props['pa'][1],
        ifPresent: props['ifPresent'],
        ifNull: props['ifNull'],
        showName: props['showName'] ?? false,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'ObjectFlagProperty.has': (props) => ObjectFlagProperty.has(
        props['pa'][0],
        props['pa'][1],
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'FlagsSummary': (props) => FlagsSummary(
        props['pa'][0],
        props['pa'][1],
        ifEmpty: props['ifEmpty'],
        showName: props['showName'] ?? true,
        showSeparator: props['showSeparator'] ?? true,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'DiagnosticsProperty': (props) => DiagnosticsProperty(
        props['pa'][0],
        props['pa'][1],
        description: props['description'],
        ifNull: props['ifNull'],
        ifEmpty: props['ifEmpty'],
        showName: props['showName'] ?? true,
        showSeparator: props['showSeparator'] ?? true,
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        tooltip: props['tooltip'],
        missingIfNull: props['missingIfNull'] ?? false,
        linePrefix: props['linePrefix'],
        expandableValue: props['expandableValue'] ?? false,
        allowWrap: props['allowWrap'] ?? true,
        allowNameWrap: props['allowNameWrap'] ?? true,
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'DiagnosticsProperty.lazy': (props) => DiagnosticsProperty.lazy(
        props['pa'][0],
        props['pa'][1],
        description: props['description'],
        ifNull: props['ifNull'],
        ifEmpty: props['ifEmpty'],
        showName: props['showName'] ?? true,
        showSeparator: props['showSeparator'] ?? true,
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        tooltip: props['tooltip'],
        missingIfNull: props['missingIfNull'] ?? false,
        expandableValue: props['expandableValue'] ?? false,
        allowWrap: props['allowWrap'] ?? true,
        allowNameWrap: props['allowNameWrap'] ?? true,
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'DiagnosticableNode': (props) => DiagnosticableNode<Diagnosticable>(
        name: props['name'],
        value: props['value'],
        style: props['style'],
      ),
  'DiagnosticableTreeNode': (props) => DiagnosticableTreeNode(
        name: props['name'],
        value: props['value'],
        style: props['style'],
      ),
  'DiagnosticPropertiesBuilder': (props) => DiagnosticPropertiesBuilder(),
  'DiagnosticPropertiesBuilder.fromProperties': (props) =>
      DiagnosticPropertiesBuilder.fromProperties(
        props['pa'][0],
      ),
  'DiagnosticsBlock': (props) => DiagnosticsBlock(
        name: props['name'],
        style: props['style'] ?? DiagnosticsTreeStyle.whitespace,
        showName: props['showName'] ?? true,
        showSeparator: props['showSeparator'] ?? true,
        linePrefix: props['linePrefix'],
        value: props['value'],
        description: props['description'],
        level: props['level'] ?? DiagnosticLevel.info,
        allowTruncate: props['allowTruncate'] ?? false,
        children:
            as<DiagnosticsNode>(props['children']) ?? const <DiagnosticsNode>[],
        properties: as<DiagnosticsNode>(props['properties']) ??
            const <DiagnosticsNode>[],
      ),
  'DiagnosticLevel.hidden': DiagnosticLevel.hidden,
  'DiagnosticLevel.fine': DiagnosticLevel.fine,
  'DiagnosticLevel.debug': DiagnosticLevel.debug,
  'DiagnosticLevel.info': DiagnosticLevel.info,
  'DiagnosticLevel.warning': DiagnosticLevel.warning,
  'DiagnosticLevel.hint': DiagnosticLevel.hint,
  'DiagnosticLevel.summary': DiagnosticLevel.summary,
  'DiagnosticLevel.error': DiagnosticLevel.error,
  'DiagnosticLevel.off': DiagnosticLevel.off,
  'DiagnosticLevel.values': DiagnosticLevel.values,
  'DiagnosticsTreeStyle.none': DiagnosticsTreeStyle.none,
  'DiagnosticsTreeStyle.sparse': DiagnosticsTreeStyle.sparse,
  'DiagnosticsTreeStyle.offstage': DiagnosticsTreeStyle.offstage,
  'DiagnosticsTreeStyle.dense': DiagnosticsTreeStyle.dense,
  'DiagnosticsTreeStyle.transition': DiagnosticsTreeStyle.transition,
  'DiagnosticsTreeStyle.error': DiagnosticsTreeStyle.error,
  'DiagnosticsTreeStyle.whitespace': DiagnosticsTreeStyle.whitespace,
  'DiagnosticsTreeStyle.flat': DiagnosticsTreeStyle.flat,
  'DiagnosticsTreeStyle.singleLine': DiagnosticsTreeStyle.singleLine,
  'DiagnosticsTreeStyle.errorProperty': DiagnosticsTreeStyle.errorProperty,
  'DiagnosticsTreeStyle.shallow': DiagnosticsTreeStyle.shallow,
  'DiagnosticsTreeStyle.truncateChildren':
      DiagnosticsTreeStyle.truncateChildren,
  'DiagnosticsTreeStyle.values': DiagnosticsTreeStyle.values,
  'TargetPlatform.android': TargetPlatform.android,
  'TargetPlatform.fuchsia': TargetPlatform.fuchsia,
  'TargetPlatform.iOS': TargetPlatform.iOS,
  'TargetPlatform.linux': TargetPlatform.linux,
  'TargetPlatform.macOS': TargetPlatform.macOS,
  'TargetPlatform.windows': TargetPlatform.windows,
  'TargetPlatform.values': TargetPlatform.values,
  'StackFrame': (props) => StackFrame(
        number: props['number'],
        column: props['column'],
        line: props['line'],
        packageScheme: props['packageScheme'],
        package: props['package'],
        packagePath: props['packagePath'],
        className: props['className'] ?? '',
        method: props['method'],
        isConstructor: props['isConstructor'] ?? false,
        source: props['source'],
      ),
  'StackFrame.asynchronousSuspension': StackFrame.asynchronousSuspension,
  'StackFrame.stackOverFlowElision': StackFrame.stackOverFlowElision,
  'StackFrame.fromStackTrace': (props) => StackFrame.fromStackTrace(
        props['pa'][0],
      ),
  'StackFrame.fromStackString': (props) => StackFrame.fromStackString(
        props['pa'][0],
      ),
  'StackFrame.fromStackTraceLine': (props) => StackFrame.fromStackTraceLine(
        props['pa'][0],
      ),
  'ChangeNotifier': (props) => ChangeNotifier(),
  'ChangeNotifier.debugAssertNotDisposed': (props) =>
      ChangeNotifier.debugAssertNotDisposed(
        props['pa'][0],
      ),
  'ValueNotifier': (props) => ValueNotifier(
        props['pa'][0],
      ),
  'BitField': (props) => BitField(
        props['pa'][0],
      ),
  'BitField.filled': (props) => BitField.filled(
        props['pa'][0],
        props['pa'][1],
      ),
  'UniqueKey': (props) => UniqueKey(),
  'ValueKey': (props) => ValueKey(
        props['pa'][0],
      ),
  'DebugReassembleConfig': (props) => DebugReassembleConfig(
        widgetName: props['widgetName'],
      ),
  'AnnounceSemanticsEvent': (props) => AnnounceSemanticsEvent(
        props['pa'][0],
        props['pa'][1],
      ),
  'TooltipSemanticsEvent': (props) => TooltipSemanticsEvent(
        props['pa'][0],
      ),
  'LongPressSemanticsEvent': (props) => const LongPressSemanticsEvent(),
  'TapSemanticEvent': (props) => const TapSemanticEvent(),
  'SemanticsService.announce': (props) => SemanticsService.announce(
        props['pa'][0],
        props['pa'][1],
      ),
  'SemanticsService.tooltip': (props) => SemanticsService.tooltip(
        props['pa'][0],
      ),
  'SemanticsTag': (props) => SemanticsTag(
        props['pa'][0],
      ),
  'CustomSemanticsAction': (props) => CustomSemanticsAction(
        label: props['label'],
      ),
  'CustomSemanticsAction.overridingAction': (props) =>
      CustomSemanticsAction.overridingAction(
        hint: props['hint'],
        action: props['action'],
      ),
  'CustomSemanticsAction.getIdentifier': (props) =>
      CustomSemanticsAction.getIdentifier(
        props['pa'][0],
      ),
  'CustomSemanticsAction.getAction': (props) => CustomSemanticsAction.getAction(
        props['pa'][0],
      ),
  'AttributedString': (props) => AttributedString(
        props['pa'][0],
        attributes: as<StringAttribute>(props['attributes']) ??
            const <StringAttribute>[],
      ),
  'AttributedStringProperty': (props) => AttributedStringProperty(
        props['pa'][0],
        props['pa'][1],
        showName: props['showName'] ?? true,
        showWhenEmpty: props['showWhenEmpty'] ?? false,
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        level: props['level'] ?? DiagnosticLevel.info,
        description: props['description'],
      ),
  'SemanticsData': (props) => SemanticsData(
        flags: props['flags'],
        actions: props['actions'],
        attributedLabel: props['attributedLabel'],
        attributedValue: props['attributedValue'],
        attributedIncreasedValue: props['attributedIncreasedValue'],
        attributedDecreasedValue: props['attributedDecreasedValue'],
        attributedHint: props['attributedHint'],
        tooltip: props['tooltip'],
        textDirection: props['textDirection'],
        rect: props['rect'],
        elevation: props['elevation']?.toDouble() ?? 0,
        thickness: props['thickness']?.toDouble() ?? 0,
        textSelection: props['textSelection'],
        scrollIndex: props['scrollIndex'],
        scrollChildCount: props['scrollChildCount'],
        scrollPosition: props['scrollPosition']?.toDouble() ?? 0,
        scrollExtentMax: props['scrollExtentMax']?.toDouble() ?? 0,
        scrollExtentMin: props['scrollExtentMin']?.toDouble() ?? 0,
        platformViewId: props['platformViewId'],
        maxValueLength: props['maxValueLength'],
        currentValueLength: props['currentValueLength'],
        tags: props['tags'],
        transform: props['transform'],
        customSemanticsActionIds: as<int>(props['customSemanticsActionIds']),
      ),
  'SemanticsHintOverrides': (props) => SemanticsHintOverrides(
        onTapHint: props['onTapHint'],
        onLongPressHint: props['onLongPressHint'],
      ),
  'SemanticsProperties': (props) => SemanticsProperties(
        enabled: props['enabled'],
        checked: props['checked'],
        selected: props['selected'],
        toggled: props['toggled'],
        button: props['button'],
        link: props['link'],
        header: props['header'],
        textField: props['textField'],
        slider: props['slider'],
        keyboardKey: props['keyboardKey'],
        readOnly: props['readOnly'],
        focusable: props['focusable'],
        focused: props['focused'],
        inMutuallyExclusiveGroup: props['inMutuallyExclusiveGroup'],
        hidden: props['hidden'],
        obscured: props['obscured'],
        multiline: props['multiline'],
        scopesRoute: props['scopesRoute'],
        namesRoute: props['namesRoute'],
        image: props['image'],
        liveRegion: props['liveRegion'],
        maxValueLength: props['maxValueLength'],
        currentValueLength: props['currentValueLength'],
        label: props['label'],
        attributedLabel: props['attributedLabel'],
        value: props['value'],
        attributedValue: props['attributedValue'],
        increasedValue: props['increasedValue'],
        attributedIncreasedValue: props['attributedIncreasedValue'],
        decreasedValue: props['decreasedValue'],
        attributedDecreasedValue: props['attributedDecreasedValue'],
        hint: props['hint'],
        tooltip: props['tooltip'],
        attributedHint: props['attributedHint'],
        hintOverrides: props['hintOverrides'],
        textDirection: props['textDirection'],
        sortKey: props['sortKey'],
        tagForChildren: props['tagForChildren'],
        onTap: props['onTap'],
        onLongPress: props['onLongPress'],
        onScrollLeft: props['onScrollLeft'],
        onScrollRight: props['onScrollRight'],
        onScrollUp: props['onScrollUp'],
        onScrollDown: props['onScrollDown'],
        onIncrease: props['onIncrease'],
        onDecrease: props['onDecrease'],
        onCopy: props['onCopy'],
        onCut: props['onCut'],
        onPaste: props['onPaste'],
        onMoveCursorForwardByCharacter: props['onMoveCursorForwardByCharacter'],
        onMoveCursorBackwardByCharacter:
            props['onMoveCursorBackwardByCharacter'],
        onMoveCursorForwardByWord: props['onMoveCursorForwardByWord'],
        onMoveCursorBackwardByWord: props['onMoveCursorBackwardByWord'],
        onSetSelection: props['onSetSelection'],
        onSetText: props['onSetText'],
        onDidGainAccessibilityFocus: props['onDidGainAccessibilityFocus'],
        onDidLoseAccessibilityFocus: props['onDidLoseAccessibilityFocus'],
        onDismiss: props['onDismiss'],
        customSemanticsActions: props['customSemanticsActions'],
      ),
  'SemanticsNode': (props) => SemanticsNode(
        key: props['key'],
        showOnScreen: props['showOnScreen'],
      ),
  'SemanticsNode.root': (props) => SemanticsNode.root(
        key: props['key'],
        showOnScreen: props['showOnScreen'],
        owner: props['owner'],
      ),
  'SemanticsOwner': (props) => SemanticsOwner(),
  'SemanticsConfiguration': (props) => SemanticsConfiguration(),
  'OrdinalSortKey': (props) => OrdinalSortKey(
        props['pa'][0]?.toDouble(),
        name: props['name'],
      ),
  'DebugSemanticsDumpOrder.inverseHitTest':
      DebugSemanticsDumpOrder.inverseHitTest,
  'DebugSemanticsDumpOrder.traversalOrder':
      DebugSemanticsDumpOrder.traversalOrder,
  'DebugSemanticsDumpOrder.values': DebugSemanticsDumpOrder.values,
  'BorderSide': (props) => BorderSide(
        color: props['color'] ?? const Color(0xFF000000),
        width: props['width']?.toDouble() ?? 1.0,
        style: props['style'] ?? BorderStyle.solid,
        strokeAlign: props['strokeAlign'] ?? StrokeAlign.inside,
      ),
  'BorderSide.none': BorderSide.none,
  'BorderSide.merge': (props) => BorderSide.merge(
        props['pa'][0],
        props['pa'][1],
      ),
  'BorderSide.canMerge': (props) => BorderSide.canMerge(
        props['pa'][0],
        props['pa'][1],
      ),
  'BorderSide.lerp': (props) => BorderSide.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BorderStyle.none': BorderStyle.none,
  'BorderStyle.solid': BorderStyle.solid,
  'BorderStyle.values': BorderStyle.values,
  'StrokeAlign.inside': StrokeAlign.inside,
  'StrokeAlign.center': StrokeAlign.center,
  'StrokeAlign.outside': StrokeAlign.outside,
  'StrokeAlign.values': StrokeAlign.values,
  'Border': (props) => Border(
        top: props['top'] ?? BorderSide.none,
        right: props['right'] ?? BorderSide.none,
        bottom: props['bottom'] ?? BorderSide.none,
        left: props['left'] ?? BorderSide.none,
      ),
  'Border.fromBorderSide': (props) => Border.fromBorderSide(
        props['pa'][0],
      ),
  'Border.symmetric': (props) => Border.symmetric(
        vertical: props['vertical'] ?? BorderSide.none,
        horizontal: props['horizontal'] ?? BorderSide.none,
      ),
  'Border.all': (props) => Border.all(
        color: props['color'] ?? const Color(0xFF000000),
        width: props['width']?.toDouble() ?? 1.0,
        style: props['style'] ?? BorderStyle.solid,
        strokeAlign: props['strokeAlign'] ?? StrokeAlign.inside,
      ),
  'Border.merge': (props) => Border.merge(
        props['pa'][0],
        props['pa'][1],
      ),
  'Border.lerp': (props) => Border.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BorderDirectional': (props) => BorderDirectional(
        top: props['top'] ?? BorderSide.none,
        start: props['start'] ?? BorderSide.none,
        end: props['end'] ?? BorderSide.none,
        bottom: props['bottom'] ?? BorderSide.none,
      ),
  'BorderDirectional.merge': (props) => BorderDirectional.merge(
        props['pa'][0],
        props['pa'][1],
      ),
  'BorderDirectional.lerp': (props) => BorderDirectional.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BoxShape.rectangle': BoxShape.rectangle,
  'BoxShape.circle': BoxShape.circle,
  'BoxShape.values': BoxShape.values,
  'ImageConfiguration': (props) => ImageConfiguration(
        bundle: props['bundle'],
        devicePixelRatio: props['devicePixelRatio']?.toDouble(),
        locale: props['locale'],
        textDirection: props['textDirection'],
        size: props['size'],
        platform: props['platform'],
      ),
  'ImageConfiguration.empty': ImageConfiguration.empty,
  'AssetBundleImageKey': (props) => AssetBundleImageKey(
        bundle: props['bundle'],
        name: props['name'],
        scale: props['scale']?.toDouble() ?? 0,
      ),
  'ResizeImage': (props) => ResizeImage(
        props['pa'][0],
        width: props['width'],
        height: props['height'],
        allowUpscaling: props['allowUpscaling'] ?? false,
      ),
  'ResizeImage.resizeIfNeeded': (props) => ResizeImage.resizeIfNeeded(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'FileImage': (props) => FileImage(
        props['pa'][0],
        scale: props['scale']?.toDouble() ?? 1.0,
      ),
  'MemoryImage': (props) => MemoryImage(
        props['pa'][0],
        scale: props['scale']?.toDouble() ?? 1.0,
      ),
  'ExactAssetImage': (props) => ExactAssetImage(
        props['pa'][0],
        scale: props['scale']?.toDouble() ?? 1.0,
        bundle: props['bundle'],
        package: props['package'],
      ),
  'NetworkImageLoadException': (props) => NetworkImageLoadException(
        statusCode: props['statusCode'],
        uri: props['uri'],
      ),
  'BoxShadow': (props) => BoxShadow(
        color: props['color'] ?? const Color(_kColorDefault),
        offset: props['offset'] ?? Offset.zero,
        blurRadius: props['blurRadius']?.toDouble() ?? 0.0,
        spreadRadius: props['spreadRadius']?.toDouble() ?? 0.0,
        blurStyle: props['blurStyle'] ?? BlurStyle.normal,
      ),
  'BoxShadow.lerp': (props) => BoxShadow.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BoxShadow.lerpList': (props) => BoxShadow.lerpList(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'NetworkImage': (props) => NetworkImage(
        props['pa'][0],
        scale: props['scale']?.toDouble() ?? 1.0,
        headers: props['headers'],
      ),
  'BorderRadius.all': (props) => BorderRadius.all(
        props['pa'][0],
      ),
  'BorderRadius.circular': (props) => BorderRadius.circular(
        props['pa'][0]?.toDouble(),
      ),
  'BorderRadius.vertical': (props) => BorderRadius.vertical(
        top: props['top'] ?? Radius.zero,
        bottom: props['bottom'] ?? Radius.zero,
      ),
  'BorderRadius.horizontal': (props) => BorderRadius.horizontal(
        left: props['left'] ?? Radius.zero,
        right: props['right'] ?? Radius.zero,
      ),
  'BorderRadius.only': (props) => BorderRadius.only(
        topLeft: props['topLeft'] ?? Radius.zero,
        topRight: props['topRight'] ?? Radius.zero,
        bottomLeft: props['bottomLeft'] ?? Radius.zero,
        bottomRight: props['bottomRight'] ?? Radius.zero,
      ),
  'BorderRadius.zero': BorderRadius.zero,
  'BorderRadius.lerp': (props) => BorderRadius.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BorderRadiusDirectional.all': (props) => BorderRadiusDirectional.all(
        props['pa'][0],
      ),
  'BorderRadiusDirectional.circular': (props) =>
      BorderRadiusDirectional.circular(
        props['pa'][0]?.toDouble(),
      ),
  'BorderRadiusDirectional.vertical': (props) =>
      BorderRadiusDirectional.vertical(
        top: props['top'] ?? Radius.zero,
        bottom: props['bottom'] ?? Radius.zero,
      ),
  'BorderRadiusDirectional.horizontal': (props) =>
      BorderRadiusDirectional.horizontal(
        start: props['start'] ?? Radius.zero,
        end: props['end'] ?? Radius.zero,
      ),
  'BorderRadiusDirectional.only': (props) => BorderRadiusDirectional.only(
        topStart: props['topStart'] ?? Radius.zero,
        topEnd: props['topEnd'] ?? Radius.zero,
        bottomStart: props['bottomStart'] ?? Radius.zero,
        bottomEnd: props['bottomEnd'] ?? Radius.zero,
      ),
  'BorderRadiusDirectional.zero': BorderRadiusDirectional.zero,
  'BorderRadiusDirectional.lerp': (props) => BorderRadiusDirectional.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ContinuousRectangleBorder': (props) => ContinuousRectangleBorder(
        side: props['side'] ?? BorderSide.none,
        borderRadius: props['borderRadius'] ?? BorderRadius.zero,
      ),
  'HSVColor.fromAHSV': (props) => HSVColor.fromAHSV(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'HSVColor.fromColor': (props) => HSVColor.fromColor(
        props['pa'][0],
      ),
  'HSVColor.lerp': (props) => HSVColor.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'HSLColor.fromAHSL': (props) => HSLColor.fromAHSL(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'HSLColor.fromColor': (props) => HSLColor.fromColor(
        props['pa'][0],
      ),
  'HSLColor.lerp': (props) => HSLColor.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ColorSwatch': (props) => ColorSwatch(
        props['pa'][0],
        props['pa'][1],
      ),
  'ColorSwatch.lerp': (props) => ColorSwatch.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ColorProperty': (props) => ColorProperty(
        props['pa'][0],
        props['pa'][1],
        showName: props['showName'] ?? true,
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'TextStyle': (props) => TextStyle(
        inherit: props['inherit'] ?? true,
        color: props['color'],
        backgroundColor: props['backgroundColor'],
        fontSize: props['fontSize']?.toDouble(),
        fontWeight: props['fontWeight'],
        fontStyle: props['fontStyle'],
        letterSpacing: props['letterSpacing']?.toDouble(),
        wordSpacing: props['wordSpacing']?.toDouble(),
        textBaseline: props['textBaseline'],
        height: props['height']?.toDouble(),
        leadingDistribution: props['leadingDistribution'],
        locale: props['locale'],
        foreground: props['foreground'],
        background: props['background'],
        shadows: as<Shadow>(props['shadows']),
        fontFeatures: as<FontFeature>(props['fontFeatures']),
        fontVariations: as<FontVariation>(props['fontVariations']),
        decoration: props['decoration'],
        decorationColor: props['decorationColor'],
        decorationStyle: props['decorationStyle'],
        decorationThickness: props['decorationThickness']?.toDouble(),
        debugLabel: props['debugLabel'],
        fontFamily: props['fontFamily'],
        fontFamilyFallback: as<String>(props['fontFamilyFallback']),
        package: props['package'],
        overflow: props['overflow'],
      ),
  'TextStyle.lerp': (props) => TextStyle.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'AssetImage': (props) => AssetImage(
        props['pa'][0],
        bundle: props['bundle'],
        package: props['package'],
      ),
  'CircleBorder': (props) => CircleBorder(
        side: props['side'] ?? BorderSide.none,
      ),
  'BeveledRectangleBorder': (props) => BeveledRectangleBorder(
        side: props['side'] ?? BorderSide.none,
        borderRadius: props['borderRadius'] ?? BorderRadius.zero,
      ),
  'GradientRotation': (props) => GradientRotation(
        props['pa'][0]?.toDouble(),
      ),
  'LinearGradient': (props) => LinearGradient(
        begin: props['begin'] ?? Alignment.centerLeft,
        end: props['end'] ?? Alignment.centerRight,
        colors: as<Color>(props['colors']) ?? const [],
        stops: as<double>(props['stops']),
        tileMode: props['tileMode'] ?? TileMode.clamp,
        transform: props['transform'],
      ),
  'LinearGradient.lerp': (props) => LinearGradient.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'RadialGradient': (props) => RadialGradient(
        center: props['center'] ?? Alignment.center,
        radius: props['radius']?.toDouble() ?? 0.5,
        colors: as<Color>(props['colors']) ?? const [],
        stops: as<double>(props['stops']),
        tileMode: props['tileMode'] ?? TileMode.clamp,
        focal: props['focal'],
        focalRadius: props['focalRadius']?.toDouble() ?? 0.0,
        transform: props['transform'],
      ),
  'RadialGradient.lerp': (props) => RadialGradient.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'SweepGradient': (props) => SweepGradient(
        center: props['center'] ?? Alignment.center,
        startAngle: props['startAngle']?.toDouble() ?? 0.0,
        endAngle: props['endAngle']?.toDouble() ?? math.pi * 2,
        colors: as<Color>(props['colors']) ?? const [],
        stops: as<double>(props['stops']),
        tileMode: props['tileMode'] ?? TileMode.clamp,
        transform: props['transform'],
      ),
  'SweepGradient.lerp': (props) => SweepGradient.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Alignment': (props) => Alignment(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
      ),
  'Alignment.topLeft': Alignment.topLeft,
  'Alignment.topCenter': Alignment.topCenter,
  'Alignment.topRight': Alignment.topRight,
  'Alignment.centerLeft': Alignment.centerLeft,
  'Alignment.center': Alignment.center,
  'Alignment.centerRight': Alignment.centerRight,
  'Alignment.bottomLeft': Alignment.bottomLeft,
  'Alignment.bottomCenter': Alignment.bottomCenter,
  'Alignment.bottomRight': Alignment.bottomRight,
  'Alignment.lerp': (props) => Alignment.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'AlignmentDirectional': (props) => AlignmentDirectional(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
      ),
  'AlignmentDirectional.topStart': AlignmentDirectional.topStart,
  'AlignmentDirectional.topCenter': AlignmentDirectional.topCenter,
  'AlignmentDirectional.topEnd': AlignmentDirectional.topEnd,
  'AlignmentDirectional.centerStart': AlignmentDirectional.centerStart,
  'AlignmentDirectional.center': AlignmentDirectional.center,
  'AlignmentDirectional.centerEnd': AlignmentDirectional.centerEnd,
  'AlignmentDirectional.bottomStart': AlignmentDirectional.bottomStart,
  'AlignmentDirectional.bottomCenter': AlignmentDirectional.bottomCenter,
  'AlignmentDirectional.bottomEnd': AlignmentDirectional.bottomEnd,
  'AlignmentDirectional.lerp': (props) => AlignmentDirectional.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'TextAlignVertical': (props) => TextAlignVertical(
        y: props['y']?.toDouble() ?? 0,
      ),
  'TextAlignVertical.top': TextAlignVertical.top,
  'TextAlignVertical.center': TextAlignVertical.center,
  'TextAlignVertical.bottom': TextAlignVertical.bottom,
  'TextSpan': (props) => TextSpan(
        text: props['text'],
        children: as<InlineSpan>(props['children']),
        style: props['style'],
        recognizer: props['recognizer'],
        mouseCursor: props['mouseCursor'],
        onEnter: props['onEnter'],
        onExit: props['onExit'],
        semanticsLabel: props['semanticsLabel'],
        locale: props['locale'],
        spellOut: props['spellOut'],
      ),
  'ImageSizeInfo': (props) => ImageSizeInfo(
        source: props['source'],
        displaySize: props['displaySize'],
        imageSize: props['imageSize'],
      ),
  'FlutterLogoDecoration': (props) => FlutterLogoDecoration(
        textColor: props['textColor'] ?? const Color(0xFF757575),
        style: props['style'] ?? FlutterLogoStyle.markOnly,
        margin: props['margin'] ?? EdgeInsets.zero,
      ),
  'FlutterLogoDecoration.lerp': (props) => FlutterLogoDecoration.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'FlutterLogoStyle.markOnly': FlutterLogoStyle.markOnly,
  'FlutterLogoStyle.horizontal': FlutterLogoStyle.horizontal,
  'FlutterLogoStyle.stacked': FlutterLogoStyle.stacked,
  'FlutterLogoStyle.values': FlutterLogoStyle.values,
  'RenderComparison.identical': RenderComparison.identical,
  'RenderComparison.metadata': RenderComparison.metadata,
  'RenderComparison.paint': RenderComparison.paint,
  'RenderComparison.layout': RenderComparison.layout,
  'RenderComparison.values': RenderComparison.values,
  'Axis.horizontal': Axis.horizontal,
  'Axis.vertical': Axis.vertical,
  'Axis.values': Axis.values,
  'VerticalDirection.up': VerticalDirection.up,
  'VerticalDirection.down': VerticalDirection.down,
  'VerticalDirection.values': VerticalDirection.values,
  'AxisDirection.up': AxisDirection.up,
  'AxisDirection.right': AxisDirection.right,
  'AxisDirection.down': AxisDirection.down,
  'AxisDirection.left': AxisDirection.left,
  'AxisDirection.values': AxisDirection.values,
  'BoxDecoration': (props) => BoxDecoration(
        color: props['color'],
        image: props['image'],
        border: props['border'],
        borderRadius: props['borderRadius'],
        boxShadow: as<BoxShadow>(props['boxShadow']),
        gradient: props['gradient'],
        backgroundBlendMode: props['backgroundBlendMode'],
        shape: props['shape'] ?? BoxShape.rectangle,
      ),
  'BoxDecoration.lerp': (props) => BoxDecoration.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Accumulator': (props) => Accumulator(
        props['pa'][0] ?? 0,
      ),
  'InlineSpanSemanticsInformation': (props) => InlineSpanSemanticsInformation(
        props['pa'][0],
        isPlaceholder: props['isPlaceholder'] ?? false,
        semanticsLabel: props['semanticsLabel'],
        stringAttributes: as<StringAttribute>(props['stringAttributes']) ??
            const <ui.StringAttribute>[],
        recognizer: props['recognizer'],
      ),
  'InlineSpanSemanticsInformation.placeholder':
      InlineSpanSemanticsInformation.placeholder,
  'FractionalOffset': (props) => FractionalOffset(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
      ),
  'FractionalOffset.fromOffsetAndSize': (props) =>
      FractionalOffset.fromOffsetAndSize(
        props['pa'][0],
        props['pa'][1],
      ),
  'FractionalOffset.fromOffsetAndRect': (props) =>
      FractionalOffset.fromOffsetAndRect(
        props['pa'][0],
        props['pa'][1],
      ),
  'FractionalOffset.topLeft': FractionalOffset.topLeft,
  'FractionalOffset.topCenter': FractionalOffset.topCenter,
  'FractionalOffset.topRight': FractionalOffset.topRight,
  'FractionalOffset.centerLeft': FractionalOffset.centerLeft,
  'FractionalOffset.center': FractionalOffset.center,
  'FractionalOffset.centerRight': FractionalOffset.centerRight,
  'FractionalOffset.bottomLeft': FractionalOffset.bottomLeft,
  'FractionalOffset.bottomCenter': FractionalOffset.bottomCenter,
  'FractionalOffset.bottomRight': FractionalOffset.bottomRight,
  'FractionalOffset.lerp': (props) => FractionalOffset.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'FittedSizes': (props) => FittedSizes(
        props['pa'][0],
        props['pa'][1],
      ),
  'BoxFit.fill': BoxFit.fill,
  'BoxFit.contain': BoxFit.contain,
  'BoxFit.cover': BoxFit.cover,
  'BoxFit.fitWidth': BoxFit.fitWidth,
  'BoxFit.fitHeight': BoxFit.fitHeight,
  'BoxFit.none': BoxFit.none,
  'BoxFit.scaleDown': BoxFit.scaleDown,
  'BoxFit.values': BoxFit.values,
  'CircularNotchedRectangle': (props) => const CircularNotchedRectangle(),
  'AutomaticNotchedShape': (props) => AutomaticNotchedShape(
        props['pa'][0],
        props['pa'][1],
      ),
  'MatrixUtils.getAsTranslation': (props) => MatrixUtils.getAsTranslation(
        props['pa'][0],
      ),
  'MatrixUtils.getAsScale': (props) => MatrixUtils.getAsScale(
        props['pa'][0],
      ),
  'MatrixUtils.matrixEquals': (props) => MatrixUtils.matrixEquals(
        props['pa'][0],
        props['pa'][1],
      ),
  'MatrixUtils.isIdentity': (props) => MatrixUtils.isIdentity(
        props['pa'][0],
      ),
  'MatrixUtils.transformPoint': (props) => MatrixUtils.transformPoint(
        props['pa'][0],
        props['pa'][1],
      ),
  'MatrixUtils.transformRect': (props) => MatrixUtils.transformRect(
        props['pa'][0],
        props['pa'][1],
      ),
  'MatrixUtils.inverseTransformRect': (props) =>
      MatrixUtils.inverseTransformRect(
        props['pa'][0],
        props['pa'][1],
      ),
  'MatrixUtils.createCylindricalProjectionTransform': (props) =>
      MatrixUtils.createCylindricalProjectionTransform(
        radius: props['radius']?.toDouble() ?? 0,
        angle: props['angle']?.toDouble() ?? 0,
        perspective: props['perspective']?.toDouble() ?? 0.001,
        orientation: props['orientation'] ?? Axis.vertical,
      ),
  'MatrixUtils.forceToPoint': (props) => MatrixUtils.forceToPoint(
        props['pa'][0],
      ),
  'TransformProperty': (props) => TransformProperty(
        props['pa'][0],
        props['pa'][1],
        showName: props['showName'] ?? true,
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'StadiumBorder': (props) => StadiumBorder(
        side: props['side'] ?? BorderSide.none,
      ),
  'PlaceholderDimensions': (props) => PlaceholderDimensions(
        size: props['size'],
        alignment: props['alignment'],
        baseline: props['baseline'],
        baselineOffset: props['baselineOffset']?.toDouble(),
      ),
  'PlaceholderDimensions.empty': PlaceholderDimensions.empty,
  'TextPainter': (props) => TextPainter(
        text: props['text'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textDirection: props['textDirection'],
        textScaleFactor: props['textScaleFactor']?.toDouble() ?? 1.0,
        maxLines: props['maxLines'],
        ellipsis: props['ellipsis'],
        locale: props['locale'],
        strutStyle: props['strutStyle'],
        textWidthBasis: props['textWidthBasis'] ?? TextWidthBasis.parent,
        textHeightBehavior: props['textHeightBehavior'],
      ),
  'TextOverflow.clip': TextOverflow.clip,
  'TextOverflow.fade': TextOverflow.fade,
  'TextOverflow.ellipsis': TextOverflow.ellipsis,
  'TextOverflow.visible': TextOverflow.visible,
  'TextOverflow.values': TextOverflow.values,
  'TextWidthBasis.parent': TextWidthBasis.parent,
  'TextWidthBasis.longestLine': TextWidthBasis.longestLine,
  'TextWidthBasis.values': TextWidthBasis.values,
  'RoundedRectangleBorder': (props) => RoundedRectangleBorder(
        side: props['side'] ?? BorderSide.none,
        borderRadius: props['borderRadius'] ?? BorderRadius.zero,
      ),
  'ShapeDecoration': (props) => ShapeDecoration(
        color: props['color'],
        image: props['image'],
        gradient: props['gradient'],
        shadows: as<BoxShadow>(props['shadows']),
        shape: props['shape'],
      ),
  'ShapeDecoration.fromBoxDecoration': (props) =>
      ShapeDecoration.fromBoxDecoration(
        props['pa'][0],
      ),
  'ShapeDecoration.lerp': (props) => ShapeDecoration.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'EdgeInsets.fromLTRB': (props) => EdgeInsets.fromLTRB(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'EdgeInsets.all': (props) => EdgeInsets.all(
        props['pa'][0]?.toDouble(),
      ),
  'EdgeInsets.only': (props) => EdgeInsets.only(
        left: props['left']?.toDouble() ?? 0.0,
        top: props['top']?.toDouble() ?? 0.0,
        right: props['right']?.toDouble() ?? 0.0,
        bottom: props['bottom']?.toDouble() ?? 0.0,
      ),
  'EdgeInsets.symmetric': (props) => EdgeInsets.symmetric(
        vertical: props['vertical']?.toDouble() ?? 0.0,
        horizontal: props['horizontal']?.toDouble() ?? 0.0,
      ),
  'EdgeInsets.fromWindowPadding': (props) => EdgeInsets.fromWindowPadding(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
      ),
  'EdgeInsets.zero': EdgeInsets.zero,
  'EdgeInsets.lerp': (props) => EdgeInsets.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'EdgeInsetsDirectional.fromSTEB': (props) => EdgeInsetsDirectional.fromSTEB(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'EdgeInsetsDirectional.only': (props) => EdgeInsetsDirectional.only(
        start: props['start']?.toDouble() ?? 0.0,
        top: props['top']?.toDouble() ?? 0.0,
        end: props['end']?.toDouble() ?? 0.0,
        bottom: props['bottom']?.toDouble() ?? 0.0,
      ),
  'EdgeInsetsDirectional.all': (props) => EdgeInsetsDirectional.all(
        props['pa'][0]?.toDouble(),
      ),
  'EdgeInsetsDirectional.zero': EdgeInsetsDirectional.zero,
  'EdgeInsetsDirectional.lerp': (props) => EdgeInsetsDirectional.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'DecorationImage': (props) => DecorationImage(
        image: props['image'],
        onError: props['onError'],
        colorFilter: props['colorFilter'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        centerSlice: props['centerSlice'],
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        matchTextDirection: props['matchTextDirection'] ?? false,
        scale: props['scale']?.toDouble() ?? 1.0,
        opacity: props['opacity']?.toDouble() ?? 1.0,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
        invertColors: props['invertColors'] ?? false,
        isAntiAlias: props['isAntiAlias'] ?? false,
      ),
  'ImageRepeat.repeat': ImageRepeat.repeat,
  'ImageRepeat.repeatX': ImageRepeat.repeatX,
  'ImageRepeat.repeatY': ImageRepeat.repeatY,
  'ImageRepeat.noRepeat': ImageRepeat.noRepeat,
  'ImageRepeat.values': ImageRepeat.values,
  'StrutStyle': (props) => StrutStyle(
        fontFamily: props['fontFamily'],
        fontFamilyFallback: as<String>(props['fontFamilyFallback']),
        fontSize: props['fontSize']?.toDouble(),
        height: props['height']?.toDouble(),
        leadingDistribution: props['leadingDistribution'],
        leading: props['leading']?.toDouble(),
        fontWeight: props['fontWeight'],
        fontStyle: props['fontStyle'],
        forceStrutHeight: props['forceStrutHeight'],
        debugLabel: props['debugLabel'],
        package: props['package'],
      ),
  'StrutStyle.fromTextStyle': (props) => StrutStyle.fromTextStyle(
        props['pa'][0],
        fontFamily: props['fontFamily'],
        fontFamilyFallback: as<String>(props['fontFamilyFallback']),
        fontSize: props['fontSize']?.toDouble(),
        height: props['height']?.toDouble(),
        leadingDistribution: props['leadingDistribution'],
        leading: props['leading']?.toDouble(),
        fontWeight: props['fontWeight'],
        fontStyle: props['fontStyle'],
        forceStrutHeight: props['forceStrutHeight'],
        debugLabel: props['debugLabel'],
        package: props['package'],
      ),
  'StrutStyle.disabled': StrutStyle.disabled,
  'ImageInfo': (props) => ImageInfo(
        image: props['image'],
        scale: props['scale']?.toDouble() ?? 1.0,
        debugLabel: props['debugLabel'],
      ),
  'ImageStreamListener': (props) => ImageStreamListener(
        props['pa'][0],
        onChunk: props['onChunk'],
        onError: props['onError'],
      ),
  'ImageChunkEvent': (props) => ImageChunkEvent(
        cumulativeBytesLoaded: props['cumulativeBytesLoaded'],
        expectedTotalBytes: props['expectedTotalBytes'],
      ),
  'ImageStream': (props) => ImageStream(),
  'OneFrameImageStreamCompleter': (props) => OneFrameImageStreamCompleter(
        props['pa'][0],
        informationCollector: props['informationCollector'],
      ),
  'MultiFrameImageStreamCompleter': (props) => MultiFrameImageStreamCompleter(
        codec: props['codec'],
        scale: props['scale']?.toDouble() ?? 0,
        debugLabel: props['debugLabel'],
        chunkEvents: props['chunkEvents'],
        informationCollector: props['informationCollector'],
      ),
  'ImageCache': (props) => ImageCache(),
  'PolynomialFit': (props) => PolynomialFit(
        props['pa'][0],
      ),
  'LeastSquaresSolver': (props) => LeastSquaresSolver(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'EagerGestureRecognizer': (props) => EagerGestureRecognizer(
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'GestureArenaTeam': (props) => GestureArenaTeam(),
  'DoubleTapGestureRecognizer': (props) => DoubleTapGestureRecognizer(
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'MultiTapGestureRecognizer': (props) => MultiTapGestureRecognizer(
        longTapDelay: props['longTapDelay'] ?? Duration.zero,
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'SerialTapDownDetails': (props) => SerialTapDownDetails(
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
        kind: props['kind'],
        buttons: props['buttons'] ?? 0,
        count: props['count'] ?? 1,
      ),
  'SerialTapCancelDetails': (props) => SerialTapCancelDetails(
        count: props['count'] ?? 1,
      ),
  'SerialTapUpDetails': (props) => SerialTapUpDetails(
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
        kind: props['kind'],
        count: props['count'] ?? 1,
      ),
  'SerialTapGestureRecognizer': (props) => SerialTapGestureRecognizer(
        debugOwner: props['debugOwner'],
        supportedDevices: props['supportedDevices'],
      ),
  'Velocity': (props) => Velocity(
        pixelsPerSecond: props['pixelsPerSecond'],
      ),
  'Velocity.zero': Velocity.zero,
  'VelocityEstimate': (props) => VelocityEstimate(
        pixelsPerSecond: props['pixelsPerSecond'],
        confidence: props['confidence']?.toDouble() ?? 0,
        duration: props['duration'],
        offset: props['offset'],
      ),
  'VelocityTracker.withKind': (props) => VelocityTracker.withKind(
        props['pa'][0],
      ),
  'IOSScrollViewFlingVelocityTracker': (props) =>
      IOSScrollViewFlingVelocityTracker(
        props['pa'][0],
      ),
  'HitTestEntry': (props) => HitTestEntry<HitTestTarget>(
        props['pa'][0],
      ),
  'HitTestResult': (props) => HitTestResult(),
  'HitTestResult.wrap': (props) => HitTestResult.wrap(
        props['pa'][0],
      ),
  'TapDownDetails': (props) => TapDownDetails(
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
        kind: props['kind'],
      ),
  'TapUpDetails': (props) => TapUpDetails(
        kind: props['kind'],
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
      ),
  'TapGestureRecognizer': (props) => TapGestureRecognizer(
        debugOwner: props['debugOwner'],
        supportedDevices: props['supportedDevices'],
      ),
  'GestureArenaManager': (props) => GestureArenaManager(),
  'GestureDisposition.accepted': GestureDisposition.accepted,
  'GestureDisposition.rejected': GestureDisposition.rejected,
  'GestureDisposition.values': GestureDisposition.values,
  'OffsetPair': (props) => OffsetPair(
        local: props['local'],
        global: props['global'],
      ),
  'OffsetPair.fromEventPosition': (props) => OffsetPair.fromEventPosition(
        props['pa'][0],
      ),
  'OffsetPair.fromEventDelta': (props) => OffsetPair.fromEventDelta(
        props['pa'][0],
      ),
  'OffsetPair.zero': OffsetPair.zero,
  'DragStartBehavior.down': DragStartBehavior.down,
  'DragStartBehavior.start': DragStartBehavior.start,
  'DragStartBehavior.values': DragStartBehavior.values,
  'GestureRecognizerState.ready': GestureRecognizerState.ready,
  'GestureRecognizerState.possible': GestureRecognizerState.possible,
  'GestureRecognizerState.defunct': GestureRecognizerState.defunct,
  'GestureRecognizerState.values': GestureRecognizerState.values,
  'ImmediateMultiDragGestureRecognizer': (props) =>
      ImmediateMultiDragGestureRecognizer(
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'HorizontalMultiDragGestureRecognizer': (props) =>
      HorizontalMultiDragGestureRecognizer(
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'VerticalMultiDragGestureRecognizer': (props) =>
      VerticalMultiDragGestureRecognizer(
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'DelayedMultiDragGestureRecognizer': (props) =>
      DelayedMultiDragGestureRecognizer(
        delay: props['delay'] ?? kLongPressTimeout,
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'PointerEventConverter.expand': (props) => PointerEventConverter.expand(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
      ),
  'ForcePressDetails': (props) => ForcePressDetails(
        globalPosition: props['globalPosition'],
        localPosition: props['localPosition'],
        pressure: props['pressure']?.toDouble() ?? 0,
      ),
  'ForcePressGestureRecognizer': (props) => ForcePressGestureRecognizer(
        startPressure: props['startPressure']?.toDouble() ?? 0.4,
        peakPressure: props['peakPressure']?.toDouble() ?? 0.85,
        interpolation: props['interpolation'] ?? _inverseLerp,
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'PointerSignalResolver': (props) => PointerSignalResolver(),
  'LongPressDownDetails': (props) => LongPressDownDetails(
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
        kind: props['kind'],
      ),
  'LongPressStartDetails': (props) => LongPressStartDetails(
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
      ),
  'LongPressMoveUpdateDetails': (props) => LongPressMoveUpdateDetails(
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
        offsetFromOrigin: props['offsetFromOrigin'] ?? Offset.zero,
        localOffsetFromOrigin: props['localOffsetFromOrigin'],
      ),
  'LongPressEndDetails': (props) => LongPressEndDetails(
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
        velocity: props['velocity'] ?? Velocity.zero,
      ),
  'LongPressGestureRecognizer': (props) => LongPressGestureRecognizer(
        duration: props['duration'],
        postAcceptSlopTolerance: props['postAcceptSlopTolerance']?.toDouble(),
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
        debugOwner: props['debugOwner'],
      ),
  'DragDownDetails': (props) => DragDownDetails(
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
      ),
  'DragStartDetails': (props) => DragStartDetails(
        sourceTimeStamp: props['sourceTimeStamp'],
        globalPosition: props['globalPosition'] ?? Offset.zero,
        localPosition: props['localPosition'],
        kind: props['kind'],
      ),
  'DragUpdateDetails': (props) => DragUpdateDetails(
        sourceTimeStamp: props['sourceTimeStamp'],
        delta: props['delta'] ?? Offset.zero,
        primaryDelta: props['primaryDelta']?.toDouble(),
        globalPosition: props['globalPosition'],
        localPosition: props['localPosition'],
      ),
  'DragEndDetails': (props) => DragEndDetails(
        velocity: props['velocity'] ?? Velocity.zero,
        primaryVelocity: props['primaryVelocity']?.toDouble(),
      ),
  'ScaleStartDetails': (props) => ScaleStartDetails(
        focalPoint: props['focalPoint'] ?? Offset.zero,
        localFocalPoint: props['localFocalPoint'],
        pointerCount: props['pointerCount'] ?? 0,
      ),
  'ScaleUpdateDetails': (props) => ScaleUpdateDetails(
        focalPoint: props['focalPoint'] ?? Offset.zero,
        localFocalPoint: props['localFocalPoint'],
        scale: props['scale']?.toDouble() ?? 1.0,
        horizontalScale: props['horizontalScale']?.toDouble() ?? 1.0,
        verticalScale: props['verticalScale']?.toDouble() ?? 1.0,
        rotation: props['rotation']?.toDouble() ?? 0.0,
        pointerCount: props['pointerCount'] ?? 0,
        focalPointDelta: props['focalPointDelta'] ?? Offset.zero,
      ),
  'ScaleEndDetails': (props) => ScaleEndDetails(
        velocity: props['velocity'] ?? Velocity.zero,
        pointerCount: props['pointerCount'] ?? 0,
      ),
  'ScaleGestureRecognizer': (props) => ScaleGestureRecognizer(
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
        dragStartBehavior: props['dragStartBehavior'] ?? DragStartBehavior.down,
      ),
  'PointerEventResampler': (props) => PointerEventResampler(),
  'PointerAddedEvent': (props) => PointerAddedEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        pointer: props['pointer'] ?? 0,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        obscured: props['obscured'] ?? false,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distance: props['distance']?.toDouble() ?? 0.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerRemovedEvent': (props) => PointerRemovedEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        pointer: props['pointer'] ?? 0,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        obscured: props['obscured'] ?? false,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        original: props['original'],
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerHoverEvent': (props) => PointerHoverEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        pointer: props['pointer'] ?? 0,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        delta: props['delta'] ?? Offset.zero,
        buttons: props['buttons'] ?? 0,
        obscured: props['obscured'] ?? false,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distance: props['distance']?.toDouble() ?? 0.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        size: props['size']?.toDouble() ?? 0.0,
        radiusMajor: props['radiusMajor']?.toDouble() ?? 0.0,
        radiusMinor: props['radiusMinor']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        synthesized: props['synthesized'] ?? false,
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerEnterEvent': (props) => PointerEnterEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        pointer: props['pointer'] ?? 0,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        delta: props['delta'] ?? Offset.zero,
        buttons: props['buttons'] ?? 0,
        obscured: props['obscured'] ?? false,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distance: props['distance']?.toDouble() ?? 0.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        size: props['size']?.toDouble() ?? 0.0,
        radiusMajor: props['radiusMajor']?.toDouble() ?? 0.0,
        radiusMinor: props['radiusMinor']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        down: props['down'] ?? false,
        synthesized: props['synthesized'] ?? false,
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerEnterEvent.fromMouseEvent': (props) =>
      PointerEnterEvent.fromMouseEvent(
        props['pa'][0],
      ),
  'PointerExitEvent': (props) => PointerExitEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        pointer: props['pointer'] ?? 0,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        delta: props['delta'] ?? Offset.zero,
        buttons: props['buttons'] ?? 0,
        obscured: props['obscured'] ?? false,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distance: props['distance']?.toDouble() ?? 0.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        size: props['size']?.toDouble() ?? 0.0,
        radiusMajor: props['radiusMajor']?.toDouble() ?? 0.0,
        radiusMinor: props['radiusMinor']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        down: props['down'] ?? false,
        synthesized: props['synthesized'] ?? false,
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerExitEvent.fromMouseEvent': (props) => PointerExitEvent.fromMouseEvent(
        props['pa'][0],
      ),
  'PointerDownEvent': (props) => PointerDownEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        pointer: props['pointer'] ?? 0,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        buttons: props['buttons'] ?? kPrimaryButton,
        obscured: props['obscured'] ?? false,
        pressure: props['pressure']?.toDouble() ?? 1.0,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        size: props['size']?.toDouble() ?? 0.0,
        radiusMajor: props['radiusMajor']?.toDouble() ?? 0.0,
        radiusMinor: props['radiusMinor']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerMoveEvent': (props) => PointerMoveEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        pointer: props['pointer'] ?? 0,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        delta: props['delta'] ?? Offset.zero,
        buttons: props['buttons'] ?? kPrimaryButton,
        obscured: props['obscured'] ?? false,
        pressure: props['pressure']?.toDouble() ?? 1.0,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        size: props['size']?.toDouble() ?? 0.0,
        radiusMajor: props['radiusMajor']?.toDouble() ?? 0.0,
        radiusMinor: props['radiusMinor']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        platformData: props['platformData'] ?? 0,
        synthesized: props['synthesized'] ?? false,
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerUpEvent': (props) => PointerUpEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        pointer: props['pointer'] ?? 0,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        buttons: props['buttons'] ?? 0,
        obscured: props['obscured'] ?? false,
        pressure: props['pressure']?.toDouble() ?? 0.0,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distance: props['distance']?.toDouble() ?? 0.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        size: props['size']?.toDouble() ?? 0.0,
        radiusMajor: props['radiusMajor']?.toDouble() ?? 0.0,
        radiusMinor: props['radiusMinor']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerScrollEvent': (props) => PointerScrollEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        kind: props['kind'] ?? PointerDeviceKind.mouse,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        scrollDelta: props['scrollDelta'] ?? Offset.zero,
        embedderId: props['embedderId'] ?? 0,
      ),
  'PointerPanZoomStartEvent': (props) => PointerPanZoomStartEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        kind: props['kind'] ?? PointerDeviceKind.mouse,
        device: props['device'] ?? 0,
        pointer: props['pointer'] ?? 0,
        position: props['position'] ?? Offset.zero,
        embedderId: props['embedderId'] ?? 0,
        synthesized: props['synthesized'] ?? false,
      ),
  'PointerPanZoomUpdateEvent': (props) => PointerPanZoomUpdateEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        kind: props['kind'] ?? PointerDeviceKind.mouse,
        device: props['device'] ?? 0,
        pointer: props['pointer'] ?? 0,
        position: props['position'] ?? Offset.zero,
        embedderId: props['embedderId'] ?? 0,
        pan: props['pan'] ?? Offset.zero,
        panDelta: props['panDelta'] ?? Offset.zero,
        scale: props['scale']?.toDouble() ?? 1.0,
        rotation: props['rotation']?.toDouble() ?? 0.0,
        synthesized: props['synthesized'] ?? false,
      ),
  'PointerPanZoomEndEvent': (props) => PointerPanZoomEndEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        kind: props['kind'] ?? PointerDeviceKind.mouse,
        device: props['device'] ?? 0,
        pointer: props['pointer'] ?? 0,
        position: props['position'] ?? Offset.zero,
        embedderId: props['embedderId'] ?? 0,
        synthesized: props['synthesized'] ?? false,
      ),
  'PointerCancelEvent': (props) => PointerCancelEvent(
        timeStamp: props['timeStamp'] ?? Duration.zero,
        pointer: props['pointer'] ?? 0,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        device: props['device'] ?? 0,
        position: props['position'] ?? Offset.zero,
        buttons: props['buttons'] ?? 0,
        obscured: props['obscured'] ?? false,
        pressureMin: props['pressureMin']?.toDouble() ?? 1.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 1.0,
        distance: props['distance']?.toDouble() ?? 0.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        size: props['size']?.toDouble() ?? 0.0,
        radiusMajor: props['radiusMajor']?.toDouble() ?? 0.0,
        radiusMinor: props['radiusMinor']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        embedderId: props['embedderId'] ?? 0,
      ),
  'DeviceGestureSettings': (props) => DeviceGestureSettings(
        touchSlop: props['touchSlop']?.toDouble(),
      ),
  'DeviceGestureSettings.fromWindow': (props) =>
      DeviceGestureSettings.fromWindow(
        props['pa'][0],
      ),
  'VerticalDragGestureRecognizer': (props) => VerticalDragGestureRecognizer(
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'HorizontalDragGestureRecognizer': (props) => HorizontalDragGestureRecognizer(
        debugOwner: props['debugOwner'],
        kind: props['kind'],
        supportedDevices: props['supportedDevices'],
      ),
  'PanGestureRecognizer': (props) => PanGestureRecognizer(
        debugOwner: props['debugOwner'],
        supportedDevices: props['supportedDevices'],
      ),
  'SamplingClock': (props) => SamplingClock(),
  'FlutterErrorDetailsForPointerEventDispatcher': (props) =>
      FlutterErrorDetailsForPointerEventDispatcher(
        exception: props['exception'],
        stack: props['stack'],
        library: props['library'] ?? 'Flutter framework',
        context: props['context'],
        event: props['event'],
        hitTestEntry: props['hitTestEntry'],
        informationCollector: props['informationCollector'],
        silent: props['silent'] ?? false,
      ),
  'PointerRouter': (props) => PointerRouter(),
  'CustomPainterSemantics': (props) => CustomPainterSemantics(
        key: props['key'],
        rect: props['rect'],
        properties: props['properties'],
        transform: props['transform'],
        tags: props['tags'],
      ),
  'RenderCustomPaint': (props) => RenderCustomPaint(
        painter: props['painter'],
        foregroundPainter: props['foregroundPainter'],
        preferredSize: props['preferredSize'] ?? Size.zero,
        isComplex: props['isComplex'] ?? false,
        willChange: props['willChange'] ?? false,
        child: props['child'],
      ),
  'OverScrollHeaderStretchConfiguration': (props) =>
      OverScrollHeaderStretchConfiguration(
        stretchTriggerOffset:
            props['stretchTriggerOffset']?.toDouble() ?? 100.0,
        onStretchTrigger: props['onStretchTrigger'],
      ),
  'PersistentHeaderShowOnScreenConfiguration': (props) =>
      PersistentHeaderShowOnScreenConfiguration(
        minShowOnScreenExtent: props['minShowOnScreenExtent']?.toDouble() ??
            double.negativeInfinity,
        maxShowOnScreenExtent:
            props['maxShowOnScreenExtent']?.toDouble() ?? double.infinity,
      ),
  'FloatingHeaderSnapConfiguration': (props) => FloatingHeaderSnapConfiguration(
        curve: props['curve'] ?? Curves.ease,
        duration: props['duration'] ?? const Duration(milliseconds: 300),
      ),
  'RenderImage': (props) => RenderImage(
        image: props['image'],
        debugImageLabel: props['debugImageLabel'],
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        scale: props['scale']?.toDouble() ?? 1.0,
        color: props['color'],
        opacity: props['opacity'],
        colorBlendMode: props['colorBlendMode'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        centerSlice: props['centerSlice'],
        matchTextDirection: props['matchTextDirection'] ?? false,
        textDirection: props['textDirection'],
        invertColors: props['invertColors'] ?? false,
        isAntiAlias: props['isAntiAlias'] ?? false,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
      ),
  'TextureBox': (props) => TextureBox(
        textureId: props['textureId'],
        freeze: props['freeze'] ?? false,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
      ),
  'WrapParentData': (props) => WrapParentData(),
  'RenderWrap': (props) => RenderWrap(
        children: as<RenderBox>(props['children']),
        direction: props['direction'] ?? Axis.horizontal,
        alignment: props['alignment'] ?? WrapAlignment.start,
        spacing: props['spacing']?.toDouble() ?? 0.0,
        runAlignment: props['runAlignment'] ?? WrapAlignment.start,
        runSpacing: props['runSpacing']?.toDouble() ?? 0.0,
        crossAxisAlignment:
            props['crossAxisAlignment'] ?? WrapCrossAlignment.start,
        textDirection: props['textDirection'],
        verticalDirection: props['verticalDirection'] ?? VerticalDirection.down,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
      ),
  'WrapAlignment.start': WrapAlignment.start,
  'WrapAlignment.end': WrapAlignment.end,
  'WrapAlignment.center': WrapAlignment.center,
  'WrapAlignment.spaceBetween': WrapAlignment.spaceBetween,
  'WrapAlignment.spaceAround': WrapAlignment.spaceAround,
  'WrapAlignment.spaceEvenly': WrapAlignment.spaceEvenly,
  'WrapAlignment.values': WrapAlignment.values,
  'WrapCrossAlignment.start': WrapCrossAlignment.start,
  'WrapCrossAlignment.end': WrapCrossAlignment.end,
  'WrapCrossAlignment.center': WrapCrossAlignment.center,
  'WrapCrossAlignment.values': WrapCrossAlignment.values,
  'TableBorder': (props) => TableBorder(
        top: props['top'] ?? BorderSide.none,
        right: props['right'] ?? BorderSide.none,
        bottom: props['bottom'] ?? BorderSide.none,
        left: props['left'] ?? BorderSide.none,
        horizontalInside: props['horizontalInside'] ?? BorderSide.none,
        verticalInside: props['verticalInside'] ?? BorderSide.none,
        borderRadius: props['borderRadius'] ?? BorderRadius.zero,
      ),
  'TableBorder.all': (props) => TableBorder.all(
        color: props['color'] ?? const Color(0xFF000000),
        width: props['width']?.toDouble() ?? 1.0,
        style: props['style'] ?? BorderStyle.solid,
        borderRadius: props['borderRadius'] ?? BorderRadius.zero,
      ),
  'TableBorder.symmetric': (props) => TableBorder.symmetric(
        inside: props['inside'] ?? BorderSide.none,
        outside: props['outside'] ?? BorderSide.none,
      ),
  'TableBorder.lerp': (props) => TableBorder.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'RenderProxyBox': (props) => RenderProxyBox(
        props['pa'][0],
      ),
  'RenderConstrainedBox': (props) => RenderConstrainedBox(
        child: props['child'],
        additionalConstraints: props['additionalConstraints'],
      ),
  'RenderLimitedBox': (props) => RenderLimitedBox(
        child: props['child'],
        maxWidth: props['maxWidth']?.toDouble() ?? double.infinity,
        maxHeight: props['maxHeight']?.toDouble() ?? double.infinity,
      ),
  'RenderAspectRatio': (props) => RenderAspectRatio(
        child: props['child'],
        aspectRatio: props['aspectRatio']?.toDouble() ?? 0,
      ),
  'RenderIntrinsicWidth': (props) => RenderIntrinsicWidth(
        stepWidth: props['stepWidth']?.toDouble(),
        stepHeight: props['stepHeight']?.toDouble(),
        child: props['child'],
      ),
  'RenderIntrinsicHeight': (props) => RenderIntrinsicHeight(
        child: props['child'],
      ),
  'RenderOpacity': (props) => RenderOpacity(
        opacity: props['opacity']?.toDouble() ?? 1.0,
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
        child: props['child'],
      ),
  'RenderAnimatedOpacity': (props) => RenderAnimatedOpacity(
        opacity: props['opacity'],
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
        child: props['child'],
      ),
  'RenderShaderMask': (props) => RenderShaderMask(
        child: props['child'],
        shaderCallback: props['shaderCallback'],
        blendMode: props['blendMode'] ?? BlendMode.modulate,
      ),
  'RenderBackdropFilter': (props) => RenderBackdropFilter(
        child: props['child'],
        filter: props['filter'],
        blendMode: props['blendMode'] ?? BlendMode.srcOver,
      ),
  'ShapeBorderClipper': (props) => ShapeBorderClipper(
        shape: props['shape'],
        textDirection: props['textDirection'],
      ),
  'RenderClipRect': (props) => RenderClipRect(
        child: props['child'],
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
      ),
  'RenderClipRRect': (props) => RenderClipRRect(
        child: props['child'],
        borderRadius: props['borderRadius'] ?? BorderRadius.zero,
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
        textDirection: props['textDirection'],
      ),
  'RenderClipOval': (props) => RenderClipOval(
        child: props['child'],
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
      ),
  'RenderClipPath': (props) => RenderClipPath(
        child: props['child'],
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
      ),
  'RenderPhysicalModel': (props) => RenderPhysicalModel(
        child: props['child'],
        shape: props['shape'] ?? BoxShape.rectangle,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        borderRadius: props['borderRadius'],
        elevation: props['elevation']?.toDouble() ?? 0.0,
        color: props['color'],
        shadowColor: props['shadowColor'] ?? const Color(0xFF000000),
      ),
  'RenderPhysicalShape': (props) => RenderPhysicalShape(
        child: props['child'],
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        elevation: props['elevation']?.toDouble() ?? 0.0,
        color: props['color'],
        shadowColor: props['shadowColor'] ?? const Color(0xFF000000),
      ),
  'RenderDecoratedBox': (props) => RenderDecoratedBox(
        decoration: props['decoration'],
        position: props['position'] ?? DecorationPosition.background,
        configuration: props['configuration'] ?? ImageConfiguration.empty,
        child: props['child'],
      ),
  'RenderTransform': (props) => RenderTransform(
        transform: props['transform'],
        origin: props['origin'],
        alignment: props['alignment'],
        textDirection: props['textDirection'],
        transformHitTests: props['transformHitTests'] ?? true,
        filterQuality: props['filterQuality'],
        child: props['child'],
      ),
  'RenderFittedBox': (props) => RenderFittedBox(
        fit: props['fit'] ?? BoxFit.contain,
        alignment: props['alignment'] ?? Alignment.center,
        textDirection: props['textDirection'],
        child: props['child'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
      ),
  'RenderFractionalTranslation': (props) => RenderFractionalTranslation(
        translation: props['translation'],
        transformHitTests: props['transformHitTests'] ?? true,
        child: props['child'],
      ),
  'RenderPointerListener': (props) => RenderPointerListener(
        onPointerDown: props['onPointerDown'],
        onPointerMove: props['onPointerMove'],
        onPointerUp: props['onPointerUp'],
        onPointerHover: props['onPointerHover'],
        onPointerCancel: props['onPointerCancel'],
        onPointerPanZoomStart: props['onPointerPanZoomStart'],
        onPointerPanZoomUpdate: props['onPointerPanZoomUpdate'],
        onPointerPanZoomEnd: props['onPointerPanZoomEnd'],
        onPointerSignal: props['onPointerSignal'],
        behavior: props['behavior'] ?? HitTestBehavior.deferToChild,
        child: props['child'],
      ),
  'RenderMouseRegion': (props) => RenderMouseRegion(
        onEnter: props['onEnter'],
        onHover: props['onHover'],
        onExit: props['onExit'],
        cursor: props['cursor'] ?? MouseCursor.defer,
        validForMouseTracker: props['validForMouseTracker'] ?? true,
        opaque: props['opaque'] ?? true,
        child: props['child'],
        hitTestBehavior: props['hitTestBehavior'] ?? HitTestBehavior.opaque,
      ),
  'RenderRepaintBoundary': (props) => RenderRepaintBoundary(
        child: props['child'],
      ),
  'RenderIgnorePointer': (props) => RenderIgnorePointer(
        child: props['child'],
        ignoring: props['ignoring'] ?? true,
        ignoringSemantics: props['ignoringSemantics'],
      ),
  'RenderOffstage': (props) => RenderOffstage(
        offstage: props['offstage'] ?? true,
        child: props['child'],
      ),
  'RenderAbsorbPointer': (props) => RenderAbsorbPointer(
        child: props['child'],
        absorbing: props['absorbing'] ?? true,
        ignoringSemantics: props['ignoringSemantics'],
      ),
  'RenderMetaData': (props) => RenderMetaData(
        metaData: props['metaData'],
        behavior: props['behavior'] ?? HitTestBehavior.deferToChild,
        child: props['child'],
      ),
  'RenderSemanticsGestureHandler': (props) => RenderSemanticsGestureHandler(
        child: props['child'],
        onTap: props['onTap'],
        onLongPress: props['onLongPress'],
        onHorizontalDragUpdate: props['onHorizontalDragUpdate'],
        onVerticalDragUpdate: props['onVerticalDragUpdate'],
        scrollFactor: props['scrollFactor']?.toDouble() ?? 0.8,
        behavior: props['behavior'] ?? HitTestBehavior.deferToChild,
      ),
  'RenderSemanticsAnnotations': (props) => RenderSemanticsAnnotations(
        child: props['child'],
        properties: props['properties'],
        container: props['container'] ?? false,
        explicitChildNodes: props['explicitChildNodes'] ?? false,
        excludeSemantics: props['excludeSemantics'] ?? false,
        textDirection: props['textDirection'],
      ),
  'RenderBlockSemantics': (props) => RenderBlockSemantics(
        child: props['child'],
        blocking: props['blocking'] ?? true,
      ),
  'RenderMergeSemantics': (props) => RenderMergeSemantics(
        child: props['child'],
      ),
  'RenderExcludeSemantics': (props) => RenderExcludeSemantics(
        child: props['child'],
        excluding: props['excluding'] ?? true,
      ),
  'RenderIndexedSemantics': (props) => RenderIndexedSemantics(
        child: props['child'],
        index: props['index'],
      ),
  'RenderLeaderLayer': (props) => RenderLeaderLayer(
        link: props['link'],
        child: props['child'],
      ),
  'RenderFollowerLayer': (props) => RenderFollowerLayer(
        link: props['link'],
        showWhenUnlinked: props['showWhenUnlinked'] ?? true,
        offset: props['offset'] ?? Offset.zero,
        leaderAnchor: props['leaderAnchor'] ?? Alignment.topLeft,
        followerAnchor: props['followerAnchor'] ?? Alignment.topLeft,
        child: props['child'],
      ),
  'RenderAnnotatedRegion': (props) => RenderAnnotatedRegion<Object>(
        value: props['value'],
        sized: props['sized'],
        child: props['child'],
      ),
  'HitTestBehavior.deferToChild': HitTestBehavior.deferToChild,
  'HitTestBehavior.opaque': HitTestBehavior.opaque,
  'HitTestBehavior.translucent': HitTestBehavior.translucent,
  'HitTestBehavior.values': HitTestBehavior.values,
  'DecorationPosition.background': DecorationPosition.background,
  'DecorationPosition.foreground': DecorationPosition.foreground,
  'DecorationPosition.values': DecorationPosition.values,
  'ScrollDirection.idle': ScrollDirection.idle,
  'ScrollDirection.forward': ScrollDirection.forward,
  'ScrollDirection.reverse': ScrollDirection.reverse,
  'ScrollDirection.values': ScrollDirection.values,
  'SliverMultiBoxAdaptorParentData': (props) =>
      SliverMultiBoxAdaptorParentData(),
  'FlowParentData': (props) => FlowParentData(),
  'RenderFlow': (props) => RenderFlow(
        children: as<RenderBox>(props['children']),
        delegate: props['delegate'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ParentData': (props) => ParentData(),
  'PaintingContext': (props) => PaintingContext(
        props['pa'][0],
        props['pa'][1],
      ),
  'PaintingContext.repaintCompositedChild': (props) =>
      PaintingContext.repaintCompositedChild(
        props['pa'][0],
        debugAlsoPaintedParent: props['debugAlsoPaintedParent'] ?? false,
      ),
  'PaintingContext.updateLayerProperties': (props) =>
      PaintingContext.updateLayerProperties(
        props['pa'][0],
      ),
  'PaintingContext.debugInstrumentRepaintCompositedChild': (props) =>
      PaintingContext.debugInstrumentRepaintCompositedChild(
        props['pa'][0],
        debugAlsoPaintedParent: props['debugAlsoPaintedParent'] ?? false,
        customContext: props['customContext'],
      ),
  'PipelineOwner': (props) => PipelineOwner(
        onNeedVisualUpdate: props['onNeedVisualUpdate'],
        onSemanticsOwnerCreated: props['onSemanticsOwnerCreated'],
        onSemanticsOwnerDisposed: props['onSemanticsOwnerDisposed'],
      ),
  'DiagnosticsDebugCreator': (props) => DiagnosticsDebugCreator(
        props['pa'][0],
      ),
  'SelectedContent': (props) => SelectedContent(
        plainText: props['plainText'],
      ),
  'SelectionUtils.getResultBasedOnRect': (props) =>
      SelectionUtils.getResultBasedOnRect(
        props['pa'][0],
        props['pa'][1],
      ),
  'SelectionUtils.adjustDragOffset': (props) => SelectionUtils.adjustDragOffset(
        props['pa'][0],
        props['pa'][1],
        direction: props['direction'] ?? TextDirection.ltr,
      ),
  'SelectAllSelectionEvent': (props) => const SelectAllSelectionEvent(),
  'ClearSelectionEvent': (props) => const ClearSelectionEvent(),
  'SelectWordSelectionEvent': (props) => SelectWordSelectionEvent(
        globalPosition: props['globalPosition'],
      ),
  'SelectionEdgeUpdateEvent.forStart': (props) =>
      SelectionEdgeUpdateEvent.forStart(
        globalPosition: props['globalPosition'],
      ),
  'SelectionEdgeUpdateEvent.forEnd': (props) => SelectionEdgeUpdateEvent.forEnd(
        globalPosition: props['globalPosition'],
      ),
  'SelectionGeometry': (props) => SelectionGeometry(
        startSelectionPoint: props['startSelectionPoint'],
        endSelectionPoint: props['endSelectionPoint'],
        status: props['status'],
        hasContent: props['hasContent'],
      ),
  'SelectionPoint': (props) => SelectionPoint(
        localPosition: props['localPosition'],
        lineHeight: props['lineHeight']?.toDouble() ?? 0,
        handleType: props['handleType'],
      ),
  'SelectionResult.next': SelectionResult.next,
  'SelectionResult.previous': SelectionResult.previous,
  'SelectionResult.end': SelectionResult.end,
  'SelectionResult.pending': SelectionResult.pending,
  'SelectionResult.none': SelectionResult.none,
  'SelectionResult.values': SelectionResult.values,
  'SelectionEventType.startEdgeUpdate': SelectionEventType.startEdgeUpdate,
  'SelectionEventType.endEdgeUpdate': SelectionEventType.endEdgeUpdate,
  'SelectionEventType.clear': SelectionEventType.clear,
  'SelectionEventType.selectAll': SelectionEventType.selectAll,
  'SelectionEventType.selectWord': SelectionEventType.selectWord,
  'SelectionEventType.values': SelectionEventType.values,
  'SelectionStatus.uncollapsed': SelectionStatus.uncollapsed,
  'SelectionStatus.collapsed': SelectionStatus.collapsed,
  'SelectionStatus.none': SelectionStatus.none,
  'SelectionStatus.values': SelectionStatus.values,
  'TextSelectionHandleType.left': TextSelectionHandleType.left,
  'TextSelectionHandleType.right': TextSelectionHandleType.right,
  'TextSelectionHandleType.collapsed': TextSelectionHandleType.collapsed,
  'TextSelectionHandleType.values': TextSelectionHandleType.values,
  'FlexParentData': (props) => FlexParentData(),
  'RenderFlex': (props) => RenderFlex(
        children: as<RenderBox>(props['children']),
        direction: props['direction'] ?? Axis.horizontal,
        mainAxisSize: props['mainAxisSize'] ?? MainAxisSize.max,
        mainAxisAlignment:
            props['mainAxisAlignment'] ?? MainAxisAlignment.start,
        crossAxisAlignment:
            props['crossAxisAlignment'] ?? CrossAxisAlignment.center,
        textDirection: props['textDirection'],
        verticalDirection: props['verticalDirection'] ?? VerticalDirection.down,
        textBaseline: props['textBaseline'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
      ),
  'FlexFit.tight': FlexFit.tight,
  'FlexFit.loose': FlexFit.loose,
  'FlexFit.values': FlexFit.values,
  'MainAxisSize.min': MainAxisSize.min,
  'MainAxisSize.max': MainAxisSize.max,
  'MainAxisSize.values': MainAxisSize.values,
  'MainAxisAlignment.start': MainAxisAlignment.start,
  'MainAxisAlignment.end': MainAxisAlignment.end,
  'MainAxisAlignment.center': MainAxisAlignment.center,
  'MainAxisAlignment.spaceBetween': MainAxisAlignment.spaceBetween,
  'MainAxisAlignment.spaceAround': MainAxisAlignment.spaceAround,
  'MainAxisAlignment.spaceEvenly': MainAxisAlignment.spaceEvenly,
  'MainAxisAlignment.values': MainAxisAlignment.values,
  'CrossAxisAlignment.start': CrossAxisAlignment.start,
  'CrossAxisAlignment.end': CrossAxisAlignment.end,
  'CrossAxisAlignment.center': CrossAxisAlignment.center,
  'CrossAxisAlignment.stretch': CrossAxisAlignment.stretch,
  'CrossAxisAlignment.baseline': CrossAxisAlignment.baseline,
  'CrossAxisAlignment.values': CrossAxisAlignment.values,
  'RenderSliverFixedExtentList': (props) => RenderSliverFixedExtentList(
        childManager: props['childManager'],
        itemExtent: props['itemExtent']?.toDouble() ?? 0,
      ),
  'TableCellParentData': (props) => TableCellParentData(),
  'IntrinsicColumnWidth': (props) => IntrinsicColumnWidth(
        flex: props['flex']?.toDouble(),
      ),
  'FixedColumnWidth': (props) => FixedColumnWidth(
        props['pa'][0]?.toDouble(),
      ),
  'FractionColumnWidth': (props) => FractionColumnWidth(
        props['pa'][0]?.toDouble(),
      ),
  'FlexColumnWidth': (props) => FlexColumnWidth(
        props['pa'][0]?.toDouble() ?? 1.0,
      ),
  'MaxColumnWidth': (props) => MaxColumnWidth(
        props['pa'][0],
        props['pa'][1],
      ),
  'MinColumnWidth': (props) => MinColumnWidth(
        props['pa'][0],
        props['pa'][1],
      ),
  'RenderTable': (props) => RenderTable(
        columns: props['columns'],
        rows: props['rows'],
        columnWidths: props['columnWidths'],
        defaultColumnWidth:
            props['defaultColumnWidth'] ?? const FlexColumnWidth(),
        textDirection: props['textDirection'],
        border: props['border'],
        rowDecorations: as<Decoration>(props['rowDecorations']),
        configuration: props['configuration'] ?? ImageConfiguration.empty,
        defaultVerticalAlignment:
            props['defaultVerticalAlignment'] ?? TableCellVerticalAlignment.top,
        textBaseline: props['textBaseline'],
        children: as<List<RenderBox>>(props['children']),
      ),
  'TableCellVerticalAlignment.top': TableCellVerticalAlignment.top,
  'TableCellVerticalAlignment.middle': TableCellVerticalAlignment.middle,
  'TableCellVerticalAlignment.bottom': TableCellVerticalAlignment.bottom,
  'TableCellVerticalAlignment.baseline': TableCellVerticalAlignment.baseline,
  'TableCellVerticalAlignment.fill': TableCellVerticalAlignment.fill,
  'TableCellVerticalAlignment.values': TableCellVerticalAlignment.values,
  'MouseTracker': (props) => MouseTracker(),
  'RenderRotatedBox': (props) => RenderRotatedBox(
        quarterTurns: props['quarterTurns'],
        child: props['child'],
      ),
  'RenderPadding': (props) => RenderPadding(
        padding: props['padding'],
        textDirection: props['textDirection'],
        child: props['child'],
      ),
  'RenderPositionedBox': (props) => RenderPositionedBox(
        child: props['child'],
        widthFactor: props['widthFactor']?.toDouble(),
        heightFactor: props['heightFactor']?.toDouble(),
        alignment: props['alignment'] ?? Alignment.center,
        textDirection: props['textDirection'],
      ),
  'RenderConstrainedOverflowBox': (props) => RenderConstrainedOverflowBox(
        child: props['child'],
        minWidth: props['minWidth']?.toDouble(),
        maxWidth: props['maxWidth']?.toDouble(),
        minHeight: props['minHeight']?.toDouble(),
        maxHeight: props['maxHeight']?.toDouble(),
        alignment: props['alignment'] ?? Alignment.center,
        textDirection: props['textDirection'],
      ),
  'RenderConstraintsTransformBox': (props) => RenderConstraintsTransformBox(
        alignment: props['alignment'] ?? Alignment.center,
        textDirection: props['textDirection'],
        constraintsTransform: props['constraintsTransform'],
        child: props['child'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
      ),
  'RenderSizedOverflowBox': (props) => RenderSizedOverflowBox(
        child: props['child'],
        requestedSize: props['requestedSize'],
        alignment: props['alignment'] ?? Alignment.center,
        textDirection: props['textDirection'],
      ),
  'RenderFractionallySizedOverflowBox': (props) =>
      RenderFractionallySizedOverflowBox(
        child: props['child'],
        widthFactor: props['widthFactor']?.toDouble(),
        heightFactor: props['heightFactor']?.toDouble(),
        alignment: props['alignment'] ?? Alignment.center,
        textDirection: props['textDirection'],
      ),
  'RenderCustomSingleChildLayoutBox': (props) =>
      RenderCustomSingleChildLayoutBox(
        child: props['child'],
        delegate: props['delegate'],
      ),
  'RenderBaseline': (props) => RenderBaseline(
        child: props['child'],
        baseline: props['baseline']?.toDouble() ?? 0,
        baselineType: props['baselineType'],
      ),
  'ChildLayoutHelper.dryLayoutChild': (props) =>
      ChildLayoutHelper.dryLayoutChild(
        props['pa'][0],
        props['pa'][1],
      ),
  'ChildLayoutHelper.layoutChild': (props) => ChildLayoutHelper.layoutChild(
        props['pa'][0],
        props['pa'][1],
      ),
  'RenderSliverOpacity': (props) => RenderSliverOpacity(
        opacity: props['opacity']?.toDouble() ?? 1.0,
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
        sliver: props['sliver'],
      ),
  'RenderSliverIgnorePointer': (props) => RenderSliverIgnorePointer(
        sliver: props['sliver'],
        ignoring: props['ignoring'] ?? true,
        ignoringSemantics: props['ignoringSemantics'],
      ),
  'RenderSliverOffstage': (props) => RenderSliverOffstage(
        offstage: props['offstage'] ?? true,
        sliver: props['sliver'],
      ),
  'RenderSliverAnimatedOpacity': (props) => RenderSliverAnimatedOpacity(
        opacity: props['opacity'],
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
        sliver: props['sliver'],
      ),
  'ViewConfiguration': (props) => ViewConfiguration(
        size: props['size'] ?? Size.zero,
        devicePixelRatio: props['devicePixelRatio']?.toDouble() ?? 1.0,
      ),
  'RenderView': (props) => RenderView(
        child: props['child'],
        configuration: props['configuration'],
        window: props['window'],
      ),
  'SliverGridGeometry': (props) => SliverGridGeometry(
        scrollOffset: props['scrollOffset']?.toDouble() ?? 0,
        crossAxisOffset: props['crossAxisOffset']?.toDouble() ?? 0,
        mainAxisExtent: props['mainAxisExtent']?.toDouble() ?? 0,
        crossAxisExtent: props['crossAxisExtent']?.toDouble() ?? 0,
      ),
  'SliverGridRegularTileLayout': (props) => SliverGridRegularTileLayout(
        crossAxisCount: props['crossAxisCount'],
        mainAxisStride: props['mainAxisStride']?.toDouble() ?? 0,
        crossAxisStride: props['crossAxisStride']?.toDouble() ?? 0,
        childMainAxisExtent: props['childMainAxisExtent']?.toDouble() ?? 0,
        childCrossAxisExtent: props['childCrossAxisExtent']?.toDouble() ?? 0,
        reverseCrossAxis: props['reverseCrossAxis'],
      ),
  'SliverGridDelegateWithFixedCrossAxisCount': (props) =>
      SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: props['crossAxisCount'],
        mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0.0,
        crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0.0,
        childAspectRatio: props['childAspectRatio']?.toDouble() ?? 1.0,
        mainAxisExtent: props['mainAxisExtent']?.toDouble(),
      ),
  'SliverGridDelegateWithMaxCrossAxisExtent': (props) =>
      SliverGridDelegateWithMaxCrossAxisExtent(
        maxCrossAxisExtent: props['maxCrossAxisExtent']?.toDouble() ?? 0,
        mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0.0,
        crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0.0,
        childAspectRatio: props['childAspectRatio']?.toDouble() ?? 1.0,
        mainAxisExtent: props['mainAxisExtent']?.toDouble(),
      ),
  'SliverGridParentData': (props) => SliverGridParentData(),
  'RenderSliverGrid': (props) => RenderSliverGrid(
        childManager: props['childManager'],
        gridDelegate: props['gridDelegate'],
      ),
  'RevealedOffset': (props) => RevealedOffset(
        offset: props['offset']?.toDouble() ?? 0,
        rect: props['rect'],
      ),
  'RenderViewport': (props) => RenderViewport(
        axisDirection: props['axisDirection'] ?? AxisDirection.down,
        crossAxisDirection: props['crossAxisDirection'],
        offset: props['offset'],
        anchor: props['anchor']?.toDouble() ?? 0.0,
        children: as<RenderSliver>(props['children']),
        center: props['center'],
        cacheExtent: props['cacheExtent']?.toDouble(),
        cacheExtentStyle: props['cacheExtentStyle'] ?? CacheExtentStyle.pixel,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'RenderViewport.useTwoPaneSemantics': RenderViewport.useTwoPaneSemantics,
  'RenderViewport.excludeFromScrolling': RenderViewport.excludeFromScrolling,
  'RenderShrinkWrappingViewport': (props) => RenderShrinkWrappingViewport(
        axisDirection: props['axisDirection'] ?? AxisDirection.down,
        crossAxisDirection: props['crossAxisDirection'],
        offset: props['offset'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        children: as<RenderSliver>(props['children']),
      ),
  'CacheExtentStyle.pixel': CacheExtentStyle.pixel,
  'CacheExtentStyle.viewport': CacheExtentStyle.viewport,
  'CacheExtentStyle.values': CacheExtentStyle.values,
  'RenderSliverList': (props) => RenderSliverList(
        childManager: props['childManager'],
      ),
  'RenderSliverPadding': (props) => RenderSliverPadding(
        padding: props['padding'],
        textDirection: props['textDirection'],
        child: props['child'],
      ),
  'SliverConstraints': (props) => SliverConstraints(
        axisDirection: props['axisDirection'],
        growthDirection: props['growthDirection'],
        userScrollDirection: props['userScrollDirection'],
        scrollOffset: props['scrollOffset']?.toDouble() ?? 0,
        precedingScrollExtent: props['precedingScrollExtent']?.toDouble() ?? 0,
        overlap: props['overlap']?.toDouble() ?? 0,
        remainingPaintExtent: props['remainingPaintExtent']?.toDouble() ?? 0,
        crossAxisExtent: props['crossAxisExtent']?.toDouble() ?? 0,
        crossAxisDirection: props['crossAxisDirection'],
        viewportMainAxisExtent:
            props['viewportMainAxisExtent']?.toDouble() ?? 0,
        remainingCacheExtent: props['remainingCacheExtent']?.toDouble() ?? 0,
        cacheOrigin: props['cacheOrigin']?.toDouble() ?? 0,
      ),
  'SliverGeometry': (props) => SliverGeometry(
        scrollExtent: props['scrollExtent']?.toDouble() ?? 0.0,
        paintExtent: props['paintExtent']?.toDouble() ?? 0.0,
        paintOrigin: props['paintOrigin']?.toDouble() ?? 0.0,
        layoutExtent: props['layoutExtent']?.toDouble(),
        maxPaintExtent: props['maxPaintExtent']?.toDouble() ?? 0.0,
        maxScrollObstructionExtent:
            props['maxScrollObstructionExtent']?.toDouble() ?? 0.0,
        hitTestExtent: props['hitTestExtent']?.toDouble(),
        visible: props['visible'],
        hasVisualOverflow: props['hasVisualOverflow'] ?? false,
        scrollOffsetCorrection: props['scrollOffsetCorrection']?.toDouble(),
        cacheExtent: props['cacheExtent']?.toDouble(),
      ),
  'SliverGeometry.zero': SliverGeometry.zero,
  'SliverHitTestResult': (props) => SliverHitTestResult(),
  'SliverHitTestResult.wrap': (props) => SliverHitTestResult.wrap(
        props['pa'][0],
      ),
  'SliverHitTestEntry': (props) => SliverHitTestEntry(
        props['pa'][0],
        mainAxisPosition: props['mainAxisPosition']?.toDouble() ?? 0,
        crossAxisPosition: props['crossAxisPosition']?.toDouble() ?? 0,
      ),
  'SliverLogicalParentData': (props) => SliverLogicalParentData(),
  'SliverLogicalContainerParentData': (props) =>
      SliverLogicalContainerParentData(),
  'SliverPhysicalParentData': (props) => SliverPhysicalParentData(),
  'SliverPhysicalContainerParentData': (props) =>
      SliverPhysicalContainerParentData(),
  'RenderSliverToBoxAdapter': (props) => RenderSliverToBoxAdapter(
        child: props['child'],
      ),
  'GrowthDirection.forward': GrowthDirection.forward,
  'GrowthDirection.reverse': GrowthDirection.reverse,
  'GrowthDirection.values': GrowthDirection.values,
  'RenderErrorBox': (props) => RenderErrorBox(
        props['pa'][0] ?? '',
      ),
  'RelativeRect.fromLTRB': (props) => RelativeRect.fromLTRB(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'RelativeRect.fromSize': (props) => RelativeRect.fromSize(
        props['pa'][0],
        props['pa'][1],
      ),
  'RelativeRect.fromRect': (props) => RelativeRect.fromRect(
        props['pa'][0],
        props['pa'][1],
      ),
  'RelativeRect.fromDirectional': (props) => RelativeRect.fromDirectional(
        textDirection: props['textDirection'],
        start: props['start']?.toDouble() ?? 0,
        top: props['top']?.toDouble() ?? 0,
        end: props['end']?.toDouble() ?? 0,
        bottom: props['bottom']?.toDouble() ?? 0,
      ),
  'RelativeRect.fill': RelativeRect.fill,
  'RelativeRect.lerp': (props) => RelativeRect.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'StackParentData': (props) => StackParentData(),
  'RenderStack': (props) => RenderStack(
        children: as<RenderBox>(props['children']),
        alignment: props['alignment'] ?? AlignmentDirectional.topStart,
        textDirection: props['textDirection'],
        fit: props['fit'] ?? StackFit.loose,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'RenderStack.getIntrinsicDimension': (props) =>
      RenderStack.getIntrinsicDimension(
        props['pa'][0],
        props['pa'][1],
      ),
  'RenderStack.layoutPositionedChild': (props) =>
      RenderStack.layoutPositionedChild(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
      ),
  'RenderIndexedStack': (props) => RenderIndexedStack(
        children: as<RenderBox>(props['children']),
        alignment: props['alignment'] ?? AlignmentDirectional.topStart,
        textDirection: props['textDirection'],
        index: props['index'] ?? 0,
      ),
  'StackFit.loose': StackFit.loose,
  'StackFit.expand': StackFit.expand,
  'StackFit.passthrough': StackFit.passthrough,
  'StackFit.values': StackFit.values,
  'ListBodyParentData': (props) => ListBodyParentData(),
  'RenderListBody': (props) => RenderListBody(
        children: as<RenderBox>(props['children']),
        axisDirection: props['axisDirection'] ?? AxisDirection.down,
      ),
  'FractionalOffsetTween': (props) => FractionalOffsetTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'AlignmentTween': (props) => AlignmentTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'AlignmentGeometryTween': (props) => AlignmentGeometryTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'AnnotationEntry': (props) => AnnotationEntry(
        annotation: props['annotation'],
        localPosition: props['localPosition'],
      ),
  'AnnotationResult': (props) => AnnotationResult(),
  'LayerHandle': (props) => LayerHandle<Layer>(
        props['pa'][0],
      ),
  'PictureLayer': (props) => PictureLayer(
        props['pa'][0],
      ),
  'TextureLayer': (props) => TextureLayer(
        rect: props['rect'],
        textureId: props['textureId'],
        freeze: props['freeze'] ?? false,
        filterQuality: props['filterQuality'] ?? ui.FilterQuality.low,
      ),
  'PlatformViewLayer': (props) => PlatformViewLayer(
        rect: props['rect'],
        viewId: props['viewId'],
      ),
  'PerformanceOverlayLayer': (props) => PerformanceOverlayLayer(
        overlayRect: props['overlayRect'],
        optionsMask: props['optionsMask'],
        rasterizerThreshold: props['rasterizerThreshold'],
        checkerboardRasterCacheImages: props['checkerboardRasterCacheImages'],
        checkerboardOffscreenLayers: props['checkerboardOffscreenLayers'],
      ),
  'ContainerLayer': (props) => ContainerLayer(),
  'OffsetLayer': (props) => OffsetLayer(
        offset: props['offset'] ?? Offset.zero,
      ),
  'ClipRectLayer': (props) => ClipRectLayer(
        clipRect: props['clipRect'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ClipRRectLayer': (props) => ClipRRectLayer(
        clipRRect: props['clipRRect'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
      ),
  'ClipPathLayer': (props) => ClipPathLayer(
        clipPath: props['clipPath'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
      ),
  'ColorFilterLayer': (props) => ColorFilterLayer(
        colorFilter: props['colorFilter'],
      ),
  'ImageFilterLayer': (props) => ImageFilterLayer(
        imageFilter: props['imageFilter'],
      ),
  'TransformLayer': (props) => TransformLayer(
        transform: props['transform'],
        offset: props['offset'] ?? Offset.zero,
      ),
  'OpacityLayer': (props) => OpacityLayer(
        alpha: props['alpha'],
        offset: props['offset'] ?? Offset.zero,
      ),
  'ShaderMaskLayer': (props) => ShaderMaskLayer(
        shader: props['shader'],
        maskRect: props['maskRect'],
        blendMode: props['blendMode'],
      ),
  'BackdropFilterLayer': (props) => BackdropFilterLayer(
        filter: props['filter'],
        blendMode: props['blendMode'] ?? BlendMode.srcOver,
      ),
  'LayerLink': (props) => LayerLink(),
  'LeaderLayer': (props) => LeaderLayer(
        link: props['link'],
        offset: props['offset'] ?? Offset.zero,
      ),
  'FollowerLayer': (props) => FollowerLayer(
        link: props['link'],
        showWhenUnlinked: props['showWhenUnlinked'] ?? true,
        unlinkedOffset: props['unlinkedOffset'] ?? Offset.zero,
        linkedOffset: props['linkedOffset'] ?? Offset.zero,
      ),
  'AnnotatedRegionLayer': (props) => AnnotatedRegionLayer<Object>(
        props['pa'][0],
        size: props['size'],
        offset: props['offset'],
        opaque: props['opaque'] ?? false,
      ),
  'RenderAndroidView': (props) => RenderAndroidView(
        viewController: props['viewController'],
        hitTestBehavior: props['hitTestBehavior'],
        gestureRecognizers: props['gestureRecognizers'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'RenderUiKitView': (props) => RenderUiKitView(
        viewController: props['viewController'],
        hitTestBehavior: props['hitTestBehavior'],
        gestureRecognizers: props['gestureRecognizers'],
      ),
  'PlatformViewRenderBox': (props) => PlatformViewRenderBox(
        controller: props['controller'],
        hitTestBehavior: props['hitTestBehavior'],
        gestureRecognizers: props['gestureRecognizers'],
      ),
  'PlatformViewHitTestBehavior.opaque': PlatformViewHitTestBehavior.opaque,
  'PlatformViewHitTestBehavior.translucent':
      PlatformViewHitTestBehavior.translucent,
  'PlatformViewHitTestBehavior.transparent':
      PlatformViewHitTestBehavior.transparent,
  'PlatformViewHitTestBehavior.values': PlatformViewHitTestBehavior.values,
  'TextSelectionPoint': (props) => TextSelectionPoint(
        props['pa'][0],
        props['pa'][1],
      ),
  'RenderEditable': (props) => RenderEditable(
        text: props['text'],
        textDirection: props['textDirection'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        cursorColor: props['cursorColor'],
        backgroundCursorColor: props['backgroundCursorColor'],
        showCursor: props['showCursor'],
        hasFocus: props['hasFocus'],
        startHandleLayerLink: props['startHandleLayerLink'],
        endHandleLayerLink: props['endHandleLayerLink'],
        maxLines: props['maxLines'] ?? 1,
        minLines: props['minLines'],
        expands: props['expands'] ?? false,
        strutStyle: props['strutStyle'],
        selectionColor: props['selectionColor'],
        textScaleFactor: props['textScaleFactor']?.toDouble() ?? 1.0,
        selection: props['selection'],
        offset: props['offset'],
        onCaretChanged: props['onCaretChanged'],
        ignorePointer: props['ignorePointer'] ?? false,
        readOnly: props['readOnly'] ?? false,
        forceLine: props['forceLine'] ?? true,
        textHeightBehavior: props['textHeightBehavior'],
        textWidthBasis: props['textWidthBasis'] ?? TextWidthBasis.parent,
        obscuringCharacter: props['obscuringCharacter'] ?? '•',
        obscureText: props['obscureText'] ?? false,
        locale: props['locale'],
        cursorWidth: props['cursorWidth']?.toDouble() ?? 1.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorRadius: props['cursorRadius'],
        paintCursorAboveText: props['paintCursorAboveText'] ?? false,
        cursorOffset: props['cursorOffset'] ?? Offset.zero,
        devicePixelRatio: props['devicePixelRatio']?.toDouble() ?? 1.0,
        selectionHeightStyle:
            props['selectionHeightStyle'] ?? ui.BoxHeightStyle.tight,
        selectionWidthStyle:
            props['selectionWidthStyle'] ?? ui.BoxWidthStyle.tight,
        enableInteractiveSelection: props['enableInteractiveSelection'],
        floatingCursorAddedMargin: props['floatingCursorAddedMargin'] ??
            const EdgeInsets.fromLTRB(4, 4, 4, 5),
        promptRectRange: props['promptRectRange'],
        promptRectColor: props['promptRectColor'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        textSelectionDelegate: props['textSelectionDelegate'],
        painter: props['painter'],
        foregroundPainter: props['foregroundPainter'],
        children: as<RenderBox>(props['children']),
      ),
  'TextParentData': (props) => TextParentData(),
  'PlaceholderSpanIndexSemanticsTag': (props) =>
      PlaceholderSpanIndexSemanticsTag(
        props['pa'][0],
      ),
  'RenderParagraph': (props) => RenderParagraph(
        props['pa'][0],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textDirection: props['textDirection'],
        softWrap: props['softWrap'] ?? true,
        overflow: props['overflow'] ?? TextOverflow.clip,
        textScaleFactor: props['textScaleFactor']?.toDouble() ?? 1.0,
        maxLines: props['maxLines'],
        locale: props['locale'],
        strutStyle: props['strutStyle'],
        textWidthBasis: props['textWidthBasis'] ?? TextWidthBasis.parent,
        textHeightBehavior: props['textHeightBehavior'],
        children: as<RenderBox>(props['children']),
        selectionColor: props['selectionColor'],
        registrar: props['registrar'],
      ),
  'RenderSliverFillViewport': (props) => RenderSliverFillViewport(
        childManager: props['childManager'],
        viewportFraction: props['viewportFraction']?.toDouble() ?? 1.0,
      ),
  'RenderSliverFillRemainingWithScrollable': (props) =>
      RenderSliverFillRemainingWithScrollable(
        child: props['child'],
      ),
  'RenderSliverFillRemaining': (props) => RenderSliverFillRemaining(
        child: props['child'],
      ),
  'RenderSliverFillRemainingAndOverscroll': (props) =>
      RenderSliverFillRemainingAndOverscroll(
        child: props['child'],
      ),
  'RenderAnimatedSize': (props) => RenderAnimatedSize(
        vsync: props['vsync'],
        duration: props['duration'],
        reverseDuration: props['reverseDuration'],
        curve: props['curve'] ?? Curves.linear,
        alignment: props['alignment'] ?? Alignment.center,
        textDirection: props['textDirection'],
        child: props['child'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'RenderingFlutterBinding': (props) => RenderingFlutterBinding(
        root: props['root'],
      ),
  'RenderingFlutterBinding.ensureInitialized': (props) =>
      RenderingFlutterBinding.ensureInitialized(),
  'MultiChildLayoutParentData': (props) => MultiChildLayoutParentData(),
  'RenderCustomMultiChildLayoutBox': (props) => RenderCustomMultiChildLayoutBox(
        children: as<RenderBox>(props['children']),
        delegate: props['delegate'],
      ),
  'BoxConstraints': (props) => BoxConstraints(
        minWidth: props['minWidth']?.toDouble() ?? 0.0,
        maxWidth: props['maxWidth']?.toDouble() ?? double.infinity,
        minHeight: props['minHeight']?.toDouble() ?? 0.0,
        maxHeight: props['maxHeight']?.toDouble() ?? double.infinity,
      ),
  'BoxConstraints.tight': (props) => BoxConstraints.tight(
        props['pa'][0],
      ),
  'BoxConstraints.tightFor': (props) => BoxConstraints.tightFor(
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
      ),
  'BoxConstraints.tightForFinite': (props) => BoxConstraints.tightForFinite(
        width: props['width']?.toDouble() ?? double.infinity,
        height: props['height']?.toDouble() ?? double.infinity,
      ),
  'BoxConstraints.loose': (props) => BoxConstraints.loose(
        props['pa'][0],
      ),
  'BoxConstraints.expand': (props) => BoxConstraints.expand(
        width: props['width']?.toDouble() ?? double.infinity,
        height: props['height']?.toDouble() ?? double.infinity,
      ),
  'BoxConstraints.lerp': (props) => BoxConstraints.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BoxHitTestResult': (props) => BoxHitTestResult(),
  'BoxHitTestResult.wrap': (props) => BoxHitTestResult.wrap(
        props['pa'][0],
      ),
  'BoxHitTestEntry': (props) => BoxHitTestEntry(
        props['pa'][0],
        props['pa'][1],
      ),
  'BoxParentData': (props) => BoxParentData(),
  'GravitySimulation': (props) => GravitySimulation(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'SpringDescription': (props) => SpringDescription(
        mass: props['mass']?.toDouble() ?? 0,
        stiffness: props['stiffness']?.toDouble() ?? 0,
        damping: props['damping']?.toDouble() ?? 0,
      ),
  'SpringDescription.withDampingRatio': (props) =>
      SpringDescription.withDampingRatio(
        mass: props['mass']?.toDouble() ?? 0,
        stiffness: props['stiffness']?.toDouble() ?? 0,
        ratio: props['ratio']?.toDouble() ?? 1.0,
      ),
  'SpringSimulation': (props) => SpringSimulation(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
        tolerance: props['tolerance'] ?? Tolerance.defaultTolerance,
      ),
  'ScrollSpringSimulation': (props) => ScrollSpringSimulation(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
        tolerance: props['tolerance'] ?? Tolerance.defaultTolerance,
      ),
  'SpringType.criticallyDamped': SpringType.criticallyDamped,
  'SpringType.underDamped': SpringType.underDamped,
  'SpringType.overDamped': SpringType.overDamped,
  'SpringType.values': SpringType.values,
  'FrictionSimulation': (props) => FrictionSimulation(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        tolerance: props['tolerance'] ?? Tolerance.defaultTolerance,
      ),
  'FrictionSimulation.through': (props) => FrictionSimulation.through(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'BoundedFrictionSimulation': (props) => BoundedFrictionSimulation(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
        props['pa'][4]?.toDouble(),
      ),
  'ClampedSimulation': (props) => ClampedSimulation(
        props['pa'][0],
        xMin: props['xMin']?.toDouble() ?? double.negativeInfinity,
        xMax: props['xMax']?.toDouble() ?? double.infinity,
        dxMin: props['dxMin']?.toDouble() ?? double.negativeInfinity,
        dxMax: props['dxMax']?.toDouble() ?? double.infinity,
      ),
  'Tolerance': (props) => Tolerance(
        distance: props['distance']?.toDouble() ?? _epsilonDefault,
        time: props['time']?.toDouble() ?? _epsilonDefault,
        velocity: props['velocity']?.toDouble() ?? _epsilonDefault,
      ),
  'Tolerance.defaultTolerance': Tolerance.defaultTolerance,
  'CupertinoTabView': (props) => CupertinoTabView(
        key: props['key'],
        builder: props['builder'],
        navigatorKey: props['navigatorKey'],
        defaultTitle: props['defaultTitle'],
        routes: props['routes'],
        onGenerateRoute: props['onGenerateRoute'],
        onUnknownRoute: props['onUnknownRoute'],
        navigatorObservers:
            as<NavigatorObserver>(props['navigatorObservers']) ??
                const <NavigatorObserver>[],
        restorationScopeId: props['restorationScopeId'],
      ),
  'CupertinoTextThemeData': (props) => CupertinoTextThemeData(
        primaryColor: props['primaryColor'] ?? CupertinoColors.systemBlue,
        textStyle: props['textStyle'],
        actionTextStyle: props['actionTextStyle'],
        tabLabelTextStyle: props['tabLabelTextStyle'],
        navTitleTextStyle: props['navTitleTextStyle'],
        navLargeTitleTextStyle: props['navLargeTitleTextStyle'],
        navActionTextStyle: props['navActionTextStyle'],
        pickerTextStyle: props['pickerTextStyle'],
        dateTimePickerTextStyle: props['dateTimePickerTextStyle'],
      ),
  'CupertinoTextField': (props) => CupertinoTextField(
        key: props['key'],
        controller: props['controller'],
        focusNode: props['focusNode'],
        decoration: props['decoration'] ?? _kDefaultRoundedBorderDecoration,
        padding: props['padding'] ?? const EdgeInsets.all(6.0),
        placeholder: props['placeholder'],
        placeholderStyle: props['placeholderStyle'] ??
            const TextStyle(
                fontWeight: FontWeight.w400,
                color: CupertinoColors.placeholderText),
        prefix: props['prefix'],
        prefixMode: props['prefixMode'] ?? OverlayVisibilityMode.always,
        suffix: props['suffix'],
        suffixMode: props['suffixMode'] ?? OverlayVisibilityMode.always,
        clearButtonMode:
            props['clearButtonMode'] ?? OverlayVisibilityMode.never,
        keyboardType: props['keyboardType'],
        textInputAction: props['textInputAction'],
        textCapitalization:
            props['textCapitalization'] ?? TextCapitalization.none,
        style: props['style'],
        strutStyle: props['strutStyle'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textAlignVertical: props['textAlignVertical'],
        textDirection: props['textDirection'],
        readOnly: props['readOnly'] ?? false,
        toolbarOptions: props['toolbarOptions'],
        showCursor: props['showCursor'],
        autofocus: props['autofocus'] ?? false,
        obscuringCharacter: props['obscuringCharacter'] ?? '•',
        obscureText: props['obscureText'] ?? false,
        autocorrect: props['autocorrect'] ?? true,
        smartDashesType: props['smartDashesType'],
        smartQuotesType: props['smartQuotesType'],
        enableSuggestions: props['enableSuggestions'] ?? true,
        maxLines: props['maxLines'] ?? 1,
        minLines: props['minLines'],
        expands: props['expands'] ?? false,
        maxLength: props['maxLength'],
        maxLengthEnforcement: props['maxLengthEnforcement'],
        onChanged: props['onChanged'],
        onEditingComplete: props['onEditingComplete'],
        onSubmitted: props['onSubmitted'],
        inputFormatters: as<TextInputFormatter>(props['inputFormatters']),
        enabled: props['enabled'],
        cursorWidth: props['cursorWidth']?.toDouble() ?? 2.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorRadius: props['cursorRadius'] ?? const Radius.circular(2.0),
        cursorColor: props['cursorColor'],
        selectionHeightStyle:
            props['selectionHeightStyle'] ?? ui.BoxHeightStyle.tight,
        selectionWidthStyle:
            props['selectionWidthStyle'] ?? ui.BoxWidthStyle.tight,
        keyboardAppearance: props['keyboardAppearance'],
        scrollPadding: props['scrollPadding'] ?? const EdgeInsets.all(20.0),
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        enableInteractiveSelection: props['enableInteractiveSelection'],
        selectionControls: props['selectionControls'],
        onTap: props['onTap'],
        scrollController: props['scrollController'],
        scrollPhysics: props['scrollPhysics'],
        autofillHints: props['autofillHints'] ?? const <String>[],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        restorationId: props['restorationId'],
        scribbleEnabled: props['scribbleEnabled'] ?? true,
        enableIMEPersonalizedLearning:
            props['enableIMEPersonalizedLearning'] ?? true,
      ),
  'CupertinoTextField.borderless': (props) => CupertinoTextField.borderless(
        key: props['key'],
        controller: props['controller'],
        focusNode: props['focusNode'],
        decoration: props['decoration'] ?? _kDefaultRoundedBorderDecoration,
        padding: props['padding'] ?? const EdgeInsets.all(6.0),
        placeholder: props['placeholder'],
        placeholderStyle:
            props['placeholderStyle'] ?? _kDefaultPlaceholderStyle,
        prefix: props['prefix'],
        prefixMode: props['prefixMode'] ?? OverlayVisibilityMode.always,
        suffix: props['suffix'],
        suffixMode: props['suffixMode'] ?? OverlayVisibilityMode.always,
        clearButtonMode:
            props['clearButtonMode'] ?? OverlayVisibilityMode.never,
        keyboardType: props['keyboardType'],
        textInputAction: props['textInputAction'],
        textCapitalization:
            props['textCapitalization'] ?? TextCapitalization.none,
        style: props['style'],
        strutStyle: props['strutStyle'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textAlignVertical: props['textAlignVertical'],
        textDirection: props['textDirection'],
        readOnly: props['readOnly'] ?? false,
        toolbarOptions: props['toolbarOptions'],
        showCursor: props['showCursor'],
        autofocus: props['autofocus'] ?? false,
        obscuringCharacter: props['obscuringCharacter'] ?? '•',
        obscureText: props['obscureText'] ?? false,
        autocorrect: props['autocorrect'] ?? true,
        smartDashesType: props['smartDashesType'],
        smartQuotesType: props['smartQuotesType'],
        enableSuggestions: props['enableSuggestions'] ?? true,
        maxLines: props['maxLines'] ?? 1,
        minLines: props['minLines'],
        expands: props['expands'] ?? false,
        maxLength: props['maxLength'],
        maxLengthEnforcement: props['maxLengthEnforcement'],
        onChanged: props['onChanged'],
        onEditingComplete: props['onEditingComplete'],
        onSubmitted: props['onSubmitted'],
        inputFormatters: as<TextInputFormatter>(props['inputFormatters']),
        enabled: props['enabled'],
        cursorWidth: props['cursorWidth']?.toDouble() ?? 2.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorRadius: props['cursorRadius'] ?? const Radius.circular(2.0),
        cursorColor: props['cursorColor'],
        selectionHeightStyle:
            props['selectionHeightStyle'] ?? ui.BoxHeightStyle.tight,
        selectionWidthStyle:
            props['selectionWidthStyle'] ?? ui.BoxWidthStyle.tight,
        keyboardAppearance: props['keyboardAppearance'],
        scrollPadding: props['scrollPadding'] ?? const EdgeInsets.all(20.0),
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        enableInteractiveSelection: props['enableInteractiveSelection'],
        selectionControls: props['selectionControls'],
        onTap: props['onTap'],
        scrollController: props['scrollController'],
        scrollPhysics: props['scrollPhysics'],
        autofillHints: props['autofillHints'] ?? const <String>[],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        restorationId: props['restorationId'],
        scribbleEnabled: props['scribbleEnabled'] ?? true,
        enableIMEPersonalizedLearning:
            props['enableIMEPersonalizedLearning'] ?? true,
      ),
  'OverlayVisibilityMode.never': OverlayVisibilityMode.never,
  'OverlayVisibilityMode.editing': OverlayVisibilityMode.editing,
  'OverlayVisibilityMode.notEditing': OverlayVisibilityMode.notEditing,
  'OverlayVisibilityMode.always': OverlayVisibilityMode.always,
  'OverlayVisibilityMode.values': OverlayVisibilityMode.values,
  'CupertinoFormRow': (props) => CupertinoFormRow(
        key: props['key'],
        child: props['child'],
        prefix: props['prefix'],
        padding: props['padding'],
        helper: props['helper'],
        error: props['error'],
      ),
  'CupertinoTextSelectionToolbar': (props) => CupertinoTextSelectionToolbar(
        key: props['key'],
        anchorAbove: props['anchorAbove'],
        anchorBelow: props['anchorBelow'],
        children: as<Widget>(props['children']) ?? const [],
        toolbarBuilder: props['toolbarBuilder'] ?? _defaultToolbarBuilder,
      ),
  'CupertinoTextSelectionToolbarButton': (props) =>
      CupertinoTextSelectionToolbarButton(
        key: props['key'],
        onPressed: props['onPressed'],
        child: props['child'],
      ),
  'CupertinoTextSelectionToolbarButton.text': (props) =>
      CupertinoTextSelectionToolbarButton.text(
        key: props['key'],
        onPressed: props['onPressed'],
        text: props['text'],
      ),
  'CupertinoSegmentedControl': (props) => CupertinoSegmentedControl(
        key: props['key'],
        children: props['children'],
        onValueChanged: props['onValueChanged'],
        groupValue: props['groupValue'],
        unselectedColor: props['unselectedColor'],
        selectedColor: props['selectedColor'],
        borderColor: props['borderColor'],
        pressedColor: props['pressedColor'],
        padding: props['padding'],
      ),
  'CupertinoIconThemeData': (props) => CupertinoIconThemeData(
        color: props['color'],
        opacity: props['opacity']?.toDouble(),
        size: props['size']?.toDouble(),
        shadows: as<Shadow>(props['shadows']),
      ),
  'CupertinoColors.activeBlue': CupertinoColors.activeBlue,
  'CupertinoColors.activeGreen': CupertinoColors.activeGreen,
  'CupertinoColors.activeOrange': CupertinoColors.activeOrange,
  'CupertinoColors.white': CupertinoColors.white,
  'CupertinoColors.black': CupertinoColors.black,
  'CupertinoColors.lightBackgroundGray': CupertinoColors.lightBackgroundGray,
  'CupertinoColors.extraLightBackgroundGray':
      CupertinoColors.extraLightBackgroundGray,
  'CupertinoColors.darkBackgroundGray': CupertinoColors.darkBackgroundGray,
  'CupertinoColors.inactiveGray': CupertinoColors.inactiveGray,
  'CupertinoColors.destructiveRed': CupertinoColors.destructiveRed,
  'CupertinoColors.systemBlue': CupertinoColors.systemBlue,
  'CupertinoColors.systemGreen': CupertinoColors.systemGreen,
  'CupertinoColors.systemIndigo': CupertinoColors.systemIndigo,
  'CupertinoColors.systemOrange': CupertinoColors.systemOrange,
  'CupertinoColors.systemPink': CupertinoColors.systemPink,
  'CupertinoColors.systemPurple': CupertinoColors.systemPurple,
  'CupertinoColors.systemRed': CupertinoColors.systemRed,
  'CupertinoColors.systemTeal': CupertinoColors.systemTeal,
  'CupertinoColors.systemYellow': CupertinoColors.systemYellow,
  'CupertinoColors.systemGrey': CupertinoColors.systemGrey,
  'CupertinoColors.systemGrey2': CupertinoColors.systemGrey2,
  'CupertinoColors.systemGrey3': CupertinoColors.systemGrey3,
  'CupertinoColors.systemGrey4': CupertinoColors.systemGrey4,
  'CupertinoColors.systemGrey5': CupertinoColors.systemGrey5,
  'CupertinoColors.systemGrey6': CupertinoColors.systemGrey6,
  'CupertinoColors.label': CupertinoColors.label,
  'CupertinoColors.secondaryLabel': CupertinoColors.secondaryLabel,
  'CupertinoColors.tertiaryLabel': CupertinoColors.tertiaryLabel,
  'CupertinoColors.quaternaryLabel': CupertinoColors.quaternaryLabel,
  'CupertinoColors.systemFill': CupertinoColors.systemFill,
  'CupertinoColors.secondarySystemFill': CupertinoColors.secondarySystemFill,
  'CupertinoColors.tertiarySystemFill': CupertinoColors.tertiarySystemFill,
  'CupertinoColors.quaternarySystemFill': CupertinoColors.quaternarySystemFill,
  'CupertinoColors.placeholderText': CupertinoColors.placeholderText,
  'CupertinoColors.systemBackground': CupertinoColors.systemBackground,
  'CupertinoColors.secondarySystemBackground':
      CupertinoColors.secondarySystemBackground,
  'CupertinoColors.tertiarySystemBackground':
      CupertinoColors.tertiarySystemBackground,
  'CupertinoColors.systemGroupedBackground':
      CupertinoColors.systemGroupedBackground,
  'CupertinoColors.secondarySystemGroupedBackground':
      CupertinoColors.secondarySystemGroupedBackground,
  'CupertinoColors.tertiarySystemGroupedBackground':
      CupertinoColors.tertiarySystemGroupedBackground,
  'CupertinoColors.separator': CupertinoColors.separator,
  'CupertinoColors.opaqueSeparator': CupertinoColors.opaqueSeparator,
  'CupertinoColors.link': CupertinoColors.link,
  'CupertinoDynamicColor': (props) => CupertinoDynamicColor(
        debugLabel: props['debugLabel'],
        color: props['color'],
        darkColor: props['darkColor'],
        highContrastColor: props['highContrastColor'],
        darkHighContrastColor: props['darkHighContrastColor'],
        elevatedColor: props['elevatedColor'],
        darkElevatedColor: props['darkElevatedColor'],
        highContrastElevatedColor: props['highContrastElevatedColor'],
        darkHighContrastElevatedColor: props['darkHighContrastElevatedColor'],
      ),
  'CupertinoDynamicColor.withBrightnessAndContrast': (props) =>
      CupertinoDynamicColor.withBrightnessAndContrast(
        debugLabel: props['debugLabel'],
        color: props['color'],
        darkColor: props['darkColor'],
        highContrastColor: props['highContrastColor'],
        darkHighContrastColor: props['darkHighContrastColor'],
      ),
  'CupertinoDynamicColor.withBrightness': (props) =>
      CupertinoDynamicColor.withBrightness(
        debugLabel: props['debugLabel'],
        color: props['color'],
        darkColor: props['darkColor'],
      ),
  'CupertinoDynamicColor.resolve': (props) => CupertinoDynamicColor.resolve(
        props['pa'][0],
        props['pa'][1],
      ),
  'CupertinoDynamicColor.maybeResolve': (props) =>
      CupertinoDynamicColor.maybeResolve(
        props['pa'][0],
        props['pa'][1],
      ),
  'CupertinoSlidingSegmentedControl': (props) =>
      CupertinoSlidingSegmentedControl(
        key: props['key'],
        children: props['children'],
        onValueChanged: props['onValueChanged'],
        groupValue: props['groupValue'],
        thumbColor: props['thumbColor'] ?? _kThumbColor,
        padding: props['padding'] ?? _kHorizontalItemPadding,
        backgroundColor:
            props['backgroundColor'] ?? CupertinoColors.tertiarySystemFill,
      ),
  'CupertinoSearchTextField': (props) => CupertinoSearchTextField(
        key: props['key'],
        controller: props['controller'],
        onChanged: props['onChanged'],
        onSubmitted: props['onSubmitted'],
        style: props['style'],
        placeholder: props['placeholder'],
        placeholderStyle: props['placeholderStyle'],
        decoration: props['decoration'],
        backgroundColor: props['backgroundColor'],
        borderRadius: props['borderRadius'],
        padding: props['padding'] ??
            const EdgeInsetsDirectional.fromSTEB(3.8, 8, 5, 8),
        itemColor: props['itemColor'] ?? CupertinoColors.secondaryLabel,
        itemSize: props['itemSize']?.toDouble() ?? 20.0,
        prefixInsets: props['prefixInsets'] ??
            const EdgeInsetsDirectional.fromSTEB(6, 0, 0, 4),
        prefixIcon: props['prefixIcon'] ?? const Icon(CupertinoIcons.search),
        suffixInsets: props['suffixInsets'] ??
            const EdgeInsetsDirectional.fromSTEB(0, 0, 5, 2),
        suffixIcon:
            props['suffixIcon'] ?? const Icon(CupertinoIcons.xmark_circle_fill),
        suffixMode: props['suffixMode'] ?? OverlayVisibilityMode.editing,
        onSuffixTap: props['onSuffixTap'],
        restorationId: props['restorationId'],
        focusNode: props['focusNode'],
        smartQuotesType: props['smartQuotesType'],
        smartDashesType: props['smartDashesType'],
        autofocus: props['autofocus'] ?? false,
        onTap: props['onTap'],
        autocorrect: props['autocorrect'] ?? true,
        enabled: props['enabled'],
      ),
  'CupertinoButton': (props) => CupertinoButton(
        key: props['key'],
        child: props['child'],
        padding: props['padding'],
        color: props['color'],
        disabledColor:
            props['disabledColor'] ?? CupertinoColors.quaternarySystemFill,
        minSize:
            props['minSize']?.toDouble() ?? kMinInteractiveDimensionCupertino,
        pressedOpacity: props['pressedOpacity']?.toDouble() ?? 0.4,
        borderRadius: props['borderRadius'] ??
            const BorderRadius.all(Radius.circular(8.0)),
        alignment: props['alignment'] ?? Alignment.center,
        onPressed: props['onPressed'],
      ),
  'CupertinoButton.filled': (props) => CupertinoButton.filled(
        key: props['key'],
        child: props['child'],
        padding: props['padding'],
        disabledColor:
            props['disabledColor'] ?? CupertinoColors.quaternarySystemFill,
        minSize:
            props['minSize']?.toDouble() ?? kMinInteractiveDimensionCupertino,
        pressedOpacity: props['pressedOpacity']?.toDouble() ?? 0.4,
        borderRadius: props['borderRadius'] ??
            const BorderRadius.all(Radius.circular(8.0)),
        alignment: props['alignment'] ?? Alignment.center,
        onPressed: props['onPressed'],
      ),
  'CupertinoTabController': (props) => CupertinoTabController(
        initialIndex: props['initialIndex'] ?? 0,
      ),
  'CupertinoTabScaffold': (props) => CupertinoTabScaffold(
        key: props['key'],
        tabBar: props['tabBar'],
        tabBuilder: props['tabBuilder'],
        controller: props['controller'],
        backgroundColor: props['backgroundColor'],
        resizeToAvoidBottomInset: props['resizeToAvoidBottomInset'] ?? true,
        restorationId: props['restorationId'],
      ),
  'RestorableCupertinoTabController': (props) =>
      RestorableCupertinoTabController(
        initialIndex: props['initialIndex'] ?? 0,
      ),
  'CupertinoAlertDialog': (props) => CupertinoAlertDialog(
        key: props['key'],
        title: props['title'],
        content: props['content'],
        actions: as<Widget>(props['actions']) ?? const <Widget>[],
        scrollController: props['scrollController'],
        actionScrollController: props['actionScrollController'],
        insetAnimationDuration: props['insetAnimationDuration'] ??
            const Duration(milliseconds: 100),
        insetAnimationCurve: props['insetAnimationCurve'] ?? Curves.decelerate,
      ),
  'CupertinoPopupSurface': (props) => CupertinoPopupSurface(
        key: props['key'],
        isSurfacePainted: props['isSurfacePainted'] ?? true,
        child: props['child'],
      ),
  'CupertinoActionSheet': (props) => CupertinoActionSheet(
        key: props['key'],
        title: props['title'],
        message: props['message'],
        actions: as<Widget>(props['actions']),
        messageScrollController: props['messageScrollController'],
        actionScrollController: props['actionScrollController'],
        cancelButton: props['cancelButton'],
      ),
  'CupertinoActionSheetAction': (props) => CupertinoActionSheetAction(
        key: props['key'],
        onPressed: props['onPressed'],
        isDefaultAction: props['isDefaultAction'] ?? false,
        isDestructiveAction: props['isDestructiveAction'] ?? false,
        child: props['child'],
      ),
  'CupertinoDialogAction': (props) => CupertinoDialogAction(
        key: props['key'],
        onPressed: props['onPressed'],
        isDefaultAction: props['isDefaultAction'] ?? false,
        isDestructiveAction: props['isDestructiveAction'] ?? false,
        textStyle: props['textStyle'],
        child: props['child'],
      ),
  'CupertinoTabBar': (props) => CupertinoTabBar(
        key: props['key'],
        items: as<BottomNavigationBarItem>(props['items']) ?? const [],
        onTap: props['onTap'],
        currentIndex: props['currentIndex'] ?? 0,
        backgroundColor: props['backgroundColor'],
        activeColor: props['activeColor'],
        inactiveColor: props['inactiveColor'] ?? _kDefaultTabBarInactiveColor,
        iconSize: props['iconSize']?.toDouble() ?? 30.0,
        height: props['height']?.toDouble() ?? _kTabBarHeight,
        border: props['border'] ??
            const Border(
                top: BorderSide(color: _kDefaultTabBarBorderColor, width: 0.0)),
      ),
  'CupertinoDatePicker': (props) => CupertinoDatePicker(
        key: props['key'],
        mode: props['mode'] ?? CupertinoDatePickerMode.dateAndTime,
        onDateTimeChanged: props['onDateTimeChanged'],
        initialDateTime: props['initialDateTime'],
        minimumDate: props['minimumDate'],
        maximumDate: props['maximumDate'],
        minimumYear: props['minimumYear'] ?? 1,
        maximumYear: props['maximumYear'],
        minuteInterval: props['minuteInterval'] ?? 1,
        use24hFormat: props['use24hFormat'] ?? false,
        dateOrder: props['dateOrder'],
        backgroundColor: props['backgroundColor'],
      ),
  'CupertinoTimerPicker': (props) => CupertinoTimerPicker(
        key: props['key'],
        mode: props['mode'] ?? CupertinoTimerPickerMode.hms,
        initialTimerDuration: props['initialTimerDuration'] ?? Duration.zero,
        minuteInterval: props['minuteInterval'] ?? 1,
        secondInterval: props['secondInterval'] ?? 1,
        alignment: props['alignment'] ?? Alignment.center,
        backgroundColor: props['backgroundColor'],
        onTimerDurationChanged: props['onTimerDurationChanged'],
      ),
  'CupertinoDatePickerMode.time': CupertinoDatePickerMode.time,
  'CupertinoDatePickerMode.date': CupertinoDatePickerMode.date,
  'CupertinoDatePickerMode.dateAndTime': CupertinoDatePickerMode.dateAndTime,
  'CupertinoDatePickerMode.values': CupertinoDatePickerMode.values,
  'CupertinoTimerPickerMode.hm': CupertinoTimerPickerMode.hm,
  'CupertinoTimerPickerMode.ms': CupertinoTimerPickerMode.ms,
  'CupertinoTimerPickerMode.hms': CupertinoTimerPickerMode.hms,
  'CupertinoTimerPickerMode.values': CupertinoTimerPickerMode.values,
  'CupertinoSliverRefreshControl': (props) => CupertinoSliverRefreshControl(
        key: props['key'],
        refreshTriggerPullDistance:
            props['refreshTriggerPullDistance']?.toDouble() ??
                _defaultRefreshTriggerPullDistance,
        refreshIndicatorExtent: props['refreshIndicatorExtent']?.toDouble() ??
            _defaultRefreshIndicatorExtent,
        builder: props['builder'] ?? buildRefreshIndicator,
        onRefresh: props['onRefresh'],
      ),
  'CupertinoSliverRefreshControl.buildRefreshIndicator': (props) =>
      CupertinoSliverRefreshControl.buildRefreshIndicator(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
        props['pa'][4]?.toDouble(),
      ),
  'RefreshIndicatorMode.inactive': RefreshIndicatorMode.inactive,
  'RefreshIndicatorMode.drag': RefreshIndicatorMode.drag,
  'RefreshIndicatorMode.armed': RefreshIndicatorMode.armed,
  'RefreshIndicatorMode.refresh': RefreshIndicatorMode.refresh,
  'RefreshIndicatorMode.done': RefreshIndicatorMode.done,
  'RefreshIndicatorMode.values': RefreshIndicatorMode.values,
  'CupertinoPicker': (props) => CupertinoPicker(
        key: props['key'],
        diameterRatio:
            props['diameterRatio']?.toDouble() ?? _kDefaultDiameterRatio,
        backgroundColor: props['backgroundColor'],
        offAxisFraction: props['offAxisFraction']?.toDouble() ?? 0.0,
        useMagnifier: props['useMagnifier'] ?? false,
        magnification: props['magnification']?.toDouble() ?? 1.0,
        scrollController: props['scrollController'],
        squeeze: props['squeeze']?.toDouble() ?? _kSqueeze,
        itemExtent: props['itemExtent']?.toDouble() ?? 0,
        onSelectedItemChanged: props['onSelectedItemChanged'],
        children: as<Widget>(props['children']) ?? const [],
        selectionOverlay: props['selectionOverlay'] ??
            const CupertinoPickerDefaultSelectionOverlay(),
        looping: props['looping'] ?? false,
      ),
  'CupertinoPicker.builder': (props) => CupertinoPicker.builder(
        key: props['key'],
        diameterRatio:
            props['diameterRatio']?.toDouble() ?? _kDefaultDiameterRatio,
        backgroundColor: props['backgroundColor'],
        offAxisFraction: props['offAxisFraction']?.toDouble() ?? 0.0,
        useMagnifier: props['useMagnifier'] ?? false,
        magnification: props['magnification']?.toDouble() ?? 1.0,
        scrollController: props['scrollController'],
        squeeze: props['squeeze']?.toDouble() ?? _kSqueeze,
        itemExtent: props['itemExtent']?.toDouble() ?? 0,
        onSelectedItemChanged: props['onSelectedItemChanged'],
        itemBuilder: props['itemBuilder'],
        childCount: props['childCount'],
        selectionOverlay: props['selectionOverlay'] ??
            const CupertinoPickerDefaultSelectionOverlay(),
      ),
  'CupertinoPickerDefaultSelectionOverlay': (props) =>
      CupertinoPickerDefaultSelectionOverlay(
        key: props['key'],
        background: props['background'] ?? CupertinoColors.tertiarySystemFill,
        capStartEdge: props['capStartEdge'] ?? true,
        capEndEdge: props['capEndEdge'] ?? true,
      ),
  'CupertinoContextMenu': (props) => CupertinoContextMenu(
        key: props['key'],
        actions: as<Widget>(props['actions']) ?? const [],
        child: props['child'],
        previewBuilder: props['previewBuilder'],
      ),
  'CupertinoPageRoute': (props) => CupertinoPageRoute(
        builder: props['builder'],
        title: props['title'],
        settings: props['settings'],
        maintainState: props['maintainState'] ?? true,
        fullscreenDialog: props['fullscreenDialog'] ?? false,
      ),
  'CupertinoPage': (props) => CupertinoPage(
        child: props['child'],
        maintainState: props['maintainState'] ?? true,
        title: props['title'],
        fullscreenDialog: props['fullscreenDialog'] ?? false,
        key: props['key'],
        name: props['name'],
        arguments: props['arguments'],
        restorationId: props['restorationId'],
      ),
  'CupertinoPageTransition': (props) => CupertinoPageTransition(
        key: props['key'],
        primaryRouteAnimation: props['primaryRouteAnimation'],
        secondaryRouteAnimation: props['secondaryRouteAnimation'],
        child: props['child'],
        linearTransition: props['linearTransition'],
      ),
  'CupertinoFullscreenDialogTransition': (props) =>
      CupertinoFullscreenDialogTransition(
        key: props['key'],
        primaryRouteAnimation: props['primaryRouteAnimation'],
        secondaryRouteAnimation: props['secondaryRouteAnimation'],
        child: props['child'],
        linearTransition: props['linearTransition'],
      ),
  'CupertinoModalPopupRoute': (props) => CupertinoModalPopupRoute(
        builder: props['builder'],
        barrierLabel: props['barrierLabel'] ?? 'Dismiss',
        barrierColor: props['barrierColor'] ?? kCupertinoModalBarrierColor,
        barrierDismissible: props['barrierDismissible'] ?? true,
        semanticsDismissible: props['semanticsDismissible'],
        filter: props['filter'],
        settings: props['settings'],
        anchorPoint: props['anchorPoint'],
      ),
  'CupertinoDialogRoute': (props) => CupertinoDialogRoute(
        builder: props['builder'],
        context: props['context'],
        barrierDismissible: props['barrierDismissible'] ?? true,
        barrierColor: props['barrierColor'],
        barrierLabel: props['barrierLabel'],
        transitionDuration:
            props['transitionDuration'] ?? const Duration(milliseconds: 250),
        transitionBuilder:
            props['transitionBuilder'] ?? _buildCupertinoDialogTransitions,
        settings: props['settings'],
        anchorPoint: props['anchorPoint'],
      ),
  'CupertinoThumbPainter': (props) => CupertinoThumbPainter(
        color: props['color'] ?? CupertinoColors.white,
        shadows: as<BoxShadow>(props['shadows']) ?? _kSliderBoxShadows,
      ),
  'CupertinoThumbPainter.switchThumb': (props) =>
      CupertinoThumbPainter.switchThumb(
        color: props['color'] ?? CupertinoColors.white,
        shadows: as<BoxShadow>(props['shadows']) ?? _kSwitchBoxShadows,
      ),
  'CupertinoThumbPainter.radius': CupertinoThumbPainter.radius,
  'CupertinoThumbPainter.extension': CupertinoThumbPainter.extension,
  'CupertinoActivityIndicator': (props) => CupertinoActivityIndicator(
        key: props['key'],
        color: props['color'],
        animating: props['animating'] ?? true,
        radius: props['radius']?.toDouble() ?? _kDefaultIndicatorRadius,
      ),
  'CupertinoActivityIndicator.partiallyRevealed': (props) =>
      CupertinoActivityIndicator.partiallyRevealed(
        key: props['key'],
        color: props['color'],
        radius: props['radius']?.toDouble() ?? _kDefaultIndicatorRadius,
        progress: props['progress']?.toDouble() ?? 1.0,
      ),
  'CupertinoSlider': (props) => CupertinoSlider(
        key: props['key'],
        value: props['value']?.toDouble() ?? 0,
        onChanged: props['onChanged'],
        onChangeStart: props['onChangeStart'],
        onChangeEnd: props['onChangeEnd'],
        min: props['min']?.toDouble() ?? 0.0,
        max: props['max']?.toDouble() ?? 1.0,
        divisions: props['divisions'],
        activeColor: props['activeColor'],
        thumbColor: props['thumbColor'] ?? CupertinoColors.white,
      ),
  'CupertinoPageScaffold': (props) => CupertinoPageScaffold(
        key: props['key'],
        navigationBar: props['navigationBar'],
        backgroundColor: props['backgroundColor'],
        resizeToAvoidBottomInset: props['resizeToAvoidBottomInset'] ?? true,
        child: props['child'],
      ),
  'CupertinoTextSelectionControls': (props) => CupertinoTextSelectionControls(),
  'CupertinoUserInterfaceLevel': (props) => CupertinoUserInterfaceLevel(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'CupertinoUserInterfaceLevel.of': (props) => CupertinoUserInterfaceLevel.of(
        props['pa'][0],
      ),
  'CupertinoUserInterfaceLevel.maybeOf': (props) =>
      CupertinoUserInterfaceLevel.maybeOf(
        props['pa'][0],
      ),
  'CupertinoUserInterfaceLevelData.base': CupertinoUserInterfaceLevelData.base,
  'CupertinoUserInterfaceLevelData.elevated':
      CupertinoUserInterfaceLevelData.elevated,
  'CupertinoUserInterfaceLevelData.values':
      CupertinoUserInterfaceLevelData.values,
  'CupertinoFormSection': (props) => CupertinoFormSection(
        key: props['key'],
        children: as<Widget>(props['children']) ?? const [],
        header: props['header'],
        footer: props['footer'],
        margin: props['margin'] ?? EdgeInsets.zero,
        backgroundColor:
            props['backgroundColor'] ?? CupertinoColors.systemGroupedBackground,
        decoration: props['decoration'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
      ),
  'CupertinoFormSection.insetGrouped': (props) =>
      CupertinoFormSection.insetGrouped(
        key: props['key'],
        children: as<Widget>(props['children']) ?? const [],
        header: props['header'],
        footer: props['footer'],
        margin: props['margin'] ?? _kDefaultInsetGroupedRowsMargin,
        backgroundColor:
            props['backgroundColor'] ?? CupertinoColors.systemGroupedBackground,
        decoration: props['decoration'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
      ),
  'CupertinoTextFormFieldRow': (props) => CupertinoTextFormFieldRow(
        key: props['key'],
        prefix: props['prefix'],
        padding: props['padding'],
        controller: props['controller'],
        initialValue: props['initialValue'],
        focusNode: props['focusNode'],
        decoration: props['decoration'],
        keyboardType: props['keyboardType'],
        textCapitalization:
            props['textCapitalization'] ?? TextCapitalization.none,
        textInputAction: props['textInputAction'],
        style: props['style'],
        strutStyle: props['strutStyle'],
        textDirection: props['textDirection'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textAlignVertical: props['textAlignVertical'],
        autofocus: props['autofocus'] ?? false,
        readOnly: props['readOnly'] ?? false,
        toolbarOptions: props['toolbarOptions'],
        showCursor: props['showCursor'],
        obscuringCharacter: props['obscuringCharacter'] ?? '•',
        obscureText: props['obscureText'] ?? false,
        autocorrect: props['autocorrect'] ?? true,
        smartDashesType: props['smartDashesType'],
        smartQuotesType: props['smartQuotesType'],
        enableSuggestions: props['enableSuggestions'] ?? true,
        maxLines: props['maxLines'] ?? 1,
        minLines: props['minLines'],
        expands: props['expands'] ?? false,
        maxLength: props['maxLength'],
        onChanged: props['onChanged'],
        onTap: props['onTap'],
        onEditingComplete: props['onEditingComplete'],
        onFieldSubmitted: props['onFieldSubmitted'],
        onSaved: props['onSaved'],
        validator: props['validator'],
        inputFormatters: as<TextInputFormatter>(props['inputFormatters']),
        enabled: props['enabled'],
        cursorWidth: props['cursorWidth']?.toDouble() ?? 2.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorColor: props['cursorColor'],
        keyboardAppearance: props['keyboardAppearance'],
        scrollPadding: props['scrollPadding'] ?? const EdgeInsets.all(20.0),
        enableInteractiveSelection: props['enableInteractiveSelection'] ?? true,
        selectionControls: props['selectionControls'],
        scrollPhysics: props['scrollPhysics'],
        autofillHints: props['autofillHints'],
        autovalidateMode:
            props['autovalidateMode'] ?? AutovalidateMode.disabled,
        placeholder: props['placeholder'],
        placeholderStyle: props['placeholderStyle'] ??
            const TextStyle(
                fontWeight: FontWeight.w400,
                color: CupertinoColors.placeholderText),
      ),
  'CupertinoContextMenuAction': (props) => CupertinoContextMenuAction(
        key: props['key'],
        child: props['child'],
        isDefaultAction: props['isDefaultAction'] ?? false,
        isDestructiveAction: props['isDestructiveAction'] ?? false,
        onPressed: props['onPressed'],
        trailingIcon: props['trailingIcon'],
      ),
  'CupertinoSwitch': (props) => CupertinoSwitch(
        key: props['key'],
        value: props['value'],
        onChanged: props['onChanged'],
        activeColor: props['activeColor'],
        trackColor: props['trackColor'],
        thumbColor: props['thumbColor'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
      ),
  'CupertinoScrollbar': (props) => CupertinoScrollbar(
        key: props['key'],
        child: props['child'],
        controller: props['controller'],
        thumbVisibility: props['thumbVisibility'],
        thickness: props['thickness']?.toDouble() ?? defaultThickness,
        thicknessWhileDragging: props['thicknessWhileDragging']?.toDouble() ??
            defaultThicknessWhileDragging,
        radius: props['radius'] ?? defaultRadius,
        radiusWhileDragging:
            props['radiusWhileDragging'] ?? defaultRadiusWhileDragging,
        notificationPredicate: props['notificationPredicate'],
        scrollbarOrientation: props['scrollbarOrientation'],
        isAlwaysShown: props['isAlwaysShown'],
      ),
  'CupertinoScrollbar.defaultThickness': CupertinoScrollbar.defaultThickness,
  'CupertinoScrollbar.defaultThicknessWhileDragging':
      CupertinoScrollbar.defaultThicknessWhileDragging,
  'CupertinoScrollbar.defaultRadius': CupertinoScrollbar.defaultRadius,
  'CupertinoScrollbar.defaultRadiusWhileDragging':
      CupertinoScrollbar.defaultRadiusWhileDragging,
  'CupertinoApp': (props) => CupertinoApp(
        key: props['key'],
        navigatorKey: props['navigatorKey'],
        home: props['home'],
        theme: props['theme'],
        routes: props['routes'] ?? const <String, WidgetBuilder>{},
        initialRoute: props['initialRoute'],
        onGenerateRoute: props['onGenerateRoute'],
        onGenerateInitialRoutes: props['onGenerateInitialRoutes'],
        onUnknownRoute: props['onUnknownRoute'],
        navigatorObservers:
            as<NavigatorObserver>(props['navigatorObservers']) ??
                const <NavigatorObserver>[],
        builder: props['builder'],
        title: props['title'] ?? '',
        onGenerateTitle: props['onGenerateTitle'],
        color: props['color'],
        locale: props['locale'],
        localizationsDelegates: props['localizationsDelegates'],
        localeListResolutionCallback: props['localeListResolutionCallback'],
        localeResolutionCallback: props['localeResolutionCallback'],
        supportedLocales:
            props['supportedLocales'] ?? const <Locale>[Locale('en', 'US')],
        showPerformanceOverlay: props['showPerformanceOverlay'] ?? false,
        checkerboardRasterCacheImages:
            props['checkerboardRasterCacheImages'] ?? false,
        checkerboardOffscreenLayers:
            props['checkerboardOffscreenLayers'] ?? false,
        showSemanticsDebugger: props['showSemanticsDebugger'] ?? false,
        debugShowCheckedModeBanner: props['debugShowCheckedModeBanner'] ?? true,
        shortcuts: props['shortcuts'],
        actions: props['actions'],
        restorationScopeId: props['restorationScopeId'],
        scrollBehavior: props['scrollBehavior'],
        useInheritedMediaQuery: props['useInheritedMediaQuery'] ?? false,
      ),
  'CupertinoApp.router': (props) => CupertinoApp.router(
        key: props['key'],
        routeInformationProvider: props['routeInformationProvider'],
        routeInformationParser: props['routeInformationParser'],
        routerDelegate: props['routerDelegate'],
        backButtonDispatcher: props['backButtonDispatcher'],
        routerConfig: props['routerConfig'],
        theme: props['theme'],
        builder: props['builder'],
        title: props['title'] ?? '',
        onGenerateTitle: props['onGenerateTitle'],
        color: props['color'],
        locale: props['locale'],
        localizationsDelegates: props['localizationsDelegates'],
        localeListResolutionCallback: props['localeListResolutionCallback'],
        localeResolutionCallback: props['localeResolutionCallback'],
        supportedLocales:
            props['supportedLocales'] ?? const <Locale>[Locale('en', 'US')],
        showPerformanceOverlay: props['showPerformanceOverlay'] ?? false,
        checkerboardRasterCacheImages:
            props['checkerboardRasterCacheImages'] ?? false,
        checkerboardOffscreenLayers:
            props['checkerboardOffscreenLayers'] ?? false,
        showSemanticsDebugger: props['showSemanticsDebugger'] ?? false,
        debugShowCheckedModeBanner: props['debugShowCheckedModeBanner'] ?? true,
        shortcuts: props['shortcuts'],
        actions: props['actions'],
        restorationScopeId: props['restorationScopeId'],
        scrollBehavior: props['scrollBehavior'],
        useInheritedMediaQuery: props['useInheritedMediaQuery'] ?? false,
      ),
  'CupertinoApp.createCupertinoHeroController': (props) =>
      CupertinoApp.createCupertinoHeroController(),
  'CupertinoScrollBehavior': (props) => const CupertinoScrollBehavior(),
  'CupertinoIcons.iconFont': CupertinoIcons.iconFont,
  'CupertinoIcons.iconFontPackage': CupertinoIcons.iconFontPackage,
  'CupertinoIcons.left_chevron': CupertinoIcons.left_chevron,
  'CupertinoIcons.right_chevron': CupertinoIcons.right_chevron,
  'CupertinoIcons.share': CupertinoIcons.share,
  'CupertinoIcons.share_solid': CupertinoIcons.share_solid,
  'CupertinoIcons.book': CupertinoIcons.book,
  'CupertinoIcons.book_solid': CupertinoIcons.book_solid,
  'CupertinoIcons.bookmark': CupertinoIcons.bookmark,
  'CupertinoIcons.bookmark_solid': CupertinoIcons.bookmark_solid,
  'CupertinoIcons.info': CupertinoIcons.info,
  'CupertinoIcons.reply': CupertinoIcons.reply,
  'CupertinoIcons.conversation_bubble': CupertinoIcons.conversation_bubble,
  'CupertinoIcons.profile_circled': CupertinoIcons.profile_circled,
  'CupertinoIcons.plus_circled': CupertinoIcons.plus_circled,
  'CupertinoIcons.minus_circled': CupertinoIcons.minus_circled,
  'CupertinoIcons.flag': CupertinoIcons.flag,
  'CupertinoIcons.search': CupertinoIcons.search,
  'CupertinoIcons.check_mark': CupertinoIcons.check_mark,
  'CupertinoIcons.check_mark_circled': CupertinoIcons.check_mark_circled,
  'CupertinoIcons.check_mark_circled_solid':
      CupertinoIcons.check_mark_circled_solid,
  'CupertinoIcons.circle': CupertinoIcons.circle,
  'CupertinoIcons.circle_filled': CupertinoIcons.circle_filled,
  'CupertinoIcons.back': CupertinoIcons.back,
  'CupertinoIcons.forward': CupertinoIcons.forward,
  'CupertinoIcons.home': CupertinoIcons.home,
  'CupertinoIcons.shopping_cart': CupertinoIcons.shopping_cart,
  'CupertinoIcons.ellipsis': CupertinoIcons.ellipsis,
  'CupertinoIcons.phone': CupertinoIcons.phone,
  'CupertinoIcons.phone_solid': CupertinoIcons.phone_solid,
  'CupertinoIcons.down_arrow': CupertinoIcons.down_arrow,
  'CupertinoIcons.up_arrow': CupertinoIcons.up_arrow,
  'CupertinoIcons.battery_charging': CupertinoIcons.battery_charging,
  'CupertinoIcons.battery_empty': CupertinoIcons.battery_empty,
  'CupertinoIcons.battery_full': CupertinoIcons.battery_full,
  'CupertinoIcons.battery_75_percent': CupertinoIcons.battery_75_percent,
  'CupertinoIcons.battery_25_percent': CupertinoIcons.battery_25_percent,
  'CupertinoIcons.bluetooth': CupertinoIcons.bluetooth,
  'CupertinoIcons.restart': CupertinoIcons.restart,
  'CupertinoIcons.reply_all': CupertinoIcons.reply_all,
  'CupertinoIcons.reply_thick_solid': CupertinoIcons.reply_thick_solid,
  'CupertinoIcons.share_up': CupertinoIcons.share_up,
  'CupertinoIcons.shuffle': CupertinoIcons.shuffle,
  'CupertinoIcons.shuffle_medium': CupertinoIcons.shuffle_medium,
  'CupertinoIcons.shuffle_thick': CupertinoIcons.shuffle_thick,
  'CupertinoIcons.photo_camera': CupertinoIcons.photo_camera,
  'CupertinoIcons.photo_camera_solid': CupertinoIcons.photo_camera_solid,
  'CupertinoIcons.video_camera': CupertinoIcons.video_camera,
  'CupertinoIcons.video_camera_solid': CupertinoIcons.video_camera_solid,
  'CupertinoIcons.switch_camera': CupertinoIcons.switch_camera,
  'CupertinoIcons.switch_camera_solid': CupertinoIcons.switch_camera_solid,
  'CupertinoIcons.collections': CupertinoIcons.collections,
  'CupertinoIcons.collections_solid': CupertinoIcons.collections_solid,
  'CupertinoIcons.folder': CupertinoIcons.folder,
  'CupertinoIcons.folder_solid': CupertinoIcons.folder_solid,
  'CupertinoIcons.folder_open': CupertinoIcons.folder_open,
  'CupertinoIcons.delete': CupertinoIcons.delete,
  'CupertinoIcons.delete_solid': CupertinoIcons.delete_solid,
  'CupertinoIcons.delete_simple': CupertinoIcons.delete_simple,
  'CupertinoIcons.pen': CupertinoIcons.pen,
  'CupertinoIcons.pencil': CupertinoIcons.pencil,
  'CupertinoIcons.create': CupertinoIcons.create,
  'CupertinoIcons.create_solid': CupertinoIcons.create_solid,
  'CupertinoIcons.refresh': CupertinoIcons.refresh,
  'CupertinoIcons.refresh_circled': CupertinoIcons.refresh_circled,
  'CupertinoIcons.refresh_circled_solid': CupertinoIcons.refresh_circled_solid,
  'CupertinoIcons.refresh_thin': CupertinoIcons.refresh_thin,
  'CupertinoIcons.refresh_thick': CupertinoIcons.refresh_thick,
  'CupertinoIcons.refresh_bold': CupertinoIcons.refresh_bold,
  'CupertinoIcons.clear_thick': CupertinoIcons.clear_thick,
  'CupertinoIcons.clear_thick_circled': CupertinoIcons.clear_thick_circled,
  'CupertinoIcons.clear': CupertinoIcons.clear,
  'CupertinoIcons.clear_circled': CupertinoIcons.clear_circled,
  'CupertinoIcons.clear_circled_solid': CupertinoIcons.clear_circled_solid,
  'CupertinoIcons.add': CupertinoIcons.add,
  'CupertinoIcons.add_circled': CupertinoIcons.add_circled,
  'CupertinoIcons.add_circled_solid': CupertinoIcons.add_circled_solid,
  'CupertinoIcons.gear': CupertinoIcons.gear,
  'CupertinoIcons.gear_solid': CupertinoIcons.gear_solid,
  'CupertinoIcons.gear_big': CupertinoIcons.gear_big,
  'CupertinoIcons.settings': CupertinoIcons.settings,
  'CupertinoIcons.settings_solid': CupertinoIcons.settings_solid,
  'CupertinoIcons.music_note': CupertinoIcons.music_note,
  'CupertinoIcons.double_music_note': CupertinoIcons.double_music_note,
  'CupertinoIcons.play_arrow': CupertinoIcons.play_arrow,
  'CupertinoIcons.play_arrow_solid': CupertinoIcons.play_arrow_solid,
  'CupertinoIcons.pause': CupertinoIcons.pause,
  'CupertinoIcons.pause_solid': CupertinoIcons.pause_solid,
  'CupertinoIcons.loop': CupertinoIcons.loop,
  'CupertinoIcons.loop_thick': CupertinoIcons.loop_thick,
  'CupertinoIcons.volume_down': CupertinoIcons.volume_down,
  'CupertinoIcons.volume_mute': CupertinoIcons.volume_mute,
  'CupertinoIcons.volume_off': CupertinoIcons.volume_off,
  'CupertinoIcons.volume_up': CupertinoIcons.volume_up,
  'CupertinoIcons.fullscreen': CupertinoIcons.fullscreen,
  'CupertinoIcons.fullscreen_exit': CupertinoIcons.fullscreen_exit,
  'CupertinoIcons.mic_off': CupertinoIcons.mic_off,
  'CupertinoIcons.mic': CupertinoIcons.mic,
  'CupertinoIcons.mic_solid': CupertinoIcons.mic_solid,
  'CupertinoIcons.clock': CupertinoIcons.clock,
  'CupertinoIcons.clock_solid': CupertinoIcons.clock_solid,
  'CupertinoIcons.time': CupertinoIcons.time,
  'CupertinoIcons.time_solid': CupertinoIcons.time_solid,
  'CupertinoIcons.padlock': CupertinoIcons.padlock,
  'CupertinoIcons.padlock_solid': CupertinoIcons.padlock_solid,
  'CupertinoIcons.eye': CupertinoIcons.eye,
  'CupertinoIcons.eye_solid': CupertinoIcons.eye_solid,
  'CupertinoIcons.person': CupertinoIcons.person,
  'CupertinoIcons.person_solid': CupertinoIcons.person_solid,
  'CupertinoIcons.person_add': CupertinoIcons.person_add,
  'CupertinoIcons.person_add_solid': CupertinoIcons.person_add_solid,
  'CupertinoIcons.group': CupertinoIcons.group,
  'CupertinoIcons.group_solid': CupertinoIcons.group_solid,
  'CupertinoIcons.mail': CupertinoIcons.mail,
  'CupertinoIcons.mail_solid': CupertinoIcons.mail_solid,
  'CupertinoIcons.location': CupertinoIcons.location,
  'CupertinoIcons.location_solid': CupertinoIcons.location_solid,
  'CupertinoIcons.tag': CupertinoIcons.tag,
  'CupertinoIcons.tag_solid': CupertinoIcons.tag_solid,
  'CupertinoIcons.tags': CupertinoIcons.tags,
  'CupertinoIcons.tags_solid': CupertinoIcons.tags_solid,
  'CupertinoIcons.bus': CupertinoIcons.bus,
  'CupertinoIcons.car': CupertinoIcons.car,
  'CupertinoIcons.car_detailed': CupertinoIcons.car_detailed,
  'CupertinoIcons.train_style_one': CupertinoIcons.train_style_one,
  'CupertinoIcons.train_style_two': CupertinoIcons.train_style_two,
  'CupertinoIcons.paw': CupertinoIcons.paw,
  'CupertinoIcons.paw_solid': CupertinoIcons.paw_solid,
  'CupertinoIcons.game_controller': CupertinoIcons.game_controller,
  'CupertinoIcons.game_controller_solid': CupertinoIcons.game_controller_solid,
  'CupertinoIcons.lab_flask': CupertinoIcons.lab_flask,
  'CupertinoIcons.lab_flask_solid': CupertinoIcons.lab_flask_solid,
  'CupertinoIcons.heart': CupertinoIcons.heart,
  'CupertinoIcons.heart_solid': CupertinoIcons.heart_solid,
  'CupertinoIcons.bell': CupertinoIcons.bell,
  'CupertinoIcons.bell_solid': CupertinoIcons.bell_solid,
  'CupertinoIcons.news': CupertinoIcons.news,
  'CupertinoIcons.news_solid': CupertinoIcons.news_solid,
  'CupertinoIcons.brightness': CupertinoIcons.brightness,
  'CupertinoIcons.brightness_solid': CupertinoIcons.brightness_solid,
  'CupertinoIcons.airplane': CupertinoIcons.airplane,
  'CupertinoIcons.alarm': CupertinoIcons.alarm,
  'CupertinoIcons.alarm_fill': CupertinoIcons.alarm_fill,
  'CupertinoIcons.alt': CupertinoIcons.alt,
  'CupertinoIcons.ant': CupertinoIcons.ant,
  'CupertinoIcons.ant_circle': CupertinoIcons.ant_circle,
  'CupertinoIcons.ant_circle_fill': CupertinoIcons.ant_circle_fill,
  'CupertinoIcons.ant_fill': CupertinoIcons.ant_fill,
  'CupertinoIcons.antenna_radiowaves_left_right':
      CupertinoIcons.antenna_radiowaves_left_right,
  'CupertinoIcons.app': CupertinoIcons.app,
  'CupertinoIcons.app_badge': CupertinoIcons.app_badge,
  'CupertinoIcons.app_badge_fill': CupertinoIcons.app_badge_fill,
  'CupertinoIcons.app_fill': CupertinoIcons.app_fill,
  'CupertinoIcons.archivebox': CupertinoIcons.archivebox,
  'CupertinoIcons.archivebox_fill': CupertinoIcons.archivebox_fill,
  'CupertinoIcons.arrow_2_circlepath': CupertinoIcons.arrow_2_circlepath,
  'CupertinoIcons.arrow_2_circlepath_circle':
      CupertinoIcons.arrow_2_circlepath_circle,
  'CupertinoIcons.arrow_2_circlepath_circle_fill':
      CupertinoIcons.arrow_2_circlepath_circle_fill,
  'CupertinoIcons.arrow_2_squarepath': CupertinoIcons.arrow_2_squarepath,
  'CupertinoIcons.arrow_3_trianglepath': CupertinoIcons.arrow_3_trianglepath,
  'CupertinoIcons.arrow_branch': CupertinoIcons.arrow_branch,
  'CupertinoIcons.arrow_clockwise': CupertinoIcons.arrow_clockwise,
  'CupertinoIcons.arrow_clockwise_circle':
      CupertinoIcons.arrow_clockwise_circle,
  'CupertinoIcons.arrow_clockwise_circle_fill':
      CupertinoIcons.arrow_clockwise_circle_fill,
  'CupertinoIcons.arrow_counterclockwise':
      CupertinoIcons.arrow_counterclockwise,
  'CupertinoIcons.arrow_counterclockwise_circle':
      CupertinoIcons.arrow_counterclockwise_circle,
  'CupertinoIcons.arrow_counterclockwise_circle_fill':
      CupertinoIcons.arrow_counterclockwise_circle_fill,
  'CupertinoIcons.arrow_down': CupertinoIcons.arrow_down,
  'CupertinoIcons.arrow_down_circle': CupertinoIcons.arrow_down_circle,
  'CupertinoIcons.arrow_down_circle_fill':
      CupertinoIcons.arrow_down_circle_fill,
  'CupertinoIcons.arrow_down_doc': CupertinoIcons.arrow_down_doc,
  'CupertinoIcons.arrow_down_doc_fill': CupertinoIcons.arrow_down_doc_fill,
  'CupertinoIcons.arrow_down_left': CupertinoIcons.arrow_down_left,
  'CupertinoIcons.arrow_down_left_circle':
      CupertinoIcons.arrow_down_left_circle,
  'CupertinoIcons.arrow_down_left_circle_fill':
      CupertinoIcons.arrow_down_left_circle_fill,
  'CupertinoIcons.arrow_down_left_square':
      CupertinoIcons.arrow_down_left_square,
  'CupertinoIcons.arrow_down_left_square_fill':
      CupertinoIcons.arrow_down_left_square_fill,
  'CupertinoIcons.arrow_down_right': CupertinoIcons.arrow_down_right,
  'CupertinoIcons.arrow_down_right_arrow_up_left':
      CupertinoIcons.arrow_down_right_arrow_up_left,
  'CupertinoIcons.arrow_down_right_circle':
      CupertinoIcons.arrow_down_right_circle,
  'CupertinoIcons.arrow_down_right_circle_fill':
      CupertinoIcons.arrow_down_right_circle_fill,
  'CupertinoIcons.arrow_down_right_square':
      CupertinoIcons.arrow_down_right_square,
  'CupertinoIcons.arrow_down_right_square_fill':
      CupertinoIcons.arrow_down_right_square_fill,
  'CupertinoIcons.arrow_down_square': CupertinoIcons.arrow_down_square,
  'CupertinoIcons.arrow_down_square_fill':
      CupertinoIcons.arrow_down_square_fill,
  'CupertinoIcons.arrow_down_to_line': CupertinoIcons.arrow_down_to_line,
  'CupertinoIcons.arrow_down_to_line_alt':
      CupertinoIcons.arrow_down_to_line_alt,
  'CupertinoIcons.arrow_left': CupertinoIcons.arrow_left,
  'CupertinoIcons.arrow_left_circle': CupertinoIcons.arrow_left_circle,
  'CupertinoIcons.arrow_left_circle_fill':
      CupertinoIcons.arrow_left_circle_fill,
  'CupertinoIcons.arrow_left_right': CupertinoIcons.arrow_left_right,
  'CupertinoIcons.arrow_left_right_circle':
      CupertinoIcons.arrow_left_right_circle,
  'CupertinoIcons.arrow_left_right_circle_fill':
      CupertinoIcons.arrow_left_right_circle_fill,
  'CupertinoIcons.arrow_left_right_square':
      CupertinoIcons.arrow_left_right_square,
  'CupertinoIcons.arrow_left_right_square_fill':
      CupertinoIcons.arrow_left_right_square_fill,
  'CupertinoIcons.arrow_left_square': CupertinoIcons.arrow_left_square,
  'CupertinoIcons.arrow_left_square_fill':
      CupertinoIcons.arrow_left_square_fill,
  'CupertinoIcons.arrow_left_to_line': CupertinoIcons.arrow_left_to_line,
  'CupertinoIcons.arrow_left_to_line_alt':
      CupertinoIcons.arrow_left_to_line_alt,
  'CupertinoIcons.arrow_merge': CupertinoIcons.arrow_merge,
  'CupertinoIcons.arrow_right': CupertinoIcons.arrow_right,
  'CupertinoIcons.arrow_right_arrow_left':
      CupertinoIcons.arrow_right_arrow_left,
  'CupertinoIcons.arrow_right_arrow_left_circle':
      CupertinoIcons.arrow_right_arrow_left_circle,
  'CupertinoIcons.arrow_right_arrow_left_circle_fill':
      CupertinoIcons.arrow_right_arrow_left_circle_fill,
  'CupertinoIcons.arrow_right_arrow_left_square':
      CupertinoIcons.arrow_right_arrow_left_square,
  'CupertinoIcons.arrow_right_arrow_left_square_fill':
      CupertinoIcons.arrow_right_arrow_left_square_fill,
  'CupertinoIcons.arrow_right_circle': CupertinoIcons.arrow_right_circle,
  'CupertinoIcons.arrow_right_circle_fill':
      CupertinoIcons.arrow_right_circle_fill,
  'CupertinoIcons.arrow_right_square': CupertinoIcons.arrow_right_square,
  'CupertinoIcons.arrow_right_square_fill':
      CupertinoIcons.arrow_right_square_fill,
  'CupertinoIcons.arrow_right_to_line': CupertinoIcons.arrow_right_to_line,
  'CupertinoIcons.arrow_right_to_line_alt':
      CupertinoIcons.arrow_right_to_line_alt,
  'CupertinoIcons.arrow_swap': CupertinoIcons.arrow_swap,
  'CupertinoIcons.arrow_turn_down_left': CupertinoIcons.arrow_turn_down_left,
  'CupertinoIcons.arrow_turn_down_right': CupertinoIcons.arrow_turn_down_right,
  'CupertinoIcons.arrow_turn_left_down': CupertinoIcons.arrow_turn_left_down,
  'CupertinoIcons.arrow_turn_left_up': CupertinoIcons.arrow_turn_left_up,
  'CupertinoIcons.arrow_turn_right_down': CupertinoIcons.arrow_turn_right_down,
  'CupertinoIcons.arrow_turn_right_up': CupertinoIcons.arrow_turn_right_up,
  'CupertinoIcons.arrow_turn_up_left': CupertinoIcons.arrow_turn_up_left,
  'CupertinoIcons.arrow_turn_up_right': CupertinoIcons.arrow_turn_up_right,
  'CupertinoIcons.arrow_up': CupertinoIcons.arrow_up,
  'CupertinoIcons.arrow_up_arrow_down': CupertinoIcons.arrow_up_arrow_down,
  'CupertinoIcons.arrow_up_arrow_down_circle':
      CupertinoIcons.arrow_up_arrow_down_circle,
  'CupertinoIcons.arrow_up_arrow_down_circle_fill':
      CupertinoIcons.arrow_up_arrow_down_circle_fill,
  'CupertinoIcons.arrow_up_arrow_down_square':
      CupertinoIcons.arrow_up_arrow_down_square,
  'CupertinoIcons.arrow_up_arrow_down_square_fill':
      CupertinoIcons.arrow_up_arrow_down_square_fill,
  'CupertinoIcons.arrow_up_bin': CupertinoIcons.arrow_up_bin,
  'CupertinoIcons.arrow_up_bin_fill': CupertinoIcons.arrow_up_bin_fill,
  'CupertinoIcons.arrow_up_circle': CupertinoIcons.arrow_up_circle,
  'CupertinoIcons.arrow_up_circle_fill': CupertinoIcons.arrow_up_circle_fill,
  'CupertinoIcons.arrow_up_doc': CupertinoIcons.arrow_up_doc,
  'CupertinoIcons.arrow_up_doc_fill': CupertinoIcons.arrow_up_doc_fill,
  'CupertinoIcons.arrow_up_down': CupertinoIcons.arrow_up_down,
  'CupertinoIcons.arrow_up_down_circle': CupertinoIcons.arrow_up_down_circle,
  'CupertinoIcons.arrow_up_down_circle_fill':
      CupertinoIcons.arrow_up_down_circle_fill,
  'CupertinoIcons.arrow_up_down_square': CupertinoIcons.arrow_up_down_square,
  'CupertinoIcons.arrow_up_down_square_fill':
      CupertinoIcons.arrow_up_down_square_fill,
  'CupertinoIcons.arrow_up_left': CupertinoIcons.arrow_up_left,
  'CupertinoIcons.arrow_up_left_arrow_down_right':
      CupertinoIcons.arrow_up_left_arrow_down_right,
  'CupertinoIcons.arrow_up_left_circle': CupertinoIcons.arrow_up_left_circle,
  'CupertinoIcons.arrow_up_left_circle_fill':
      CupertinoIcons.arrow_up_left_circle_fill,
  'CupertinoIcons.arrow_up_left_square': CupertinoIcons.arrow_up_left_square,
  'CupertinoIcons.arrow_up_left_square_fill':
      CupertinoIcons.arrow_up_left_square_fill,
  'CupertinoIcons.arrow_up_right': CupertinoIcons.arrow_up_right,
  'CupertinoIcons.arrow_up_right_circle': CupertinoIcons.arrow_up_right_circle,
  'CupertinoIcons.arrow_up_right_circle_fill':
      CupertinoIcons.arrow_up_right_circle_fill,
  'CupertinoIcons.arrow_up_right_diamond':
      CupertinoIcons.arrow_up_right_diamond,
  'CupertinoIcons.arrow_up_right_diamond_fill':
      CupertinoIcons.arrow_up_right_diamond_fill,
  'CupertinoIcons.arrow_up_right_square': CupertinoIcons.arrow_up_right_square,
  'CupertinoIcons.arrow_up_right_square_fill':
      CupertinoIcons.arrow_up_right_square_fill,
  'CupertinoIcons.arrow_up_square': CupertinoIcons.arrow_up_square,
  'CupertinoIcons.arrow_up_square_fill': CupertinoIcons.arrow_up_square_fill,
  'CupertinoIcons.arrow_up_to_line': CupertinoIcons.arrow_up_to_line,
  'CupertinoIcons.arrow_up_to_line_alt': CupertinoIcons.arrow_up_to_line_alt,
  'CupertinoIcons.arrow_uturn_down': CupertinoIcons.arrow_uturn_down,
  'CupertinoIcons.arrow_uturn_down_circle':
      CupertinoIcons.arrow_uturn_down_circle,
  'CupertinoIcons.arrow_uturn_down_circle_fill':
      CupertinoIcons.arrow_uturn_down_circle_fill,
  'CupertinoIcons.arrow_uturn_down_square':
      CupertinoIcons.arrow_uturn_down_square,
  'CupertinoIcons.arrow_uturn_down_square_fill':
      CupertinoIcons.arrow_uturn_down_square_fill,
  'CupertinoIcons.arrow_uturn_left': CupertinoIcons.arrow_uturn_left,
  'CupertinoIcons.arrow_uturn_left_circle':
      CupertinoIcons.arrow_uturn_left_circle,
  'CupertinoIcons.arrow_uturn_left_circle_fill':
      CupertinoIcons.arrow_uturn_left_circle_fill,
  'CupertinoIcons.arrow_uturn_left_square':
      CupertinoIcons.arrow_uturn_left_square,
  'CupertinoIcons.arrow_uturn_left_square_fill':
      CupertinoIcons.arrow_uturn_left_square_fill,
  'CupertinoIcons.arrow_uturn_right': CupertinoIcons.arrow_uturn_right,
  'CupertinoIcons.arrow_uturn_right_circle':
      CupertinoIcons.arrow_uturn_right_circle,
  'CupertinoIcons.arrow_uturn_right_circle_fill':
      CupertinoIcons.arrow_uturn_right_circle_fill,
  'CupertinoIcons.arrow_uturn_right_square':
      CupertinoIcons.arrow_uturn_right_square,
  'CupertinoIcons.arrow_uturn_right_square_fill':
      CupertinoIcons.arrow_uturn_right_square_fill,
  'CupertinoIcons.arrow_uturn_up': CupertinoIcons.arrow_uturn_up,
  'CupertinoIcons.arrow_uturn_up_circle': CupertinoIcons.arrow_uturn_up_circle,
  'CupertinoIcons.arrow_uturn_up_circle_fill':
      CupertinoIcons.arrow_uturn_up_circle_fill,
  'CupertinoIcons.arrow_uturn_up_square': CupertinoIcons.arrow_uturn_up_square,
  'CupertinoIcons.arrow_uturn_up_square_fill':
      CupertinoIcons.arrow_uturn_up_square_fill,
  'CupertinoIcons.arrowshape_turn_up_left':
      CupertinoIcons.arrowshape_turn_up_left,
  'CupertinoIcons.arrowshape_turn_up_left_2':
      CupertinoIcons.arrowshape_turn_up_left_2,
  'CupertinoIcons.arrowshape_turn_up_left_2_fill':
      CupertinoIcons.arrowshape_turn_up_left_2_fill,
  'CupertinoIcons.arrowshape_turn_up_left_circle':
      CupertinoIcons.arrowshape_turn_up_left_circle,
  'CupertinoIcons.arrowshape_turn_up_left_circle_fill':
      CupertinoIcons.arrowshape_turn_up_left_circle_fill,
  'CupertinoIcons.arrowshape_turn_up_left_fill':
      CupertinoIcons.arrowshape_turn_up_left_fill,
  'CupertinoIcons.arrowshape_turn_up_right':
      CupertinoIcons.arrowshape_turn_up_right,
  'CupertinoIcons.arrowshape_turn_up_right_circle':
      CupertinoIcons.arrowshape_turn_up_right_circle,
  'CupertinoIcons.arrowshape_turn_up_right_circle_fill':
      CupertinoIcons.arrowshape_turn_up_right_circle_fill,
  'CupertinoIcons.arrowshape_turn_up_right_fill':
      CupertinoIcons.arrowshape_turn_up_right_fill,
  'CupertinoIcons.arrowtriangle_down': CupertinoIcons.arrowtriangle_down,
  'CupertinoIcons.arrowtriangle_down_circle':
      CupertinoIcons.arrowtriangle_down_circle,
  'CupertinoIcons.arrowtriangle_down_circle_fill':
      CupertinoIcons.arrowtriangle_down_circle_fill,
  'CupertinoIcons.arrowtriangle_down_fill':
      CupertinoIcons.arrowtriangle_down_fill,
  'CupertinoIcons.arrowtriangle_down_square':
      CupertinoIcons.arrowtriangle_down_square,
  'CupertinoIcons.arrowtriangle_down_square_fill':
      CupertinoIcons.arrowtriangle_down_square_fill,
  'CupertinoIcons.arrowtriangle_left': CupertinoIcons.arrowtriangle_left,
  'CupertinoIcons.arrowtriangle_left_circle':
      CupertinoIcons.arrowtriangle_left_circle,
  'CupertinoIcons.arrowtriangle_left_circle_fill':
      CupertinoIcons.arrowtriangle_left_circle_fill,
  'CupertinoIcons.arrowtriangle_left_fill':
      CupertinoIcons.arrowtriangle_left_fill,
  'CupertinoIcons.arrowtriangle_left_square':
      CupertinoIcons.arrowtriangle_left_square,
  'CupertinoIcons.arrowtriangle_left_square_fill':
      CupertinoIcons.arrowtriangle_left_square_fill,
  'CupertinoIcons.arrowtriangle_right': CupertinoIcons.arrowtriangle_right,
  'CupertinoIcons.arrowtriangle_right_circle':
      CupertinoIcons.arrowtriangle_right_circle,
  'CupertinoIcons.arrowtriangle_right_circle_fill':
      CupertinoIcons.arrowtriangle_right_circle_fill,
  'CupertinoIcons.arrowtriangle_right_fill':
      CupertinoIcons.arrowtriangle_right_fill,
  'CupertinoIcons.arrowtriangle_right_square':
      CupertinoIcons.arrowtriangle_right_square,
  'CupertinoIcons.arrowtriangle_right_square_fill':
      CupertinoIcons.arrowtriangle_right_square_fill,
  'CupertinoIcons.arrowtriangle_up': CupertinoIcons.arrowtriangle_up,
  'CupertinoIcons.arrowtriangle_up_circle':
      CupertinoIcons.arrowtriangle_up_circle,
  'CupertinoIcons.arrowtriangle_up_circle_fill':
      CupertinoIcons.arrowtriangle_up_circle_fill,
  'CupertinoIcons.arrowtriangle_up_fill': CupertinoIcons.arrowtriangle_up_fill,
  'CupertinoIcons.arrowtriangle_up_square':
      CupertinoIcons.arrowtriangle_up_square,
  'CupertinoIcons.arrowtriangle_up_square_fill':
      CupertinoIcons.arrowtriangle_up_square_fill,
  'CupertinoIcons.asterisk_circle': CupertinoIcons.asterisk_circle,
  'CupertinoIcons.asterisk_circle_fill': CupertinoIcons.asterisk_circle_fill,
  'CupertinoIcons.at': CupertinoIcons.at,
  'CupertinoIcons.at_badge_minus': CupertinoIcons.at_badge_minus,
  'CupertinoIcons.at_badge_plus': CupertinoIcons.at_badge_plus,
  'CupertinoIcons.at_circle': CupertinoIcons.at_circle,
  'CupertinoIcons.at_circle_fill': CupertinoIcons.at_circle_fill,
  'CupertinoIcons.backward': CupertinoIcons.backward,
  'CupertinoIcons.backward_end': CupertinoIcons.backward_end,
  'CupertinoIcons.backward_end_alt': CupertinoIcons.backward_end_alt,
  'CupertinoIcons.backward_end_alt_fill': CupertinoIcons.backward_end_alt_fill,
  'CupertinoIcons.backward_end_fill': CupertinoIcons.backward_end_fill,
  'CupertinoIcons.backward_fill': CupertinoIcons.backward_fill,
  'CupertinoIcons.badge_plus_radiowaves_right':
      CupertinoIcons.badge_plus_radiowaves_right,
  'CupertinoIcons.bag': CupertinoIcons.bag,
  'CupertinoIcons.bag_badge_minus': CupertinoIcons.bag_badge_minus,
  'CupertinoIcons.bag_badge_plus': CupertinoIcons.bag_badge_plus,
  'CupertinoIcons.bag_fill': CupertinoIcons.bag_fill,
  'CupertinoIcons.bag_fill_badge_minus': CupertinoIcons.bag_fill_badge_minus,
  'CupertinoIcons.bag_fill_badge_plus': CupertinoIcons.bag_fill_badge_plus,
  'CupertinoIcons.bandage': CupertinoIcons.bandage,
  'CupertinoIcons.bandage_fill': CupertinoIcons.bandage_fill,
  'CupertinoIcons.barcode': CupertinoIcons.barcode,
  'CupertinoIcons.barcode_viewfinder': CupertinoIcons.barcode_viewfinder,
  'CupertinoIcons.bars': CupertinoIcons.bars,
  'CupertinoIcons.battery_0': CupertinoIcons.battery_0,
  'CupertinoIcons.battery_100': CupertinoIcons.battery_100,
  'CupertinoIcons.battery_25': CupertinoIcons.battery_25,
  'CupertinoIcons.bed_double': CupertinoIcons.bed_double,
  'CupertinoIcons.bed_double_fill': CupertinoIcons.bed_double_fill,
  'CupertinoIcons.bell_circle': CupertinoIcons.bell_circle,
  'CupertinoIcons.bell_circle_fill': CupertinoIcons.bell_circle_fill,
  'CupertinoIcons.bell_fill': CupertinoIcons.bell_fill,
  'CupertinoIcons.bell_slash': CupertinoIcons.bell_slash,
  'CupertinoIcons.bell_slash_fill': CupertinoIcons.bell_slash_fill,
  'CupertinoIcons.bin_xmark': CupertinoIcons.bin_xmark,
  'CupertinoIcons.bin_xmark_fill': CupertinoIcons.bin_xmark_fill,
  'CupertinoIcons.bitcoin': CupertinoIcons.bitcoin,
  'CupertinoIcons.bitcoin_circle': CupertinoIcons.bitcoin_circle,
  'CupertinoIcons.bitcoin_circle_fill': CupertinoIcons.bitcoin_circle_fill,
  'CupertinoIcons.bold': CupertinoIcons.bold,
  'CupertinoIcons.bold_italic_underline': CupertinoIcons.bold_italic_underline,
  'CupertinoIcons.bold_underline': CupertinoIcons.bold_underline,
  'CupertinoIcons.bolt': CupertinoIcons.bolt,
  'CupertinoIcons.bolt_badge_a': CupertinoIcons.bolt_badge_a,
  'CupertinoIcons.bolt_badge_a_fill': CupertinoIcons.bolt_badge_a_fill,
  'CupertinoIcons.bolt_circle': CupertinoIcons.bolt_circle,
  'CupertinoIcons.bolt_circle_fill': CupertinoIcons.bolt_circle_fill,
  'CupertinoIcons.bolt_fill': CupertinoIcons.bolt_fill,
  'CupertinoIcons.bolt_horizontal': CupertinoIcons.bolt_horizontal,
  'CupertinoIcons.bolt_horizontal_circle':
      CupertinoIcons.bolt_horizontal_circle,
  'CupertinoIcons.bolt_horizontal_circle_fill':
      CupertinoIcons.bolt_horizontal_circle_fill,
  'CupertinoIcons.bolt_horizontal_fill': CupertinoIcons.bolt_horizontal_fill,
  'CupertinoIcons.bolt_slash': CupertinoIcons.bolt_slash,
  'CupertinoIcons.bolt_slash_fill': CupertinoIcons.bolt_slash_fill,
  'CupertinoIcons.book_circle': CupertinoIcons.book_circle,
  'CupertinoIcons.book_circle_fill': CupertinoIcons.book_circle_fill,
  'CupertinoIcons.book_fill': CupertinoIcons.book_fill,
  'CupertinoIcons.bookmark_fill': CupertinoIcons.bookmark_fill,
  'CupertinoIcons.briefcase': CupertinoIcons.briefcase,
  'CupertinoIcons.briefcase_fill': CupertinoIcons.briefcase_fill,
  'CupertinoIcons.bubble_left': CupertinoIcons.bubble_left,
  'CupertinoIcons.bubble_left_bubble_right':
      CupertinoIcons.bubble_left_bubble_right,
  'CupertinoIcons.bubble_left_bubble_right_fill':
      CupertinoIcons.bubble_left_bubble_right_fill,
  'CupertinoIcons.bubble_left_fill': CupertinoIcons.bubble_left_fill,
  'CupertinoIcons.bubble_middle_bottom': CupertinoIcons.bubble_middle_bottom,
  'CupertinoIcons.bubble_middle_bottom_fill':
      CupertinoIcons.bubble_middle_bottom_fill,
  'CupertinoIcons.bubble_middle_top': CupertinoIcons.bubble_middle_top,
  'CupertinoIcons.bubble_middle_top_fill':
      CupertinoIcons.bubble_middle_top_fill,
  'CupertinoIcons.bubble_right': CupertinoIcons.bubble_right,
  'CupertinoIcons.bubble_right_fill': CupertinoIcons.bubble_right_fill,
  'CupertinoIcons.building_2_fill': CupertinoIcons.building_2_fill,
  'CupertinoIcons.burn': CupertinoIcons.burn,
  'CupertinoIcons.burst': CupertinoIcons.burst,
  'CupertinoIcons.burst_fill': CupertinoIcons.burst_fill,
  'CupertinoIcons.calendar': CupertinoIcons.calendar,
  'CupertinoIcons.calendar_badge_minus': CupertinoIcons.calendar_badge_minus,
  'CupertinoIcons.calendar_badge_plus': CupertinoIcons.calendar_badge_plus,
  'CupertinoIcons.calendar_circle': CupertinoIcons.calendar_circle,
  'CupertinoIcons.calendar_circle_fill': CupertinoIcons.calendar_circle_fill,
  'CupertinoIcons.calendar_today': CupertinoIcons.calendar_today,
  'CupertinoIcons.camera': CupertinoIcons.camera,
  'CupertinoIcons.camera_circle': CupertinoIcons.camera_circle,
  'CupertinoIcons.camera_circle_fill': CupertinoIcons.camera_circle_fill,
  'CupertinoIcons.camera_fill': CupertinoIcons.camera_fill,
  'CupertinoIcons.camera_on_rectangle': CupertinoIcons.camera_on_rectangle,
  'CupertinoIcons.camera_on_rectangle_fill':
      CupertinoIcons.camera_on_rectangle_fill,
  'CupertinoIcons.camera_rotate': CupertinoIcons.camera_rotate,
  'CupertinoIcons.camera_rotate_fill': CupertinoIcons.camera_rotate_fill,
  'CupertinoIcons.camera_viewfinder': CupertinoIcons.camera_viewfinder,
  'CupertinoIcons.capslock': CupertinoIcons.capslock,
  'CupertinoIcons.capslock_fill': CupertinoIcons.capslock_fill,
  'CupertinoIcons.capsule': CupertinoIcons.capsule,
  'CupertinoIcons.capsule_fill': CupertinoIcons.capsule_fill,
  'CupertinoIcons.captions_bubble': CupertinoIcons.captions_bubble,
  'CupertinoIcons.captions_bubble_fill': CupertinoIcons.captions_bubble_fill,
  'CupertinoIcons.car_fill': CupertinoIcons.car_fill,
  'CupertinoIcons.cart': CupertinoIcons.cart,
  'CupertinoIcons.cart_badge_minus': CupertinoIcons.cart_badge_minus,
  'CupertinoIcons.cart_badge_plus': CupertinoIcons.cart_badge_plus,
  'CupertinoIcons.cart_fill': CupertinoIcons.cart_fill,
  'CupertinoIcons.cart_fill_badge_minus': CupertinoIcons.cart_fill_badge_minus,
  'CupertinoIcons.cart_fill_badge_plus': CupertinoIcons.cart_fill_badge_plus,
  'CupertinoIcons.chart_bar': CupertinoIcons.chart_bar,
  'CupertinoIcons.chart_bar_alt_fill': CupertinoIcons.chart_bar_alt_fill,
  'CupertinoIcons.chart_bar_circle': CupertinoIcons.chart_bar_circle,
  'CupertinoIcons.chart_bar_circle_fill': CupertinoIcons.chart_bar_circle_fill,
  'CupertinoIcons.chart_bar_fill': CupertinoIcons.chart_bar_fill,
  'CupertinoIcons.chart_bar_square': CupertinoIcons.chart_bar_square,
  'CupertinoIcons.chart_bar_square_fill': CupertinoIcons.chart_bar_square_fill,
  'CupertinoIcons.chart_pie': CupertinoIcons.chart_pie,
  'CupertinoIcons.chart_pie_fill': CupertinoIcons.chart_pie_fill,
  'CupertinoIcons.chat_bubble': CupertinoIcons.chat_bubble,
  'CupertinoIcons.chat_bubble_2': CupertinoIcons.chat_bubble_2,
  'CupertinoIcons.chat_bubble_2_fill': CupertinoIcons.chat_bubble_2_fill,
  'CupertinoIcons.chat_bubble_fill': CupertinoIcons.chat_bubble_fill,
  'CupertinoIcons.chat_bubble_text': CupertinoIcons.chat_bubble_text,
  'CupertinoIcons.chat_bubble_text_fill': CupertinoIcons.chat_bubble_text_fill,
  'CupertinoIcons.checkmark': CupertinoIcons.checkmark,
  'CupertinoIcons.checkmark_alt': CupertinoIcons.checkmark_alt,
  'CupertinoIcons.checkmark_alt_circle': CupertinoIcons.checkmark_alt_circle,
  'CupertinoIcons.checkmark_alt_circle_fill':
      CupertinoIcons.checkmark_alt_circle_fill,
  'CupertinoIcons.checkmark_circle': CupertinoIcons.checkmark_circle,
  'CupertinoIcons.checkmark_circle_fill': CupertinoIcons.checkmark_circle_fill,
  'CupertinoIcons.checkmark_rectangle': CupertinoIcons.checkmark_rectangle,
  'CupertinoIcons.checkmark_rectangle_fill':
      CupertinoIcons.checkmark_rectangle_fill,
  'CupertinoIcons.checkmark_seal': CupertinoIcons.checkmark_seal,
  'CupertinoIcons.checkmark_seal_fill': CupertinoIcons.checkmark_seal_fill,
  'CupertinoIcons.checkmark_shield': CupertinoIcons.checkmark_shield,
  'CupertinoIcons.checkmark_shield_fill': CupertinoIcons.checkmark_shield_fill,
  'CupertinoIcons.checkmark_square': CupertinoIcons.checkmark_square,
  'CupertinoIcons.checkmark_square_fill': CupertinoIcons.checkmark_square_fill,
  'CupertinoIcons.chevron_back': CupertinoIcons.chevron_back,
  'CupertinoIcons.chevron_compact_down': CupertinoIcons.chevron_compact_down,
  'CupertinoIcons.chevron_compact_left': CupertinoIcons.chevron_compact_left,
  'CupertinoIcons.chevron_compact_right': CupertinoIcons.chevron_compact_right,
  'CupertinoIcons.chevron_compact_up': CupertinoIcons.chevron_compact_up,
  'CupertinoIcons.chevron_down': CupertinoIcons.chevron_down,
  'CupertinoIcons.chevron_down_circle': CupertinoIcons.chevron_down_circle,
  'CupertinoIcons.chevron_down_circle_fill':
      CupertinoIcons.chevron_down_circle_fill,
  'CupertinoIcons.chevron_down_square': CupertinoIcons.chevron_down_square,
  'CupertinoIcons.chevron_down_square_fill':
      CupertinoIcons.chevron_down_square_fill,
  'CupertinoIcons.chevron_forward': CupertinoIcons.chevron_forward,
  'CupertinoIcons.chevron_left': CupertinoIcons.chevron_left,
  'CupertinoIcons.chevron_left_2': CupertinoIcons.chevron_left_2,
  'CupertinoIcons.chevron_left_circle': CupertinoIcons.chevron_left_circle,
  'CupertinoIcons.chevron_left_circle_fill':
      CupertinoIcons.chevron_left_circle_fill,
  'CupertinoIcons.chevron_left_slash_chevron_right':
      CupertinoIcons.chevron_left_slash_chevron_right,
  'CupertinoIcons.chevron_left_square': CupertinoIcons.chevron_left_square,
  'CupertinoIcons.chevron_left_square_fill':
      CupertinoIcons.chevron_left_square_fill,
  'CupertinoIcons.chevron_right': CupertinoIcons.chevron_right,
  'CupertinoIcons.chevron_right_2': CupertinoIcons.chevron_right_2,
  'CupertinoIcons.chevron_right_circle': CupertinoIcons.chevron_right_circle,
  'CupertinoIcons.chevron_right_circle_fill':
      CupertinoIcons.chevron_right_circle_fill,
  'CupertinoIcons.chevron_right_square': CupertinoIcons.chevron_right_square,
  'CupertinoIcons.chevron_right_square_fill':
      CupertinoIcons.chevron_right_square_fill,
  'CupertinoIcons.chevron_up': CupertinoIcons.chevron_up,
  'CupertinoIcons.chevron_up_chevron_down':
      CupertinoIcons.chevron_up_chevron_down,
  'CupertinoIcons.chevron_up_circle': CupertinoIcons.chevron_up_circle,
  'CupertinoIcons.chevron_up_circle_fill':
      CupertinoIcons.chevron_up_circle_fill,
  'CupertinoIcons.chevron_up_square': CupertinoIcons.chevron_up_square,
  'CupertinoIcons.chevron_up_square_fill':
      CupertinoIcons.chevron_up_square_fill,
  'CupertinoIcons.circle_bottomthird_split':
      CupertinoIcons.circle_bottomthird_split,
  'CupertinoIcons.circle_fill': CupertinoIcons.circle_fill,
  'CupertinoIcons.circle_grid_3x3': CupertinoIcons.circle_grid_3x3,
  'CupertinoIcons.circle_grid_3x3_fill': CupertinoIcons.circle_grid_3x3_fill,
  'CupertinoIcons.circle_grid_hex': CupertinoIcons.circle_grid_hex,
  'CupertinoIcons.circle_grid_hex_fill': CupertinoIcons.circle_grid_hex_fill,
  'CupertinoIcons.circle_lefthalf_fill': CupertinoIcons.circle_lefthalf_fill,
  'CupertinoIcons.circle_righthalf_fill': CupertinoIcons.circle_righthalf_fill,
  'CupertinoIcons.clear_fill': CupertinoIcons.clear_fill,
  'CupertinoIcons.clock_fill': CupertinoIcons.clock_fill,
  'CupertinoIcons.cloud': CupertinoIcons.cloud,
  'CupertinoIcons.cloud_bolt': CupertinoIcons.cloud_bolt,
  'CupertinoIcons.cloud_bolt_fill': CupertinoIcons.cloud_bolt_fill,
  'CupertinoIcons.cloud_bolt_rain': CupertinoIcons.cloud_bolt_rain,
  'CupertinoIcons.cloud_bolt_rain_fill': CupertinoIcons.cloud_bolt_rain_fill,
  'CupertinoIcons.cloud_download': CupertinoIcons.cloud_download,
  'CupertinoIcons.cloud_download_fill': CupertinoIcons.cloud_download_fill,
  'CupertinoIcons.cloud_drizzle': CupertinoIcons.cloud_drizzle,
  'CupertinoIcons.cloud_drizzle_fill': CupertinoIcons.cloud_drizzle_fill,
  'CupertinoIcons.cloud_fill': CupertinoIcons.cloud_fill,
  'CupertinoIcons.cloud_fog': CupertinoIcons.cloud_fog,
  'CupertinoIcons.cloud_fog_fill': CupertinoIcons.cloud_fog_fill,
  'CupertinoIcons.cloud_hail': CupertinoIcons.cloud_hail,
  'CupertinoIcons.cloud_hail_fill': CupertinoIcons.cloud_hail_fill,
  'CupertinoIcons.cloud_heavyrain': CupertinoIcons.cloud_heavyrain,
  'CupertinoIcons.cloud_heavyrain_fill': CupertinoIcons.cloud_heavyrain_fill,
  'CupertinoIcons.cloud_moon': CupertinoIcons.cloud_moon,
  'CupertinoIcons.cloud_moon_bolt': CupertinoIcons.cloud_moon_bolt,
  'CupertinoIcons.cloud_moon_bolt_fill': CupertinoIcons.cloud_moon_bolt_fill,
  'CupertinoIcons.cloud_moon_fill': CupertinoIcons.cloud_moon_fill,
  'CupertinoIcons.cloud_moon_rain': CupertinoIcons.cloud_moon_rain,
  'CupertinoIcons.cloud_moon_rain_fill': CupertinoIcons.cloud_moon_rain_fill,
  'CupertinoIcons.cloud_rain': CupertinoIcons.cloud_rain,
  'CupertinoIcons.cloud_rain_fill': CupertinoIcons.cloud_rain_fill,
  'CupertinoIcons.cloud_sleet': CupertinoIcons.cloud_sleet,
  'CupertinoIcons.cloud_sleet_fill': CupertinoIcons.cloud_sleet_fill,
  'CupertinoIcons.cloud_snow': CupertinoIcons.cloud_snow,
  'CupertinoIcons.cloud_snow_fill': CupertinoIcons.cloud_snow_fill,
  'CupertinoIcons.cloud_sun': CupertinoIcons.cloud_sun,
  'CupertinoIcons.cloud_sun_bolt': CupertinoIcons.cloud_sun_bolt,
  'CupertinoIcons.cloud_sun_bolt_fill': CupertinoIcons.cloud_sun_bolt_fill,
  'CupertinoIcons.cloud_sun_fill': CupertinoIcons.cloud_sun_fill,
  'CupertinoIcons.cloud_sun_rain': CupertinoIcons.cloud_sun_rain,
  'CupertinoIcons.cloud_sun_rain_fill': CupertinoIcons.cloud_sun_rain_fill,
  'CupertinoIcons.cloud_upload': CupertinoIcons.cloud_upload,
  'CupertinoIcons.cloud_upload_fill': CupertinoIcons.cloud_upload_fill,
  'CupertinoIcons.color_filter': CupertinoIcons.color_filter,
  'CupertinoIcons.color_filter_fill': CupertinoIcons.color_filter_fill,
  'CupertinoIcons.command': CupertinoIcons.command,
  'CupertinoIcons.compass': CupertinoIcons.compass,
  'CupertinoIcons.compass_fill': CupertinoIcons.compass_fill,
  'CupertinoIcons.control': CupertinoIcons.control,
  'CupertinoIcons.creditcard': CupertinoIcons.creditcard,
  'CupertinoIcons.creditcard_fill': CupertinoIcons.creditcard_fill,
  'CupertinoIcons.crop': CupertinoIcons.crop,
  'CupertinoIcons.crop_rotate': CupertinoIcons.crop_rotate,
  'CupertinoIcons.cube': CupertinoIcons.cube,
  'CupertinoIcons.cube_box': CupertinoIcons.cube_box,
  'CupertinoIcons.cube_box_fill': CupertinoIcons.cube_box_fill,
  'CupertinoIcons.cube_fill': CupertinoIcons.cube_fill,
  'CupertinoIcons.cursor_rays': CupertinoIcons.cursor_rays,
  'CupertinoIcons.decrease_indent': CupertinoIcons.decrease_indent,
  'CupertinoIcons.decrease_quotelevel': CupertinoIcons.decrease_quotelevel,
  'CupertinoIcons.delete_left': CupertinoIcons.delete_left,
  'CupertinoIcons.delete_left_fill': CupertinoIcons.delete_left_fill,
  'CupertinoIcons.delete_right': CupertinoIcons.delete_right,
  'CupertinoIcons.delete_right_fill': CupertinoIcons.delete_right_fill,
  'CupertinoIcons.desktopcomputer': CupertinoIcons.desktopcomputer,
  'CupertinoIcons.device_desktop': CupertinoIcons.device_desktop,
  'CupertinoIcons.device_laptop': CupertinoIcons.device_laptop,
  'CupertinoIcons.device_phone_landscape':
      CupertinoIcons.device_phone_landscape,
  'CupertinoIcons.device_phone_portrait': CupertinoIcons.device_phone_portrait,
  'CupertinoIcons.dial': CupertinoIcons.dial,
  'CupertinoIcons.dial_fill': CupertinoIcons.dial_fill,
  'CupertinoIcons.divide': CupertinoIcons.divide,
  'CupertinoIcons.divide_circle': CupertinoIcons.divide_circle,
  'CupertinoIcons.divide_circle_fill': CupertinoIcons.divide_circle_fill,
  'CupertinoIcons.divide_square': CupertinoIcons.divide_square,
  'CupertinoIcons.divide_square_fill': CupertinoIcons.divide_square_fill,
  'CupertinoIcons.doc': CupertinoIcons.doc,
  'CupertinoIcons.doc_append': CupertinoIcons.doc_append,
  'CupertinoIcons.doc_chart': CupertinoIcons.doc_chart,
  'CupertinoIcons.doc_chart_fill': CupertinoIcons.doc_chart_fill,
  'CupertinoIcons.doc_checkmark': CupertinoIcons.doc_checkmark,
  'CupertinoIcons.doc_checkmark_fill': CupertinoIcons.doc_checkmark_fill,
  'CupertinoIcons.doc_circle': CupertinoIcons.doc_circle,
  'CupertinoIcons.doc_circle_fill': CupertinoIcons.doc_circle_fill,
  'CupertinoIcons.doc_fill': CupertinoIcons.doc_fill,
  'CupertinoIcons.doc_on_clipboard': CupertinoIcons.doc_on_clipboard,
  'CupertinoIcons.doc_on_clipboard_fill': CupertinoIcons.doc_on_clipboard_fill,
  'CupertinoIcons.doc_on_doc': CupertinoIcons.doc_on_doc,
  'CupertinoIcons.doc_on_doc_fill': CupertinoIcons.doc_on_doc_fill,
  'CupertinoIcons.doc_person': CupertinoIcons.doc_person,
  'CupertinoIcons.doc_person_fill': CupertinoIcons.doc_person_fill,
  'CupertinoIcons.doc_plaintext': CupertinoIcons.doc_plaintext,
  'CupertinoIcons.doc_richtext': CupertinoIcons.doc_richtext,
  'CupertinoIcons.doc_text': CupertinoIcons.doc_text,
  'CupertinoIcons.doc_text_fill': CupertinoIcons.doc_text_fill,
  'CupertinoIcons.doc_text_search': CupertinoIcons.doc_text_search,
  'CupertinoIcons.doc_text_viewfinder': CupertinoIcons.doc_text_viewfinder,
  'CupertinoIcons.dot_radiowaves_left_right':
      CupertinoIcons.dot_radiowaves_left_right,
  'CupertinoIcons.dot_radiowaves_right': CupertinoIcons.dot_radiowaves_right,
  'CupertinoIcons.dot_square': CupertinoIcons.dot_square,
  'CupertinoIcons.dot_square_fill': CupertinoIcons.dot_square_fill,
  'CupertinoIcons.download_circle': CupertinoIcons.download_circle,
  'CupertinoIcons.download_circle_fill': CupertinoIcons.download_circle_fill,
  'CupertinoIcons.drop': CupertinoIcons.drop,
  'CupertinoIcons.drop_fill': CupertinoIcons.drop_fill,
  'CupertinoIcons.drop_triangle': CupertinoIcons.drop_triangle,
  'CupertinoIcons.drop_triangle_fill': CupertinoIcons.drop_triangle_fill,
  'CupertinoIcons.ear': CupertinoIcons.ear,
  'CupertinoIcons.eject': CupertinoIcons.eject,
  'CupertinoIcons.eject_fill': CupertinoIcons.eject_fill,
  'CupertinoIcons.ellipses_bubble': CupertinoIcons.ellipses_bubble,
  'CupertinoIcons.ellipses_bubble_fill': CupertinoIcons.ellipses_bubble_fill,
  'CupertinoIcons.ellipsis_circle': CupertinoIcons.ellipsis_circle,
  'CupertinoIcons.ellipsis_circle_fill': CupertinoIcons.ellipsis_circle_fill,
  'CupertinoIcons.ellipsis_vertical': CupertinoIcons.ellipsis_vertical,
  'CupertinoIcons.ellipsis_vertical_circle':
      CupertinoIcons.ellipsis_vertical_circle,
  'CupertinoIcons.ellipsis_vertical_circle_fill':
      CupertinoIcons.ellipsis_vertical_circle_fill,
  'CupertinoIcons.envelope': CupertinoIcons.envelope,
  'CupertinoIcons.envelope_badge': CupertinoIcons.envelope_badge,
  'CupertinoIcons.envelope_badge_fill': CupertinoIcons.envelope_badge_fill,
  'CupertinoIcons.envelope_circle': CupertinoIcons.envelope_circle,
  'CupertinoIcons.envelope_circle_fill': CupertinoIcons.envelope_circle_fill,
  'CupertinoIcons.envelope_fill': CupertinoIcons.envelope_fill,
  'CupertinoIcons.envelope_open': CupertinoIcons.envelope_open,
  'CupertinoIcons.envelope_open_fill': CupertinoIcons.envelope_open_fill,
  'CupertinoIcons.equal': CupertinoIcons.equal,
  'CupertinoIcons.equal_circle': CupertinoIcons.equal_circle,
  'CupertinoIcons.equal_circle_fill': CupertinoIcons.equal_circle_fill,
  'CupertinoIcons.equal_square': CupertinoIcons.equal_square,
  'CupertinoIcons.equal_square_fill': CupertinoIcons.equal_square_fill,
  'CupertinoIcons.escape': CupertinoIcons.escape,
  'CupertinoIcons.exclamationmark': CupertinoIcons.exclamationmark,
  'CupertinoIcons.exclamationmark_bubble':
      CupertinoIcons.exclamationmark_bubble,
  'CupertinoIcons.exclamationmark_bubble_fill':
      CupertinoIcons.exclamationmark_bubble_fill,
  'CupertinoIcons.exclamationmark_circle':
      CupertinoIcons.exclamationmark_circle,
  'CupertinoIcons.exclamationmark_circle_fill':
      CupertinoIcons.exclamationmark_circle_fill,
  'CupertinoIcons.exclamationmark_octagon':
      CupertinoIcons.exclamationmark_octagon,
  'CupertinoIcons.exclamationmark_octagon_fill':
      CupertinoIcons.exclamationmark_octagon_fill,
  'CupertinoIcons.exclamationmark_shield':
      CupertinoIcons.exclamationmark_shield,
  'CupertinoIcons.exclamationmark_shield_fill':
      CupertinoIcons.exclamationmark_shield_fill,
  'CupertinoIcons.exclamationmark_square':
      CupertinoIcons.exclamationmark_square,
  'CupertinoIcons.exclamationmark_square_fill':
      CupertinoIcons.exclamationmark_square_fill,
  'CupertinoIcons.exclamationmark_triangle':
      CupertinoIcons.exclamationmark_triangle,
  'CupertinoIcons.exclamationmark_triangle_fill':
      CupertinoIcons.exclamationmark_triangle_fill,
  'CupertinoIcons.eye_fill': CupertinoIcons.eye_fill,
  'CupertinoIcons.eye_slash': CupertinoIcons.eye_slash,
  'CupertinoIcons.eye_slash_fill': CupertinoIcons.eye_slash_fill,
  'CupertinoIcons.eyedropper': CupertinoIcons.eyedropper,
  'CupertinoIcons.eyedropper_full': CupertinoIcons.eyedropper_full,
  'CupertinoIcons.eyedropper_halffull': CupertinoIcons.eyedropper_halffull,
  'CupertinoIcons.eyeglasses': CupertinoIcons.eyeglasses,
  'CupertinoIcons.f_cursive': CupertinoIcons.f_cursive,
  'CupertinoIcons.f_cursive_circle': CupertinoIcons.f_cursive_circle,
  'CupertinoIcons.f_cursive_circle_fill': CupertinoIcons.f_cursive_circle_fill,
  'CupertinoIcons.film': CupertinoIcons.film,
  'CupertinoIcons.film_fill': CupertinoIcons.film_fill,
  'CupertinoIcons.flag_circle': CupertinoIcons.flag_circle,
  'CupertinoIcons.flag_circle_fill': CupertinoIcons.flag_circle_fill,
  'CupertinoIcons.flag_fill': CupertinoIcons.flag_fill,
  'CupertinoIcons.flag_slash': CupertinoIcons.flag_slash,
  'CupertinoIcons.flag_slash_fill': CupertinoIcons.flag_slash_fill,
  'CupertinoIcons.flame': CupertinoIcons.flame,
  'CupertinoIcons.flame_fill': CupertinoIcons.flame_fill,
  'CupertinoIcons.floppy_disk': CupertinoIcons.floppy_disk,
  'CupertinoIcons.flowchart': CupertinoIcons.flowchart,
  'CupertinoIcons.flowchart_fill': CupertinoIcons.flowchart_fill,
  'CupertinoIcons.folder_badge_minus': CupertinoIcons.folder_badge_minus,
  'CupertinoIcons.folder_badge_person_crop':
      CupertinoIcons.folder_badge_person_crop,
  'CupertinoIcons.folder_badge_plus': CupertinoIcons.folder_badge_plus,
  'CupertinoIcons.folder_circle': CupertinoIcons.folder_circle,
  'CupertinoIcons.folder_circle_fill': CupertinoIcons.folder_circle_fill,
  'CupertinoIcons.folder_fill': CupertinoIcons.folder_fill,
  'CupertinoIcons.folder_fill_badge_minus':
      CupertinoIcons.folder_fill_badge_minus,
  'CupertinoIcons.folder_fill_badge_person_crop':
      CupertinoIcons.folder_fill_badge_person_crop,
  'CupertinoIcons.folder_fill_badge_plus':
      CupertinoIcons.folder_fill_badge_plus,
  'CupertinoIcons.forward_end': CupertinoIcons.forward_end,
  'CupertinoIcons.forward_end_alt': CupertinoIcons.forward_end_alt,
  'CupertinoIcons.forward_end_alt_fill': CupertinoIcons.forward_end_alt_fill,
  'CupertinoIcons.forward_end_fill': CupertinoIcons.forward_end_fill,
  'CupertinoIcons.forward_fill': CupertinoIcons.forward_fill,
  'CupertinoIcons.function': CupertinoIcons.function,
  'CupertinoIcons.fx': CupertinoIcons.fx,
  'CupertinoIcons.gamecontroller': CupertinoIcons.gamecontroller,
  'CupertinoIcons.gamecontroller_alt_fill':
      CupertinoIcons.gamecontroller_alt_fill,
  'CupertinoIcons.gamecontroller_fill': CupertinoIcons.gamecontroller_fill,
  'CupertinoIcons.gauge': CupertinoIcons.gauge,
  'CupertinoIcons.gauge_badge_minus': CupertinoIcons.gauge_badge_minus,
  'CupertinoIcons.gauge_badge_plus': CupertinoIcons.gauge_badge_plus,
  'CupertinoIcons.gear_alt': CupertinoIcons.gear_alt,
  'CupertinoIcons.gear_alt_fill': CupertinoIcons.gear_alt_fill,
  'CupertinoIcons.gift': CupertinoIcons.gift,
  'CupertinoIcons.gift_alt': CupertinoIcons.gift_alt,
  'CupertinoIcons.gift_alt_fill': CupertinoIcons.gift_alt_fill,
  'CupertinoIcons.gift_fill': CupertinoIcons.gift_fill,
  'CupertinoIcons.globe': CupertinoIcons.globe,
  'CupertinoIcons.gobackward': CupertinoIcons.gobackward,
  'CupertinoIcons.gobackward_10': CupertinoIcons.gobackward_10,
  'CupertinoIcons.gobackward_15': CupertinoIcons.gobackward_15,
  'CupertinoIcons.gobackward_30': CupertinoIcons.gobackward_30,
  'CupertinoIcons.gobackward_45': CupertinoIcons.gobackward_45,
  'CupertinoIcons.gobackward_60': CupertinoIcons.gobackward_60,
  'CupertinoIcons.gobackward_75': CupertinoIcons.gobackward_75,
  'CupertinoIcons.gobackward_90': CupertinoIcons.gobackward_90,
  'CupertinoIcons.gobackward_minus': CupertinoIcons.gobackward_minus,
  'CupertinoIcons.goforward': CupertinoIcons.goforward,
  'CupertinoIcons.goforward_10': CupertinoIcons.goforward_10,
  'CupertinoIcons.goforward_15': CupertinoIcons.goforward_15,
  'CupertinoIcons.goforward_30': CupertinoIcons.goforward_30,
  'CupertinoIcons.goforward_45': CupertinoIcons.goforward_45,
  'CupertinoIcons.goforward_60': CupertinoIcons.goforward_60,
  'CupertinoIcons.goforward_75': CupertinoIcons.goforward_75,
  'CupertinoIcons.goforward_90': CupertinoIcons.goforward_90,
  'CupertinoIcons.goforward_plus': CupertinoIcons.goforward_plus,
  'CupertinoIcons.graph_circle': CupertinoIcons.graph_circle,
  'CupertinoIcons.graph_circle_fill': CupertinoIcons.graph_circle_fill,
  'CupertinoIcons.graph_square': CupertinoIcons.graph_square,
  'CupertinoIcons.graph_square_fill': CupertinoIcons.graph_square_fill,
  'CupertinoIcons.greaterthan': CupertinoIcons.greaterthan,
  'CupertinoIcons.greaterthan_circle': CupertinoIcons.greaterthan_circle,
  'CupertinoIcons.greaterthan_circle_fill':
      CupertinoIcons.greaterthan_circle_fill,
  'CupertinoIcons.greaterthan_square': CupertinoIcons.greaterthan_square,
  'CupertinoIcons.greaterthan_square_fill':
      CupertinoIcons.greaterthan_square_fill,
  'CupertinoIcons.grid': CupertinoIcons.grid,
  'CupertinoIcons.grid_circle': CupertinoIcons.grid_circle,
  'CupertinoIcons.grid_circle_fill': CupertinoIcons.grid_circle_fill,
  'CupertinoIcons.guitars': CupertinoIcons.guitars,
  'CupertinoIcons.hammer': CupertinoIcons.hammer,
  'CupertinoIcons.hammer_fill': CupertinoIcons.hammer_fill,
  'CupertinoIcons.hand_draw': CupertinoIcons.hand_draw,
  'CupertinoIcons.hand_draw_fill': CupertinoIcons.hand_draw_fill,
  'CupertinoIcons.hand_point_left': CupertinoIcons.hand_point_left,
  'CupertinoIcons.hand_point_left_fill': CupertinoIcons.hand_point_left_fill,
  'CupertinoIcons.hand_point_right': CupertinoIcons.hand_point_right,
  'CupertinoIcons.hand_point_right_fill': CupertinoIcons.hand_point_right_fill,
  'CupertinoIcons.hand_raised': CupertinoIcons.hand_raised,
  'CupertinoIcons.hand_raised_fill': CupertinoIcons.hand_raised_fill,
  'CupertinoIcons.hand_raised_slash': CupertinoIcons.hand_raised_slash,
  'CupertinoIcons.hand_raised_slash_fill':
      CupertinoIcons.hand_raised_slash_fill,
  'CupertinoIcons.hand_thumbsdown': CupertinoIcons.hand_thumbsdown,
  'CupertinoIcons.hand_thumbsdown_fill': CupertinoIcons.hand_thumbsdown_fill,
  'CupertinoIcons.hand_thumbsup': CupertinoIcons.hand_thumbsup,
  'CupertinoIcons.hand_thumbsup_fill': CupertinoIcons.hand_thumbsup_fill,
  'CupertinoIcons.hare': CupertinoIcons.hare,
  'CupertinoIcons.hare_fill': CupertinoIcons.hare_fill,
  'CupertinoIcons.headphones': CupertinoIcons.headphones,
  'CupertinoIcons.heart_circle': CupertinoIcons.heart_circle,
  'CupertinoIcons.heart_circle_fill': CupertinoIcons.heart_circle_fill,
  'CupertinoIcons.heart_fill': CupertinoIcons.heart_fill,
  'CupertinoIcons.heart_slash': CupertinoIcons.heart_slash,
  'CupertinoIcons.heart_slash_circle': CupertinoIcons.heart_slash_circle,
  'CupertinoIcons.heart_slash_circle_fill':
      CupertinoIcons.heart_slash_circle_fill,
  'CupertinoIcons.heart_slash_fill': CupertinoIcons.heart_slash_fill,
  'CupertinoIcons.helm': CupertinoIcons.helm,
  'CupertinoIcons.hexagon': CupertinoIcons.hexagon,
  'CupertinoIcons.hexagon_fill': CupertinoIcons.hexagon_fill,
  'CupertinoIcons.hifispeaker': CupertinoIcons.hifispeaker,
  'CupertinoIcons.hifispeaker_fill': CupertinoIcons.hifispeaker_fill,
  'CupertinoIcons.hourglass': CupertinoIcons.hourglass,
  'CupertinoIcons.hourglass_bottomhalf_fill':
      CupertinoIcons.hourglass_bottomhalf_fill,
  'CupertinoIcons.hourglass_tophalf_fill':
      CupertinoIcons.hourglass_tophalf_fill,
  'CupertinoIcons.house': CupertinoIcons.house,
  'CupertinoIcons.house_alt': CupertinoIcons.house_alt,
  'CupertinoIcons.house_alt_fill': CupertinoIcons.house_alt_fill,
  'CupertinoIcons.house_fill': CupertinoIcons.house_fill,
  'CupertinoIcons.hurricane': CupertinoIcons.hurricane,
  'CupertinoIcons.increase_indent': CupertinoIcons.increase_indent,
  'CupertinoIcons.increase_quotelevel': CupertinoIcons.increase_quotelevel,
  'CupertinoIcons.infinite': CupertinoIcons.infinite,
  'CupertinoIcons.info_circle': CupertinoIcons.info_circle,
  'CupertinoIcons.info_circle_fill': CupertinoIcons.info_circle_fill,
  'CupertinoIcons.italic': CupertinoIcons.italic,
  'CupertinoIcons.keyboard': CupertinoIcons.keyboard,
  'CupertinoIcons.keyboard_chevron_compact_down':
      CupertinoIcons.keyboard_chevron_compact_down,
  'CupertinoIcons.largecircle_fill_circle':
      CupertinoIcons.largecircle_fill_circle,
  'CupertinoIcons.lasso': CupertinoIcons.lasso,
  'CupertinoIcons.layers': CupertinoIcons.layers,
  'CupertinoIcons.layers_alt': CupertinoIcons.layers_alt,
  'CupertinoIcons.layers_alt_fill': CupertinoIcons.layers_alt_fill,
  'CupertinoIcons.layers_fill': CupertinoIcons.layers_fill,
  'CupertinoIcons.leaf_arrow_circlepath': CupertinoIcons.leaf_arrow_circlepath,
  'CupertinoIcons.lessthan': CupertinoIcons.lessthan,
  'CupertinoIcons.lessthan_circle': CupertinoIcons.lessthan_circle,
  'CupertinoIcons.lessthan_circle_fill': CupertinoIcons.lessthan_circle_fill,
  'CupertinoIcons.lessthan_square': CupertinoIcons.lessthan_square,
  'CupertinoIcons.lessthan_square_fill': CupertinoIcons.lessthan_square_fill,
  'CupertinoIcons.light_max': CupertinoIcons.light_max,
  'CupertinoIcons.light_min': CupertinoIcons.light_min,
  'CupertinoIcons.lightbulb': CupertinoIcons.lightbulb,
  'CupertinoIcons.lightbulb_fill': CupertinoIcons.lightbulb_fill,
  'CupertinoIcons.lightbulb_slash': CupertinoIcons.lightbulb_slash,
  'CupertinoIcons.lightbulb_slash_fill': CupertinoIcons.lightbulb_slash_fill,
  'CupertinoIcons.line_horizontal_3': CupertinoIcons.line_horizontal_3,
  'CupertinoIcons.line_horizontal_3_decrease':
      CupertinoIcons.line_horizontal_3_decrease,
  'CupertinoIcons.line_horizontal_3_decrease_circle':
      CupertinoIcons.line_horizontal_3_decrease_circle,
  'CupertinoIcons.line_horizontal_3_decrease_circle_fill':
      CupertinoIcons.line_horizontal_3_decrease_circle_fill,
  'CupertinoIcons.link': CupertinoIcons.link,
  'CupertinoIcons.link_circle': CupertinoIcons.link_circle,
  'CupertinoIcons.link_circle_fill': CupertinoIcons.link_circle_fill,
  'CupertinoIcons.list_bullet': CupertinoIcons.list_bullet,
  'CupertinoIcons.list_bullet_below_rectangle':
      CupertinoIcons.list_bullet_below_rectangle,
  'CupertinoIcons.list_bullet_indent': CupertinoIcons.list_bullet_indent,
  'CupertinoIcons.list_dash': CupertinoIcons.list_dash,
  'CupertinoIcons.list_number': CupertinoIcons.list_number,
  'CupertinoIcons.list_number_rtl': CupertinoIcons.list_number_rtl,
  'CupertinoIcons.location_circle': CupertinoIcons.location_circle,
  'CupertinoIcons.location_circle_fill': CupertinoIcons.location_circle_fill,
  'CupertinoIcons.location_fill': CupertinoIcons.location_fill,
  'CupertinoIcons.location_north': CupertinoIcons.location_north,
  'CupertinoIcons.location_north_fill': CupertinoIcons.location_north_fill,
  'CupertinoIcons.location_north_line': CupertinoIcons.location_north_line,
  'CupertinoIcons.location_north_line_fill':
      CupertinoIcons.location_north_line_fill,
  'CupertinoIcons.location_slash': CupertinoIcons.location_slash,
  'CupertinoIcons.location_slash_fill': CupertinoIcons.location_slash_fill,
  'CupertinoIcons.lock': CupertinoIcons.lock,
  'CupertinoIcons.lock_circle': CupertinoIcons.lock_circle,
  'CupertinoIcons.lock_circle_fill': CupertinoIcons.lock_circle_fill,
  'CupertinoIcons.lock_fill': CupertinoIcons.lock_fill,
  'CupertinoIcons.lock_open': CupertinoIcons.lock_open,
  'CupertinoIcons.lock_open_fill': CupertinoIcons.lock_open_fill,
  'CupertinoIcons.lock_rotation': CupertinoIcons.lock_rotation,
  'CupertinoIcons.lock_rotation_open': CupertinoIcons.lock_rotation_open,
  'CupertinoIcons.lock_shield': CupertinoIcons.lock_shield,
  'CupertinoIcons.lock_shield_fill': CupertinoIcons.lock_shield_fill,
  'CupertinoIcons.lock_slash': CupertinoIcons.lock_slash,
  'CupertinoIcons.lock_slash_fill': CupertinoIcons.lock_slash_fill,
  'CupertinoIcons.macwindow': CupertinoIcons.macwindow,
  'CupertinoIcons.map': CupertinoIcons.map,
  'CupertinoIcons.map_fill': CupertinoIcons.map_fill,
  'CupertinoIcons.map_pin': CupertinoIcons.map_pin,
  'CupertinoIcons.map_pin_ellipse': CupertinoIcons.map_pin_ellipse,
  'CupertinoIcons.map_pin_slash': CupertinoIcons.map_pin_slash,
  'CupertinoIcons.memories': CupertinoIcons.memories,
  'CupertinoIcons.memories_badge_minus': CupertinoIcons.memories_badge_minus,
  'CupertinoIcons.memories_badge_plus': CupertinoIcons.memories_badge_plus,
  'CupertinoIcons.metronome': CupertinoIcons.metronome,
  'CupertinoIcons.mic_circle': CupertinoIcons.mic_circle,
  'CupertinoIcons.mic_circle_fill': CupertinoIcons.mic_circle_fill,
  'CupertinoIcons.mic_fill': CupertinoIcons.mic_fill,
  'CupertinoIcons.mic_slash': CupertinoIcons.mic_slash,
  'CupertinoIcons.mic_slash_fill': CupertinoIcons.mic_slash_fill,
  'CupertinoIcons.minus': CupertinoIcons.minus,
  'CupertinoIcons.minus_circle': CupertinoIcons.minus_circle,
  'CupertinoIcons.minus_circle_fill': CupertinoIcons.minus_circle_fill,
  'CupertinoIcons.minus_rectangle': CupertinoIcons.minus_rectangle,
  'CupertinoIcons.minus_rectangle_fill': CupertinoIcons.minus_rectangle_fill,
  'CupertinoIcons.minus_slash_plus': CupertinoIcons.minus_slash_plus,
  'CupertinoIcons.minus_square': CupertinoIcons.minus_square,
  'CupertinoIcons.minus_square_fill': CupertinoIcons.minus_square_fill,
  'CupertinoIcons.money_dollar': CupertinoIcons.money_dollar,
  'CupertinoIcons.money_dollar_circle': CupertinoIcons.money_dollar_circle,
  'CupertinoIcons.money_dollar_circle_fill':
      CupertinoIcons.money_dollar_circle_fill,
  'CupertinoIcons.money_euro': CupertinoIcons.money_euro,
  'CupertinoIcons.money_euro_circle': CupertinoIcons.money_euro_circle,
  'CupertinoIcons.money_euro_circle_fill':
      CupertinoIcons.money_euro_circle_fill,
  'CupertinoIcons.money_pound': CupertinoIcons.money_pound,
  'CupertinoIcons.money_pound_circle': CupertinoIcons.money_pound_circle,
  'CupertinoIcons.money_pound_circle_fill':
      CupertinoIcons.money_pound_circle_fill,
  'CupertinoIcons.money_rubl': CupertinoIcons.money_rubl,
  'CupertinoIcons.money_rubl_circle': CupertinoIcons.money_rubl_circle,
  'CupertinoIcons.money_rubl_circle_fill':
      CupertinoIcons.money_rubl_circle_fill,
  'CupertinoIcons.money_yen': CupertinoIcons.money_yen,
  'CupertinoIcons.money_yen_circle': CupertinoIcons.money_yen_circle,
  'CupertinoIcons.money_yen_circle_fill': CupertinoIcons.money_yen_circle_fill,
  'CupertinoIcons.moon': CupertinoIcons.moon,
  'CupertinoIcons.moon_circle': CupertinoIcons.moon_circle,
  'CupertinoIcons.moon_circle_fill': CupertinoIcons.moon_circle_fill,
  'CupertinoIcons.moon_fill': CupertinoIcons.moon_fill,
  'CupertinoIcons.moon_stars': CupertinoIcons.moon_stars,
  'CupertinoIcons.moon_stars_fill': CupertinoIcons.moon_stars_fill,
  'CupertinoIcons.moon_zzz': CupertinoIcons.moon_zzz,
  'CupertinoIcons.moon_zzz_fill': CupertinoIcons.moon_zzz_fill,
  'CupertinoIcons.move': CupertinoIcons.move,
  'CupertinoIcons.multiply': CupertinoIcons.multiply,
  'CupertinoIcons.multiply_circle': CupertinoIcons.multiply_circle,
  'CupertinoIcons.multiply_circle_fill': CupertinoIcons.multiply_circle_fill,
  'CupertinoIcons.multiply_square': CupertinoIcons.multiply_square,
  'CupertinoIcons.multiply_square_fill': CupertinoIcons.multiply_square_fill,
  'CupertinoIcons.music_albums': CupertinoIcons.music_albums,
  'CupertinoIcons.music_albums_fill': CupertinoIcons.music_albums_fill,
  'CupertinoIcons.music_house': CupertinoIcons.music_house,
  'CupertinoIcons.music_house_fill': CupertinoIcons.music_house_fill,
  'CupertinoIcons.music_mic': CupertinoIcons.music_mic,
  'CupertinoIcons.music_note_2': CupertinoIcons.music_note_2,
  'CupertinoIcons.music_note_list': CupertinoIcons.music_note_list,
  'CupertinoIcons.nosign': CupertinoIcons.nosign,
  'CupertinoIcons.number': CupertinoIcons.number,
  'CupertinoIcons.number_circle': CupertinoIcons.number_circle,
  'CupertinoIcons.number_circle_fill': CupertinoIcons.number_circle_fill,
  'CupertinoIcons.number_square': CupertinoIcons.number_square,
  'CupertinoIcons.number_square_fill': CupertinoIcons.number_square_fill,
  'CupertinoIcons.option': CupertinoIcons.option,
  'CupertinoIcons.paintbrush': CupertinoIcons.paintbrush,
  'CupertinoIcons.paintbrush_fill': CupertinoIcons.paintbrush_fill,
  'CupertinoIcons.pano': CupertinoIcons.pano,
  'CupertinoIcons.pano_fill': CupertinoIcons.pano_fill,
  'CupertinoIcons.paperclip': CupertinoIcons.paperclip,
  'CupertinoIcons.paperplane': CupertinoIcons.paperplane,
  'CupertinoIcons.paperplane_fill': CupertinoIcons.paperplane_fill,
  'CupertinoIcons.paragraph': CupertinoIcons.paragraph,
  'CupertinoIcons.pause_circle': CupertinoIcons.pause_circle,
  'CupertinoIcons.pause_circle_fill': CupertinoIcons.pause_circle_fill,
  'CupertinoIcons.pause_fill': CupertinoIcons.pause_fill,
  'CupertinoIcons.pause_rectangle': CupertinoIcons.pause_rectangle,
  'CupertinoIcons.pause_rectangle_fill': CupertinoIcons.pause_rectangle_fill,
  'CupertinoIcons.pencil_circle': CupertinoIcons.pencil_circle,
  'CupertinoIcons.pencil_circle_fill': CupertinoIcons.pencil_circle_fill,
  'CupertinoIcons.pencil_ellipsis_rectangle':
      CupertinoIcons.pencil_ellipsis_rectangle,
  'CupertinoIcons.pencil_outline': CupertinoIcons.pencil_outline,
  'CupertinoIcons.pencil_slash': CupertinoIcons.pencil_slash,
  'CupertinoIcons.percent': CupertinoIcons.percent,
  'CupertinoIcons.person_2': CupertinoIcons.person_2,
  'CupertinoIcons.person_2_alt': CupertinoIcons.person_2_alt,
  'CupertinoIcons.person_2_fill': CupertinoIcons.person_2_fill,
  'CupertinoIcons.person_2_square_stack': CupertinoIcons.person_2_square_stack,
  'CupertinoIcons.person_2_square_stack_fill':
      CupertinoIcons.person_2_square_stack_fill,
  'CupertinoIcons.person_3': CupertinoIcons.person_3,
  'CupertinoIcons.person_3_fill': CupertinoIcons.person_3_fill,
  'CupertinoIcons.person_alt': CupertinoIcons.person_alt,
  'CupertinoIcons.person_alt_circle': CupertinoIcons.person_alt_circle,
  'CupertinoIcons.person_alt_circle_fill':
      CupertinoIcons.person_alt_circle_fill,
  'CupertinoIcons.person_badge_minus': CupertinoIcons.person_badge_minus,
  'CupertinoIcons.person_badge_minus_fill':
      CupertinoIcons.person_badge_minus_fill,
  'CupertinoIcons.person_badge_plus': CupertinoIcons.person_badge_plus,
  'CupertinoIcons.person_badge_plus_fill':
      CupertinoIcons.person_badge_plus_fill,
  'CupertinoIcons.person_circle': CupertinoIcons.person_circle,
  'CupertinoIcons.person_circle_fill': CupertinoIcons.person_circle_fill,
  'CupertinoIcons.person_crop_circle': CupertinoIcons.person_crop_circle,
  'CupertinoIcons.person_crop_circle_badge_checkmark':
      CupertinoIcons.person_crop_circle_badge_checkmark,
  'CupertinoIcons.person_crop_circle_badge_exclam':
      CupertinoIcons.person_crop_circle_badge_exclam,
  'CupertinoIcons.person_crop_circle_badge_minus':
      CupertinoIcons.person_crop_circle_badge_minus,
  'CupertinoIcons.person_crop_circle_badge_plus':
      CupertinoIcons.person_crop_circle_badge_plus,
  'CupertinoIcons.person_crop_circle_badge_xmark':
      CupertinoIcons.person_crop_circle_badge_xmark,
  'CupertinoIcons.person_crop_circle_fill':
      CupertinoIcons.person_crop_circle_fill,
  'CupertinoIcons.person_crop_circle_fill_badge_checkmark':
      CupertinoIcons.person_crop_circle_fill_badge_checkmark,
  'CupertinoIcons.person_crop_circle_fill_badge_exclam':
      CupertinoIcons.person_crop_circle_fill_badge_exclam,
  'CupertinoIcons.person_crop_circle_fill_badge_minus':
      CupertinoIcons.person_crop_circle_fill_badge_minus,
  'CupertinoIcons.person_crop_circle_fill_badge_plus':
      CupertinoIcons.person_crop_circle_fill_badge_plus,
  'CupertinoIcons.person_crop_circle_fill_badge_xmark':
      CupertinoIcons.person_crop_circle_fill_badge_xmark,
  'CupertinoIcons.person_crop_rectangle': CupertinoIcons.person_crop_rectangle,
  'CupertinoIcons.person_crop_rectangle_fill':
      CupertinoIcons.person_crop_rectangle_fill,
  'CupertinoIcons.person_crop_square': CupertinoIcons.person_crop_square,
  'CupertinoIcons.person_crop_square_fill':
      CupertinoIcons.person_crop_square_fill,
  'CupertinoIcons.person_fill': CupertinoIcons.person_fill,
  'CupertinoIcons.personalhotspot': CupertinoIcons.personalhotspot,
  'CupertinoIcons.perspective': CupertinoIcons.perspective,
  'CupertinoIcons.phone_arrow_down_left': CupertinoIcons.phone_arrow_down_left,
  'CupertinoIcons.phone_arrow_right': CupertinoIcons.phone_arrow_right,
  'CupertinoIcons.phone_arrow_up_right': CupertinoIcons.phone_arrow_up_right,
  'CupertinoIcons.phone_badge_plus': CupertinoIcons.phone_badge_plus,
  'CupertinoIcons.phone_circle': CupertinoIcons.phone_circle,
  'CupertinoIcons.phone_circle_fill': CupertinoIcons.phone_circle_fill,
  'CupertinoIcons.phone_down': CupertinoIcons.phone_down,
  'CupertinoIcons.phone_down_circle': CupertinoIcons.phone_down_circle,
  'CupertinoIcons.phone_down_circle_fill':
      CupertinoIcons.phone_down_circle_fill,
  'CupertinoIcons.phone_down_fill': CupertinoIcons.phone_down_fill,
  'CupertinoIcons.phone_fill': CupertinoIcons.phone_fill,
  'CupertinoIcons.phone_fill_arrow_down_left':
      CupertinoIcons.phone_fill_arrow_down_left,
  'CupertinoIcons.phone_fill_arrow_right':
      CupertinoIcons.phone_fill_arrow_right,
  'CupertinoIcons.phone_fill_arrow_up_right':
      CupertinoIcons.phone_fill_arrow_up_right,
  'CupertinoIcons.phone_fill_badge_plus': CupertinoIcons.phone_fill_badge_plus,
  'CupertinoIcons.photo': CupertinoIcons.photo,
  'CupertinoIcons.photo_fill': CupertinoIcons.photo_fill,
  'CupertinoIcons.photo_fill_on_rectangle_fill':
      CupertinoIcons.photo_fill_on_rectangle_fill,
  'CupertinoIcons.photo_on_rectangle': CupertinoIcons.photo_on_rectangle,
  'CupertinoIcons.piano': CupertinoIcons.piano,
  'CupertinoIcons.pin': CupertinoIcons.pin,
  'CupertinoIcons.pin_fill': CupertinoIcons.pin_fill,
  'CupertinoIcons.pin_slash': CupertinoIcons.pin_slash,
  'CupertinoIcons.pin_slash_fill': CupertinoIcons.pin_slash_fill,
  'CupertinoIcons.placemark': CupertinoIcons.placemark,
  'CupertinoIcons.placemark_fill': CupertinoIcons.placemark_fill,
  'CupertinoIcons.play': CupertinoIcons.play,
  'CupertinoIcons.play_circle': CupertinoIcons.play_circle,
  'CupertinoIcons.play_circle_fill': CupertinoIcons.play_circle_fill,
  'CupertinoIcons.play_fill': CupertinoIcons.play_fill,
  'CupertinoIcons.play_rectangle': CupertinoIcons.play_rectangle,
  'CupertinoIcons.play_rectangle_fill': CupertinoIcons.play_rectangle_fill,
  'CupertinoIcons.playpause': CupertinoIcons.playpause,
  'CupertinoIcons.playpause_fill': CupertinoIcons.playpause_fill,
  'CupertinoIcons.plus': CupertinoIcons.plus,
  'CupertinoIcons.plus_app': CupertinoIcons.plus_app,
  'CupertinoIcons.plus_app_fill': CupertinoIcons.plus_app_fill,
  'CupertinoIcons.plus_bubble': CupertinoIcons.plus_bubble,
  'CupertinoIcons.plus_bubble_fill': CupertinoIcons.plus_bubble_fill,
  'CupertinoIcons.plus_circle': CupertinoIcons.plus_circle,
  'CupertinoIcons.plus_circle_fill': CupertinoIcons.plus_circle_fill,
  'CupertinoIcons.plus_rectangle': CupertinoIcons.plus_rectangle,
  'CupertinoIcons.plus_rectangle_fill': CupertinoIcons.plus_rectangle_fill,
  'CupertinoIcons.plus_rectangle_fill_on_rectangle_fill':
      CupertinoIcons.plus_rectangle_fill_on_rectangle_fill,
  'CupertinoIcons.plus_rectangle_on_rectangle':
      CupertinoIcons.plus_rectangle_on_rectangle,
  'CupertinoIcons.plus_slash_minus': CupertinoIcons.plus_slash_minus,
  'CupertinoIcons.plus_square': CupertinoIcons.plus_square,
  'CupertinoIcons.plus_square_fill': CupertinoIcons.plus_square_fill,
  'CupertinoIcons.plus_square_fill_on_square_fill':
      CupertinoIcons.plus_square_fill_on_square_fill,
  'CupertinoIcons.plus_square_on_square': CupertinoIcons.plus_square_on_square,
  'CupertinoIcons.plusminus': CupertinoIcons.plusminus,
  'CupertinoIcons.plusminus_circle': CupertinoIcons.plusminus_circle,
  'CupertinoIcons.plusminus_circle_fill': CupertinoIcons.plusminus_circle_fill,
  'CupertinoIcons.power': CupertinoIcons.power,
  'CupertinoIcons.printer': CupertinoIcons.printer,
  'CupertinoIcons.printer_fill': CupertinoIcons.printer_fill,
  'CupertinoIcons.projective': CupertinoIcons.projective,
  'CupertinoIcons.purchased': CupertinoIcons.purchased,
  'CupertinoIcons.purchased_circle': CupertinoIcons.purchased_circle,
  'CupertinoIcons.purchased_circle_fill': CupertinoIcons.purchased_circle_fill,
  'CupertinoIcons.qrcode': CupertinoIcons.qrcode,
  'CupertinoIcons.qrcode_viewfinder': CupertinoIcons.qrcode_viewfinder,
  'CupertinoIcons.question': CupertinoIcons.question,
  'CupertinoIcons.question_circle': CupertinoIcons.question_circle,
  'CupertinoIcons.question_circle_fill': CupertinoIcons.question_circle_fill,
  'CupertinoIcons.question_diamond': CupertinoIcons.question_diamond,
  'CupertinoIcons.question_diamond_fill': CupertinoIcons.question_diamond_fill,
  'CupertinoIcons.question_square': CupertinoIcons.question_square,
  'CupertinoIcons.question_square_fill': CupertinoIcons.question_square_fill,
  'CupertinoIcons.quote_bubble': CupertinoIcons.quote_bubble,
  'CupertinoIcons.quote_bubble_fill': CupertinoIcons.quote_bubble_fill,
  'CupertinoIcons.radiowaves_left': CupertinoIcons.radiowaves_left,
  'CupertinoIcons.radiowaves_right': CupertinoIcons.radiowaves_right,
  'CupertinoIcons.rays': CupertinoIcons.rays,
  'CupertinoIcons.recordingtape': CupertinoIcons.recordingtape,
  'CupertinoIcons.rectangle': CupertinoIcons.rectangle,
  'CupertinoIcons.rectangle_3_offgrid': CupertinoIcons.rectangle_3_offgrid,
  'CupertinoIcons.rectangle_3_offgrid_fill':
      CupertinoIcons.rectangle_3_offgrid_fill,
  'CupertinoIcons.rectangle_arrow_up_right_arrow_down_left':
      CupertinoIcons.rectangle_arrow_up_right_arrow_down_left,
  'CupertinoIcons.rectangle_arrow_up_right_arrow_down_left_slash':
      CupertinoIcons.rectangle_arrow_up_right_arrow_down_left_slash,
  'CupertinoIcons.rectangle_badge_checkmark':
      CupertinoIcons.rectangle_badge_checkmark,
  'CupertinoIcons.rectangle_badge_xmark': CupertinoIcons.rectangle_badge_xmark,
  'CupertinoIcons.rectangle_compress_vertical':
      CupertinoIcons.rectangle_compress_vertical,
  'CupertinoIcons.rectangle_dock': CupertinoIcons.rectangle_dock,
  'CupertinoIcons.rectangle_expand_vertical':
      CupertinoIcons.rectangle_expand_vertical,
  'CupertinoIcons.rectangle_fill': CupertinoIcons.rectangle_fill,
  'CupertinoIcons.rectangle_fill_badge_checkmark':
      CupertinoIcons.rectangle_fill_badge_checkmark,
  'CupertinoIcons.rectangle_fill_badge_xmark':
      CupertinoIcons.rectangle_fill_badge_xmark,
  'CupertinoIcons.rectangle_fill_on_rectangle_angled_fill':
      CupertinoIcons.rectangle_fill_on_rectangle_angled_fill,
  'CupertinoIcons.rectangle_fill_on_rectangle_fill':
      CupertinoIcons.rectangle_fill_on_rectangle_fill,
  'CupertinoIcons.rectangle_grid_1x2': CupertinoIcons.rectangle_grid_1x2,
  'CupertinoIcons.rectangle_grid_1x2_fill':
      CupertinoIcons.rectangle_grid_1x2_fill,
  'CupertinoIcons.rectangle_grid_2x2': CupertinoIcons.rectangle_grid_2x2,
  'CupertinoIcons.rectangle_grid_2x2_fill':
      CupertinoIcons.rectangle_grid_2x2_fill,
  'CupertinoIcons.rectangle_grid_3x2': CupertinoIcons.rectangle_grid_3x2,
  'CupertinoIcons.rectangle_grid_3x2_fill':
      CupertinoIcons.rectangle_grid_3x2_fill,
  'CupertinoIcons.rectangle_on_rectangle':
      CupertinoIcons.rectangle_on_rectangle,
  'CupertinoIcons.rectangle_on_rectangle_angled':
      CupertinoIcons.rectangle_on_rectangle_angled,
  'CupertinoIcons.rectangle_paperclip': CupertinoIcons.rectangle_paperclip,
  'CupertinoIcons.rectangle_split_3x1': CupertinoIcons.rectangle_split_3x1,
  'CupertinoIcons.rectangle_split_3x1_fill':
      CupertinoIcons.rectangle_split_3x1_fill,
  'CupertinoIcons.rectangle_split_3x3': CupertinoIcons.rectangle_split_3x3,
  'CupertinoIcons.rectangle_split_3x3_fill':
      CupertinoIcons.rectangle_split_3x3_fill,
  'CupertinoIcons.rectangle_stack': CupertinoIcons.rectangle_stack,
  'CupertinoIcons.rectangle_stack_badge_minus':
      CupertinoIcons.rectangle_stack_badge_minus,
  'CupertinoIcons.rectangle_stack_badge_person_crop':
      CupertinoIcons.rectangle_stack_badge_person_crop,
  'CupertinoIcons.rectangle_stack_badge_plus':
      CupertinoIcons.rectangle_stack_badge_plus,
  'CupertinoIcons.rectangle_stack_fill': CupertinoIcons.rectangle_stack_fill,
  'CupertinoIcons.rectangle_stack_fill_badge_minus':
      CupertinoIcons.rectangle_stack_fill_badge_minus,
  'CupertinoIcons.rectangle_stack_fill_badge_person_crop':
      CupertinoIcons.rectangle_stack_fill_badge_person_crop,
  'CupertinoIcons.rectangle_stack_fill_badge_plus':
      CupertinoIcons.rectangle_stack_fill_badge_plus,
  'CupertinoIcons.rectangle_stack_person_crop':
      CupertinoIcons.rectangle_stack_person_crop,
  'CupertinoIcons.rectangle_stack_person_crop_fill':
      CupertinoIcons.rectangle_stack_person_crop_fill,
  'CupertinoIcons.repeat': CupertinoIcons.repeat,
  'CupertinoIcons.repeat_1': CupertinoIcons.repeat_1,
  'CupertinoIcons.resize': CupertinoIcons.resize,
  'CupertinoIcons.resize_h': CupertinoIcons.resize_h,
  'CupertinoIcons.resize_v': CupertinoIcons.resize_v,
  'CupertinoIcons.return_icon': CupertinoIcons.return_icon,
  'CupertinoIcons.rhombus': CupertinoIcons.rhombus,
  'CupertinoIcons.rhombus_fill': CupertinoIcons.rhombus_fill,
  'CupertinoIcons.rocket': CupertinoIcons.rocket,
  'CupertinoIcons.rocket_fill': CupertinoIcons.rocket_fill,
  'CupertinoIcons.rosette': CupertinoIcons.rosette,
  'CupertinoIcons.rotate_left': CupertinoIcons.rotate_left,
  'CupertinoIcons.rotate_left_fill': CupertinoIcons.rotate_left_fill,
  'CupertinoIcons.rotate_right': CupertinoIcons.rotate_right,
  'CupertinoIcons.rotate_right_fill': CupertinoIcons.rotate_right_fill,
  'CupertinoIcons.scissors': CupertinoIcons.scissors,
  'CupertinoIcons.scissors_alt': CupertinoIcons.scissors_alt,
  'CupertinoIcons.scope': CupertinoIcons.scope,
  'CupertinoIcons.scribble': CupertinoIcons.scribble,
  'CupertinoIcons.search_circle': CupertinoIcons.search_circle,
  'CupertinoIcons.search_circle_fill': CupertinoIcons.search_circle_fill,
  'CupertinoIcons.selection_pin_in_out': CupertinoIcons.selection_pin_in_out,
  'CupertinoIcons.shield': CupertinoIcons.shield,
  'CupertinoIcons.shield_fill': CupertinoIcons.shield_fill,
  'CupertinoIcons.shield_lefthalf_fill': CupertinoIcons.shield_lefthalf_fill,
  'CupertinoIcons.shield_slash': CupertinoIcons.shield_slash,
  'CupertinoIcons.shield_slash_fill': CupertinoIcons.shield_slash_fill,
  'CupertinoIcons.shift': CupertinoIcons.shift,
  'CupertinoIcons.shift_fill': CupertinoIcons.shift_fill,
  'CupertinoIcons.sidebar_left': CupertinoIcons.sidebar_left,
  'CupertinoIcons.sidebar_right': CupertinoIcons.sidebar_right,
  'CupertinoIcons.signature': CupertinoIcons.signature,
  'CupertinoIcons.skew': CupertinoIcons.skew,
  'CupertinoIcons.slash_circle': CupertinoIcons.slash_circle,
  'CupertinoIcons.slash_circle_fill': CupertinoIcons.slash_circle_fill,
  'CupertinoIcons.slider_horizontal_3': CupertinoIcons.slider_horizontal_3,
  'CupertinoIcons.slider_horizontal_below_rectangle':
      CupertinoIcons.slider_horizontal_below_rectangle,
  'CupertinoIcons.slowmo': CupertinoIcons.slowmo,
  'CupertinoIcons.smallcircle_circle': CupertinoIcons.smallcircle_circle,
  'CupertinoIcons.smallcircle_circle_fill':
      CupertinoIcons.smallcircle_circle_fill,
  'CupertinoIcons.smallcircle_fill_circle':
      CupertinoIcons.smallcircle_fill_circle,
  'CupertinoIcons.smallcircle_fill_circle_fill':
      CupertinoIcons.smallcircle_fill_circle_fill,
  'CupertinoIcons.smiley': CupertinoIcons.smiley,
  'CupertinoIcons.smiley_fill': CupertinoIcons.smiley_fill,
  'CupertinoIcons.smoke': CupertinoIcons.smoke,
  'CupertinoIcons.smoke_fill': CupertinoIcons.smoke_fill,
  'CupertinoIcons.snow': CupertinoIcons.snow,
  'CupertinoIcons.sort_down': CupertinoIcons.sort_down,
  'CupertinoIcons.sort_down_circle': CupertinoIcons.sort_down_circle,
  'CupertinoIcons.sort_down_circle_fill': CupertinoIcons.sort_down_circle_fill,
  'CupertinoIcons.sort_up': CupertinoIcons.sort_up,
  'CupertinoIcons.sort_up_circle': CupertinoIcons.sort_up_circle,
  'CupertinoIcons.sort_up_circle_fill': CupertinoIcons.sort_up_circle_fill,
  'CupertinoIcons.sparkles': CupertinoIcons.sparkles,
  'CupertinoIcons.speaker': CupertinoIcons.speaker,
  'CupertinoIcons.speaker_1': CupertinoIcons.speaker_1,
  'CupertinoIcons.speaker_1_fill': CupertinoIcons.speaker_1_fill,
  'CupertinoIcons.speaker_2': CupertinoIcons.speaker_2,
  'CupertinoIcons.speaker_2_fill': CupertinoIcons.speaker_2_fill,
  'CupertinoIcons.speaker_3': CupertinoIcons.speaker_3,
  'CupertinoIcons.speaker_3_fill': CupertinoIcons.speaker_3_fill,
  'CupertinoIcons.speaker_fill': CupertinoIcons.speaker_fill,
  'CupertinoIcons.speaker_slash': CupertinoIcons.speaker_slash,
  'CupertinoIcons.speaker_slash_fill': CupertinoIcons.speaker_slash_fill,
  'CupertinoIcons.speaker_slash_fill_rtl':
      CupertinoIcons.speaker_slash_fill_rtl,
  'CupertinoIcons.speaker_slash_rtl': CupertinoIcons.speaker_slash_rtl,
  'CupertinoIcons.speaker_zzz': CupertinoIcons.speaker_zzz,
  'CupertinoIcons.speaker_zzz_fill': CupertinoIcons.speaker_zzz_fill,
  'CupertinoIcons.speaker_zzz_fill_rtl': CupertinoIcons.speaker_zzz_fill_rtl,
  'CupertinoIcons.speaker_zzz_rtl': CupertinoIcons.speaker_zzz_rtl,
  'CupertinoIcons.speedometer': CupertinoIcons.speedometer,
  'CupertinoIcons.sportscourt': CupertinoIcons.sportscourt,
  'CupertinoIcons.sportscourt_fill': CupertinoIcons.sportscourt_fill,
  'CupertinoIcons.square': CupertinoIcons.square,
  'CupertinoIcons.square_arrow_down': CupertinoIcons.square_arrow_down,
  'CupertinoIcons.square_arrow_down_fill':
      CupertinoIcons.square_arrow_down_fill,
  'CupertinoIcons.square_arrow_down_on_square':
      CupertinoIcons.square_arrow_down_on_square,
  'CupertinoIcons.square_arrow_down_on_square_fill':
      CupertinoIcons.square_arrow_down_on_square_fill,
  'CupertinoIcons.square_arrow_left': CupertinoIcons.square_arrow_left,
  'CupertinoIcons.square_arrow_left_fill':
      CupertinoIcons.square_arrow_left_fill,
  'CupertinoIcons.square_arrow_right': CupertinoIcons.square_arrow_right,
  'CupertinoIcons.square_arrow_right_fill':
      CupertinoIcons.square_arrow_right_fill,
  'CupertinoIcons.square_arrow_up': CupertinoIcons.square_arrow_up,
  'CupertinoIcons.square_arrow_up_fill': CupertinoIcons.square_arrow_up_fill,
  'CupertinoIcons.square_arrow_up_on_square':
      CupertinoIcons.square_arrow_up_on_square,
  'CupertinoIcons.square_arrow_up_on_square_fill':
      CupertinoIcons.square_arrow_up_on_square_fill,
  'CupertinoIcons.square_favorites': CupertinoIcons.square_favorites,
  'CupertinoIcons.square_favorites_alt': CupertinoIcons.square_favorites_alt,
  'CupertinoIcons.square_favorites_alt_fill':
      CupertinoIcons.square_favorites_alt_fill,
  'CupertinoIcons.square_favorites_fill': CupertinoIcons.square_favorites_fill,
  'CupertinoIcons.square_fill': CupertinoIcons.square_fill,
  'CupertinoIcons.square_fill_line_vertical_square':
      CupertinoIcons.square_fill_line_vertical_square,
  'CupertinoIcons.square_fill_line_vertical_square_fill':
      CupertinoIcons.square_fill_line_vertical_square_fill,
  'CupertinoIcons.square_fill_on_circle_fill':
      CupertinoIcons.square_fill_on_circle_fill,
  'CupertinoIcons.square_fill_on_square_fill':
      CupertinoIcons.square_fill_on_square_fill,
  'CupertinoIcons.square_grid_2x2': CupertinoIcons.square_grid_2x2,
  'CupertinoIcons.square_grid_2x2_fill': CupertinoIcons.square_grid_2x2_fill,
  'CupertinoIcons.square_grid_3x2': CupertinoIcons.square_grid_3x2,
  'CupertinoIcons.square_grid_3x2_fill': CupertinoIcons.square_grid_3x2_fill,
  'CupertinoIcons.square_grid_4x3_fill': CupertinoIcons.square_grid_4x3_fill,
  'CupertinoIcons.square_lefthalf_fill': CupertinoIcons.square_lefthalf_fill,
  'CupertinoIcons.square_line_vertical_square':
      CupertinoIcons.square_line_vertical_square,
  'CupertinoIcons.square_line_vertical_square_fill':
      CupertinoIcons.square_line_vertical_square_fill,
  'CupertinoIcons.square_list': CupertinoIcons.square_list,
  'CupertinoIcons.square_list_fill': CupertinoIcons.square_list_fill,
  'CupertinoIcons.square_on_circle': CupertinoIcons.square_on_circle,
  'CupertinoIcons.square_on_square': CupertinoIcons.square_on_square,
  'CupertinoIcons.square_pencil': CupertinoIcons.square_pencil,
  'CupertinoIcons.square_pencil_fill': CupertinoIcons.square_pencil_fill,
  'CupertinoIcons.square_righthalf_fill': CupertinoIcons.square_righthalf_fill,
  'CupertinoIcons.square_split_1x2': CupertinoIcons.square_split_1x2,
  'CupertinoIcons.square_split_1x2_fill': CupertinoIcons.square_split_1x2_fill,
  'CupertinoIcons.square_split_2x1': CupertinoIcons.square_split_2x1,
  'CupertinoIcons.square_split_2x1_fill': CupertinoIcons.square_split_2x1_fill,
  'CupertinoIcons.square_split_2x2': CupertinoIcons.square_split_2x2,
  'CupertinoIcons.square_split_2x2_fill': CupertinoIcons.square_split_2x2_fill,
  'CupertinoIcons.square_stack': CupertinoIcons.square_stack,
  'CupertinoIcons.square_stack_3d_down_dottedline':
      CupertinoIcons.square_stack_3d_down_dottedline,
  'CupertinoIcons.square_stack_3d_down_right':
      CupertinoIcons.square_stack_3d_down_right,
  'CupertinoIcons.square_stack_3d_down_right_fill':
      CupertinoIcons.square_stack_3d_down_right_fill,
  'CupertinoIcons.square_stack_3d_up': CupertinoIcons.square_stack_3d_up,
  'CupertinoIcons.square_stack_3d_up_fill':
      CupertinoIcons.square_stack_3d_up_fill,
  'CupertinoIcons.square_stack_3d_up_slash':
      CupertinoIcons.square_stack_3d_up_slash,
  'CupertinoIcons.square_stack_3d_up_slash_fill':
      CupertinoIcons.square_stack_3d_up_slash_fill,
  'CupertinoIcons.square_stack_fill': CupertinoIcons.square_stack_fill,
  'CupertinoIcons.squares_below_rectangle':
      CupertinoIcons.squares_below_rectangle,
  'CupertinoIcons.star': CupertinoIcons.star,
  'CupertinoIcons.star_circle': CupertinoIcons.star_circle,
  'CupertinoIcons.star_circle_fill': CupertinoIcons.star_circle_fill,
  'CupertinoIcons.star_fill': CupertinoIcons.star_fill,
  'CupertinoIcons.star_lefthalf_fill': CupertinoIcons.star_lefthalf_fill,
  'CupertinoIcons.star_slash': CupertinoIcons.star_slash,
  'CupertinoIcons.star_slash_fill': CupertinoIcons.star_slash_fill,
  'CupertinoIcons.staroflife': CupertinoIcons.staroflife,
  'CupertinoIcons.staroflife_fill': CupertinoIcons.staroflife_fill,
  'CupertinoIcons.stop': CupertinoIcons.stop,
  'CupertinoIcons.stop_circle': CupertinoIcons.stop_circle,
  'CupertinoIcons.stop_circle_fill': CupertinoIcons.stop_circle_fill,
  'CupertinoIcons.stop_fill': CupertinoIcons.stop_fill,
  'CupertinoIcons.stopwatch': CupertinoIcons.stopwatch,
  'CupertinoIcons.stopwatch_fill': CupertinoIcons.stopwatch_fill,
  'CupertinoIcons.strikethrough': CupertinoIcons.strikethrough,
  'CupertinoIcons.suit_club': CupertinoIcons.suit_club,
  'CupertinoIcons.suit_club_fill': CupertinoIcons.suit_club_fill,
  'CupertinoIcons.suit_diamond': CupertinoIcons.suit_diamond,
  'CupertinoIcons.suit_diamond_fill': CupertinoIcons.suit_diamond_fill,
  'CupertinoIcons.suit_heart': CupertinoIcons.suit_heart,
  'CupertinoIcons.suit_heart_fill': CupertinoIcons.suit_heart_fill,
  'CupertinoIcons.suit_spade': CupertinoIcons.suit_spade,
  'CupertinoIcons.suit_spade_fill': CupertinoIcons.suit_spade_fill,
  'CupertinoIcons.sum': CupertinoIcons.sum,
  'CupertinoIcons.sun_dust': CupertinoIcons.sun_dust,
  'CupertinoIcons.sun_dust_fill': CupertinoIcons.sun_dust_fill,
  'CupertinoIcons.sun_haze': CupertinoIcons.sun_haze,
  'CupertinoIcons.sun_haze_fill': CupertinoIcons.sun_haze_fill,
  'CupertinoIcons.sun_max': CupertinoIcons.sun_max,
  'CupertinoIcons.sun_max_fill': CupertinoIcons.sun_max_fill,
  'CupertinoIcons.sun_min': CupertinoIcons.sun_min,
  'CupertinoIcons.sun_min_fill': CupertinoIcons.sun_min_fill,
  'CupertinoIcons.sunrise': CupertinoIcons.sunrise,
  'CupertinoIcons.sunrise_fill': CupertinoIcons.sunrise_fill,
  'CupertinoIcons.sunset': CupertinoIcons.sunset,
  'CupertinoIcons.sunset_fill': CupertinoIcons.sunset_fill,
  'CupertinoIcons.t_bubble': CupertinoIcons.t_bubble,
  'CupertinoIcons.t_bubble_fill': CupertinoIcons.t_bubble_fill,
  'CupertinoIcons.table': CupertinoIcons.table,
  'CupertinoIcons.table_badge_more': CupertinoIcons.table_badge_more,
  'CupertinoIcons.table_badge_more_fill': CupertinoIcons.table_badge_more_fill,
  'CupertinoIcons.table_fill': CupertinoIcons.table_fill,
  'CupertinoIcons.tag_circle': CupertinoIcons.tag_circle,
  'CupertinoIcons.tag_circle_fill': CupertinoIcons.tag_circle_fill,
  'CupertinoIcons.tag_fill': CupertinoIcons.tag_fill,
  'CupertinoIcons.text_aligncenter': CupertinoIcons.text_aligncenter,
  'CupertinoIcons.text_alignleft': CupertinoIcons.text_alignleft,
  'CupertinoIcons.text_alignright': CupertinoIcons.text_alignright,
  'CupertinoIcons.text_append': CupertinoIcons.text_append,
  'CupertinoIcons.text_badge_checkmark': CupertinoIcons.text_badge_checkmark,
  'CupertinoIcons.text_badge_minus': CupertinoIcons.text_badge_minus,
  'CupertinoIcons.text_badge_plus': CupertinoIcons.text_badge_plus,
  'CupertinoIcons.text_badge_star': CupertinoIcons.text_badge_star,
  'CupertinoIcons.text_badge_xmark': CupertinoIcons.text_badge_xmark,
  'CupertinoIcons.text_bubble': CupertinoIcons.text_bubble,
  'CupertinoIcons.text_bubble_fill': CupertinoIcons.text_bubble_fill,
  'CupertinoIcons.text_cursor': CupertinoIcons.text_cursor,
  'CupertinoIcons.text_insert': CupertinoIcons.text_insert,
  'CupertinoIcons.text_justify': CupertinoIcons.text_justify,
  'CupertinoIcons.text_justifyleft': CupertinoIcons.text_justifyleft,
  'CupertinoIcons.text_justifyright': CupertinoIcons.text_justifyright,
  'CupertinoIcons.text_quote': CupertinoIcons.text_quote,
  'CupertinoIcons.textbox': CupertinoIcons.textbox,
  'CupertinoIcons.textformat': CupertinoIcons.textformat,
  'CupertinoIcons.textformat_123': CupertinoIcons.textformat_123,
  'CupertinoIcons.textformat_abc': CupertinoIcons.textformat_abc,
  'CupertinoIcons.textformat_abc_dottedunderline':
      CupertinoIcons.textformat_abc_dottedunderline,
  'CupertinoIcons.textformat_alt': CupertinoIcons.textformat_alt,
  'CupertinoIcons.textformat_size': CupertinoIcons.textformat_size,
  'CupertinoIcons.textformat_subscript': CupertinoIcons.textformat_subscript,
  'CupertinoIcons.textformat_superscript':
      CupertinoIcons.textformat_superscript,
  'CupertinoIcons.thermometer': CupertinoIcons.thermometer,
  'CupertinoIcons.thermometer_snowflake': CupertinoIcons.thermometer_snowflake,
  'CupertinoIcons.thermometer_sun': CupertinoIcons.thermometer_sun,
  'CupertinoIcons.ticket': CupertinoIcons.ticket,
  'CupertinoIcons.ticket_fill': CupertinoIcons.ticket_fill,
  'CupertinoIcons.tickets': CupertinoIcons.tickets,
  'CupertinoIcons.tickets_fill': CupertinoIcons.tickets_fill,
  'CupertinoIcons.timelapse': CupertinoIcons.timelapse,
  'CupertinoIcons.timer': CupertinoIcons.timer,
  'CupertinoIcons.timer_fill': CupertinoIcons.timer_fill,
  'CupertinoIcons.today': CupertinoIcons.today,
  'CupertinoIcons.today_fill': CupertinoIcons.today_fill,
  'CupertinoIcons.tornado': CupertinoIcons.tornado,
  'CupertinoIcons.tortoise': CupertinoIcons.tortoise,
  'CupertinoIcons.tortoise_fill': CupertinoIcons.tortoise_fill,
  'CupertinoIcons.tram_fill': CupertinoIcons.tram_fill,
  'CupertinoIcons.trash': CupertinoIcons.trash,
  'CupertinoIcons.trash_circle': CupertinoIcons.trash_circle,
  'CupertinoIcons.trash_circle_fill': CupertinoIcons.trash_circle_fill,
  'CupertinoIcons.trash_fill': CupertinoIcons.trash_fill,
  'CupertinoIcons.trash_slash': CupertinoIcons.trash_slash,
  'CupertinoIcons.trash_slash_fill': CupertinoIcons.trash_slash_fill,
  'CupertinoIcons.tray': CupertinoIcons.tray,
  'CupertinoIcons.tray_2': CupertinoIcons.tray_2,
  'CupertinoIcons.tray_2_fill': CupertinoIcons.tray_2_fill,
  'CupertinoIcons.tray_arrow_down': CupertinoIcons.tray_arrow_down,
  'CupertinoIcons.tray_arrow_down_fill': CupertinoIcons.tray_arrow_down_fill,
  'CupertinoIcons.tray_arrow_up': CupertinoIcons.tray_arrow_up,
  'CupertinoIcons.tray_arrow_up_fill': CupertinoIcons.tray_arrow_up_fill,
  'CupertinoIcons.tray_fill': CupertinoIcons.tray_fill,
  'CupertinoIcons.tray_full': CupertinoIcons.tray_full,
  'CupertinoIcons.tray_full_fill': CupertinoIcons.tray_full_fill,
  'CupertinoIcons.tree': CupertinoIcons.tree,
  'CupertinoIcons.triangle': CupertinoIcons.triangle,
  'CupertinoIcons.triangle_fill': CupertinoIcons.triangle_fill,
  'CupertinoIcons.triangle_lefthalf_fill':
      CupertinoIcons.triangle_lefthalf_fill,
  'CupertinoIcons.triangle_righthalf_fill':
      CupertinoIcons.triangle_righthalf_fill,
  'CupertinoIcons.tropicalstorm': CupertinoIcons.tropicalstorm,
  'CupertinoIcons.tuningfork': CupertinoIcons.tuningfork,
  'CupertinoIcons.tv': CupertinoIcons.tv,
  'CupertinoIcons.tv_circle': CupertinoIcons.tv_circle,
  'CupertinoIcons.tv_circle_fill': CupertinoIcons.tv_circle_fill,
  'CupertinoIcons.tv_fill': CupertinoIcons.tv_fill,
  'CupertinoIcons.tv_music_note': CupertinoIcons.tv_music_note,
  'CupertinoIcons.tv_music_note_fill': CupertinoIcons.tv_music_note_fill,
  'CupertinoIcons.uiwindow_split_2x1': CupertinoIcons.uiwindow_split_2x1,
  'CupertinoIcons.umbrella': CupertinoIcons.umbrella,
  'CupertinoIcons.umbrella_fill': CupertinoIcons.umbrella_fill,
  'CupertinoIcons.underline': CupertinoIcons.underline,
  'CupertinoIcons.upload_circle': CupertinoIcons.upload_circle,
  'CupertinoIcons.upload_circle_fill': CupertinoIcons.upload_circle_fill,
  'CupertinoIcons.videocam': CupertinoIcons.videocam,
  'CupertinoIcons.videocam_circle': CupertinoIcons.videocam_circle,
  'CupertinoIcons.videocam_circle_fill': CupertinoIcons.videocam_circle_fill,
  'CupertinoIcons.videocam_fill': CupertinoIcons.videocam_fill,
  'CupertinoIcons.view_2d': CupertinoIcons.view_2d,
  'CupertinoIcons.view_3d': CupertinoIcons.view_3d,
  'CupertinoIcons.viewfinder': CupertinoIcons.viewfinder,
  'CupertinoIcons.viewfinder_circle': CupertinoIcons.viewfinder_circle,
  'CupertinoIcons.viewfinder_circle_fill':
      CupertinoIcons.viewfinder_circle_fill,
  'CupertinoIcons.wand_rays': CupertinoIcons.wand_rays,
  'CupertinoIcons.wand_rays_inverse': CupertinoIcons.wand_rays_inverse,
  'CupertinoIcons.wand_stars': CupertinoIcons.wand_stars,
  'CupertinoIcons.wand_stars_inverse': CupertinoIcons.wand_stars_inverse,
  'CupertinoIcons.waveform': CupertinoIcons.waveform,
  'CupertinoIcons.waveform_circle': CupertinoIcons.waveform_circle,
  'CupertinoIcons.waveform_circle_fill': CupertinoIcons.waveform_circle_fill,
  'CupertinoIcons.waveform_path': CupertinoIcons.waveform_path,
  'CupertinoIcons.waveform_path_badge_minus':
      CupertinoIcons.waveform_path_badge_minus,
  'CupertinoIcons.waveform_path_badge_plus':
      CupertinoIcons.waveform_path_badge_plus,
  'CupertinoIcons.waveform_path_ecg': CupertinoIcons.waveform_path_ecg,
  'CupertinoIcons.wifi': CupertinoIcons.wifi,
  'CupertinoIcons.wifi_exclamationmark': CupertinoIcons.wifi_exclamationmark,
  'CupertinoIcons.wifi_slash': CupertinoIcons.wifi_slash,
  'CupertinoIcons.wind': CupertinoIcons.wind,
  'CupertinoIcons.wind_snow': CupertinoIcons.wind_snow,
  'CupertinoIcons.wrench': CupertinoIcons.wrench,
  'CupertinoIcons.wrench_fill': CupertinoIcons.wrench_fill,
  'CupertinoIcons.xmark': CupertinoIcons.xmark,
  'CupertinoIcons.xmark_circle': CupertinoIcons.xmark_circle,
  'CupertinoIcons.xmark_circle_fill': CupertinoIcons.xmark_circle_fill,
  'CupertinoIcons.xmark_octagon': CupertinoIcons.xmark_octagon,
  'CupertinoIcons.xmark_octagon_fill': CupertinoIcons.xmark_octagon_fill,
  'CupertinoIcons.xmark_rectangle': CupertinoIcons.xmark_rectangle,
  'CupertinoIcons.xmark_rectangle_fill': CupertinoIcons.xmark_rectangle_fill,
  'CupertinoIcons.xmark_seal': CupertinoIcons.xmark_seal,
  'CupertinoIcons.xmark_seal_fill': CupertinoIcons.xmark_seal_fill,
  'CupertinoIcons.xmark_shield': CupertinoIcons.xmark_shield,
  'CupertinoIcons.xmark_shield_fill': CupertinoIcons.xmark_shield_fill,
  'CupertinoIcons.xmark_square': CupertinoIcons.xmark_square,
  'CupertinoIcons.xmark_square_fill': CupertinoIcons.xmark_square_fill,
  'CupertinoIcons.zoom_in': CupertinoIcons.zoom_in,
  'CupertinoIcons.zoom_out': CupertinoIcons.zoom_out,
  'CupertinoIcons.zzz': CupertinoIcons.zzz,
  'CupertinoNavigationBar': (props) => CupertinoNavigationBar(
        key: props['key'],
        leading: props['leading'],
        automaticallyImplyLeading: props['automaticallyImplyLeading'] ?? true,
        automaticallyImplyMiddle: props['automaticallyImplyMiddle'] ?? true,
        previousPageTitle: props['previousPageTitle'],
        middle: props['middle'],
        trailing: props['trailing'],
        border: props['border'] ?? _kDefaultNavBarBorder,
        backgroundColor: props['backgroundColor'],
        brightness: props['brightness'],
        padding: props['padding'],
        transitionBetweenRoutes: props['transitionBetweenRoutes'] ?? true,
        heroTag: props['heroTag'] ?? _defaultHeroTag,
      ),
  'CupertinoSliverNavigationBar': (props) => CupertinoSliverNavigationBar(
        key: props['key'],
        largeTitle: props['largeTitle'],
        leading: props['leading'],
        automaticallyImplyLeading: props['automaticallyImplyLeading'] ?? true,
        automaticallyImplyTitle: props['automaticallyImplyTitle'] ?? true,
        previousPageTitle: props['previousPageTitle'],
        middle: props['middle'],
        trailing: props['trailing'],
        border: props['border'] ?? _kDefaultNavBarBorder,
        backgroundColor: props['backgroundColor'],
        brightness: props['brightness'],
        padding: props['padding'],
        transitionBetweenRoutes: props['transitionBetweenRoutes'] ?? true,
        heroTag: props['heroTag'] ?? _defaultHeroTag,
        stretch: props['stretch'] ?? false,
      ),
  'CupertinoNavigationBarBackButton': (props) =>
      CupertinoNavigationBarBackButton(
        key: props['key'],
        color: props['color'],
        previousPageTitle: props['previousPageTitle'],
        onPressed: props['onPressed'],
      ),
  'CupertinoTheme': (props) => CupertinoTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'CupertinoTheme.of': (props) => CupertinoTheme.of(
        props['pa'][0],
      ),
  'CupertinoTheme.brightnessOf': (props) => CupertinoTheme.brightnessOf(
        props['pa'][0],
      ),
  'CupertinoTheme.maybeBrightnessOf': (props) =>
      CupertinoTheme.maybeBrightnessOf(
        props['pa'][0],
      ),
  'CupertinoThemeData': (props) => CupertinoThemeData(
        brightness: props['brightness'],
        primaryColor: props['primaryColor'],
        primaryContrastingColor: props['primaryContrastingColor'],
        textTheme: props['textTheme'],
        barBackgroundColor: props['barBackgroundColor'],
        scaffoldBackgroundColor: props['scaffoldBackgroundColor'],
      ),
  'CupertinoThemeData.raw': (props) => CupertinoThemeData.raw(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
        props['pa'][4],
        props['pa'][5],
      ),
  'NoDefaultCupertinoThemeData': (props) => NoDefaultCupertinoThemeData(
        brightness: props['brightness'],
        primaryColor: props['primaryColor'],
        primaryContrastingColor: props['primaryContrastingColor'],
        textTheme: props['textTheme'],
        barBackgroundColor: props['barBackgroundColor'],
        scaffoldBackgroundColor: props['scaffoldBackgroundColor'],
      ),
  'DefaultCupertinoLocalizations': (props) =>
      const DefaultCupertinoLocalizations(),
  'DefaultCupertinoLocalizations.delegate':
      DefaultCupertinoLocalizations.delegate,
  'DefaultCupertinoLocalizations.load': (props) =>
      DefaultCupertinoLocalizations.load(
        props['pa'][0],
      ),
  'DatePickerDateTimeOrder.date_time_dayPeriod':
      DatePickerDateTimeOrder.date_time_dayPeriod,
  'DatePickerDateTimeOrder.date_dayPeriod_time':
      DatePickerDateTimeOrder.date_dayPeriod_time,
  'DatePickerDateTimeOrder.time_dayPeriod_date':
      DatePickerDateTimeOrder.time_dayPeriod_date,
  'DatePickerDateTimeOrder.dayPeriod_time_date':
      DatePickerDateTimeOrder.dayPeriod_time_date,
  'DatePickerDateTimeOrder.values': DatePickerDateTimeOrder.values,
  'DatePickerDateOrder.dmy': DatePickerDateOrder.dmy,
  'DatePickerDateOrder.mdy': DatePickerDateOrder.mdy,
  'DatePickerDateOrder.ymd': DatePickerDateOrder.ymd,
  'DatePickerDateOrder.ydm': DatePickerDateOrder.ydm,
  'DatePickerDateOrder.values': DatePickerDateOrder.values,
  'TextButtonThemeData': (props) => TextButtonThemeData(
        style: props['style'],
      ),
  'TextButtonThemeData.lerp': (props) => TextButtonThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'TextButtonTheme': (props) => TextButtonTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'TextButtonTheme.of': (props) => TextButtonTheme.of(
        props['pa'][0],
      ),
  'DrawerHeader': (props) => DrawerHeader(
        key: props['key'],
        decoration: props['decoration'],
        margin: props['margin'] ?? const EdgeInsets.only(bottom: 8.0),
        padding: props['padding'] ??
            const EdgeInsets.fromLTRB(16.0, 16.0, 16.0, 8.0),
        duration: props['duration'] ?? const Duration(milliseconds: 250),
        curve: props['curve'] ?? Curves.fastOutSlowIn,
        child: props['child'],
      ),
  'ProgressIndicatorThemeData': (props) => ProgressIndicatorThemeData(
        color: props['color'],
        linearTrackColor: props['linearTrackColor'],
        linearMinHeight: props['linearMinHeight']?.toDouble(),
        circularTrackColor: props['circularTrackColor'],
        refreshBackgroundColor: props['refreshBackgroundColor'],
      ),
  'ProgressIndicatorThemeData.lerp': (props) => ProgressIndicatorThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ProgressIndicatorTheme': (props) => ProgressIndicatorTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'ProgressIndicatorTheme.of': (props) => ProgressIndicatorTheme.of(
        props['pa'][0],
      ),
  'MaterialButton': (props) => MaterialButton(
        key: props['key'],
        onPressed: props['onPressed'],
        onLongPress: props['onLongPress'],
        onHighlightChanged: props['onHighlightChanged'],
        mouseCursor: props['mouseCursor'],
        textTheme: props['textTheme'],
        textColor: props['textColor'],
        disabledTextColor: props['disabledTextColor'],
        color: props['color'],
        disabledColor: props['disabledColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        highlightColor: props['highlightColor'],
        splashColor: props['splashColor'],
        colorBrightness: props['colorBrightness'],
        elevation: props['elevation']?.toDouble(),
        focusElevation: props['focusElevation']?.toDouble(),
        hoverElevation: props['hoverElevation']?.toDouble(),
        highlightElevation: props['highlightElevation']?.toDouble(),
        disabledElevation: props['disabledElevation']?.toDouble(),
        padding: props['padding'],
        visualDensity: props['visualDensity'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        materialTapTargetSize: props['materialTapTargetSize'],
        animationDuration: props['animationDuration'],
        minWidth: props['minWidth']?.toDouble(),
        height: props['height']?.toDouble(),
        enableFeedback: props['enableFeedback'] ?? true,
        child: props['child'],
      ),
  'GridTile': (props) => GridTile(
        key: props['key'],
        header: props['header'],
        footer: props['footer'],
        child: props['child'],
      ),
  'Material': (props) => Material(
        key: props['key'],
        type: props['type'] ?? MaterialType.canvas,
        elevation: props['elevation']?.toDouble() ?? 0.0,
        color: props['color'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        textStyle: props['textStyle'],
        borderRadius: props['borderRadius'],
        shape: props['shape'],
        borderOnForeground: props['borderOnForeground'] ?? true,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        animationDuration: props['animationDuration'] ?? kThemeChangeDuration,
        child: props['child'],
      ),
  'Material.defaultSplashRadius': Material.defaultSplashRadius,
  'Material.of': (props) => Material.of(
        props['pa'][0],
      ),
  'ShapeBorderTween': (props) => ShapeBorderTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'MaterialType.canvas': MaterialType.canvas,
  'MaterialType.card': MaterialType.card,
  'MaterialType.circle': MaterialType.circle,
  'MaterialType.button': MaterialType.button,
  'MaterialType.transparency': MaterialType.transparency,
  'MaterialType.values': MaterialType.values,
  'TextTheme': (props) => TextTheme(
        displayLarge: props['displayLarge'],
        displayMedium: props['displayMedium'],
        displaySmall: props['displaySmall'],
        headlineLarge: props['headlineLarge'],
        headlineMedium: props['headlineMedium'],
        headlineSmall: props['headlineSmall'],
        titleLarge: props['titleLarge'],
        titleMedium: props['titleMedium'],
        titleSmall: props['titleSmall'],
        bodyLarge: props['bodyLarge'],
        bodyMedium: props['bodyMedium'],
        bodySmall: props['bodySmall'],
        labelLarge: props['labelLarge'],
        labelMedium: props['labelMedium'],
        labelSmall: props['labelSmall'],
        headline1: props['headline1'],
        headline2: props['headline2'],
        headline3: props['headline3'],
        headline4: props['headline4'],
        headline5: props['headline5'],
        headline6: props['headline6'],
        subtitle1: props['subtitle1'],
        subtitle2: props['subtitle2'],
        bodyText1: props['bodyText1'],
        bodyText2: props['bodyText2'],
        caption: props['caption'],
        button: props['button'],
        overline: props['overline'],
      ),
  'TextTheme.lerp': (props) => TextTheme.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'SelectionArea': (props) => SelectionArea(
        key: props['key'],
        focusNode: props['focusNode'],
        selectionControls: props['selectionControls'],
        child: props['child'],
      ),
  'InkRipple': (props) => InkRipple(
        controller: props['controller'],
        referenceBox: props['referenceBox'],
        position: props['position'],
        color: props['color'],
        textDirection: props['textDirection'],
        containedInkWell: props['containedInkWell'] ?? false,
        rectCallback: props['rectCallback'],
        borderRadius: props['borderRadius'],
        customBorder: props['customBorder'],
        radius: props['radius']?.toDouble(),
        onRemoved: props['onRemoved'],
      ),
  'InkRipple.splashFactory': InkRipple.splashFactory,
  'ElevatedButtonThemeData': (props) => ElevatedButtonThemeData(
        style: props['style'],
      ),
  'ElevatedButtonThemeData.lerp': (props) => ElevatedButtonThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ElevatedButtonTheme': (props) => ElevatedButtonTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'ElevatedButtonTheme.of': (props) => ElevatedButtonTheme.of(
        props['pa'][0],
      ),
  'MaterialBannerThemeData': (props) => MaterialBannerThemeData(
        backgroundColor: props['backgroundColor'],
        contentTextStyle: props['contentTextStyle'],
        elevation: props['elevation']?.toDouble(),
        padding: props['padding'],
        leadingPadding: props['leadingPadding'],
      ),
  'MaterialBannerThemeData.lerp': (props) => MaterialBannerThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'MaterialBannerTheme': (props) => MaterialBannerTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'MaterialBannerTheme.of': (props) => MaterialBannerTheme.of(
        props['pa'][0],
      ),
  'ScaffoldMessenger': (props) => ScaffoldMessenger(
        key: props['key'],
        child: props['child'],
      ),
  'ScaffoldMessenger.of': (props) => ScaffoldMessenger.of(
        props['pa'][0],
      ),
  'ScaffoldMessenger.maybeOf': (props) => ScaffoldMessenger.maybeOf(
        props['pa'][0],
      ),
  'ScaffoldPrelayoutGeometry': (props) => ScaffoldPrelayoutGeometry(
        bottomSheetSize: props['bottomSheetSize'],
        contentBottom: props['contentBottom']?.toDouble() ?? 0,
        contentTop: props['contentTop']?.toDouble() ?? 0,
        floatingActionButtonSize: props['floatingActionButtonSize'],
        minInsets: props['minInsets'],
        minViewPadding: props['minViewPadding'],
        scaffoldSize: props['scaffoldSize'],
        snackBarSize: props['snackBarSize'],
        materialBannerSize: props['materialBannerSize'],
        textDirection: props['textDirection'],
      ),
  'ScaffoldGeometry': (props) => ScaffoldGeometry(
        bottomNavigationBarTop: props['bottomNavigationBarTop']?.toDouble(),
        floatingActionButtonArea: props['floatingActionButtonArea'],
      ),
  'Scaffold': (props) => Scaffold(
        key: props['key'],
        appBar: props['appBar'],
        body: props['body'],
        floatingActionButton: props['floatingActionButton'],
        floatingActionButtonLocation: props['floatingActionButtonLocation'],
        floatingActionButtonAnimator: props['floatingActionButtonAnimator'],
        persistentFooterButtons: as<Widget>(props['persistentFooterButtons']),
        persistentFooterAlignment: props['persistentFooterAlignment'] ??
            AlignmentDirectional.centerEnd,
        drawer: props['drawer'],
        onDrawerChanged: props['onDrawerChanged'],
        endDrawer: props['endDrawer'],
        onEndDrawerChanged: props['onEndDrawerChanged'],
        bottomNavigationBar: props['bottomNavigationBar'],
        bottomSheet: props['bottomSheet'],
        backgroundColor: props['backgroundColor'],
        resizeToAvoidBottomInset: props['resizeToAvoidBottomInset'],
        primary: props['primary'] ?? true,
        drawerDragStartBehavior:
            props['drawerDragStartBehavior'] ?? DragStartBehavior.start,
        extendBody: props['extendBody'] ?? false,
        extendBodyBehindAppBar: props['extendBodyBehindAppBar'] ?? false,
        drawerScrimColor: props['drawerScrimColor'],
        drawerEdgeDragWidth: props['drawerEdgeDragWidth']?.toDouble(),
        drawerEnableOpenDragGesture:
            props['drawerEnableOpenDragGesture'] ?? true,
        endDrawerEnableOpenDragGesture:
            props['endDrawerEnableOpenDragGesture'] ?? true,
        restorationId: props['restorationId'],
      ),
  'Scaffold.of': (props) => Scaffold.of(
        props['pa'][0],
      ),
  'Scaffold.maybeOf': (props) => Scaffold.maybeOf(
        props['pa'][0],
      ),
  'Scaffold.geometryOf': (props) => Scaffold.geometryOf(
        props['pa'][0],
      ),
  'Scaffold.hasDrawer': (props) => Scaffold.hasDrawer(
        props['pa'][0],
        registerForUpdates: props['registerForUpdates'] ?? true,
      ),
  'Feedback.forTap': (props) => Feedback.forTap(
        props['pa'][0],
      ),
  'Feedback.wrapForTap': (props) => Feedback.wrapForTap(
        props['pa'][0],
        props['pa'][1],
      ),
  'Feedback.forLongPress': (props) => Feedback.forLongPress(
        props['pa'][0],
      ),
  'Feedback.wrapForLongPress': (props) => Feedback.wrapForLongPress(
        props['pa'][0],
        props['pa'][1],
      ),
  'SwitchThemeData': (props) => SwitchThemeData(
        thumbColor: props['thumbColor'],
        trackColor: props['trackColor'],
        materialTapTargetSize: props['materialTapTargetSize'],
        mouseCursor: props['mouseCursor'],
        overlayColor: props['overlayColor'],
        splashRadius: props['splashRadius']?.toDouble(),
      ),
  'SwitchThemeData.lerp': (props) => SwitchThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'SwitchTheme': (props) => SwitchTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'SwitchTheme.of': (props) => SwitchTheme.of(
        props['pa'][0],
      ),
  'ToggleButtonsThemeData': (props) => ToggleButtonsThemeData(
        textStyle: props['textStyle'],
        constraints: props['constraints'],
        color: props['color'],
        selectedColor: props['selectedColor'],
        disabledColor: props['disabledColor'],
        fillColor: props['fillColor'],
        focusColor: props['focusColor'],
        highlightColor: props['highlightColor'],
        hoverColor: props['hoverColor'],
        splashColor: props['splashColor'],
        borderColor: props['borderColor'],
        selectedBorderColor: props['selectedBorderColor'],
        disabledBorderColor: props['disabledBorderColor'],
        borderRadius: props['borderRadius'],
        borderWidth: props['borderWidth']?.toDouble(),
      ),
  'ToggleButtonsThemeData.lerp': (props) => ToggleButtonsThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ToggleButtonsTheme': (props) => ToggleButtonsTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'ToggleButtonsTheme.of': (props) => ToggleButtonsTheme.of(
        props['pa'][0],
      ),
  'BackButtonIcon': (props) => BackButtonIcon(
        key: props['key'],
      ),
  'BackButton': (props) => BackButton(
        key: props['key'],
        color: props['color'],
        onPressed: props['onPressed'],
      ),
  'CloseButton': (props) => CloseButton(
        key: props['key'],
        color: props['color'],
        onPressed: props['onPressed'],
      ),
  'TextSelectionToolbarTextButton': (props) => TextSelectionToolbarTextButton(
        key: props['key'],
        child: props['child'],
        padding: props['padding'],
        onPressed: props['onPressed'],
      ),
  'TextSelectionToolbarTextButton.getPadding': (props) =>
      TextSelectionToolbarTextButton.getPadding(
        props['pa'][0],
        props['pa'][1],
      ),
  'TextField': (props) => TextField(
        key: props['key'],
        controller: props['controller'],
        focusNode: props['focusNode'],
        decoration: props['decoration'] ?? const InputDecoration(),
        keyboardType: props['keyboardType'],
        textInputAction: props['textInputAction'],
        textCapitalization:
            props['textCapitalization'] ?? TextCapitalization.none,
        style: props['style'],
        strutStyle: props['strutStyle'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textAlignVertical: props['textAlignVertical'],
        textDirection: props['textDirection'],
        readOnly: props['readOnly'] ?? false,
        toolbarOptions: props['toolbarOptions'],
        showCursor: props['showCursor'],
        autofocus: props['autofocus'] ?? false,
        obscuringCharacter: props['obscuringCharacter'] ?? '•',
        obscureText: props['obscureText'] ?? false,
        autocorrect: props['autocorrect'] ?? true,
        smartDashesType: props['smartDashesType'],
        smartQuotesType: props['smartQuotesType'],
        enableSuggestions: props['enableSuggestions'] ?? true,
        maxLines: props['maxLines'] ?? 1,
        minLines: props['minLines'],
        expands: props['expands'] ?? false,
        maxLength: props['maxLength'],
        maxLengthEnforcement: props['maxLengthEnforcement'],
        onChanged: props['onChanged'],
        onEditingComplete: props['onEditingComplete'],
        onSubmitted: props['onSubmitted'],
        onAppPrivateCommand: props['onAppPrivateCommand'],
        inputFormatters: as<TextInputFormatter>(props['inputFormatters']),
        enabled: props['enabled'],
        cursorWidth: props['cursorWidth']?.toDouble() ?? 2.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorRadius: props['cursorRadius'],
        cursorColor: props['cursorColor'],
        selectionHeightStyle:
            props['selectionHeightStyle'] ?? ui.BoxHeightStyle.tight,
        selectionWidthStyle:
            props['selectionWidthStyle'] ?? ui.BoxWidthStyle.tight,
        keyboardAppearance: props['keyboardAppearance'],
        scrollPadding: props['scrollPadding'] ?? const EdgeInsets.all(20.0),
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        enableInteractiveSelection: props['enableInteractiveSelection'],
        selectionControls: props['selectionControls'],
        onTap: props['onTap'],
        mouseCursor: props['mouseCursor'],
        buildCounter: props['buildCounter'],
        scrollController: props['scrollController'],
        scrollPhysics: props['scrollPhysics'],
        autofillHints: props['autofillHints'] ?? const <String>[],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        restorationId: props['restorationId'],
        scribbleEnabled: props['scribbleEnabled'] ?? true,
        enableIMEPersonalizedLearning:
            props['enableIMEPersonalizedLearning'] ?? true,
      ),
  'TextField.noMaxLength': TextField.noMaxLength,
  'DrawerThemeData': (props) => DrawerThemeData(
        backgroundColor: props['backgroundColor'],
        scrimColor: props['scrimColor'],
        elevation: props['elevation']?.toDouble(),
        shape: props['shape'],
        width: props['width']?.toDouble(),
      ),
  'DrawerThemeData.lerp': (props) => DrawerThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'DrawerTheme': (props) => DrawerTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'DrawerTheme.of': (props) => DrawerTheme.of(
        props['pa'][0],
      ),
  'FilterChip': (props) => FilterChip(
        key: props['key'],
        avatar: props['avatar'],
        label: props['label'],
        labelStyle: props['labelStyle'],
        labelPadding: props['labelPadding'],
        selected: props['selected'] ?? false,
        onSelected: props['onSelected'],
        pressElevation: props['pressElevation']?.toDouble(),
        disabledColor: props['disabledColor'],
        selectedColor: props['selectedColor'],
        tooltip: props['tooltip'],
        side: props['side'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        backgroundColor: props['backgroundColor'],
        padding: props['padding'],
        visualDensity: props['visualDensity'],
        materialTapTargetSize: props['materialTapTargetSize'],
        elevation: props['elevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        iconTheme: props['iconTheme'],
        selectedShadowColor: props['selectedShadowColor'],
        showCheckmark: props['showCheckmark'],
        checkmarkColor: props['checkmarkColor'],
        avatarBorder: props['avatarBorder'] ?? const CircleBorder(),
      ),
  'NavigationBar': (props) => NavigationBar(
        key: props['key'],
        animationDuration: props['animationDuration'],
        selectedIndex: props['selectedIndex'] ?? 0,
        destinations: as<Widget>(props['destinations']) ?? const [],
        onDestinationSelected: props['onDestinationSelected'],
        backgroundColor: props['backgroundColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation']?.toDouble(),
        height: props['height']?.toDouble(),
        labelBehavior: props['labelBehavior'],
      ),
  'NavigationDestination': (props) => NavigationDestination(
        key: props['key'],
        icon: props['icon'],
        selectedIcon: props['selectedIcon'],
        label: props['label'],
        tooltip: props['tooltip'],
      ),
  'NavigationIndicator': (props) => NavigationIndicator(
        key: props['key'],
        animation: props['animation'],
        color: props['color'],
        width: props['width']?.toDouble() ?? 64,
        height: props['height']?.toDouble() ?? 32,
        borderRadius: props['borderRadius'] ??
            const BorderRadius.all(Radius.circular(16)),
        shape: props['shape'],
      ),
  'NavigationDestinationLabelBehavior.alwaysShow':
      NavigationDestinationLabelBehavior.alwaysShow,
  'NavigationDestinationLabelBehavior.alwaysHide':
      NavigationDestinationLabelBehavior.alwaysHide,
  'NavigationDestinationLabelBehavior.onlyShowSelected':
      NavigationDestinationLabelBehavior.onlyShowSelected,
  'NavigationDestinationLabelBehavior.values':
      NavigationDestinationLabelBehavior.values,
  'NavigationRailThemeData': (props) => NavigationRailThemeData(
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        unselectedLabelTextStyle: props['unselectedLabelTextStyle'],
        selectedLabelTextStyle: props['selectedLabelTextStyle'],
        unselectedIconTheme: props['unselectedIconTheme'],
        selectedIconTheme: props['selectedIconTheme'],
        groupAlignment: props['groupAlignment']?.toDouble(),
        labelType: props['labelType'],
        useIndicator: props['useIndicator'],
        indicatorColor: props['indicatorColor'],
        minWidth: props['minWidth']?.toDouble(),
        minExtendedWidth: props['minExtendedWidth']?.toDouble(),
      ),
  'NavigationRailThemeData.lerp': (props) => NavigationRailThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'NavigationRailTheme': (props) => NavigationRailTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'NavigationRailTheme.of': (props) => NavigationRailTheme.of(
        props['pa'][0],
      ),
  'AboutListTile': (props) => AboutListTile(
        key: props['key'],
        icon: props['icon'],
        child: props['child'],
        applicationName: props['applicationName'],
        applicationVersion: props['applicationVersion'],
        applicationIcon: props['applicationIcon'],
        applicationLegalese: props['applicationLegalese'],
        aboutBoxChildren: as<Widget>(props['aboutBoxChildren']),
        dense: props['dense'],
      ),
  'AboutDialog': (props) => AboutDialog(
        key: props['key'],
        applicationName: props['applicationName'],
        applicationVersion: props['applicationVersion'],
        applicationIcon: props['applicationIcon'],
        applicationLegalese: props['applicationLegalese'],
        children: as<Widget>(props['children']),
      ),
  'LicensePage': (props) => LicensePage(
        key: props['key'],
        applicationName: props['applicationName'],
        applicationVersion: props['applicationVersion'],
        applicationIcon: props['applicationIcon'],
        applicationLegalese: props['applicationLegalese'],
      ),
  'TimePickerThemeData': (props) => TimePickerThemeData(
        backgroundColor: props['backgroundColor'],
        hourMinuteTextColor: props['hourMinuteTextColor'],
        hourMinuteColor: props['hourMinuteColor'],
        dayPeriodTextColor: props['dayPeriodTextColor'],
        dayPeriodColor: props['dayPeriodColor'],
        dialHandColor: props['dialHandColor'],
        dialBackgroundColor: props['dialBackgroundColor'],
        dialTextColor: props['dialTextColor'],
        entryModeIconColor: props['entryModeIconColor'],
        hourMinuteTextStyle: props['hourMinuteTextStyle'],
        dayPeriodTextStyle: props['dayPeriodTextStyle'],
        helpTextStyle: props['helpTextStyle'],
        shape: props['shape'],
        hourMinuteShape: props['hourMinuteShape'],
        dayPeriodShape: props['dayPeriodShape'],
        dayPeriodBorderSide: props['dayPeriodBorderSide'],
        inputDecorationTheme: props['inputDecorationTheme'],
      ),
  'TimePickerThemeData.lerp': (props) => TimePickerThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'TimePickerTheme': (props) => TimePickerTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'TimePickerTheme.of': (props) => TimePickerTheme.of(
        props['pa'][0],
      ),
  'TextSelectionToolbar': (props) => TextSelectionToolbar(
        key: props['key'],
        anchorAbove: props['anchorAbove'],
        anchorBelow: props['anchorBelow'],
        toolbarBuilder: props['toolbarBuilder'] ?? _defaultToolbarBuilder,
        children: as<Widget>(props['children']) ?? const [],
      ),
  'TextSelectionThemeData': (props) => TextSelectionThemeData(
        cursorColor: props['cursorColor'],
        selectionColor: props['selectionColor'],
        selectionHandleColor: props['selectionHandleColor'],
      ),
  'TextSelectionThemeData.lerp': (props) => TextSelectionThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'TextSelectionTheme': (props) => TextSelectionTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'TextSelectionTheme.of': (props) => TextSelectionTheme.of(
        props['pa'][0],
      ),
  'RadioListTile': (props) => RadioListTile(
        key: props['key'],
        value: props['value'],
        groupValue: props['groupValue'],
        onChanged: props['onChanged'],
        toggleable: props['toggleable'] ?? false,
        activeColor: props['activeColor'],
        title: props['title'],
        subtitle: props['subtitle'],
        isThreeLine: props['isThreeLine'] ?? false,
        dense: props['dense'],
        secondary: props['secondary'],
        selected: props['selected'] ?? false,
        controlAffinity:
            props['controlAffinity'] ?? ListTileControlAffinity.platform,
        autofocus: props['autofocus'] ?? false,
        contentPadding: props['contentPadding'],
        shape: props['shape'],
        tileColor: props['tileColor'],
        selectedTileColor: props['selectedTileColor'],
        visualDensity: props['visualDensity'],
        focusNode: props['focusNode'],
        enableFeedback: props['enableFeedback'],
      ),
  'RefreshIndicator': (props) => RefreshIndicator(
        key: props['key'],
        child: props['child'],
        displacement: props['displacement']?.toDouble() ?? 40.0,
        edgeOffset: props['edgeOffset']?.toDouble() ?? 0.0,
        onRefresh: props['onRefresh'],
        color: props['color'],
        backgroundColor: props['backgroundColor'],
        notificationPredicate: props['notificationPredicate'] ??
            defaultScrollNotificationPredicate,
        semanticsLabel: props['semanticsLabel'],
        semanticsValue: props['semanticsValue'],
        strokeWidth: props['strokeWidth']?.toDouble() ??
            RefreshProgressIndicator.defaultStrokeWidth,
        triggerMode: props['triggerMode'] ?? RefreshIndicatorTriggerMode.onEdge,
      ),
  'RefreshIndicatorTriggerMode.anywhere': RefreshIndicatorTriggerMode.anywhere,
  'RefreshIndicatorTriggerMode.onEdge': RefreshIndicatorTriggerMode.onEdge,
  'RefreshIndicatorTriggerMode.values': RefreshIndicatorTriggerMode.values,
  'ActionChip': (props) => ActionChip(
        key: props['key'],
        avatar: props['avatar'],
        label: props['label'],
        labelStyle: props['labelStyle'],
        labelPadding: props['labelPadding'],
        onPressed: props['onPressed'],
        pressElevation: props['pressElevation']?.toDouble(),
        tooltip: props['tooltip'],
        side: props['side'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        backgroundColor: props['backgroundColor'],
        disabledColor: props['disabledColor'],
        padding: props['padding'],
        visualDensity: props['visualDensity'],
        materialTapTargetSize: props['materialTapTargetSize'],
        elevation: props['elevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        iconTheme: props['iconTheme'],
      ),
  'InputDatePickerFormField': (props) => InputDatePickerFormField(
        key: props['key'],
        initialDate: props['initialDate'],
        firstDate: props['firstDate'],
        lastDate: props['lastDate'],
        onDateSubmitted: props['onDateSubmitted'],
        onDateSaved: props['onDateSaved'],
        selectableDayPredicate: props['selectableDayPredicate'],
        errorFormatText: props['errorFormatText'],
        errorInvalidText: props['errorInvalidText'],
        fieldHintText: props['fieldHintText'],
        fieldLabelText: props['fieldLabelText'],
        keyboardType: props['keyboardType'],
        autofocus: props['autofocus'] ?? false,
      ),
  'BottomAppBarTheme': (props) => BottomAppBarTheme(
        color: props['color'],
        elevation: props['elevation']?.toDouble(),
        shape: props['shape'],
      ),
  'BottomAppBarTheme.of': (props) => BottomAppBarTheme.of(
        props['pa'][0],
      ),
  'BottomAppBarTheme.lerp': (props) => BottomAppBarTheme.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'TabBarTheme': (props) => TabBarTheme(
        indicator: props['indicator'],
        indicatorSize: props['indicatorSize'],
        labelColor: props['labelColor'],
        labelPadding: props['labelPadding'],
        labelStyle: props['labelStyle'],
        unselectedLabelColor: props['unselectedLabelColor'],
        unselectedLabelStyle: props['unselectedLabelStyle'],
        overlayColor: props['overlayColor'],
        splashFactory: props['splashFactory'],
        mouseCursor: props['mouseCursor'],
      ),
  'TabBarTheme.of': (props) => TabBarTheme.of(
        props['pa'][0],
      ),
  'TabBarTheme.lerp': (props) => TabBarTheme.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'OutlinedButtonThemeData': (props) => OutlinedButtonThemeData(
        style: props['style'],
      ),
  'OutlinedButtonThemeData.lerp': (props) => OutlinedButtonThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'OutlinedButtonTheme': (props) => OutlinedButtonTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'OutlinedButtonTheme.of': (props) => OutlinedButtonTheme.of(
        props['pa'][0],
      ),
  'GridTileBar': (props) => GridTileBar(
        key: props['key'],
        backgroundColor: props['backgroundColor'],
        leading: props['leading'],
        title: props['title'],
        subtitle: props['subtitle'],
        trailing: props['trailing'],
      ),
  'ElevationOverlay.applySurfaceTint': (props) =>
      ElevationOverlay.applySurfaceTint(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ElevationOverlay.applyOverlay': (props) => ElevationOverlay.applyOverlay(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ElevationOverlay.overlayColor': (props) => ElevationOverlay.overlayColor(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
      ),
  'ElevationOverlay.colorWithOverlay': (props) =>
      ElevationOverlay.colorWithOverlay(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ListTileThemeData': (props) => ListTileThemeData(
        dense: props['dense'],
        shape: props['shape'],
        style: props['style'],
        selectedColor: props['selectedColor'],
        iconColor: props['iconColor'],
        textColor: props['textColor'],
        contentPadding: props['contentPadding'],
        tileColor: props['tileColor'],
        selectedTileColor: props['selectedTileColor'],
        horizontalTitleGap: props['horizontalTitleGap']?.toDouble(),
        minVerticalPadding: props['minVerticalPadding']?.toDouble(),
        minLeadingWidth: props['minLeadingWidth']?.toDouble(),
        enableFeedback: props['enableFeedback'],
        mouseCursor: props['mouseCursor'],
        visualDensity: props['visualDensity'],
      ),
  'ListTileThemeData.lerp': (props) => ListTileThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ListTileTheme': (props) => ListTileTheme(
        key: props['key'],
        data: props['data'],
        dense: props['dense'],
        shape: props['shape'],
        style: props['style'],
        selectedColor: props['selectedColor'],
        iconColor: props['iconColor'],
        textColor: props['textColor'],
        contentPadding: props['contentPadding'],
        tileColor: props['tileColor'],
        selectedTileColor: props['selectedTileColor'],
        enableFeedback: props['enableFeedback'],
        mouseCursor: props['mouseCursor'],
        horizontalTitleGap: props['horizontalTitleGap']?.toDouble(),
        minVerticalPadding: props['minVerticalPadding']?.toDouble(),
        minLeadingWidth: props['minLeadingWidth']?.toDouble(),
        child: props['child'],
      ),
  'ListTileTheme.of': (props) => ListTileTheme.of(
        props['pa'][0],
      ),
  'ListTileTheme.merge': (props) => ListTileTheme.merge(
        key: props['key'],
        dense: props['dense'],
        shape: props['shape'],
        style: props['style'],
        selectedColor: props['selectedColor'],
        iconColor: props['iconColor'],
        textColor: props['textColor'],
        contentPadding: props['contentPadding'],
        tileColor: props['tileColor'],
        selectedTileColor: props['selectedTileColor'],
        enableFeedback: props['enableFeedback'],
        horizontalTitleGap: props['horizontalTitleGap']?.toDouble(),
        minVerticalPadding: props['minVerticalPadding']?.toDouble(),
        minLeadingWidth: props['minLeadingWidth']?.toDouble(),
        child: props['child'],
      ),
  'SelectableText': (props) => SelectableText(
        props['pa'][0],
        key: props['key'],
        focusNode: props['focusNode'],
        style: props['style'],
        strutStyle: props['strutStyle'],
        textAlign: props['textAlign'],
        textDirection: props['textDirection'],
        textScaleFactor: props['textScaleFactor']?.toDouble(),
        showCursor: props['showCursor'] ?? false,
        autofocus: props['autofocus'] ?? false,
        toolbarOptions: props['toolbarOptions'],
        minLines: props['minLines'],
        maxLines: props['maxLines'],
        cursorWidth: props['cursorWidth']?.toDouble() ?? 2.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorRadius: props['cursorRadius'],
        cursorColor: props['cursorColor'],
        selectionHeightStyle:
            props['selectionHeightStyle'] ?? ui.BoxHeightStyle.tight,
        selectionWidthStyle:
            props['selectionWidthStyle'] ?? ui.BoxWidthStyle.tight,
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        enableInteractiveSelection: props['enableInteractiveSelection'] ?? true,
        selectionControls: props['selectionControls'],
        onTap: props['onTap'],
        scrollPhysics: props['scrollPhysics'],
        semanticsLabel: props['semanticsLabel'],
        textHeightBehavior: props['textHeightBehavior'],
        textWidthBasis: props['textWidthBasis'],
        onSelectionChanged: props['onSelectionChanged'],
      ),
  'SelectableText.rich': (props) => SelectableText.rich(
        props['pa'][0],
        key: props['key'],
        focusNode: props['focusNode'],
        style: props['style'],
        strutStyle: props['strutStyle'],
        textAlign: props['textAlign'],
        textDirection: props['textDirection'],
        textScaleFactor: props['textScaleFactor']?.toDouble(),
        showCursor: props['showCursor'] ?? false,
        autofocus: props['autofocus'] ?? false,
        toolbarOptions: props['toolbarOptions'],
        minLines: props['minLines'],
        maxLines: props['maxLines'],
        cursorWidth: props['cursorWidth']?.toDouble() ?? 2.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorRadius: props['cursorRadius'],
        cursorColor: props['cursorColor'],
        selectionHeightStyle:
            props['selectionHeightStyle'] ?? ui.BoxHeightStyle.tight,
        selectionWidthStyle:
            props['selectionWidthStyle'] ?? ui.BoxWidthStyle.tight,
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        enableInteractiveSelection: props['enableInteractiveSelection'] ?? true,
        selectionControls: props['selectionControls'],
        onTap: props['onTap'],
        scrollPhysics: props['scrollPhysics'],
        semanticsLabel: props['semanticsLabel'],
        textHeightBehavior: props['textHeightBehavior'],
        textWidthBasis: props['textWidthBasis'],
        onSelectionChanged: props['onSelectionChanged'],
      ),
  'CircleAvatar': (props) => CircleAvatar(
        key: props['key'],
        child: props['child'],
        backgroundColor: props['backgroundColor'],
        backgroundImage: props['backgroundImage'],
        foregroundImage: props['foregroundImage'],
        onBackgroundImageError: props['onBackgroundImageError'],
        onForegroundImageError: props['onForegroundImageError'],
        foregroundColor: props['foregroundColor'],
        radius: props['radius']?.toDouble(),
        minRadius: props['minRadius']?.toDouble(),
        maxRadius: props['maxRadius']?.toDouble(),
      ),
  'Ink': (props) => Ink(
        key: props['key'],
        padding: props['padding'],
        color: props['color'],
        decoration: props['decoration'],
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        child: props['child'],
      ),
  'Ink.image': (props) => Ink.image(
        key: props['key'],
        padding: props['padding'],
        image: props['image'],
        onImageError: props['onImageError'],
        colorFilter: props['colorFilter'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        centerSlice: props['centerSlice'],
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        matchTextDirection: props['matchTextDirection'] ?? false,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        child: props['child'],
      ),
  'InkDecoration': (props) => InkDecoration(
        decoration: props['decoration'],
        configuration: props['configuration'],
        controller: props['controller'],
        referenceBox: props['referenceBox'],
        onRemoved: props['onRemoved'],
      ),
  'ButtonBar': (props) => ButtonBar(
        key: props['key'],
        alignment: props['alignment'],
        mainAxisSize: props['mainAxisSize'],
        buttonTextTheme: props['buttonTextTheme'],
        buttonMinWidth: props['buttonMinWidth']?.toDouble(),
        buttonHeight: props['buttonHeight']?.toDouble(),
        buttonPadding: props['buttonPadding'],
        buttonAlignedDropdown: props['buttonAlignedDropdown'],
        layoutBehavior: props['layoutBehavior'],
        overflowDirection: props['overflowDirection'],
        overflowButtonSpacing: props['overflowButtonSpacing']?.toDouble(),
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'FadeUpwardsPageTransitionsBuilder': (props) =>
      const FadeUpwardsPageTransitionsBuilder(),
  'OpenUpwardsPageTransitionsBuilder': (props) =>
      const OpenUpwardsPageTransitionsBuilder(),
  'ZoomPageTransitionsBuilder': (props) => const ZoomPageTransitionsBuilder(),
  'CupertinoPageTransitionsBuilder': (props) =>
      const CupertinoPageTransitionsBuilder(),
  'PageTransitionsTheme': (props) => PageTransitionsTheme(
        builders: props['builders'] ?? _defaultBuilders,
      ),
  'AppBarTheme': (props) => AppBarTheme(
        brightness: props['brightness'],
        color: props['color'],
        backgroundColor: props['backgroundColor'],
        foregroundColor: props['foregroundColor'],
        elevation: props['elevation']?.toDouble(),
        scrolledUnderElevation: props['scrolledUnderElevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        shape: props['shape'],
        iconTheme: props['iconTheme'],
        actionsIconTheme: props['actionsIconTheme'],
        textTheme: props['textTheme'],
        centerTitle: props['centerTitle'],
        titleSpacing: props['titleSpacing']?.toDouble(),
        toolbarHeight: props['toolbarHeight']?.toDouble(),
        toolbarTextStyle: props['toolbarTextStyle'],
        titleTextStyle: props['titleTextStyle'],
        systemOverlayStyle: props['systemOverlayStyle'],
        backwardsCompatibility: props['backwardsCompatibility'],
      ),
  'AppBarTheme.of': (props) => AppBarTheme.of(
        props['pa'][0],
      ),
  'AppBarTheme.lerp': (props) => AppBarTheme.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'MaterialPageRoute': (props) => MaterialPageRoute(
        builder: props['builder'],
        settings: props['settings'],
        maintainState: props['maintainState'] ?? true,
        fullscreenDialog: props['fullscreenDialog'] ?? false,
      ),
  'MaterialPage': (props) => MaterialPage(
        child: props['child'],
        maintainState: props['maintainState'] ?? true,
        fullscreenDialog: props['fullscreenDialog'] ?? false,
        key: props['key'],
        name: props['name'],
        arguments: props['arguments'],
        restorationId: props['restorationId'],
      ),
  'MaterialColor': (props) => MaterialColor(
        props['pa'][0],
        props['pa'][1],
      ),
  'MaterialAccentColor': (props) => MaterialAccentColor(
        props['pa'][0],
        props['pa'][1],
      ),
  'Colors.transparent': Colors.transparent,
  'Colors.black': Colors.black,
  'Colors.black87': Colors.black87,
  'Colors.black54': Colors.black54,
  'Colors.black45': Colors.black45,
  'Colors.black38': Colors.black38,
  'Colors.black26': Colors.black26,
  'Colors.black12': Colors.black12,
  'Colors.white': Colors.white,
  'Colors.white70': Colors.white70,
  'Colors.white60': Colors.white60,
  'Colors.white54': Colors.white54,
  'Colors.white38': Colors.white38,
  'Colors.white30': Colors.white30,
  'Colors.white24': Colors.white24,
  'Colors.white12': Colors.white12,
  'Colors.white10': Colors.white10,
  'Colors.red': Colors.red,
  'Colors.redAccent': Colors.redAccent,
  'Colors.pink': Colors.pink,
  'Colors.pinkAccent': Colors.pinkAccent,
  'Colors.purple': Colors.purple,
  'Colors.purpleAccent': Colors.purpleAccent,
  'Colors.deepPurple': Colors.deepPurple,
  'Colors.deepPurpleAccent': Colors.deepPurpleAccent,
  'Colors.indigo': Colors.indigo,
  'Colors.indigoAccent': Colors.indigoAccent,
  'Colors.blue': Colors.blue,
  'Colors.blueAccent': Colors.blueAccent,
  'Colors.lightBlue': Colors.lightBlue,
  'Colors.lightBlueAccent': Colors.lightBlueAccent,
  'Colors.cyan': Colors.cyan,
  'Colors.cyanAccent': Colors.cyanAccent,
  'Colors.teal': Colors.teal,
  'Colors.tealAccent': Colors.tealAccent,
  'Colors.green': Colors.green,
  'Colors.greenAccent': Colors.greenAccent,
  'Colors.lightGreen': Colors.lightGreen,
  'Colors.lightGreenAccent': Colors.lightGreenAccent,
  'Colors.lime': Colors.lime,
  'Colors.limeAccent': Colors.limeAccent,
  'Colors.yellow': Colors.yellow,
  'Colors.yellowAccent': Colors.yellowAccent,
  'Colors.amber': Colors.amber,
  'Colors.amberAccent': Colors.amberAccent,
  'Colors.orange': Colors.orange,
  'Colors.orangeAccent': Colors.orangeAccent,
  'Colors.deepOrange': Colors.deepOrange,
  'Colors.deepOrangeAccent': Colors.deepOrangeAccent,
  'Colors.brown': Colors.brown,
  'Colors.grey': Colors.grey,
  'Colors.blueGrey': Colors.blueGrey,
  'Colors.primaries': Colors.primaries,
  'Colors.accents': Colors.accents,
  'SnackBarAction': (props) => SnackBarAction(
        key: props['key'],
        textColor: props['textColor'],
        disabledTextColor: props['disabledTextColor'],
        label: props['label'],
        onPressed: props['onPressed'],
      ),
  'SnackBar': (props) => SnackBar(
        key: props['key'],
        content: props['content'],
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        margin: props['margin'],
        padding: props['padding'],
        width: props['width']?.toDouble(),
        shape: props['shape'],
        behavior: props['behavior'],
        action: props['action'],
        duration: props['duration'] ?? _snackBarDisplayDuration,
        animation: props['animation'],
        onVisible: props['onVisible'],
        dismissDirection: props['dismissDirection'] ?? DismissDirection.down,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'SnackBar.createAnimationController': (props) =>
      SnackBar.createAnimationController(
        vsync: props['vsync'],
      ),
  'SnackBarClosedReason.action': SnackBarClosedReason.action,
  'SnackBarClosedReason.dismiss': SnackBarClosedReason.dismiss,
  'SnackBarClosedReason.swipe': SnackBarClosedReason.swipe,
  'SnackBarClosedReason.hide': SnackBarClosedReason.hide,
  'SnackBarClosedReason.remove': SnackBarClosedReason.remove,
  'SnackBarClosedReason.timeout': SnackBarClosedReason.timeout,
  'SnackBarClosedReason.values': SnackBarClosedReason.values,
  'FloatingLabelAlignment.start': FloatingLabelAlignment.start,
  'FloatingLabelAlignment.center': FloatingLabelAlignment.center,
  'InputDecorator': (props) => InputDecorator(
        key: props['key'],
        decoration: props['decoration'],
        baseStyle: props['baseStyle'],
        textAlign: props['textAlign'],
        textAlignVertical: props['textAlignVertical'],
        isFocused: props['isFocused'] ?? false,
        isHovering: props['isHovering'] ?? false,
        expands: props['expands'] ?? false,
        isEmpty: props['isEmpty'] ?? false,
        child: props['child'],
      ),
  'InputDecorator.containerOf': (props) => InputDecorator.containerOf(
        props['pa'][0],
      ),
  'InputDecoration': (props) => InputDecoration(
        icon: props['icon'],
        iconColor: props['iconColor'],
        label: props['label'],
        labelText: props['labelText'],
        labelStyle: props['labelStyle'],
        floatingLabelStyle: props['floatingLabelStyle'],
        helperText: props['helperText'],
        helperStyle: props['helperStyle'],
        helperMaxLines: props['helperMaxLines'],
        hintText: props['hintText'],
        hintStyle: props['hintStyle'],
        hintTextDirection: props['hintTextDirection'],
        hintMaxLines: props['hintMaxLines'],
        errorText: props['errorText'],
        errorStyle: props['errorStyle'],
        errorMaxLines: props['errorMaxLines'],
        floatingLabelBehavior: props['floatingLabelBehavior'],
        floatingLabelAlignment: props['floatingLabelAlignment'],
        isCollapsed: props['isCollapsed'] ?? false,
        isDense: props['isDense'],
        contentPadding: props['contentPadding'],
        prefixIcon: props['prefixIcon'],
        prefixIconConstraints: props['prefixIconConstraints'],
        prefix: props['prefix'],
        prefixText: props['prefixText'],
        prefixStyle: props['prefixStyle'],
        prefixIconColor: props['prefixIconColor'],
        suffixIcon: props['suffixIcon'],
        suffix: props['suffix'],
        suffixText: props['suffixText'],
        suffixStyle: props['suffixStyle'],
        suffixIconColor: props['suffixIconColor'],
        suffixIconConstraints: props['suffixIconConstraints'],
        counter: props['counter'],
        counterText: props['counterText'],
        counterStyle: props['counterStyle'],
        filled: props['filled'],
        fillColor: props['fillColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        errorBorder: props['errorBorder'],
        focusedBorder: props['focusedBorder'],
        focusedErrorBorder: props['focusedErrorBorder'],
        disabledBorder: props['disabledBorder'],
        enabledBorder: props['enabledBorder'],
        border: props['border'],
        enabled: props['enabled'] ?? true,
        semanticCounterText: props['semanticCounterText'],
        alignLabelWithHint: props['alignLabelWithHint'],
        constraints: props['constraints'],
      ),
  'InputDecoration.collapsed': (props) => InputDecoration.collapsed(
        hintText: props['hintText'],
        floatingLabelBehavior: props['floatingLabelBehavior'],
        floatingLabelAlignment: props['floatingLabelAlignment'],
        hintStyle: props['hintStyle'],
        hintTextDirection: props['hintTextDirection'],
        filled: props['filled'] ?? false,
        fillColor: props['fillColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        border: props['border'] ?? InputBorder.none,
        enabled: props['enabled'] ?? true,
      ),
  'InputDecorationTheme': (props) => InputDecorationTheme(
        labelStyle: props['labelStyle'],
        floatingLabelStyle: props['floatingLabelStyle'],
        helperStyle: props['helperStyle'],
        helperMaxLines: props['helperMaxLines'],
        hintStyle: props['hintStyle'],
        errorStyle: props['errorStyle'],
        errorMaxLines: props['errorMaxLines'],
        floatingLabelBehavior:
            props['floatingLabelBehavior'] ?? FloatingLabelBehavior.auto,
        floatingLabelAlignment:
            props['floatingLabelAlignment'] ?? FloatingLabelAlignment.start,
        isDense: props['isDense'] ?? false,
        contentPadding: props['contentPadding'],
        isCollapsed: props['isCollapsed'] ?? false,
        iconColor: props['iconColor'],
        prefixStyle: props['prefixStyle'],
        prefixIconColor: props['prefixIconColor'],
        suffixStyle: props['suffixStyle'],
        suffixIconColor: props['suffixIconColor'],
        counterStyle: props['counterStyle'],
        filled: props['filled'] ?? false,
        fillColor: props['fillColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        errorBorder: props['errorBorder'],
        focusedBorder: props['focusedBorder'],
        focusedErrorBorder: props['focusedErrorBorder'],
        disabledBorder: props['disabledBorder'],
        enabledBorder: props['enabledBorder'],
        border: props['border'],
        alignLabelWithHint: props['alignLabelWithHint'] ?? false,
        constraints: props['constraints'],
      ),
  'FloatingLabelBehavior.never': FloatingLabelBehavior.never,
  'FloatingLabelBehavior.auto': FloatingLabelBehavior.auto,
  'FloatingLabelBehavior.always': FloatingLabelBehavior.always,
  'FloatingLabelBehavior.values': FloatingLabelBehavior.values,
  'ReorderableListView': (props) => ReorderableListView(
        key: props['key'],
        children: as<Widget>(props['children']) ?? const [],
        onReorder: props['onReorder'],
        onReorderStart: props['onReorderStart'],
        onReorderEnd: props['onReorderEnd'],
        itemExtent: props['itemExtent']?.toDouble(),
        prototypeItem: props['prototypeItem'],
        proxyDecorator: props['proxyDecorator'],
        buildDefaultDragHandles: props['buildDefaultDragHandles'] ?? true,
        padding: props['padding'],
        header: props['header'],
        footer: props['footer'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        scrollController: props['scrollController'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        anchor: props['anchor']?.toDouble() ?? 0.0,
        cacheExtent: props['cacheExtent']?.toDouble(),
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ReorderableListView.builder': (props) => ReorderableListView.builder(
        key: props['key'],
        itemBuilder: props['itemBuilder'],
        itemCount: props['itemCount'],
        onReorder: props['onReorder'],
        onReorderStart: props['onReorderStart'],
        onReorderEnd: props['onReorderEnd'],
        itemExtent: props['itemExtent']?.toDouble(),
        prototypeItem: props['prototypeItem'],
        proxyDecorator: props['proxyDecorator'],
        buildDefaultDragHandles: props['buildDefaultDragHandles'] ?? true,
        padding: props['padding'],
        header: props['header'],
        footer: props['footer'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        scrollController: props['scrollController'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        anchor: props['anchor']?.toDouble() ?? 0.0,
        cacheExtent: props['cacheExtent']?.toDouble(),
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ColorScheme': (props) => ColorScheme(
        brightness: props['brightness'],
        primary: props['primary'],
        onPrimary: props['onPrimary'],
        primaryContainer: props['primaryContainer'],
        onPrimaryContainer: props['onPrimaryContainer'],
        secondary: props['secondary'],
        onSecondary: props['onSecondary'],
        secondaryContainer: props['secondaryContainer'],
        onSecondaryContainer: props['onSecondaryContainer'],
        tertiary: props['tertiary'],
        onTertiary: props['onTertiary'],
        tertiaryContainer: props['tertiaryContainer'],
        onTertiaryContainer: props['onTertiaryContainer'],
        error: props['error'],
        onError: props['onError'],
        errorContainer: props['errorContainer'],
        onErrorContainer: props['onErrorContainer'],
        background: props['background'],
        onBackground: props['onBackground'],
        surface: props['surface'],
        onSurface: props['onSurface'],
        surfaceVariant: props['surfaceVariant'],
        onSurfaceVariant: props['onSurfaceVariant'],
        outline: props['outline'],
        shadow: props['shadow'],
        inverseSurface: props['inverseSurface'],
        onInverseSurface: props['onInverseSurface'],
        inversePrimary: props['inversePrimary'],
        surfaceTint: props['surfaceTint'],
        primaryVariant: props['primaryVariant'],
        secondaryVariant: props['secondaryVariant'],
      ),
  'ColorScheme.fromSeed': (props) => ColorScheme.fromSeed(
        seedColor: props['seedColor'],
        brightness: props['brightness'] ?? Brightness.light,
        primary: props['primary'],
        onPrimary: props['onPrimary'],
        primaryContainer: props['primaryContainer'],
        onPrimaryContainer: props['onPrimaryContainer'],
        secondary: props['secondary'],
        onSecondary: props['onSecondary'],
        secondaryContainer: props['secondaryContainer'],
        onSecondaryContainer: props['onSecondaryContainer'],
        tertiary: props['tertiary'],
        onTertiary: props['onTertiary'],
        tertiaryContainer: props['tertiaryContainer'],
        onTertiaryContainer: props['onTertiaryContainer'],
        error: props['error'],
        onError: props['onError'],
        errorContainer: props['errorContainer'],
        onErrorContainer: props['onErrorContainer'],
        outline: props['outline'],
        background: props['background'],
        onBackground: props['onBackground'],
        surface: props['surface'],
        onSurface: props['onSurface'],
        surfaceVariant: props['surfaceVariant'],
        onSurfaceVariant: props['onSurfaceVariant'],
        inverseSurface: props['inverseSurface'],
        onInverseSurface: props['onInverseSurface'],
        inversePrimary: props['inversePrimary'],
        shadow: props['shadow'],
        surfaceTint: props['surfaceTint'],
      ),
  'ColorScheme.light': (props) => ColorScheme.light(
        brightness: props['brightness'] ?? Brightness.light,
        primary: props['primary'] ?? const Color(0xff6200ee),
        onPrimary: props['onPrimary'] ?? Colors.white,
        primaryContainer: props['primaryContainer'],
        onPrimaryContainer: props['onPrimaryContainer'],
        secondary: props['secondary'] ?? const Color(0xff03dac6),
        onSecondary: props['onSecondary'] ?? Colors.black,
        secondaryContainer: props['secondaryContainer'],
        onSecondaryContainer: props['onSecondaryContainer'],
        tertiary: props['tertiary'],
        onTertiary: props['onTertiary'],
        tertiaryContainer: props['tertiaryContainer'],
        onTertiaryContainer: props['onTertiaryContainer'],
        error: props['error'] ?? const Color(0xffb00020),
        onError: props['onError'] ?? Colors.white,
        errorContainer: props['errorContainer'],
        onErrorContainer: props['onErrorContainer'],
        background: props['background'] ?? Colors.white,
        onBackground: props['onBackground'] ?? Colors.black,
        surface: props['surface'] ?? Colors.white,
        onSurface: props['onSurface'] ?? Colors.black,
        surfaceVariant: props['surfaceVariant'],
        onSurfaceVariant: props['onSurfaceVariant'],
        outline: props['outline'],
        shadow: props['shadow'],
        inverseSurface: props['inverseSurface'],
        onInverseSurface: props['onInverseSurface'],
        inversePrimary: props['inversePrimary'],
        surfaceTint: props['surfaceTint'],
        primaryVariant: props['primaryVariant'] ?? const Color(0xff3700b3),
        secondaryVariant: props['secondaryVariant'] ?? const Color(0xff018786),
      ),
  'ColorScheme.dark': (props) => ColorScheme.dark(
        brightness: props['brightness'] ?? Brightness.dark,
        primary: props['primary'] ?? const Color(0xffbb86fc),
        onPrimary: props['onPrimary'] ?? Colors.black,
        primaryContainer: props['primaryContainer'],
        onPrimaryContainer: props['onPrimaryContainer'],
        secondary: props['secondary'] ?? const Color(0xff03dac6),
        onSecondary: props['onSecondary'] ?? Colors.black,
        secondaryContainer: props['secondaryContainer'],
        onSecondaryContainer: props['onSecondaryContainer'],
        tertiary: props['tertiary'],
        onTertiary: props['onTertiary'],
        tertiaryContainer: props['tertiaryContainer'],
        onTertiaryContainer: props['onTertiaryContainer'],
        error: props['error'] ?? const Color(0xffcf6679),
        onError: props['onError'] ?? Colors.black,
        errorContainer: props['errorContainer'],
        onErrorContainer: props['onErrorContainer'],
        background: props['background'] ?? const Color(0xff121212),
        onBackground: props['onBackground'] ?? Colors.white,
        surface: props['surface'] ?? const Color(0xff121212),
        onSurface: props['onSurface'] ?? Colors.white,
        surfaceVariant: props['surfaceVariant'],
        onSurfaceVariant: props['onSurfaceVariant'],
        outline: props['outline'],
        shadow: props['shadow'],
        inverseSurface: props['inverseSurface'],
        onInverseSurface: props['onInverseSurface'],
        inversePrimary: props['inversePrimary'],
        surfaceTint: props['surfaceTint'],
        primaryVariant: props['primaryVariant'] ?? const Color(0xff3700B3),
        secondaryVariant: props['secondaryVariant'] ?? const Color(0xff03dac6),
      ),
  'ColorScheme.highContrastLight': (props) => ColorScheme.highContrastLight(
        brightness: props['brightness'] ?? Brightness.light,
        primary: props['primary'] ?? const Color(0xff0000ba),
        onPrimary: props['onPrimary'] ?? Colors.white,
        primaryContainer: props['primaryContainer'],
        onPrimaryContainer: props['onPrimaryContainer'],
        secondary: props['secondary'] ?? const Color(0xff66fff9),
        onSecondary: props['onSecondary'] ?? Colors.black,
        secondaryContainer: props['secondaryContainer'],
        onSecondaryContainer: props['onSecondaryContainer'],
        tertiary: props['tertiary'],
        onTertiary: props['onTertiary'],
        tertiaryContainer: props['tertiaryContainer'],
        onTertiaryContainer: props['onTertiaryContainer'],
        error: props['error'] ?? const Color(0xff790000),
        onError: props['onError'] ?? Colors.white,
        errorContainer: props['errorContainer'],
        onErrorContainer: props['onErrorContainer'],
        background: props['background'] ?? Colors.white,
        onBackground: props['onBackground'] ?? Colors.black,
        surface: props['surface'] ?? Colors.white,
        onSurface: props['onSurface'] ?? Colors.black,
        surfaceVariant: props['surfaceVariant'],
        onSurfaceVariant: props['onSurfaceVariant'],
        outline: props['outline'],
        shadow: props['shadow'],
        inverseSurface: props['inverseSurface'],
        onInverseSurface: props['onInverseSurface'],
        inversePrimary: props['inversePrimary'],
        surfaceTint: props['surfaceTint'],
        primaryVariant: props['primaryVariant'] ?? const Color(0xff000088),
        secondaryVariant: props['secondaryVariant'] ?? const Color(0xff018786),
      ),
  'ColorScheme.highContrastDark': (props) => ColorScheme.highContrastDark(
        brightness: props['brightness'] ?? Brightness.dark,
        primary: props['primary'] ?? const Color(0xffefb7ff),
        onPrimary: props['onPrimary'] ?? Colors.black,
        primaryContainer: props['primaryContainer'],
        onPrimaryContainer: props['onPrimaryContainer'],
        secondary: props['secondary'] ?? const Color(0xff66fff9),
        onSecondary: props['onSecondary'] ?? Colors.black,
        secondaryContainer: props['secondaryContainer'],
        onSecondaryContainer: props['onSecondaryContainer'],
        tertiary: props['tertiary'],
        onTertiary: props['onTertiary'],
        tertiaryContainer: props['tertiaryContainer'],
        onTertiaryContainer: props['onTertiaryContainer'],
        error: props['error'] ?? const Color(0xff9b374d),
        onError: props['onError'] ?? Colors.black,
        errorContainer: props['errorContainer'],
        onErrorContainer: props['onErrorContainer'],
        background: props['background'] ?? const Color(0xff121212),
        onBackground: props['onBackground'] ?? Colors.white,
        surface: props['surface'] ?? const Color(0xff121212),
        onSurface: props['onSurface'] ?? Colors.white,
        surfaceVariant: props['surfaceVariant'],
        onSurfaceVariant: props['onSurfaceVariant'],
        outline: props['outline'],
        shadow: props['shadow'],
        inverseSurface: props['inverseSurface'],
        onInverseSurface: props['onInverseSurface'],
        inversePrimary: props['inversePrimary'],
        surfaceTint: props['surfaceTint'],
        primaryVariant: props['primaryVariant'] ?? const Color(0xffbe9eff),
        secondaryVariant: props['secondaryVariant'] ?? const Color(0xff66fff9),
      ),
  'ColorScheme.fromSwatch': (props) => ColorScheme.fromSwatch(
        primarySwatch: props['primarySwatch'] ?? Colors.blue,
        primaryColorDark: props['primaryColorDark'],
        accentColor: props['accentColor'],
        cardColor: props['cardColor'],
        backgroundColor: props['backgroundColor'],
        errorColor: props['errorColor'],
        brightness: props['brightness'] ?? Brightness.light,
      ),
  'ColorScheme.lerp': (props) => ColorScheme.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'TimeOfDay': (props) => TimeOfDay(
        hour: props['hour'],
        minute: props['minute'],
      ),
  'TimeOfDay.fromDateTime': (props) => TimeOfDay.fromDateTime(
        props['pa'][0],
      ),
  'TimeOfDay.now': (props) => TimeOfDay.now(),
  'TimeOfDay.hoursPerDay': TimeOfDay.hoursPerDay,
  'TimeOfDay.hoursPerPeriod': TimeOfDay.hoursPerPeriod,
  'TimeOfDay.minutesPerHour': TimeOfDay.minutesPerHour,
  'RestorableTimeOfDay': (props) => RestorableTimeOfDay(
        props['pa'][0],
      ),
  'DayPeriod.am': DayPeriod.am,
  'DayPeriod.pm': DayPeriod.pm,
  'DayPeriod.values': DayPeriod.values,
  'TimeOfDayFormat.HH_colon_mm': TimeOfDayFormat.HH_colon_mm,
  'TimeOfDayFormat.HH_dot_mm': TimeOfDayFormat.HH_dot_mm,
  'TimeOfDayFormat.frenchCanadian': TimeOfDayFormat.frenchCanadian,
  'TimeOfDayFormat.H_colon_mm': TimeOfDayFormat.H_colon_mm,
  'TimeOfDayFormat.h_colon_mm_space_a': TimeOfDayFormat.h_colon_mm_space_a,
  'TimeOfDayFormat.a_space_h_colon_mm': TimeOfDayFormat.a_space_h_colon_mm,
  'TimeOfDayFormat.values': TimeOfDayFormat.values,
  'HourFormat.HH': HourFormat.HH,
  'HourFormat.H': HourFormat.H,
  'HourFormat.h': HourFormat.h,
  'HourFormat.values': HourFormat.values,
  'Card': (props) => Card(
        key: props['key'],
        color: props['color'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation']?.toDouble(),
        shape: props['shape'],
        borderOnForeground: props['borderOnForeground'] ?? true,
        margin: props['margin'],
        clipBehavior: props['clipBehavior'],
        child: props['child'],
        semanticContainer: props['semanticContainer'] ?? true,
      ),
  'RawMaterialButton': (props) => RawMaterialButton(
        key: props['key'],
        onPressed: props['onPressed'],
        onLongPress: props['onLongPress'],
        onHighlightChanged: props['onHighlightChanged'],
        mouseCursor: props['mouseCursor'],
        textStyle: props['textStyle'],
        fillColor: props['fillColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        highlightColor: props['highlightColor'],
        splashColor: props['splashColor'],
        elevation: props['elevation']?.toDouble() ?? 2.0,
        focusElevation: props['focusElevation']?.toDouble() ?? 4.0,
        hoverElevation: props['hoverElevation']?.toDouble() ?? 4.0,
        highlightElevation: props['highlightElevation']?.toDouble() ?? 8.0,
        disabledElevation: props['disabledElevation']?.toDouble() ?? 0.0,
        padding: props['padding'] ?? EdgeInsets.zero,
        visualDensity: props['visualDensity'] ?? VisualDensity.standard,
        constraints: props['constraints'] ??
            const BoxConstraints(minWidth: 88.0, minHeight: 36.0),
        shape: props['shape'] ?? const RoundedRectangleBorder(),
        animationDuration: props['animationDuration'] ?? kThemeChangeDuration,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        materialTapTargetSize: props['materialTapTargetSize'],
        child: props['child'],
        enableFeedback: props['enableFeedback'] ?? true,
      ),
  'PopupMenuThemeData': (props) => PopupMenuThemeData(
        color: props['color'],
        shape: props['shape'],
        elevation: props['elevation']?.toDouble(),
        textStyle: props['textStyle'],
        enableFeedback: props['enableFeedback'],
        mouseCursor: props['mouseCursor'],
      ),
  'PopupMenuThemeData.lerp': (props) => PopupMenuThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'PopupMenuTheme': (props) => PopupMenuTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'PopupMenuTheme.of': (props) => PopupMenuTheme.of(
        props['pa'][0],
      ),
  'DataColumn': (props) => DataColumn(
        label: props['label'],
        tooltip: props['tooltip'],
        numeric: props['numeric'] ?? false,
        onSort: props['onSort'],
      ),
  'DataRow': (props) => DataRow(
        key: props['key'],
        selected: props['selected'] ?? false,
        onSelectChanged: props['onSelectChanged'],
        onLongPress: props['onLongPress'],
        color: props['color'],
        cells: as<DataCell>(props['cells']) ?? const [],
      ),
  'DataRow.byIndex': (props) => DataRow.byIndex(
        index: props['index'],
        selected: props['selected'] ?? false,
        onSelectChanged: props['onSelectChanged'],
        onLongPress: props['onLongPress'],
        color: props['color'],
        cells: as<DataCell>(props['cells']) ?? const [],
      ),
  'DataCell': (props) => DataCell(
        props['pa'][0],
        placeholder: props['placeholder'] ?? false,
        showEditIcon: props['showEditIcon'] ?? false,
        onTap: props['onTap'],
        onLongPress: props['onLongPress'],
        onTapDown: props['onTapDown'],
        onDoubleTap: props['onDoubleTap'],
        onTapCancel: props['onTapCancel'],
      ),
  'DataCell.empty': DataCell.empty,
  'DataTable': (props) => DataTable(
        key: props['key'],
        columns: as<DataColumn>(props['columns']) ?? const [],
        sortColumnIndex: props['sortColumnIndex'],
        sortAscending: props['sortAscending'] ?? true,
        onSelectAll: props['onSelectAll'],
        decoration: props['decoration'],
        dataRowColor: props['dataRowColor'],
        dataRowHeight: props['dataRowHeight']?.toDouble(),
        dataTextStyle: props['dataTextStyle'],
        headingRowColor: props['headingRowColor'],
        headingRowHeight: props['headingRowHeight']?.toDouble(),
        headingTextStyle: props['headingTextStyle'],
        horizontalMargin: props['horizontalMargin']?.toDouble(),
        columnSpacing: props['columnSpacing']?.toDouble(),
        showCheckboxColumn: props['showCheckboxColumn'] ?? true,
        showBottomBorder: props['showBottomBorder'] ?? false,
        dividerThickness: props['dividerThickness']?.toDouble(),
        rows: as<DataRow>(props['rows']) ?? const [],
        checkboxHorizontalMargin: props['checkboxHorizontalMargin']?.toDouble(),
        border: props['border'],
      ),
  'TableRowInkWell': (props) => TableRowInkWell(
        key: props['key'],
        child: props['child'],
        onTap: props['onTap'],
        onDoubleTap: props['onDoubleTap'],
        onLongPress: props['onLongPress'],
        onHighlightChanged: props['onHighlightChanged'],
        overlayColor: props['overlayColor'],
      ),
  'TabController': (props) => TabController(
        initialIndex: props['initialIndex'] ?? 0,
        animationDuration: props['animationDuration'],
        length: props['length'],
        vsync: props['vsync'],
      ),
  'DefaultTabController': (props) => DefaultTabController(
        key: props['key'],
        length: props['length'],
        initialIndex: props['initialIndex'] ?? 0,
        child: props['child'],
        animationDuration: props['animationDuration'],
      ),
  'DefaultTabController.of': (props) => DefaultTabController.of(
        props['pa'][0],
      ),
  'NavigationRail': (props) => NavigationRail(
        key: props['key'],
        backgroundColor: props['backgroundColor'],
        extended: props['extended'] ?? false,
        leading: props['leading'],
        trailing: props['trailing'],
        destinations:
            as<NavigationRailDestination>(props['destinations']) ?? const [],
        selectedIndex: props['selectedIndex'],
        onDestinationSelected: props['onDestinationSelected'],
        elevation: props['elevation']?.toDouble(),
        groupAlignment: props['groupAlignment']?.toDouble(),
        labelType: props['labelType'],
        unselectedLabelTextStyle: props['unselectedLabelTextStyle'],
        selectedLabelTextStyle: props['selectedLabelTextStyle'],
        unselectedIconTheme: props['unselectedIconTheme'],
        selectedIconTheme: props['selectedIconTheme'],
        minWidth: props['minWidth']?.toDouble(),
        minExtendedWidth: props['minExtendedWidth']?.toDouble(),
        useIndicator: props['useIndicator'],
        indicatorColor: props['indicatorColor'],
      ),
  'NavigationRail.extendedAnimation': (props) =>
      NavigationRail.extendedAnimation(
        props['pa'][0],
      ),
  'NavigationRailDestination': (props) => NavigationRailDestination(
        icon: props['icon'],
        selectedIcon: props['selectedIcon'],
        label: props['label'],
        padding: props['padding'],
      ),
  'NavigationRailLabelType.none': NavigationRailLabelType.none,
  'NavigationRailLabelType.selected': NavigationRailLabelType.selected,
  'NavigationRailLabelType.all': NavigationRailLabelType.all,
  'NavigationRailLabelType.values': NavigationRailLabelType.values,
  'TooltipThemeData': (props) => TooltipThemeData(
        height: props['height']?.toDouble(),
        padding: props['padding'],
        margin: props['margin'],
        verticalOffset: props['verticalOffset']?.toDouble(),
        preferBelow: props['preferBelow'],
        excludeFromSemantics: props['excludeFromSemantics'],
        decoration: props['decoration'],
        textStyle: props['textStyle'],
        textAlign: props['textAlign'],
        waitDuration: props['waitDuration'],
        showDuration: props['showDuration'],
        triggerMode: props['triggerMode'],
        enableFeedback: props['enableFeedback'],
      ),
  'TooltipThemeData.lerp': (props) => TooltipThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'TooltipTheme': (props) => TooltipTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'TooltipTheme.of': (props) => TooltipTheme.of(
        props['pa'][0],
      ),
  'TooltipTriggerMode.manual': TooltipTriggerMode.manual,
  'TooltipTriggerMode.longPress': TooltipTriggerMode.longPress,
  'TooltipTriggerMode.tap': TooltipTriggerMode.tap,
  'TooltipTriggerMode.values': TooltipTriggerMode.values,
  'TextButton': (props) => TextButton(
        key: props['key'],
        onPressed: props['onPressed'],
        onLongPress: props['onLongPress'],
        onHover: props['onHover'],
        onFocusChange: props['onFocusChange'],
        style: props['style'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        statesController: props['statesController'],
        child: props['child'],
      ),
  'TextButton.icon': (props) => TextButton.icon(
        key: props['key'],
        onPressed: props['onPressed'],
        onLongPress: props['onLongPress'],
        onHover: props['onHover'],
        onFocusChange: props['onFocusChange'],
        style: props['style'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        icon: props['icon'],
        label: props['label'],
      ),
  'TextButton.styleFrom': (props) => TextButton.styleFrom(
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        disabledForegroundColor: props['disabledForegroundColor'],
        disabledBackgroundColor: props['disabledBackgroundColor'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation']?.toDouble(),
        textStyle: props['textStyle'],
        padding: props['padding'],
        minimumSize: props['minimumSize'],
        fixedSize: props['fixedSize'],
        maximumSize: props['maximumSize'],
        side: props['side'],
        shape: props['shape'],
        enabledMouseCursor: props['enabledMouseCursor'],
        disabledMouseCursor: props['disabledMouseCursor'],
        visualDensity: props['visualDensity'],
        tapTargetSize: props['tapTargetSize'],
        animationDuration: props['animationDuration'],
        enableFeedback: props['enableFeedback'],
        alignment: props['alignment'],
        splashFactory: props['splashFactory'],
        primary: props['primary'],
        onSurface: props['onSurface'],
      ),
  'Dialog': (props) => Dialog(
        key: props['key'],
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        insetAnimationDuration: props['insetAnimationDuration'] ??
            const Duration(milliseconds: 100),
        insetAnimationCurve: props['insetAnimationCurve'] ?? Curves.decelerate,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        shape: props['shape'],
        alignment: props['alignment'],
        child: props['child'],
      ),
  'AlertDialog': (props) => AlertDialog(
        key: props['key'],
        icon: props['icon'],
        iconPadding: props['iconPadding'],
        iconColor: props['iconColor'],
        title: props['title'],
        titlePadding: props['titlePadding'],
        titleTextStyle: props['titleTextStyle'],
        content: props['content'],
        contentPadding: props['contentPadding'],
        contentTextStyle: props['contentTextStyle'],
        actions: as<Widget>(props['actions']),
        actionsPadding: props['actionsPadding'],
        actionsAlignment: props['actionsAlignment'],
        actionsOverflowAlignment: props['actionsOverflowAlignment'],
        actionsOverflowDirection: props['actionsOverflowDirection'],
        actionsOverflowButtonSpacing:
            props['actionsOverflowButtonSpacing']?.toDouble(),
        buttonPadding: props['buttonPadding'],
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        semanticLabel: props['semanticLabel'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        shape: props['shape'],
        alignment: props['alignment'],
        scrollable: props['scrollable'] ?? false,
      ),
  'SimpleDialogOption': (props) => SimpleDialogOption(
        key: props['key'],
        onPressed: props['onPressed'],
        padding: props['padding'],
        child: props['child'],
      ),
  'SimpleDialog': (props) => SimpleDialog(
        key: props['key'],
        title: props['title'],
        titlePadding: props['titlePadding'] ??
            const EdgeInsets.fromLTRB(24.0, 24.0, 24.0, 0.0),
        titleTextStyle: props['titleTextStyle'],
        children: as<Widget>(props['children']),
        contentPadding: props['contentPadding'] ??
            const EdgeInsets.fromLTRB(0.0, 12.0, 0.0, 16.0),
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        semanticLabel: props['semanticLabel'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        shape: props['shape'],
        alignment: props['alignment'],
      ),
  'DialogRoute': (props) => DialogRoute(
        context: props['context'],
        builder: props['builder'],
        themes: props['themes'],
        barrierColor: props['barrierColor'] ?? Colors.black54,
        barrierDismissible: props['barrierDismissible'] ?? true,
        barrierLabel: props['barrierLabel'],
        useSafeArea: props['useSafeArea'] ?? true,
        settings: props['settings'],
        anchorPoint: props['anchorPoint'],
      ),
  'InkResponse': (props) => InkResponse(
        key: props['key'],
        child: props['child'],
        onTap: props['onTap'],
        onTapDown: props['onTapDown'],
        onTapUp: props['onTapUp'],
        onTapCancel: props['onTapCancel'],
        onDoubleTap: props['onDoubleTap'],
        onLongPress: props['onLongPress'],
        onHighlightChanged: props['onHighlightChanged'],
        onHover: props['onHover'],
        mouseCursor: props['mouseCursor'],
        containedInkWell: props['containedInkWell'] ?? false,
        highlightShape: props['highlightShape'] ?? BoxShape.circle,
        radius: props['radius']?.toDouble(),
        borderRadius: props['borderRadius'],
        customBorder: props['customBorder'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        highlightColor: props['highlightColor'],
        overlayColor: props['overlayColor'],
        splashColor: props['splashColor'],
        splashFactory: props['splashFactory'],
        enableFeedback: props['enableFeedback'] ?? true,
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        focusNode: props['focusNode'],
        canRequestFocus: props['canRequestFocus'] ?? true,
        onFocusChange: props['onFocusChange'],
        autofocus: props['autofocus'] ?? false,
        statesController: props['statesController'],
      ),
  'InkWell': (props) => InkWell(
        key: props['key'],
        child: props['child'],
        onTap: props['onTap'],
        onDoubleTap: props['onDoubleTap'],
        onLongPress: props['onLongPress'],
        onTapDown: props['onTapDown'],
        onTapUp: props['onTapUp'],
        onTapCancel: props['onTapCancel'],
        onHighlightChanged: props['onHighlightChanged'],
        onHover: props['onHover'],
        mouseCursor: props['mouseCursor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        highlightColor: props['highlightColor'],
        overlayColor: props['overlayColor'],
        splashColor: props['splashColor'],
        splashFactory: props['splashFactory'],
        radius: props['radius']?.toDouble(),
        borderRadius: props['borderRadius'],
        customBorder: props['customBorder'],
        enableFeedback: props['enableFeedback'] ?? true,
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        focusNode: props['focusNode'],
        canRequestFocus: props['canRequestFocus'] ?? true,
        onFocusChange: props['onFocusChange'],
        autofocus: props['autofocus'] ?? false,
        statesController: props['statesController'],
      ),
  'Checkbox': (props) => Checkbox(
        key: props['key'],
        value: props['value'],
        tristate: props['tristate'] ?? false,
        onChanged: props['onChanged'],
        mouseCursor: props['mouseCursor'],
        activeColor: props['activeColor'],
        fillColor: props['fillColor'],
        checkColor: props['checkColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        overlayColor: props['overlayColor'],
        splashRadius: props['splashRadius']?.toDouble(),
        materialTapTargetSize: props['materialTapTargetSize'],
        visualDensity: props['visualDensity'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        shape: props['shape'],
        side: props['side'],
      ),
  'Checkbox.width': Checkbox.width,
  'TimePickerDialog': (props) => TimePickerDialog(
        key: props['key'],
        initialTime: props['initialTime'],
        cancelText: props['cancelText'],
        confirmText: props['confirmText'],
        helpText: props['helpText'],
        errorInvalidText: props['errorInvalidText'],
        hourLabelText: props['hourLabelText'],
        minuteLabelText: props['minuteLabelText'],
        restorationId: props['restorationId'],
        initialEntryMode: props['initialEntryMode'] ?? TimePickerEntryMode.dial,
        onEntryModeChanged: props['onEntryModeChanged'],
      ),
  'TimePickerEntryMode.dial': TimePickerEntryMode.dial,
  'TimePickerEntryMode.input': TimePickerEntryMode.input,
  'TimePickerEntryMode.dialOnly': TimePickerEntryMode.dialOnly,
  'TimePickerEntryMode.inputOnly': TimePickerEntryMode.inputOnly,
  'TimePickerEntryMode.values': TimePickerEntryMode.values,
  'Radio': (props) => Radio(
        key: props['key'],
        value: props['value'],
        groupValue: props['groupValue'],
        onChanged: props['onChanged'],
        mouseCursor: props['mouseCursor'],
        toggleable: props['toggleable'] ?? false,
        activeColor: props['activeColor'],
        fillColor: props['fillColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        overlayColor: props['overlayColor'],
        splashRadius: props['splashRadius']?.toDouble(),
        materialTapTargetSize: props['materialTapTargetSize'],
        visualDensity: props['visualDensity'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
      ),
  'ControlsDetails': (props) => ControlsDetails(
        currentStep: props['currentStep'],
        stepIndex: props['stepIndex'],
        onStepCancel: props['onStepCancel'],
        onStepContinue: props['onStepContinue'],
      ),
  'Step': (props) => Step(
        title: props['title'],
        subtitle: props['subtitle'],
        content: props['content'],
        state: props['state'] ?? StepState.indexed,
        isActive: props['isActive'] ?? false,
        label: props['label'],
      ),
  'Stepper': (props) => Stepper(
        key: props['key'],
        steps: as<Step>(props['steps']) ?? const [],
        physics: props['physics'],
        type: props['type'] ?? StepperType.vertical,
        currentStep: props['currentStep'] ?? 0,
        onStepTapped: props['onStepTapped'],
        onStepContinue: props['onStepContinue'],
        onStepCancel: props['onStepCancel'],
        controlsBuilder: props['controlsBuilder'],
        elevation: props['elevation']?.toDouble(),
        margin: props['margin'],
      ),
  'StepState.indexed': StepState.indexed,
  'StepState.editing': StepState.editing,
  'StepState.complete': StepState.complete,
  'StepState.disabled': StepState.disabled,
  'StepState.error': StepState.error,
  'StepState.values': StepState.values,
  'StepperType.vertical': StepperType.vertical,
  'StepperType.horizontal': StepperType.horizontal,
  'StepperType.values': StepperType.values,
  'CheckboxListTile': (props) => CheckboxListTile(
        key: props['key'],
        value: props['value'],
        onChanged: props['onChanged'],
        activeColor: props['activeColor'],
        checkColor: props['checkColor'],
        enabled: props['enabled'],
        tileColor: props['tileColor'],
        title: props['title'],
        subtitle: props['subtitle'],
        isThreeLine: props['isThreeLine'] ?? false,
        dense: props['dense'],
        secondary: props['secondary'],
        selected: props['selected'] ?? false,
        controlAffinity:
            props['controlAffinity'] ?? ListTileControlAffinity.platform,
        autofocus: props['autofocus'] ?? false,
        contentPadding: props['contentPadding'],
        tristate: props['tristate'] ?? false,
        shape: props['shape'],
        checkboxShape: props['checkboxShape'],
        selectedTileColor: props['selectedTileColor'],
        side: props['side'],
        visualDensity: props['visualDensity'],
        focusNode: props['focusNode'],
        enableFeedback: props['enableFeedback'],
      ),
  'RadioThemeData': (props) => RadioThemeData(
        mouseCursor: props['mouseCursor'],
        fillColor: props['fillColor'],
        overlayColor: props['overlayColor'],
        splashRadius: props['splashRadius']?.toDouble(),
        materialTapTargetSize: props['materialTapTargetSize'],
        visualDensity: props['visualDensity'],
      ),
  'RadioThemeData.lerp': (props) => RadioThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'RadioTheme': (props) => RadioTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'RadioTheme.of': (props) => RadioTheme.of(
        props['pa'][0],
      ),
  'Tab': (props) => Tab(
        key: props['key'],
        text: props['text'],
        icon: props['icon'],
        iconMargin: props['iconMargin'] ?? const EdgeInsets.only(bottom: 10.0),
        height: props['height']?.toDouble(),
        child: props['child'],
      ),
  'TabBar': (props) => TabBar(
        key: props['key'],
        tabs: as<Widget>(props['tabs']) ?? const [],
        controller: props['controller'],
        isScrollable: props['isScrollable'] ?? false,
        padding: props['padding'],
        indicatorColor: props['indicatorColor'],
        automaticIndicatorColorAdjustment:
            props['automaticIndicatorColorAdjustment'] ?? true,
        indicatorWeight: props['indicatorWeight']?.toDouble() ?? 2.0,
        indicatorPadding: props['indicatorPadding'] ?? EdgeInsets.zero,
        indicator: props['indicator'],
        indicatorSize: props['indicatorSize'],
        labelColor: props['labelColor'],
        labelStyle: props['labelStyle'],
        labelPadding: props['labelPadding'],
        unselectedLabelColor: props['unselectedLabelColor'],
        unselectedLabelStyle: props['unselectedLabelStyle'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        overlayColor: props['overlayColor'],
        mouseCursor: props['mouseCursor'],
        enableFeedback: props['enableFeedback'],
        onTap: props['onTap'],
        physics: props['physics'],
        splashFactory: props['splashFactory'],
        splashBorderRadius: props['splashBorderRadius'],
      ),
  'TabBarView': (props) => TabBarView(
        key: props['key'],
        children: as<Widget>(props['children']) ?? const [],
        controller: props['controller'],
        physics: props['physics'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        viewportFraction: props['viewportFraction']?.toDouble() ?? 1.0,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'TabPageSelectorIndicator': (props) => TabPageSelectorIndicator(
        key: props['key'],
        backgroundColor: props['backgroundColor'],
        borderColor: props['borderColor'],
        size: props['size']?.toDouble() ?? 0,
        borderStyle: props['borderStyle'] ?? BorderStyle.solid,
      ),
  'TabPageSelector': (props) => TabPageSelector(
        key: props['key'],
        controller: props['controller'],
        indicatorSize: props['indicatorSize']?.toDouble() ?? 12.0,
        color: props['color'],
        selectedColor: props['selectedColor'],
        borderStyle: props['borderStyle'],
      ),
  'TabBarIndicatorSize.tab': TabBarIndicatorSize.tab,
  'TabBarIndicatorSize.label': TabBarIndicatorSize.label,
  'TabBarIndicatorSize.values': TabBarIndicatorSize.values,
  'DatePickerDialog': (props) => DatePickerDialog(
        key: props['key'],
        initialDate: props['initialDate'],
        firstDate: props['firstDate'],
        lastDate: props['lastDate'],
        currentDate: props['currentDate'],
        initialEntryMode:
            props['initialEntryMode'] ?? DatePickerEntryMode.calendar,
        selectableDayPredicate: props['selectableDayPredicate'],
        cancelText: props['cancelText'],
        confirmText: props['confirmText'],
        helpText: props['helpText'],
        initialCalendarMode: props['initialCalendarMode'] ?? DatePickerMode.day,
        errorFormatText: props['errorFormatText'],
        errorInvalidText: props['errorInvalidText'],
        fieldHintText: props['fieldHintText'],
        fieldLabelText: props['fieldLabelText'],
        keyboardType: props['keyboardType'],
        restorationId: props['restorationId'],
      ),
  'DateRangePickerDialog': (props) => DateRangePickerDialog(
        key: props['key'],
        initialDateRange: props['initialDateRange'],
        firstDate: props['firstDate'],
        lastDate: props['lastDate'],
        currentDate: props['currentDate'],
        initialEntryMode:
            props['initialEntryMode'] ?? DatePickerEntryMode.calendar,
        helpText: props['helpText'],
        cancelText: props['cancelText'],
        confirmText: props['confirmText'],
        saveText: props['saveText'],
        errorInvalidRangeText: props['errorInvalidRangeText'],
        errorFormatText: props['errorFormatText'],
        errorInvalidText: props['errorInvalidText'],
        fieldStartHintText: props['fieldStartHintText'],
        fieldEndHintText: props['fieldEndHintText'],
        fieldStartLabelText: props['fieldStartLabelText'],
        fieldEndLabelText: props['fieldEndLabelText'],
        restorationId: props['restorationId'],
      ),
  'BottomNavigationBarThemeData': (props) => BottomNavigationBarThemeData(
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        selectedIconTheme: props['selectedIconTheme'],
        unselectedIconTheme: props['unselectedIconTheme'],
        selectedItemColor: props['selectedItemColor'],
        unselectedItemColor: props['unselectedItemColor'],
        selectedLabelStyle: props['selectedLabelStyle'],
        unselectedLabelStyle: props['unselectedLabelStyle'],
        showSelectedLabels: props['showSelectedLabels'],
        showUnselectedLabels: props['showUnselectedLabels'],
        type: props['type'],
        enableFeedback: props['enableFeedback'],
        landscapeLayout: props['landscapeLayout'],
        mouseCursor: props['mouseCursor'],
      ),
  'BottomNavigationBarThemeData.lerp': (props) =>
      BottomNavigationBarThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BottomNavigationBarTheme': (props) => BottomNavigationBarTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'BottomNavigationBarTheme.of': (props) => BottomNavigationBarTheme.of(
        props['pa'][0],
      ),
  'FloatingActionButton': (props) => FloatingActionButton(
        key: props['key'],
        child: props['child'],
        tooltip: props['tooltip'],
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        splashColor: props['splashColor'],
        heroTag: props['heroTag'] ?? const _DefaultHeroTag(),
        elevation: props['elevation']?.toDouble(),
        focusElevation: props['focusElevation']?.toDouble(),
        hoverElevation: props['hoverElevation']?.toDouble(),
        highlightElevation: props['highlightElevation']?.toDouble(),
        disabledElevation: props['disabledElevation']?.toDouble(),
        onPressed: props['onPressed'],
        mouseCursor: props['mouseCursor'],
        mini: props['mini'] ?? false,
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        materialTapTargetSize: props['materialTapTargetSize'],
        isExtended: props['isExtended'] ?? false,
        enableFeedback: props['enableFeedback'],
      ),
  'FloatingActionButton.small': (props) => FloatingActionButton.small(
        key: props['key'],
        child: props['child'],
        tooltip: props['tooltip'],
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        splashColor: props['splashColor'],
        heroTag: props['heroTag'] ?? const _DefaultHeroTag(),
        elevation: props['elevation']?.toDouble(),
        focusElevation: props['focusElevation']?.toDouble(),
        hoverElevation: props['hoverElevation']?.toDouble(),
        highlightElevation: props['highlightElevation']?.toDouble(),
        disabledElevation: props['disabledElevation']?.toDouble(),
        onPressed: props['onPressed'],
        mouseCursor: props['mouseCursor'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        materialTapTargetSize: props['materialTapTargetSize'],
        enableFeedback: props['enableFeedback'],
      ),
  'FloatingActionButton.large': (props) => FloatingActionButton.large(
        key: props['key'],
        child: props['child'],
        tooltip: props['tooltip'],
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        splashColor: props['splashColor'],
        heroTag: props['heroTag'] ?? const _DefaultHeroTag(),
        elevation: props['elevation']?.toDouble(),
        focusElevation: props['focusElevation']?.toDouble(),
        hoverElevation: props['hoverElevation']?.toDouble(),
        highlightElevation: props['highlightElevation']?.toDouble(),
        disabledElevation: props['disabledElevation']?.toDouble(),
        onPressed: props['onPressed'],
        mouseCursor: props['mouseCursor'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        materialTapTargetSize: props['materialTapTargetSize'],
        enableFeedback: props['enableFeedback'],
      ),
  'FloatingActionButton.extended': (props) => FloatingActionButton.extended(
        key: props['key'],
        tooltip: props['tooltip'],
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        heroTag: props['heroTag'] ?? const _DefaultHeroTag(),
        elevation: props['elevation']?.toDouble(),
        focusElevation: props['focusElevation']?.toDouble(),
        hoverElevation: props['hoverElevation']?.toDouble(),
        splashColor: props['splashColor'],
        highlightElevation: props['highlightElevation']?.toDouble(),
        disabledElevation: props['disabledElevation']?.toDouble(),
        onPressed: props['onPressed'],
        mouseCursor: props['mouseCursor'] ?? SystemMouseCursors.click,
        shape: props['shape'],
        isExtended: props['isExtended'] ?? true,
        materialTapTargetSize: props['materialTapTargetSize'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        extendedIconLabelSpacing: props['extendedIconLabelSpacing']?.toDouble(),
        extendedPadding: props['extendedPadding'],
        extendedTextStyle: props['extendedTextStyle'],
        icon: props['icon'],
        label: props['label'],
        enableFeedback: props['enableFeedback'],
      ),
  'TooltipVisibility': (props) => TooltipVisibility(
        key: props['key'],
        visible: props['visible'],
        child: props['child'],
      ),
  'TooltipVisibility.of': (props) => TooltipVisibility.of(
        props['pa'][0],
      ),
  'CheckboxThemeData': (props) => CheckboxThemeData(
        mouseCursor: props['mouseCursor'],
        fillColor: props['fillColor'],
        checkColor: props['checkColor'],
        overlayColor: props['overlayColor'],
        splashRadius: props['splashRadius']?.toDouble(),
        materialTapTargetSize: props['materialTapTargetSize'],
        visualDensity: props['visualDensity'],
        shape: props['shape'],
        side: props['side'],
      ),
  'CheckboxThemeData.lerp': (props) => CheckboxThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'CheckboxTheme': (props) => CheckboxTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'CheckboxTheme.of': (props) => CheckboxTheme.of(
        props['pa'][0],
      ),
  'RangeSlider': (props) => RangeSlider(
        key: props['key'],
        values: props['values'],
        onChanged: props['onChanged'],
        onChangeStart: props['onChangeStart'],
        onChangeEnd: props['onChangeEnd'],
        min: props['min']?.toDouble() ?? 0.0,
        max: props['max']?.toDouble() ?? 1.0,
        divisions: props['divisions'],
        labels: props['labels'],
        activeColor: props['activeColor'],
        inactiveColor: props['inactiveColor'],
        semanticFormatterCallback: props['semanticFormatterCallback'],
      ),
  'ScrollbarThemeData': (props) => ScrollbarThemeData(
        thumbVisibility: props['thumbVisibility'],
        thickness: props['thickness'],
        trackVisibility: props['trackVisibility'],
        radius: props['radius'],
        thumbColor: props['thumbColor'],
        trackColor: props['trackColor'],
        trackBorderColor: props['trackBorderColor'],
        crossAxisMargin: props['crossAxisMargin']?.toDouble(),
        mainAxisMargin: props['mainAxisMargin']?.toDouble(),
        minThumbLength: props['minThumbLength']?.toDouble(),
        interactive: props['interactive'],
        isAlwaysShown: props['isAlwaysShown'],
        showTrackOnHover: props['showTrackOnHover'],
      ),
  'ScrollbarThemeData.lerp': (props) => ScrollbarThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ScrollbarTheme': (props) => ScrollbarTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'ScrollbarTheme.of': (props) => ScrollbarTheme.of(
        props['pa'][0],
      ),
  'InkHighlight': (props) => InkHighlight(
        controller: props['controller'],
        referenceBox: props['referenceBox'],
        color: props['color'],
        textDirection: props['textDirection'],
        shape: props['shape'] ?? BoxShape.rectangle,
        radius: props['radius']?.toDouble(),
        borderRadius: props['borderRadius'],
        customBorder: props['customBorder'],
        rectCallback: props['rectCallback'],
        onRemoved: props['onRemoved'],
        fadeDuration: props['fadeDuration'] ?? _kDefaultHighlightFadeDuration,
      ),
  'PopupMenuDivider': (props) => PopupMenuDivider(
        key: props['key'],
        height: props['height']?.toDouble() ?? _kMenuDividerHeight,
      ),
  'PopupMenuItem': (props) => PopupMenuItem(
        key: props['key'],
        value: props['value'],
        onTap: props['onTap'],
        enabled: props['enabled'] ?? true,
        height: props['height']?.toDouble() ?? kMinInteractiveDimension,
        padding: props['padding'],
        textStyle: props['textStyle'],
        mouseCursor: props['mouseCursor'],
        child: props['child'],
      ),
  'CheckedPopupMenuItem': (props) => CheckedPopupMenuItem(
        key: props['key'],
        value: props['value'],
        checked: props['checked'] ?? false,
        enabled: props['enabled'] ?? true,
        padding: props['padding'],
        height: props['height']?.toDouble() ?? kMinInteractiveDimension,
        mouseCursor: props['mouseCursor'],
        child: props['child'],
      ),
  'PopupMenuButton': (props) => PopupMenuButton(
        key: props['key'],
        itemBuilder: props['itemBuilder'],
        initialValue: props['initialValue'],
        onSelected: props['onSelected'],
        onCanceled: props['onCanceled'],
        tooltip: props['tooltip'],
        elevation: props['elevation']?.toDouble(),
        padding: props['padding'] ?? const EdgeInsets.all(8.0),
        child: props['child'],
        splashRadius: props['splashRadius']?.toDouble(),
        icon: props['icon'],
        iconSize: props['iconSize']?.toDouble(),
        offset: props['offset'] ?? Offset.zero,
        enabled: props['enabled'] ?? true,
        shape: props['shape'],
        color: props['color'],
        enableFeedback: props['enableFeedback'],
        constraints: props['constraints'],
        position: props['position'] ?? PopupMenuPosition.over,
      ),
  'PopupMenuPosition.over': PopupMenuPosition.over,
  'PopupMenuPosition.under': PopupMenuPosition.under,
  'PopupMenuPosition.values': PopupMenuPosition.values,
  'ExpandIcon': (props) => ExpandIcon(
        key: props['key'],
        isExpanded: props['isExpanded'] ?? false,
        size: props['size']?.toDouble() ?? 24.0,
        onPressed: props['onPressed'],
        padding: props['padding'] ?? const EdgeInsets.all(8.0),
        color: props['color'],
        disabledColor: props['disabledColor'],
        expandedColor: props['expandedColor'],
      ),
  'AppBar': (props) => AppBar(
        key: props['key'],
        leading: props['leading'],
        automaticallyImplyLeading: props['automaticallyImplyLeading'] ?? true,
        title: props['title'],
        actions: as<Widget>(props['actions']),
        flexibleSpace: props['flexibleSpace'],
        bottom: props['bottom'],
        elevation: props['elevation']?.toDouble(),
        scrolledUnderElevation: props['scrolledUnderElevation']?.toDouble(),
        notificationPredicate: props['notificationPredicate'] ??
            defaultScrollNotificationPredicate,
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        shape: props['shape'],
        backgroundColor: props['backgroundColor'],
        foregroundColor: props['foregroundColor'],
        brightness: props['brightness'],
        iconTheme: props['iconTheme'],
        actionsIconTheme: props['actionsIconTheme'],
        textTheme: props['textTheme'],
        primary: props['primary'] ?? true,
        centerTitle: props['centerTitle'],
        excludeHeaderSemantics: props['excludeHeaderSemantics'] ?? false,
        titleSpacing: props['titleSpacing']?.toDouble(),
        toolbarOpacity: props['toolbarOpacity']?.toDouble() ?? 1.0,
        bottomOpacity: props['bottomOpacity']?.toDouble() ?? 1.0,
        toolbarHeight: props['toolbarHeight']?.toDouble(),
        leadingWidth: props['leadingWidth']?.toDouble(),
        backwardsCompatibility: props['backwardsCompatibility'],
        toolbarTextStyle: props['toolbarTextStyle'],
        titleTextStyle: props['titleTextStyle'],
        systemOverlayStyle: props['systemOverlayStyle'],
      ),
  'AppBar.preferredHeightFor': (props) => AppBar.preferredHeightFor(
        props['pa'][0],
        props['pa'][1],
      ),
  'SliverAppBar': (props) => SliverAppBar(
        key: props['key'],
        leading: props['leading'],
        automaticallyImplyLeading: props['automaticallyImplyLeading'] ?? true,
        title: props['title'],
        actions: as<Widget>(props['actions']),
        flexibleSpace: props['flexibleSpace'],
        bottom: props['bottom'],
        elevation: props['elevation']?.toDouble(),
        scrolledUnderElevation: props['scrolledUnderElevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        forceElevated: props['forceElevated'] ?? false,
        backgroundColor: props['backgroundColor'],
        foregroundColor: props['foregroundColor'],
        brightness: props['brightness'],
        iconTheme: props['iconTheme'],
        actionsIconTheme: props['actionsIconTheme'],
        textTheme: props['textTheme'],
        primary: props['primary'] ?? true,
        centerTitle: props['centerTitle'],
        excludeHeaderSemantics: props['excludeHeaderSemantics'] ?? false,
        titleSpacing: props['titleSpacing']?.toDouble(),
        collapsedHeight: props['collapsedHeight']?.toDouble(),
        expandedHeight: props['expandedHeight']?.toDouble(),
        floating: props['floating'] ?? false,
        pinned: props['pinned'] ?? false,
        snap: props['snap'] ?? false,
        stretch: props['stretch'] ?? false,
        stretchTriggerOffset:
            props['stretchTriggerOffset']?.toDouble() ?? 100.0,
        onStretchTrigger: props['onStretchTrigger'],
        shape: props['shape'],
        toolbarHeight: props['toolbarHeight']?.toDouble() ?? kToolbarHeight,
        leadingWidth: props['leadingWidth']?.toDouble(),
        backwardsCompatibility: props['backwardsCompatibility'],
        toolbarTextStyle: props['toolbarTextStyle'],
        titleTextStyle: props['titleTextStyle'],
        systemOverlayStyle: props['systemOverlayStyle'],
      ),
  'SliverAppBar.medium': (props) => SliverAppBar.medium(
        key: props['key'],
        leading: props['leading'],
        automaticallyImplyLeading: props['automaticallyImplyLeading'] ?? true,
        title: props['title'],
        actions: as<Widget>(props['actions']),
        flexibleSpace: props['flexibleSpace'],
        bottom: props['bottom'],
        elevation: props['elevation']?.toDouble(),
        scrolledUnderElevation: props['scrolledUnderElevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        forceElevated: props['forceElevated'] ?? false,
        backgroundColor: props['backgroundColor'],
        foregroundColor: props['foregroundColor'],
        iconTheme: props['iconTheme'],
        actionsIconTheme: props['actionsIconTheme'],
        primary: props['primary'] ?? true,
        centerTitle: props['centerTitle'],
        excludeHeaderSemantics: props['excludeHeaderSemantics'] ?? false,
        titleSpacing: props['titleSpacing']?.toDouble(),
        collapsedHeight: props['collapsedHeight']?.toDouble(),
        expandedHeight: props['expandedHeight']?.toDouble(),
        floating: props['floating'] ?? false,
        pinned: props['pinned'] ?? true,
        snap: props['snap'] ?? false,
        stretch: props['stretch'] ?? false,
        stretchTriggerOffset:
            props['stretchTriggerOffset']?.toDouble() ?? 100.0,
        onStretchTrigger: props['onStretchTrigger'],
        shape: props['shape'],
        toolbarHeight: props['toolbarHeight']?.toDouble() ??
            _MediumScrollUnderFlexibleConfig.collapsedHeight,
        leadingWidth: props['leadingWidth']?.toDouble(),
        toolbarTextStyle: props['toolbarTextStyle'],
        titleTextStyle: props['titleTextStyle'],
        systemOverlayStyle: props['systemOverlayStyle'],
      ),
  'SliverAppBar.large': (props) => SliverAppBar.large(
        key: props['key'],
        leading: props['leading'],
        automaticallyImplyLeading: props['automaticallyImplyLeading'] ?? true,
        title: props['title'],
        actions: as<Widget>(props['actions']),
        flexibleSpace: props['flexibleSpace'],
        bottom: props['bottom'],
        elevation: props['elevation']?.toDouble(),
        scrolledUnderElevation: props['scrolledUnderElevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        forceElevated: props['forceElevated'] ?? false,
        backgroundColor: props['backgroundColor'],
        foregroundColor: props['foregroundColor'],
        iconTheme: props['iconTheme'],
        actionsIconTheme: props['actionsIconTheme'],
        primary: props['primary'] ?? true,
        centerTitle: props['centerTitle'],
        excludeHeaderSemantics: props['excludeHeaderSemantics'] ?? false,
        titleSpacing: props['titleSpacing']?.toDouble(),
        collapsedHeight: props['collapsedHeight']?.toDouble(),
        expandedHeight: props['expandedHeight']?.toDouble(),
        floating: props['floating'] ?? false,
        pinned: props['pinned'] ?? true,
        snap: props['snap'] ?? false,
        stretch: props['stretch'] ?? false,
        stretchTriggerOffset:
            props['stretchTriggerOffset']?.toDouble() ?? 100.0,
        onStretchTrigger: props['onStretchTrigger'],
        shape: props['shape'],
        toolbarHeight: props['toolbarHeight']?.toDouble() ??
            _LargeScrollUnderFlexibleConfig.collapsedHeight,
        leadingWidth: props['leadingWidth']?.toDouble(),
        toolbarTextStyle: props['toolbarTextStyle'],
        titleTextStyle: props['titleTextStyle'],
        systemOverlayStyle: props['systemOverlayStyle'],
      ),
  'BottomAppBar': (props) => BottomAppBar(
        key: props['key'],
        color: props['color'],
        elevation: props['elevation']?.toDouble(),
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        notchMargin: props['notchMargin']?.toDouble() ?? 4.0,
        child: props['child'],
      ),
  'UserAccountsDrawerHeader': (props) => UserAccountsDrawerHeader(
        key: props['key'],
        decoration: props['decoration'],
        margin: props['margin'] ?? const EdgeInsets.only(bottom: 8.0),
        currentAccountPicture: props['currentAccountPicture'],
        otherAccountsPictures: as<Widget>(props['otherAccountsPictures']),
        currentAccountPictureSize:
            props['currentAccountPictureSize'] ?? const Size.square(72.0),
        otherAccountsPicturesSize:
            props['otherAccountsPicturesSize'] ?? const Size.square(40.0),
        accountName: props['accountName'],
        accountEmail: props['accountEmail'],
        onDetailsPressed: props['onDetailsPressed'],
        arrowColor: props['arrowColor'] ?? Colors.white,
      ),
  'MaterialBanner': (props) => MaterialBanner(
        key: props['key'],
        content: props['content'],
        contentTextStyle: props['contentTextStyle'],
        actions: as<Widget>(props['actions']) ?? const [],
        elevation: props['elevation']?.toDouble(),
        leading: props['leading'],
        backgroundColor: props['backgroundColor'],
        padding: props['padding'],
        leadingPadding: props['leadingPadding'],
        forceActionsBelow: props['forceActionsBelow'] ?? false,
        overflowAlignment:
            props['overflowAlignment'] ?? OverflowBarAlignment.end,
        animation: props['animation'],
        onVisible: props['onVisible'],
      ),
  'MaterialBanner.createAnimationController': (props) =>
      MaterialBanner.createAnimationController(
        vsync: props['vsync'],
      ),
  'MaterialBannerClosedReason.dismiss': MaterialBannerClosedReason.dismiss,
  'MaterialBannerClosedReason.swipe': MaterialBannerClosedReason.swipe,
  'MaterialBannerClosedReason.hide': MaterialBannerClosedReason.hide,
  'MaterialBannerClosedReason.remove': MaterialBannerClosedReason.remove,
  'MaterialBannerClosedReason.values': MaterialBannerClosedReason.values,
  'CalendarDatePicker': (props) => CalendarDatePicker(
        key: props['key'],
        initialDate: props['initialDate'],
        firstDate: props['firstDate'],
        lastDate: props['lastDate'],
        currentDate: props['currentDate'],
        onDateChanged: props['onDateChanged'],
        onDisplayedMonthChanged: props['onDisplayedMonthChanged'],
        initialCalendarMode: props['initialCalendarMode'] ?? DatePickerMode.day,
        selectableDayPredicate: props['selectableDayPredicate'],
      ),
  'YearPicker': (props) => YearPicker(
        key: props['key'],
        currentDate: props['currentDate'],
        firstDate: props['firstDate'],
        lastDate: props['lastDate'],
        initialDate: props['initialDate'],
        selectedDate: props['selectedDate'],
        onChanged: props['onChanged'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
      ),
  'UnderlineInputBorder': (props) => UnderlineInputBorder(
        borderSide: props['borderSide'] ?? const BorderSide(),
        borderRadius: props['borderRadius'] ??
            const BorderRadius.only(
                topLeft: Radius.circular(4.0), topRight: Radius.circular(4.0)),
      ),
  'OutlineInputBorder': (props) => OutlineInputBorder(
        borderSide: props['borderSide'] ?? const BorderSide(),
        borderRadius: props['borderRadius'] ??
            const BorderRadius.all(Radius.circular(4.0)),
        gapPadding: props['gapPadding']?.toDouble() ?? 4.0,
      ),
  'Chip': (props) => Chip(
        key: props['key'],
        avatar: props['avatar'],
        label: props['label'],
        labelStyle: props['labelStyle'],
        labelPadding: props['labelPadding'],
        deleteIcon: props['deleteIcon'],
        onDeleted: props['onDeleted'],
        deleteIconColor: props['deleteIconColor'],
        deleteButtonTooltipMessage: props['deleteButtonTooltipMessage'],
        side: props['side'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        backgroundColor: props['backgroundColor'],
        padding: props['padding'],
        visualDensity: props['visualDensity'],
        materialTapTargetSize: props['materialTapTargetSize'],
        elevation: props['elevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        iconTheme: props['iconTheme'],
        useDeleteButtonTooltip: props['useDeleteButtonTooltip'] ?? true,
      ),
  'RawChip': (props) => RawChip(
        key: props['key'],
        defaultProperties: props['defaultProperties'],
        avatar: props['avatar'],
        label: props['label'],
        labelStyle: props['labelStyle'],
        padding: props['padding'],
        visualDensity: props['visualDensity'],
        labelPadding: props['labelPadding'],
        deleteIcon: props['deleteIcon'],
        onDeleted: props['onDeleted'],
        deleteIconColor: props['deleteIconColor'],
        deleteButtonTooltipMessage: props['deleteButtonTooltipMessage'],
        onPressed: props['onPressed'],
        onSelected: props['onSelected'],
        pressElevation: props['pressElevation']?.toDouble(),
        tapEnabled: props['tapEnabled'] ?? true,
        selected: props['selected'] ?? false,
        isEnabled: props['isEnabled'] ?? true,
        disabledColor: props['disabledColor'],
        selectedColor: props['selectedColor'],
        tooltip: props['tooltip'],
        side: props['side'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        backgroundColor: props['backgroundColor'],
        materialTapTargetSize: props['materialTapTargetSize'],
        elevation: props['elevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        iconTheme: props['iconTheme'],
        selectedShadowColor: props['selectedShadowColor'],
        showCheckmark: props['showCheckmark'] ?? true,
        checkmarkColor: props['checkmarkColor'],
        avatarBorder: props['avatarBorder'] ?? const CircleBorder(),
        useDeleteButtonTooltip: props['useDeleteButtonTooltip'] ?? true,
      ),
  'DialogTheme': (props) => DialogTheme(
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        shape: props['shape'],
        alignment: props['alignment'],
        iconColor: props['iconColor'],
        titleTextStyle: props['titleTextStyle'],
        contentTextStyle: props['contentTextStyle'],
        actionsPadding: props['actionsPadding'],
      ),
  'DialogTheme.of': (props) => DialogTheme.of(
        props['pa'][0],
      ),
  'DialogTheme.lerp': (props) => DialogTheme.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'PaginatedDataTable': (props) => PaginatedDataTable(
        key: props['key'],
        header: props['header'],
        actions: as<Widget>(props['actions']),
        columns: as<DataColumn>(props['columns']) ?? const [],
        sortColumnIndex: props['sortColumnIndex'],
        sortAscending: props['sortAscending'] ?? true,
        onSelectAll: props['onSelectAll'],
        dataRowHeight:
            props['dataRowHeight']?.toDouble() ?? kMinInteractiveDimension,
        headingRowHeight: props['headingRowHeight']?.toDouble() ?? 56.0,
        horizontalMargin: props['horizontalMargin']?.toDouble() ?? 24.0,
        columnSpacing: props['columnSpacing']?.toDouble() ?? 56.0,
        showCheckboxColumn: props['showCheckboxColumn'] ?? true,
        showFirstLastButtons: props['showFirstLastButtons'] ?? false,
        initialFirstRowIndex: props['initialFirstRowIndex'] ?? 0,
        onPageChanged: props['onPageChanged'],
        rowsPerPage: props['rowsPerPage'] ?? defaultRowsPerPage,
        availableRowsPerPage: as<int>(props['availableRowsPerPage']) ??
            const <int>[
              defaultRowsPerPage,
              defaultRowsPerPage * 2,
              defaultRowsPerPage * 5,
              defaultRowsPerPage * 10
            ],
        onRowsPerPageChanged: props['onRowsPerPageChanged'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        arrowHeadColor: props['arrowHeadColor'],
        source: props['source'],
        checkboxHorizontalMargin: props['checkboxHorizontalMargin']?.toDouble(),
        controller: props['controller'],
        primary: props['primary'],
      ),
  'PaginatedDataTable.defaultRowsPerPage':
      PaginatedDataTable.defaultRowsPerPage,
  'MaterialStatePropertyAll': (props) => MaterialStatePropertyAll(
        props['pa'][0],
      ),
  'MaterialStatesController': (props) => MaterialStatesController(
        props['pa'][0],
      ),
  'MaterialState.hovered': MaterialState.hovered,
  'MaterialState.focused': MaterialState.focused,
  'MaterialState.pressed': MaterialState.pressed,
  'MaterialState.dragged': MaterialState.dragged,
  'MaterialState.selected': MaterialState.selected,
  'MaterialState.scrolledUnder': MaterialState.scrolledUnder,
  'MaterialState.disabled': MaterialState.disabled,
  'MaterialState.error': MaterialState.error,
  'MaterialState.values': MaterialState.values,
  'FloatingActionButtonThemeData': (props) => FloatingActionButtonThemeData(
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        splashColor: props['splashColor'],
        elevation: props['elevation']?.toDouble(),
        focusElevation: props['focusElevation']?.toDouble(),
        hoverElevation: props['hoverElevation']?.toDouble(),
        disabledElevation: props['disabledElevation']?.toDouble(),
        highlightElevation: props['highlightElevation']?.toDouble(),
        shape: props['shape'],
        enableFeedback: props['enableFeedback'],
        iconSize: props['iconSize']?.toDouble(),
        sizeConstraints: props['sizeConstraints'],
        smallSizeConstraints: props['smallSizeConstraints'],
        largeSizeConstraints: props['largeSizeConstraints'],
        extendedSizeConstraints: props['extendedSizeConstraints'],
        extendedIconLabelSpacing: props['extendedIconLabelSpacing']?.toDouble(),
        extendedPadding: props['extendedPadding'],
        extendedTextStyle: props['extendedTextStyle'],
      ),
  'FloatingActionButtonThemeData.lerp': (props) =>
      FloatingActionButtonThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'FlutterLogo': (props) => FlutterLogo(
        key: props['key'],
        size: props['size']?.toDouble(),
        textColor: props['textColor'] ?? const Color(0xFF757575),
        style: props['style'] ?? FlutterLogoStyle.markOnly,
        duration: props['duration'] ?? const Duration(milliseconds: 750),
        curve: props['curve'] ?? Curves.fastOutSlowIn,
      ),
  'CardTheme': (props) => CardTheme(
        clipBehavior: props['clipBehavior'],
        color: props['color'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation']?.toDouble(),
        margin: props['margin'],
        shape: props['shape'],
      ),
  'CardTheme.of': (props) => CardTheme.of(
        props['pa'][0],
      ),
  'CardTheme.lerp': (props) => CardTheme.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BottomSheetThemeData': (props) => BottomSheetThemeData(
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        modalBackgroundColor: props['modalBackgroundColor'],
        modalElevation: props['modalElevation']?.toDouble(),
        shape: props['shape'],
        clipBehavior: props['clipBehavior'],
        constraints: props['constraints'],
      ),
  'BottomSheetThemeData.lerp': (props) => BottomSheetThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Tooltip': (props) => Tooltip(
        key: props['key'],
        message: props['message'],
        richMessage: props['richMessage'],
        height: props['height']?.toDouble(),
        padding: props['padding'],
        margin: props['margin'],
        verticalOffset: props['verticalOffset']?.toDouble(),
        preferBelow: props['preferBelow'],
        excludeFromSemantics: props['excludeFromSemantics'],
        decoration: props['decoration'],
        textStyle: props['textStyle'],
        textAlign: props['textAlign'],
        waitDuration: props['waitDuration'],
        showDuration: props['showDuration'],
        triggerMode: props['triggerMode'],
        enableFeedback: props['enableFeedback'],
        onTriggered: props['onTriggered'],
        child: props['child'],
      ),
  'Tooltip.dismissAllToolTips': (props) => Tooltip.dismissAllToolTips(),
  'ElevatedButton': (props) => ElevatedButton(
        key: props['key'],
        onPressed: props['onPressed'],
        onLongPress: props['onLongPress'],
        onHover: props['onHover'],
        onFocusChange: props['onFocusChange'],
        style: props['style'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        statesController: props['statesController'],
        child: props['child'],
      ),
  'ElevatedButton.icon': (props) => ElevatedButton.icon(
        key: props['key'],
        onPressed: props['onPressed'],
        onLongPress: props['onLongPress'],
        onHover: props['onHover'],
        onFocusChange: props['onFocusChange'],
        style: props['style'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        icon: props['icon'],
        label: props['label'],
      ),
  'ElevatedButton.styleFrom': (props) => ElevatedButton.styleFrom(
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        disabledForegroundColor: props['disabledForegroundColor'],
        disabledBackgroundColor: props['disabledBackgroundColor'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation']?.toDouble(),
        textStyle: props['textStyle'],
        padding: props['padding'],
        minimumSize: props['minimumSize'],
        fixedSize: props['fixedSize'],
        maximumSize: props['maximumSize'],
        side: props['side'],
        shape: props['shape'],
        enabledMouseCursor: props['enabledMouseCursor'],
        disabledMouseCursor: props['disabledMouseCursor'],
        visualDensity: props['visualDensity'],
        tapTargetSize: props['tapTargetSize'],
        animationDuration: props['animationDuration'],
        enableFeedback: props['enableFeedback'],
        alignment: props['alignment'],
        splashFactory: props['splashFactory'],
        primary: props['primary'],
        onPrimary: props['onPrimary'],
        onSurface: props['onSurface'],
      ),
  'SwitchListTile': (props) => SwitchListTile(
        key: props['key'],
        value: props['value'],
        onChanged: props['onChanged'],
        tileColor: props['tileColor'],
        activeColor: props['activeColor'],
        activeTrackColor: props['activeTrackColor'],
        inactiveThumbColor: props['inactiveThumbColor'],
        inactiveTrackColor: props['inactiveTrackColor'],
        activeThumbImage: props['activeThumbImage'],
        inactiveThumbImage: props['inactiveThumbImage'],
        title: props['title'],
        subtitle: props['subtitle'],
        isThreeLine: props['isThreeLine'] ?? false,
        dense: props['dense'],
        contentPadding: props['contentPadding'],
        secondary: props['secondary'],
        selected: props['selected'] ?? false,
        autofocus: props['autofocus'] ?? false,
        controlAffinity:
            props['controlAffinity'] ?? ListTileControlAffinity.platform,
        shape: props['shape'],
        selectedTileColor: props['selectedTileColor'],
        visualDensity: props['visualDensity'],
        focusNode: props['focusNode'],
        enableFeedback: props['enableFeedback'],
        hoverColor: props['hoverColor'],
      ),
  'SwitchListTile.adaptive': (props) => SwitchListTile.adaptive(
        key: props['key'],
        value: props['value'],
        onChanged: props['onChanged'],
        tileColor: props['tileColor'],
        activeColor: props['activeColor'],
        activeTrackColor: props['activeTrackColor'],
        inactiveThumbColor: props['inactiveThumbColor'],
        inactiveTrackColor: props['inactiveTrackColor'],
        activeThumbImage: props['activeThumbImage'],
        inactiveThumbImage: props['inactiveThumbImage'],
        title: props['title'],
        subtitle: props['subtitle'],
        isThreeLine: props['isThreeLine'] ?? false,
        dense: props['dense'],
        contentPadding: props['contentPadding'],
        secondary: props['secondary'],
        selected: props['selected'] ?? false,
        autofocus: props['autofocus'] ?? false,
        controlAffinity:
            props['controlAffinity'] ?? ListTileControlAffinity.platform,
        shape: props['shape'],
        selectedTileColor: props['selectedTileColor'],
        visualDensity: props['visualDensity'],
        focusNode: props['focusNode'],
        enableFeedback: props['enableFeedback'],
        hoverColor: props['hoverColor'],
      ),
  'DropdownMenuItem': (props) => DropdownMenuItem(
        key: props['key'],
        onTap: props['onTap'],
        value: props['value'],
        enabled: props['enabled'] ?? true,
        alignment: props['alignment'] ?? AlignmentDirectional.centerStart,
        child: props['child'],
      ),
  'DropdownButtonHideUnderline': (props) => DropdownButtonHideUnderline(
        key: props['key'],
        child: props['child'],
      ),
  'DropdownButtonHideUnderline.at': (props) => DropdownButtonHideUnderline.at(
        props['pa'][0],
      ),
  'DropdownButton': (props) => DropdownButton(
        key: props['key'],
        items: as<DropdownMenuItem>(props['items']) ?? const [],
        selectedItemBuilder: props['selectedItemBuilder'],
        value: props['value'],
        hint: props['hint'],
        disabledHint: props['disabledHint'],
        onChanged: props['onChanged'],
        onTap: props['onTap'],
        elevation: props['elevation'] ?? 8,
        style: props['style'],
        underline: props['underline'],
        icon: props['icon'],
        iconDisabledColor: props['iconDisabledColor'],
        iconEnabledColor: props['iconEnabledColor'],
        iconSize: props['iconSize']?.toDouble() ?? 24.0,
        isDense: props['isDense'] ?? false,
        isExpanded: props['isExpanded'] ?? false,
        itemHeight: props['itemHeight']?.toDouble() ?? kMinInteractiveDimension,
        focusColor: props['focusColor'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        dropdownColor: props['dropdownColor'],
        menuMaxHeight: props['menuMaxHeight']?.toDouble(),
        enableFeedback: props['enableFeedback'],
        alignment: props['alignment'] ?? AlignmentDirectional.centerStart,
        borderRadius: props['borderRadius'],
      ),
  'DropdownButtonFormField': (props) => DropdownButtonFormField(
        key: props['key'],
        items: as<DropdownMenuItem>(props['items']) ?? const [],
        selectedItemBuilder: props['selectedItemBuilder'],
        value: props['value'],
        hint: props['hint'],
        disabledHint: props['disabledHint'],
        onChanged: props['onChanged'],
        onTap: props['onTap'],
        elevation: props['elevation'] ?? 8,
        style: props['style'],
        icon: props['icon'],
        iconDisabledColor: props['iconDisabledColor'],
        iconEnabledColor: props['iconEnabledColor'],
        iconSize: props['iconSize']?.toDouble() ?? 24.0,
        isDense: props['isDense'] ?? true,
        isExpanded: props['isExpanded'] ?? false,
        itemHeight: props['itemHeight']?.toDouble(),
        focusColor: props['focusColor'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        dropdownColor: props['dropdownColor'],
        decoration: props['decoration'],
        onSaved: props['onSaved'],
        validator: props['validator'],
        autovalidateMode: props['autovalidateMode'],
        menuMaxHeight: props['menuMaxHeight']?.toDouble(),
        enableFeedback: props['enableFeedback'],
        alignment: props['alignment'] ?? AlignmentDirectional.centerStart,
        borderRadius: props['borderRadius'],
      ),
  'TextFormField': (props) => TextFormField(
        key: props['key'],
        controller: props['controller'],
        initialValue: props['initialValue'],
        focusNode: props['focusNode'],
        decoration: props['decoration'] ?? const InputDecoration(),
        keyboardType: props['keyboardType'],
        textCapitalization:
            props['textCapitalization'] ?? TextCapitalization.none,
        textInputAction: props['textInputAction'],
        style: props['style'],
        strutStyle: props['strutStyle'],
        textDirection: props['textDirection'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textAlignVertical: props['textAlignVertical'],
        autofocus: props['autofocus'] ?? false,
        readOnly: props['readOnly'] ?? false,
        toolbarOptions: props['toolbarOptions'],
        showCursor: props['showCursor'],
        obscuringCharacter: props['obscuringCharacter'] ?? '•',
        obscureText: props['obscureText'] ?? false,
        autocorrect: props['autocorrect'] ?? true,
        smartDashesType: props['smartDashesType'],
        smartQuotesType: props['smartQuotesType'],
        enableSuggestions: props['enableSuggestions'] ?? true,
        maxLengthEnforcement: props['maxLengthEnforcement'],
        maxLines: props['maxLines'] ?? 1,
        minLines: props['minLines'],
        expands: props['expands'] ?? false,
        maxLength: props['maxLength'],
        onChanged: props['onChanged'],
        onTap: props['onTap'],
        onEditingComplete: props['onEditingComplete'],
        onFieldSubmitted: props['onFieldSubmitted'],
        onSaved: props['onSaved'],
        validator: props['validator'],
        inputFormatters: as<TextInputFormatter>(props['inputFormatters']),
        enabled: props['enabled'],
        cursorWidth: props['cursorWidth']?.toDouble() ?? 2.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorRadius: props['cursorRadius'],
        cursorColor: props['cursorColor'],
        keyboardAppearance: props['keyboardAppearance'],
        scrollPadding: props['scrollPadding'] ?? const EdgeInsets.all(20.0),
        enableInteractiveSelection: props['enableInteractiveSelection'],
        selectionControls: props['selectionControls'],
        buildCounter: props['buildCounter'],
        scrollPhysics: props['scrollPhysics'],
        autofillHints: props['autofillHints'],
        autovalidateMode: props['autovalidateMode'],
        scrollController: props['scrollController'],
        restorationId: props['restorationId'],
        enableIMEPersonalizedLearning:
            props['enableIMEPersonalizedLearning'] ?? true,
        mouseCursor: props['mouseCursor'],
      ),
  'Slider': (props) => Slider(
        key: props['key'],
        value: props['value']?.toDouble() ?? 0,
        onChanged: props['onChanged'],
        onChangeStart: props['onChangeStart'],
        onChangeEnd: props['onChangeEnd'],
        min: props['min']?.toDouble() ?? 0.0,
        max: props['max']?.toDouble() ?? 1.0,
        divisions: props['divisions'],
        label: props['label'],
        activeColor: props['activeColor'],
        inactiveColor: props['inactiveColor'],
        thumbColor: props['thumbColor'],
        mouseCursor: props['mouseCursor'],
        semanticFormatterCallback: props['semanticFormatterCallback'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
      ),
  'Slider.adaptive': (props) => Slider.adaptive(
        key: props['key'],
        value: props['value']?.toDouble() ?? 0,
        onChanged: props['onChanged'],
        onChangeStart: props['onChangeStart'],
        onChangeEnd: props['onChangeEnd'],
        min: props['min']?.toDouble() ?? 0.0,
        max: props['max']?.toDouble() ?? 1.0,
        divisions: props['divisions'],
        label: props['label'],
        mouseCursor: props['mouseCursor'],
        activeColor: props['activeColor'],
        inactiveColor: props['inactiveColor'],
        thumbColor: props['thumbColor'],
        semanticFormatterCallback: props['semanticFormatterCallback'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
      ),
  'UnderlineTabIndicator': (props) => UnderlineTabIndicator(
        borderSide: props['borderSide'] ??
            const BorderSide(width: 2.0, color: Colors.white),
        insets: props['insets'] ?? EdgeInsets.zero,
      ),
  'NoSplash': (props) => NoSplash(
        controller: props['controller'],
        referenceBox: props['referenceBox'],
        color: props['color'],
        onRemoved: props['onRemoved'],
      ),
  'NoSplash.splashFactory': NoSplash.splashFactory,
  'ButtonTheme': (props) => ButtonTheme(
        key: props['key'],
        textTheme: props['textTheme'] ?? ButtonTextTheme.normal,
        layoutBehavior:
            props['layoutBehavior'] ?? ButtonBarLayoutBehavior.padded,
        minWidth: props['minWidth']?.toDouble() ?? 88.0,
        height: props['height']?.toDouble() ?? 36.0,
        padding: props['padding'],
        shape: props['shape'],
        alignedDropdown: props['alignedDropdown'] ?? false,
        buttonColor: props['buttonColor'],
        disabledColor: props['disabledColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        highlightColor: props['highlightColor'],
        splashColor: props['splashColor'],
        colorScheme: props['colorScheme'],
        materialTapTargetSize: props['materialTapTargetSize'],
        child: props['child'],
      ),
  'ButtonTheme.fromButtonThemeData': (props) => ButtonTheme.fromButtonThemeData(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'ButtonTheme.of': (props) => ButtonTheme.of(
        props['pa'][0],
      ),
  'ButtonThemeData': (props) => ButtonThemeData(
        textTheme: props['textTheme'] ?? ButtonTextTheme.normal,
        minWidth: props['minWidth']?.toDouble() ?? 88.0,
        height: props['height']?.toDouble() ?? 36.0,
        padding: props['padding'],
        shape: props['shape'],
        layoutBehavior:
            props['layoutBehavior'] ?? ButtonBarLayoutBehavior.padded,
        alignedDropdown: props['alignedDropdown'] ?? false,
        buttonColor: props['buttonColor'],
        disabledColor: props['disabledColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        highlightColor: props['highlightColor'],
        splashColor: props['splashColor'],
        colorScheme: props['colorScheme'],
        materialTapTargetSize: props['materialTapTargetSize'],
      ),
  'ButtonTextTheme.normal': ButtonTextTheme.normal,
  'ButtonTextTheme.accent': ButtonTextTheme.accent,
  'ButtonTextTheme.primary': ButtonTextTheme.primary,
  'ButtonTextTheme.values': ButtonTextTheme.values,
  'ButtonBarLayoutBehavior.constrained': ButtonBarLayoutBehavior.constrained,
  'ButtonBarLayoutBehavior.padded': ButtonBarLayoutBehavior.padded,
  'ButtonBarLayoutBehavior.values': ButtonBarLayoutBehavior.values,
  'MaterialPointArcTween': (props) => MaterialPointArcTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'MaterialRectArcTween': (props) => MaterialRectArcTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'MaterialRectCenterArcTween': (props) => MaterialRectCenterArcTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'LinearProgressIndicator': (props) => LinearProgressIndicator(
        key: props['key'],
        value: props['value']?.toDouble(),
        backgroundColor: props['backgroundColor'],
        color: props['color'],
        valueColor: props['valueColor'],
        minHeight: props['minHeight']?.toDouble(),
        semanticsLabel: props['semanticsLabel'],
        semanticsValue: props['semanticsValue'],
      ),
  'CircularProgressIndicator': (props) => CircularProgressIndicator(
        key: props['key'],
        value: props['value']?.toDouble(),
        backgroundColor: props['backgroundColor'],
        color: props['color'],
        valueColor: props['valueColor'],
        strokeWidth: props['strokeWidth']?.toDouble() ?? 4.0,
        semanticsLabel: props['semanticsLabel'],
        semanticsValue: props['semanticsValue'],
      ),
  'CircularProgressIndicator.adaptive': (props) =>
      CircularProgressIndicator.adaptive(
        key: props['key'],
        value: props['value']?.toDouble(),
        backgroundColor: props['backgroundColor'],
        valueColor: props['valueColor'],
        strokeWidth: props['strokeWidth']?.toDouble() ?? 4.0,
        semanticsLabel: props['semanticsLabel'],
        semanticsValue: props['semanticsValue'],
      ),
  'RefreshProgressIndicator': (props) => RefreshProgressIndicator(
        key: props['key'],
        value: props['value']?.toDouble(),
        backgroundColor: props['backgroundColor'],
        color: props['color'],
        valueColor: props['valueColor'],
        strokeWidth: props['strokeWidth']?.toDouble() ?? defaultStrokeWidth,
        semanticsLabel: props['semanticsLabel'],
        semanticsValue: props['semanticsValue'],
      ),
  'RefreshProgressIndicator.defaultStrokeWidth':
      RefreshProgressIndicator.defaultStrokeWidth,
  'ListTile': (props) => ListTile(
        key: props['key'],
        leading: props['leading'],
        title: props['title'],
        subtitle: props['subtitle'],
        trailing: props['trailing'],
        isThreeLine: props['isThreeLine'] ?? false,
        dense: props['dense'],
        visualDensity: props['visualDensity'],
        shape: props['shape'],
        style: props['style'],
        selectedColor: props['selectedColor'],
        iconColor: props['iconColor'],
        textColor: props['textColor'],
        contentPadding: props['contentPadding'],
        enabled: props['enabled'] ?? true,
        onTap: props['onTap'],
        onLongPress: props['onLongPress'],
        mouseCursor: props['mouseCursor'],
        selected: props['selected'] ?? false,
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        tileColor: props['tileColor'],
        selectedTileColor: props['selectedTileColor'],
        enableFeedback: props['enableFeedback'],
        horizontalTitleGap: props['horizontalTitleGap']?.toDouble(),
        minVerticalPadding: props['minVerticalPadding']?.toDouble(),
        minLeadingWidth: props['minLeadingWidth']?.toDouble(),
      ),
  'ListTile.divideTiles': (props) => ListTile.divideTiles(
        context: props['context'],
        tiles: props['tiles'],
        color: props['color'],
      ),
  'ListTileStyle.list': ListTileStyle.list,
  'ListTileStyle.drawer': ListTileStyle.drawer,
  'ListTileStyle.values': ListTileStyle.values,
  'ListTileControlAffinity.leading': ListTileControlAffinity.leading,
  'ListTileControlAffinity.trailing': ListTileControlAffinity.trailing,
  'ListTileControlAffinity.platform': ListTileControlAffinity.platform,
  'ListTileControlAffinity.values': ListTileControlAffinity.values,
  'ExpansionTile': (props) => ExpansionTile(
        key: props['key'],
        leading: props['leading'],
        title: props['title'],
        subtitle: props['subtitle'],
        onExpansionChanged: props['onExpansionChanged'],
        children: as<Widget>(props['children']) ?? const <Widget>[],
        trailing: props['trailing'],
        initiallyExpanded: props['initiallyExpanded'] ?? false,
        maintainState: props['maintainState'] ?? false,
        tilePadding: props['tilePadding'],
        expandedCrossAxisAlignment: props['expandedCrossAxisAlignment'],
        expandedAlignment: props['expandedAlignment'],
        childrenPadding: props['childrenPadding'],
        backgroundColor: props['backgroundColor'],
        collapsedBackgroundColor: props['collapsedBackgroundColor'],
        textColor: props['textColor'],
        collapsedTextColor: props['collapsedTextColor'],
        iconColor: props['iconColor'],
        collapsedIconColor: props['collapsedIconColor'],
        controlAffinity: props['controlAffinity'],
      ),
  'BottomSheet': (props) => BottomSheet(
        key: props['key'],
        animationController: props['animationController'],
        enableDrag: props['enableDrag'] ?? true,
        onDragStart: props['onDragStart'],
        onDragEnd: props['onDragEnd'],
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        shape: props['shape'],
        clipBehavior: props['clipBehavior'],
        constraints: props['constraints'],
        onClosing: props['onClosing'],
        builder: props['builder'],
      ),
  'BottomSheet.createAnimationController': (props) =>
      BottomSheet.createAnimationController(
        props['pa'][0],
      ),
  'InputChip': (props) => InputChip(
        key: props['key'],
        avatar: props['avatar'],
        label: props['label'],
        labelStyle: props['labelStyle'],
        labelPadding: props['labelPadding'],
        selected: props['selected'] ?? false,
        isEnabled: props['isEnabled'] ?? true,
        onSelected: props['onSelected'],
        deleteIcon: props['deleteIcon'],
        onDeleted: props['onDeleted'],
        deleteIconColor: props['deleteIconColor'],
        deleteButtonTooltipMessage: props['deleteButtonTooltipMessage'],
        onPressed: props['onPressed'],
        pressElevation: props['pressElevation']?.toDouble(),
        disabledColor: props['disabledColor'],
        selectedColor: props['selectedColor'],
        tooltip: props['tooltip'],
        side: props['side'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        backgroundColor: props['backgroundColor'],
        padding: props['padding'],
        visualDensity: props['visualDensity'],
        materialTapTargetSize: props['materialTapTargetSize'],
        elevation: props['elevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        iconTheme: props['iconTheme'],
        selectedShadowColor: props['selectedShadowColor'],
        showCheckmark: props['showCheckmark'],
        checkmarkColor: props['checkmarkColor'],
        avatarBorder: props['avatarBorder'] ?? const CircleBorder(),
        useDeleteButtonTooltip: props['useDeleteButtonTooltip'] ?? true,
      ),
  'MaterialTextSelectionControls': (props) => MaterialTextSelectionControls(),
  'DividerThemeData': (props) => DividerThemeData(
        color: props['color'],
        space: props['space']?.toDouble(),
        thickness: props['thickness']?.toDouble(),
        indent: props['indent']?.toDouble(),
        endIndent: props['endIndent']?.toDouble(),
      ),
  'DividerThemeData.lerp': (props) => DividerThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'DividerTheme': (props) => DividerTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'DividerTheme.of': (props) => DividerTheme.of(
        props['pa'][0],
      ),
  'DataTableThemeData': (props) => DataTableThemeData(
        decoration: props['decoration'],
        dataRowColor: props['dataRowColor'],
        dataRowHeight: props['dataRowHeight']?.toDouble(),
        dataTextStyle: props['dataTextStyle'],
        headingRowColor: props['headingRowColor'],
        headingRowHeight: props['headingRowHeight']?.toDouble(),
        headingTextStyle: props['headingTextStyle'],
        horizontalMargin: props['horizontalMargin']?.toDouble(),
        columnSpacing: props['columnSpacing']?.toDouble(),
        dividerThickness: props['dividerThickness']?.toDouble(),
        checkboxHorizontalMargin: props['checkboxHorizontalMargin']?.toDouble(),
      ),
  'DataTableThemeData.lerp': (props) => DataTableThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'DataTableTheme': (props) => DataTableTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'DataTableTheme.of': (props) => DataTableTheme.of(
        props['pa'][0],
      ),
  'DefaultMaterialLocalizations': (props) =>
      const DefaultMaterialLocalizations(),
  'DefaultMaterialLocalizations.delegate':
      DefaultMaterialLocalizations.delegate,
  'DefaultMaterialLocalizations.load': (props) =>
      DefaultMaterialLocalizations.load(
        props['pa'][0],
      ),
  'Typography': (props) => Typography(
        platform: props['platform'],
        black: props['black'],
        white: props['white'],
        englishLike: props['englishLike'],
        dense: props['dense'],
        tall: props['tall'],
      ),
  'Typography.material2014': (props) => Typography.material2014(
        platform: props['platform'] ?? TargetPlatform.android,
        black: props['black'],
        white: props['white'],
        englishLike: props['englishLike'],
        dense: props['dense'],
        tall: props['tall'],
      ),
  'Typography.material2018': (props) => Typography.material2018(
        platform: props['platform'] ?? TargetPlatform.android,
        black: props['black'],
        white: props['white'],
        englishLike: props['englishLike'],
        dense: props['dense'],
        tall: props['tall'],
      ),
  'Typography.material2021': (props) => Typography.material2021(
        platform: props['platform'] ?? TargetPlatform.android,
        black: props['black'],
        white: props['white'],
        englishLike: props['englishLike'],
        dense: props['dense'],
        tall: props['tall'],
      ),
  'Typography.blackMountainView': Typography.blackMountainView,
  'Typography.whiteMountainView': Typography.whiteMountainView,
  'Typography.blackRedmond': Typography.blackRedmond,
  'Typography.whiteRedmond': Typography.whiteRedmond,
  'Typography.blackHelsinki': Typography.blackHelsinki,
  'Typography.whiteHelsinki': Typography.whiteHelsinki,
  'Typography.blackCupertino': Typography.blackCupertino,
  'Typography.whiteCupertino': Typography.whiteCupertino,
  'Typography.blackRedwoodCity': Typography.blackRedwoodCity,
  'Typography.whiteRedwoodCity': Typography.whiteRedwoodCity,
  'Typography.englishLike2014': Typography.englishLike2014,
  'Typography.englishLike2018': Typography.englishLike2018,
  'Typography.dense2014': Typography.dense2014,
  'Typography.dense2018': Typography.dense2018,
  'Typography.tall2014': Typography.tall2014,
  'Typography.tall2018': Typography.tall2018,
  'Typography.englishLike2021': Typography.englishLike2021,
  'Typography.dense2021': Typography.dense2021,
  'Typography.tall2021': Typography.tall2021,
  'Typography.lerp': (props) => Typography.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ScriptCategory.englishLike': ScriptCategory.englishLike,
  'ScriptCategory.dense': ScriptCategory.dense,
  'ScriptCategory.tall': ScriptCategory.tall,
  'ScriptCategory.values': ScriptCategory.values,
  'OutlinedButton': (props) => OutlinedButton(
        key: props['key'],
        onPressed: props['onPressed'],
        onLongPress: props['onLongPress'],
        onHover: props['onHover'],
        onFocusChange: props['onFocusChange'],
        style: props['style'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        statesController: props['statesController'],
        child: props['child'],
      ),
  'OutlinedButton.icon': (props) => OutlinedButton.icon(
        key: props['key'],
        onPressed: props['onPressed'],
        onLongPress: props['onLongPress'],
        style: props['style'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        icon: props['icon'],
        label: props['label'],
      ),
  'OutlinedButton.styleFrom': (props) => OutlinedButton.styleFrom(
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        disabledForegroundColor: props['disabledForegroundColor'],
        disabledBackgroundColor: props['disabledBackgroundColor'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation']?.toDouble(),
        textStyle: props['textStyle'],
        padding: props['padding'],
        minimumSize: props['minimumSize'],
        fixedSize: props['fixedSize'],
        maximumSize: props['maximumSize'],
        side: props['side'],
        shape: props['shape'],
        enabledMouseCursor: props['enabledMouseCursor'],
        disabledMouseCursor: props['disabledMouseCursor'],
        visualDensity: props['visualDensity'],
        tapTargetSize: props['tapTargetSize'],
        animationDuration: props['animationDuration'],
        enableFeedback: props['enableFeedback'],
        alignment: props['alignment'],
        splashFactory: props['splashFactory'],
        primary: props['primary'],
        onSurface: props['onSurface'],
      ),
  'ChoiceChip': (props) => ChoiceChip(
        key: props['key'],
        avatar: props['avatar'],
        label: props['label'],
        labelStyle: props['labelStyle'],
        labelPadding: props['labelPadding'],
        onSelected: props['onSelected'],
        pressElevation: props['pressElevation']?.toDouble(),
        selected: props['selected'],
        selectedColor: props['selectedColor'],
        disabledColor: props['disabledColor'],
        tooltip: props['tooltip'],
        side: props['side'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        backgroundColor: props['backgroundColor'],
        padding: props['padding'],
        visualDensity: props['visualDensity'],
        materialTapTargetSize: props['materialTapTargetSize'],
        elevation: props['elevation']?.toDouble(),
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        iconTheme: props['iconTheme'],
        selectedShadowColor: props['selectedShadowColor'],
        avatarBorder: props['avatarBorder'] ?? const CircleBorder(),
      ),
  'Divider': (props) => Divider(
        key: props['key'],
        height: props['height']?.toDouble(),
        thickness: props['thickness']?.toDouble(),
        indent: props['indent']?.toDouble(),
        endIndent: props['endIndent']?.toDouble(),
        color: props['color'],
      ),
  'Divider.createBorderSide': (props) => Divider.createBorderSide(
        props['pa'][0],
        color: props['color'],
        width: props['width']?.toDouble(),
      ),
  'VerticalDivider': (props) => VerticalDivider(
        key: props['key'],
        width: props['width']?.toDouble(),
        thickness: props['thickness']?.toDouble(),
        indent: props['indent']?.toDouble(),
        endIndent: props['endIndent']?.toDouble(),
        color: props['color'],
      ),
  'SliderTheme': (props) => SliderTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'SliderTheme.of': (props) => SliderTheme.of(
        props['pa'][0],
      ),
  'SliderThemeData': (props) => SliderThemeData(
        trackHeight: props['trackHeight']?.toDouble(),
        activeTrackColor: props['activeTrackColor'],
        inactiveTrackColor: props['inactiveTrackColor'],
        disabledActiveTrackColor: props['disabledActiveTrackColor'],
        disabledInactiveTrackColor: props['disabledInactiveTrackColor'],
        activeTickMarkColor: props['activeTickMarkColor'],
        inactiveTickMarkColor: props['inactiveTickMarkColor'],
        disabledActiveTickMarkColor: props['disabledActiveTickMarkColor'],
        disabledInactiveTickMarkColor: props['disabledInactiveTickMarkColor'],
        thumbColor: props['thumbColor'],
        overlappingShapeStrokeColor: props['overlappingShapeStrokeColor'],
        disabledThumbColor: props['disabledThumbColor'],
        overlayColor: props['overlayColor'],
        valueIndicatorColor: props['valueIndicatorColor'],
        overlayShape: props['overlayShape'],
        tickMarkShape: props['tickMarkShape'],
        thumbShape: props['thumbShape'],
        trackShape: props['trackShape'],
        valueIndicatorShape: props['valueIndicatorShape'],
        rangeTickMarkShape: props['rangeTickMarkShape'],
        rangeThumbShape: props['rangeThumbShape'],
        rangeTrackShape: props['rangeTrackShape'],
        rangeValueIndicatorShape: props['rangeValueIndicatorShape'],
        showValueIndicator: props['showValueIndicator'],
        valueIndicatorTextStyle: props['valueIndicatorTextStyle'],
        minThumbSeparation: props['minThumbSeparation']?.toDouble(),
        thumbSelector: props['thumbSelector'],
        mouseCursor: props['mouseCursor'],
      ),
  'SliderThemeData.fromPrimaryColors': (props) =>
      SliderThemeData.fromPrimaryColors(
        primaryColor: props['primaryColor'],
        primaryColorDark: props['primaryColorDark'],
        primaryColorLight: props['primaryColorLight'],
        valueIndicatorTextStyle: props['valueIndicatorTextStyle'],
      ),
  'SliderThemeData.lerp': (props) => SliderThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'RectangularSliderTrackShape': (props) => const RectangularSliderTrackShape(),
  'RoundedRectSliderTrackShape': (props) => const RoundedRectSliderTrackShape(),
  'RectangularRangeSliderTrackShape': (props) =>
      const RectangularRangeSliderTrackShape(),
  'RoundedRectRangeSliderTrackShape': (props) =>
      const RoundedRectRangeSliderTrackShape(),
  'RoundSliderTickMarkShape': (props) => RoundSliderTickMarkShape(
        tickMarkRadius: props['tickMarkRadius']?.toDouble(),
      ),
  'RoundRangeSliderTickMarkShape': (props) => RoundRangeSliderTickMarkShape(
        tickMarkRadius: props['tickMarkRadius']?.toDouble(),
      ),
  'RoundSliderThumbShape': (props) => RoundSliderThumbShape(
        enabledThumbRadius: props['enabledThumbRadius']?.toDouble() ?? 10.0,
        disabledThumbRadius: props['disabledThumbRadius']?.toDouble(),
        elevation: props['elevation']?.toDouble() ?? 1.0,
        pressedElevation: props['pressedElevation']?.toDouble() ?? 6.0,
      ),
  'RoundRangeSliderThumbShape': (props) => RoundRangeSliderThumbShape(
        enabledThumbRadius: props['enabledThumbRadius']?.toDouble() ?? 10.0,
        disabledThumbRadius: props['disabledThumbRadius']?.toDouble(),
        elevation: props['elevation']?.toDouble() ?? 1.0,
        pressedElevation: props['pressedElevation']?.toDouble() ?? 6.0,
      ),
  'RoundSliderOverlayShape': (props) => RoundSliderOverlayShape(
        overlayRadius: props['overlayRadius']?.toDouble() ?? 24.0,
      ),
  'RectangularSliderValueIndicatorShape': (props) =>
      const RectangularSliderValueIndicatorShape(),
  'RectangularRangeSliderValueIndicatorShape': (props) =>
      const RectangularRangeSliderValueIndicatorShape(),
  'PaddleSliderValueIndicatorShape': (props) =>
      const PaddleSliderValueIndicatorShape(),
  'PaddleRangeSliderValueIndicatorShape': (props) =>
      const PaddleRangeSliderValueIndicatorShape(),
  'RangeValues': (props) => RangeValues(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
      ),
  'RangeLabels': (props) => RangeLabels(
        props['pa'][0],
        props['pa'][1],
      ),
  'ShowValueIndicator.onlyForDiscrete': ShowValueIndicator.onlyForDiscrete,
  'ShowValueIndicator.onlyForContinuous': ShowValueIndicator.onlyForContinuous,
  'ShowValueIndicator.always': ShowValueIndicator.always,
  'ShowValueIndicator.never': ShowValueIndicator.never,
  'ShowValueIndicator.values': ShowValueIndicator.values,
  'Thumb.start': Thumb.start,
  'Thumb.end': Thumb.end,
  'Thumb.values': Thumb.values,
  'ChipTheme': (props) => ChipTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'ChipTheme.of': (props) => ChipTheme.of(
        props['pa'][0],
      ),
  'ChipThemeData': (props) => ChipThemeData(
        backgroundColor: props['backgroundColor'],
        deleteIconColor: props['deleteIconColor'],
        disabledColor: props['disabledColor'],
        selectedColor: props['selectedColor'],
        secondarySelectedColor: props['secondarySelectedColor'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        selectedShadowColor: props['selectedShadowColor'],
        showCheckmark: props['showCheckmark'],
        checkmarkColor: props['checkmarkColor'],
        labelPadding: props['labelPadding'],
        padding: props['padding'],
        side: props['side'],
        shape: props['shape'],
        labelStyle: props['labelStyle'],
        secondaryLabelStyle: props['secondaryLabelStyle'],
        brightness: props['brightness'],
        elevation: props['elevation']?.toDouble(),
        pressElevation: props['pressElevation']?.toDouble(),
        iconTheme: props['iconTheme'],
      ),
  'ChipThemeData.fromDefaults': (props) => ChipThemeData.fromDefaults(
        brightness: props['brightness'],
        primaryColor: props['primaryColor'],
        secondaryColor: props['secondaryColor'],
        labelStyle: props['labelStyle'],
      ),
  'ChipThemeData.lerp': (props) => ChipThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'InkSparkle': (props) => InkSparkle(
        controller: props['controller'],
        referenceBox: props['referenceBox'],
        color: props['color'],
        position: props['position'],
        textDirection: props['textDirection'],
        containedInkWell: props['containedInkWell'] ?? true,
        rectCallback: props['rectCallback'],
        borderRadius: props['borderRadius'],
        customBorder: props['customBorder'],
        radius: props['radius']?.toDouble(),
        onRemoved: props['onRemoved'],
        turbulenceSeed: props['turbulenceSeed']?.toDouble(),
      ),
  'InkSparkle.splashFactory': InkSparkle.splashFactory,
  'InkSparkle.constantTurbulenceSeedSplashFactory':
      InkSparkle.constantTurbulenceSeedSplashFactory,
  'FragmentShaderManager.inkSparkle': (props) =>
      FragmentShaderManager.inkSparkle(),
  'MaterialSlice': (props) => MaterialSlice(
        key: props['key'],
        child: props['child'],
        color: props['color'],
      ),
  'MaterialGap': (props) => MaterialGap(
        key: props['key'],
        size: props['size']?.toDouble() ?? 16.0,
      ),
  'MergeableMaterial': (props) => MergeableMaterial(
        key: props['key'],
        mainAxis: props['mainAxis'] ?? Axis.vertical,
        elevation: props['elevation']?.toDouble() ?? 2,
        hasDividers: props['hasDividers'] ?? false,
        children: as<MergeableMaterialItem>(props['children']) ??
            const <MergeableMaterialItem>[],
        dividerColor: props['dividerColor'],
      ),
  'Drawer': (props) => Drawer(
        key: props['key'],
        backgroundColor: props['backgroundColor'],
        elevation: props['elevation']?.toDouble(),
        shape: props['shape'],
        width: props['width']?.toDouble(),
        child: props['child'],
        semanticLabel: props['semanticLabel'],
      ),
  'DrawerController': (props) => DrawerController(
        key: props['key'],
        child: props['child'],
        alignment: props['alignment'],
        isDrawerOpen: props['isDrawerOpen'] ?? false,
        drawerCallback: props['drawerCallback'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        scrimColor: props['scrimColor'],
        edgeDragWidth: props['edgeDragWidth']?.toDouble(),
        enableOpenDragGesture: props['enableOpenDragGesture'] ?? true,
      ),
  'DrawerAlignment.start': DrawerAlignment.start,
  'DrawerAlignment.end': DrawerAlignment.end,
  'DrawerAlignment.values': DrawerAlignment.values,
  'ExpansionTileThemeData': (props) => ExpansionTileThemeData(
        backgroundColor: props['backgroundColor'],
        collapsedBackgroundColor: props['collapsedBackgroundColor'],
        tilePadding: props['tilePadding'],
        expandedAlignment: props['expandedAlignment'],
        childrenPadding: props['childrenPadding'],
        iconColor: props['iconColor'],
        collapsedIconColor: props['collapsedIconColor'],
        textColor: props['textColor'],
        collapsedTextColor: props['collapsedTextColor'],
      ),
  'ExpansionTileThemeData.lerp': (props) => ExpansionTileThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ExpansionTileTheme': (props) => ExpansionTileTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'ExpansionTileTheme.of': (props) => ExpansionTileTheme.of(
        props['pa'][0],
      ),
  'DateUtils.dateOnly': (props) => DateUtils.dateOnly(
        props['pa'][0],
      ),
  'DateUtils.datesOnly': (props) => DateUtils.datesOnly(
        props['pa'][0],
      ),
  'DateUtils.isSameDay': (props) => DateUtils.isSameDay(
        props['pa'][0],
        props['pa'][1],
      ),
  'DateUtils.isSameMonth': (props) => DateUtils.isSameMonth(
        props['pa'][0],
        props['pa'][1],
      ),
  'DateUtils.monthDelta': (props) => DateUtils.monthDelta(
        props['pa'][0],
        props['pa'][1],
      ),
  'DateUtils.addMonthsToMonthDate': (props) => DateUtils.addMonthsToMonthDate(
        props['pa'][0],
        props['pa'][1],
      ),
  'DateUtils.addDaysToDate': (props) => DateUtils.addDaysToDate(
        props['pa'][0],
        props['pa'][1],
      ),
  'DateUtils.firstDayOffset': (props) => DateUtils.firstDayOffset(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'DateUtils.getDaysInMonth': (props) => DateUtils.getDaysInMonth(
        props['pa'][0],
        props['pa'][1],
      ),
  'DateTimeRange': (props) => DateTimeRange(
        start: props['start'],
        end: props['end'],
      ),
  'DatePickerEntryMode.calendar': DatePickerEntryMode.calendar,
  'DatePickerEntryMode.input': DatePickerEntryMode.input,
  'DatePickerEntryMode.calendarOnly': DatePickerEntryMode.calendarOnly,
  'DatePickerEntryMode.inputOnly': DatePickerEntryMode.inputOnly,
  'DatePickerEntryMode.values': DatePickerEntryMode.values,
  'DatePickerMode.day': DatePickerMode.day,
  'DatePickerMode.year': DatePickerMode.year,
  'DatePickerMode.values': DatePickerMode.values,
  'SnackBarThemeData': (props) => SnackBarThemeData(
        backgroundColor: props['backgroundColor'],
        actionTextColor: props['actionTextColor'],
        disabledActionTextColor: props['disabledActionTextColor'],
        contentTextStyle: props['contentTextStyle'],
        elevation: props['elevation']?.toDouble(),
        shape: props['shape'],
        behavior: props['behavior'],
      ),
  'SnackBarThemeData.lerp': (props) => SnackBarThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'SnackBarBehavior.fixed': SnackBarBehavior.fixed,
  'SnackBarBehavior.floating': SnackBarBehavior.floating,
  'SnackBarBehavior.values': SnackBarBehavior.values,
  'AnimatedIcon': (props) => AnimatedIcon(
        key: props['key'],
        icon: props['icon'],
        progress: props['progress'],
        color: props['color'],
        size: props['size']?.toDouble(),
        semanticLabel: props['semanticLabel'],
        textDirection: props['textDirection'],
      ),
  'ThemeData': (props) => ThemeData(
        applyElevationOverlayColor: props['applyElevationOverlayColor'],
        cupertinoOverrideTheme: props['cupertinoOverrideTheme'],
        extensions: props['extensions'],
        inputDecorationTheme: props['inputDecorationTheme'],
        materialTapTargetSize: props['materialTapTargetSize'],
        pageTransitionsTheme: props['pageTransitionsTheme'],
        platform: props['platform'],
        scrollbarTheme: props['scrollbarTheme'],
        splashFactory: props['splashFactory'],
        useMaterial3: props['useMaterial3'],
        visualDensity: props['visualDensity'],
        backgroundColor: props['backgroundColor'],
        bottomAppBarColor: props['bottomAppBarColor'],
        brightness: props['brightness'],
        canvasColor: props['canvasColor'],
        cardColor: props['cardColor'],
        colorScheme: props['colorScheme'],
        colorSchemeSeed: props['colorSchemeSeed'],
        dialogBackgroundColor: props['dialogBackgroundColor'],
        disabledColor: props['disabledColor'],
        dividerColor: props['dividerColor'],
        errorColor: props['errorColor'],
        focusColor: props['focusColor'],
        highlightColor: props['highlightColor'],
        hintColor: props['hintColor'],
        hoverColor: props['hoverColor'],
        indicatorColor: props['indicatorColor'],
        primaryColor: props['primaryColor'],
        primaryColorDark: props['primaryColorDark'],
        primaryColorLight: props['primaryColorLight'],
        primarySwatch: props['primarySwatch'],
        scaffoldBackgroundColor: props['scaffoldBackgroundColor'],
        secondaryHeaderColor: props['secondaryHeaderColor'],
        selectedRowColor: props['selectedRowColor'],
        shadowColor: props['shadowColor'],
        splashColor: props['splashColor'],
        toggleableActiveColor: props['toggleableActiveColor'],
        unselectedWidgetColor: props['unselectedWidgetColor'],
        fontFamily: props['fontFamily'],
        iconTheme: props['iconTheme'],
        primaryIconTheme: props['primaryIconTheme'],
        primaryTextTheme: props['primaryTextTheme'],
        textTheme: props['textTheme'],
        typography: props['typography'],
        appBarTheme: props['appBarTheme'],
        bannerTheme: props['bannerTheme'],
        bottomAppBarTheme: props['bottomAppBarTheme'],
        bottomNavigationBarTheme: props['bottomNavigationBarTheme'],
        bottomSheetTheme: props['bottomSheetTheme'],
        buttonBarTheme: props['buttonBarTheme'],
        buttonTheme: props['buttonTheme'],
        cardTheme: props['cardTheme'],
        checkboxTheme: props['checkboxTheme'],
        chipTheme: props['chipTheme'],
        dataTableTheme: props['dataTableTheme'],
        dialogTheme: props['dialogTheme'],
        dividerTheme: props['dividerTheme'],
        drawerTheme: props['drawerTheme'],
        elevatedButtonTheme: props['elevatedButtonTheme'],
        expansionTileTheme: props['expansionTileTheme'],
        floatingActionButtonTheme: props['floatingActionButtonTheme'],
        listTileTheme: props['listTileTheme'],
        navigationBarTheme: props['navigationBarTheme'],
        navigationRailTheme: props['navigationRailTheme'],
        outlinedButtonTheme: props['outlinedButtonTheme'],
        popupMenuTheme: props['popupMenuTheme'],
        progressIndicatorTheme: props['progressIndicatorTheme'],
        radioTheme: props['radioTheme'],
        sliderTheme: props['sliderTheme'],
        snackBarTheme: props['snackBarTheme'],
        switchTheme: props['switchTheme'],
        tabBarTheme: props['tabBarTheme'],
        textButtonTheme: props['textButtonTheme'],
        textSelectionTheme: props['textSelectionTheme'],
        timePickerTheme: props['timePickerTheme'],
        toggleButtonsTheme: props['toggleButtonsTheme'],
        tooltipTheme: props['tooltipTheme'],
        accentColor: props['accentColor'],
        accentColorBrightness: props['accentColorBrightness'],
        accentTextTheme: props['accentTextTheme'],
        accentIconTheme: props['accentIconTheme'],
        buttonColor: props['buttonColor'],
        fixTextFieldOutlineLabel: props['fixTextFieldOutlineLabel'],
        primaryColorBrightness: props['primaryColorBrightness'],
        androidOverscrollIndicator: props['androidOverscrollIndicator'],
      ),
  'ThemeData.raw': (props) => ThemeData.raw(
        applyElevationOverlayColor: props['applyElevationOverlayColor'],
        cupertinoOverrideTheme: props['cupertinoOverrideTheme'],
        extensions: props['extensions'],
        inputDecorationTheme: props['inputDecorationTheme'],
        materialTapTargetSize: props['materialTapTargetSize'],
        pageTransitionsTheme: props['pageTransitionsTheme'],
        platform: props['platform'],
        scrollbarTheme: props['scrollbarTheme'],
        splashFactory: props['splashFactory'],
        useMaterial3: props['useMaterial3'],
        visualDensity: props['visualDensity'],
        backgroundColor: props['backgroundColor'],
        bottomAppBarColor: props['bottomAppBarColor'],
        canvasColor: props['canvasColor'],
        cardColor: props['cardColor'],
        colorScheme: props['colorScheme'],
        dialogBackgroundColor: props['dialogBackgroundColor'],
        disabledColor: props['disabledColor'],
        dividerColor: props['dividerColor'],
        errorColor: props['errorColor'],
        focusColor: props['focusColor'],
        highlightColor: props['highlightColor'],
        hintColor: props['hintColor'],
        hoverColor: props['hoverColor'],
        indicatorColor: props['indicatorColor'],
        primaryColor: props['primaryColor'],
        primaryColorDark: props['primaryColorDark'],
        primaryColorLight: props['primaryColorLight'],
        scaffoldBackgroundColor: props['scaffoldBackgroundColor'],
        secondaryHeaderColor: props['secondaryHeaderColor'],
        selectedRowColor: props['selectedRowColor'],
        shadowColor: props['shadowColor'],
        splashColor: props['splashColor'],
        toggleableActiveColor: props['toggleableActiveColor'],
        unselectedWidgetColor: props['unselectedWidgetColor'],
        iconTheme: props['iconTheme'],
        primaryIconTheme: props['primaryIconTheme'],
        primaryTextTheme: props['primaryTextTheme'],
        textTheme: props['textTheme'],
        typography: props['typography'],
        appBarTheme: props['appBarTheme'],
        bannerTheme: props['bannerTheme'],
        bottomAppBarTheme: props['bottomAppBarTheme'],
        bottomNavigationBarTheme: props['bottomNavigationBarTheme'],
        bottomSheetTheme: props['bottomSheetTheme'],
        buttonBarTheme: props['buttonBarTheme'],
        buttonTheme: props['buttonTheme'],
        cardTheme: props['cardTheme'],
        checkboxTheme: props['checkboxTheme'],
        chipTheme: props['chipTheme'],
        dataTableTheme: props['dataTableTheme'],
        dialogTheme: props['dialogTheme'],
        dividerTheme: props['dividerTheme'],
        drawerTheme: props['drawerTheme'],
        elevatedButtonTheme: props['elevatedButtonTheme'],
        expansionTileTheme: props['expansionTileTheme'],
        floatingActionButtonTheme: props['floatingActionButtonTheme'],
        listTileTheme: props['listTileTheme'],
        navigationBarTheme: props['navigationBarTheme'],
        navigationRailTheme: props['navigationRailTheme'],
        outlinedButtonTheme: props['outlinedButtonTheme'],
        popupMenuTheme: props['popupMenuTheme'],
        progressIndicatorTheme: props['progressIndicatorTheme'],
        radioTheme: props['radioTheme'],
        sliderTheme: props['sliderTheme'],
        snackBarTheme: props['snackBarTheme'],
        switchTheme: props['switchTheme'],
        tabBarTheme: props['tabBarTheme'],
        textButtonTheme: props['textButtonTheme'],
        textSelectionTheme: props['textSelectionTheme'],
        timePickerTheme: props['timePickerTheme'],
        toggleButtonsTheme: props['toggleButtonsTheme'],
        tooltipTheme: props['tooltipTheme'],
        accentColor: props['accentColor'],
        accentColorBrightness: props['accentColorBrightness'],
        accentTextTheme: props['accentTextTheme'],
        accentIconTheme: props['accentIconTheme'],
        buttonColor: props['buttonColor'],
        fixTextFieldOutlineLabel: props['fixTextFieldOutlineLabel'],
        primaryColorBrightness: props['primaryColorBrightness'],
        androidOverscrollIndicator: props['androidOverscrollIndicator'],
      ),
  'ThemeData.from': (props) => ThemeData.from(
        colorScheme: props['colorScheme'],
        textTheme: props['textTheme'],
        useMaterial3: props['useMaterial3'],
      ),
  'ThemeData.light': (props) => ThemeData.light(
        useMaterial3: props['useMaterial3'],
      ),
  'ThemeData.dark': (props) => ThemeData.dark(
        useMaterial3: props['useMaterial3'],
      ),
  'ThemeData.fallback': (props) => ThemeData.fallback(
        useMaterial3: props['useMaterial3'],
      ),
  'ThemeData.localize': (props) => ThemeData.localize(
        props['pa'][0],
        props['pa'][1],
      ),
  'ThemeData.estimateBrightnessForColor': (props) =>
      ThemeData.estimateBrightnessForColor(
        props['pa'][0],
      ),
  'ThemeData.lerp': (props) => ThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'MaterialBasedCupertinoThemeData': (props) => MaterialBasedCupertinoThemeData(
        materialTheme: props['materialTheme'],
      ),
  'VisualDensity': (props) => VisualDensity(
        horizontal: props['horizontal']?.toDouble() ?? 0.0,
        vertical: props['vertical']?.toDouble() ?? 0.0,
      ),
  'VisualDensity.minimumDensity': VisualDensity.minimumDensity,
  'VisualDensity.maximumDensity': VisualDensity.maximumDensity,
  'VisualDensity.standard': VisualDensity.standard,
  'VisualDensity.comfortable': VisualDensity.comfortable,
  'VisualDensity.compact': VisualDensity.compact,
  'VisualDensity.lerp': (props) => VisualDensity.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'MaterialTapTargetSize.padded': MaterialTapTargetSize.padded,
  'MaterialTapTargetSize.shrinkWrap': MaterialTapTargetSize.shrinkWrap,
  'MaterialTapTargetSize.values': MaterialTapTargetSize.values,
  'FlexibleSpaceBar': (props) => FlexibleSpaceBar(
        key: props['key'],
        title: props['title'],
        background: props['background'],
        centerTitle: props['centerTitle'],
        titlePadding: props['titlePadding'],
        collapseMode: props['collapseMode'] ?? CollapseMode.parallax,
        stretchModes: as<StretchMode>(props['stretchModes']) ??
            const <StretchMode>[StretchMode.zoomBackground],
        expandedTitleScale: props['expandedTitleScale']?.toDouble() ?? 1.5,
      ),
  'FlexibleSpaceBar.createSettings': (props) => FlexibleSpaceBar.createSettings(
        toolbarOpacity: props['toolbarOpacity']?.toDouble(),
        minExtent: props['minExtent']?.toDouble(),
        maxExtent: props['maxExtent']?.toDouble(),
        isScrolledUnder: props['isScrolledUnder'],
        currentExtent: props['currentExtent']?.toDouble() ?? 0,
        child: props['child'],
      ),
  'FlexibleSpaceBarSettings': (props) => FlexibleSpaceBarSettings(
        key: props['key'],
        toolbarOpacity: props['toolbarOpacity']?.toDouble() ?? 0,
        minExtent: props['minExtent']?.toDouble() ?? 0,
        maxExtent: props['maxExtent']?.toDouble() ?? 0,
        currentExtent: props['currentExtent']?.toDouble() ?? 0,
        child: props['child'],
        isScrolledUnder: props['isScrolledUnder'],
      ),
  'CollapseMode.parallax': CollapseMode.parallax,
  'CollapseMode.pin': CollapseMode.pin,
  'CollapseMode.none': CollapseMode.none,
  'CollapseMode.values': CollapseMode.values,
  'StretchMode.zoomBackground': StretchMode.zoomBackground,
  'StretchMode.blurBackground': StretchMode.blurBackground,
  'StretchMode.fadeTitle': StretchMode.fadeTitle,
  'StretchMode.values': StretchMode.values,
  'NavigationBarThemeData': (props) => NavigationBarThemeData(
        height: props['height']?.toDouble(),
        backgroundColor: props['backgroundColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation']?.toDouble(),
        indicatorColor: props['indicatorColor'],
        indicatorShape: props['indicatorShape'],
        labelTextStyle: props['labelTextStyle'],
        iconTheme: props['iconTheme'],
        labelBehavior: props['labelBehavior'],
      ),
  'NavigationBarThemeData.lerp': (props) => NavigationBarThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'NavigationBarTheme': (props) => NavigationBarTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'NavigationBarTheme.of': (props) => NavigationBarTheme.of(
        props['pa'][0],
      ),
  'Switch': (props) => Switch(
        key: props['key'],
        value: props['value'],
        onChanged: props['onChanged'],
        activeColor: props['activeColor'],
        activeTrackColor: props['activeTrackColor'],
        inactiveThumbColor: props['inactiveThumbColor'],
        inactiveTrackColor: props['inactiveTrackColor'],
        activeThumbImage: props['activeThumbImage'],
        onActiveThumbImageError: props['onActiveThumbImageError'],
        inactiveThumbImage: props['inactiveThumbImage'],
        onInactiveThumbImageError: props['onInactiveThumbImageError'],
        thumbColor: props['thumbColor'],
        trackColor: props['trackColor'],
        materialTapTargetSize: props['materialTapTargetSize'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        mouseCursor: props['mouseCursor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        overlayColor: props['overlayColor'],
        splashRadius: props['splashRadius']?.toDouble(),
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
      ),
  'Switch.adaptive': (props) => Switch.adaptive(
        key: props['key'],
        value: props['value'],
        onChanged: props['onChanged'],
        activeColor: props['activeColor'],
        activeTrackColor: props['activeTrackColor'],
        inactiveThumbColor: props['inactiveThumbColor'],
        inactiveTrackColor: props['inactiveTrackColor'],
        activeThumbImage: props['activeThumbImage'],
        onActiveThumbImageError: props['onActiveThumbImageError'],
        inactiveThumbImage: props['inactiveThumbImage'],
        onInactiveThumbImageError: props['onInactiveThumbImageError'],
        materialTapTargetSize: props['materialTapTargetSize'],
        thumbColor: props['thumbColor'],
        trackColor: props['trackColor'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        mouseCursor: props['mouseCursor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        overlayColor: props['overlayColor'],
        splashRadius: props['splashRadius']?.toDouble(),
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
      ),
  'Scrollbar': (props) => Scrollbar(
        key: props['key'],
        child: props['child'],
        controller: props['controller'],
        thumbVisibility: props['thumbVisibility'],
        trackVisibility: props['trackVisibility'],
        thickness: props['thickness']?.toDouble(),
        radius: props['radius'],
        notificationPredicate: props['notificationPredicate'],
        interactive: props['interactive'],
        scrollbarOrientation: props['scrollbarOrientation'],
        isAlwaysShown: props['isAlwaysShown'],
        showTrackOnHover: props['showTrackOnHover'],
        hoverThickness: props['hoverThickness']?.toDouble(),
      ),
  'ButtonStyle': (props) => ButtonStyle(
        textStyle: props['textStyle'],
        backgroundColor: props['backgroundColor'],
        foregroundColor: props['foregroundColor'],
        overlayColor: props['overlayColor'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation'],
        padding: props['padding'],
        minimumSize: props['minimumSize'],
        fixedSize: props['fixedSize'],
        maximumSize: props['maximumSize'],
        side: props['side'],
        shape: props['shape'],
        mouseCursor: props['mouseCursor'],
        visualDensity: props['visualDensity'],
        tapTargetSize: props['tapTargetSize'],
        animationDuration: props['animationDuration'],
        enableFeedback: props['enableFeedback'],
        alignment: props['alignment'],
        splashFactory: props['splashFactory'],
      ),
  'ButtonStyle.lerp': (props) => ButtonStyle.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'BottomNavigationBar': (props) => BottomNavigationBar(
        key: props['key'],
        items: as<BottomNavigationBarItem>(props['items']) ?? const [],
        onTap: props['onTap'],
        currentIndex: props['currentIndex'] ?? 0,
        elevation: props['elevation']?.toDouble(),
        type: props['type'],
        fixedColor: props['fixedColor'],
        backgroundColor: props['backgroundColor'],
        iconSize: props['iconSize']?.toDouble() ?? 24.0,
        selectedItemColor: props['selectedItemColor'],
        unselectedItemColor: props['unselectedItemColor'],
        selectedIconTheme: props['selectedIconTheme'],
        unselectedIconTheme: props['unselectedIconTheme'],
        selectedFontSize: props['selectedFontSize']?.toDouble() ?? 14.0,
        unselectedFontSize: props['unselectedFontSize']?.toDouble() ?? 12.0,
        selectedLabelStyle: props['selectedLabelStyle'],
        unselectedLabelStyle: props['unselectedLabelStyle'],
        showSelectedLabels: props['showSelectedLabels'],
        showUnselectedLabels: props['showUnselectedLabels'],
        mouseCursor: props['mouseCursor'],
        enableFeedback: props['enableFeedback'],
        landscapeLayout: props['landscapeLayout'],
      ),
  'BottomNavigationBarType.fixed': BottomNavigationBarType.fixed,
  'BottomNavigationBarType.shifting': BottomNavigationBarType.shifting,
  'BottomNavigationBarType.values': BottomNavigationBarType.values,
  'BottomNavigationBarLandscapeLayout.spread':
      BottomNavigationBarLandscapeLayout.spread,
  'BottomNavigationBarLandscapeLayout.centered':
      BottomNavigationBarLandscapeLayout.centered,
  'BottomNavigationBarLandscapeLayout.linear':
      BottomNavigationBarLandscapeLayout.linear,
  'BottomNavigationBarLandscapeLayout.values':
      BottomNavigationBarLandscapeLayout.values,
  'MaterialApp': (props) => MaterialApp(
        key: props['key'],
        navigatorKey: props['navigatorKey'],
        scaffoldMessengerKey: props['scaffoldMessengerKey'],
        home: props['home'],
        routes: props['routes'] ?? const <String, WidgetBuilder>{},
        initialRoute: props['initialRoute'],
        onGenerateRoute: props['onGenerateRoute'],
        onGenerateInitialRoutes: props['onGenerateInitialRoutes'],
        onUnknownRoute: props['onUnknownRoute'],
        navigatorObservers:
            as<NavigatorObserver>(props['navigatorObservers']) ??
                const <NavigatorObserver>[],
        builder: props['builder'],
        title: props['title'] ?? '',
        onGenerateTitle: props['onGenerateTitle'],
        color: props['color'],
        theme: props['theme'],
        darkTheme: props['darkTheme'],
        highContrastTheme: props['highContrastTheme'],
        highContrastDarkTheme: props['highContrastDarkTheme'],
        themeMode: props['themeMode'] ?? ThemeMode.system,
        locale: props['locale'],
        localizationsDelegates: props['localizationsDelegates'],
        localeListResolutionCallback: props['localeListResolutionCallback'],
        localeResolutionCallback: props['localeResolutionCallback'],
        supportedLocales:
            props['supportedLocales'] ?? const <Locale>[Locale('en', 'US')],
        debugShowMaterialGrid: props['debugShowMaterialGrid'] ?? false,
        showPerformanceOverlay: props['showPerformanceOverlay'] ?? false,
        checkerboardRasterCacheImages:
            props['checkerboardRasterCacheImages'] ?? false,
        checkerboardOffscreenLayers:
            props['checkerboardOffscreenLayers'] ?? false,
        showSemanticsDebugger: props['showSemanticsDebugger'] ?? false,
        debugShowCheckedModeBanner: props['debugShowCheckedModeBanner'] ?? true,
        shortcuts: props['shortcuts'],
        actions: props['actions'],
        restorationScopeId: props['restorationScopeId'],
        scrollBehavior: props['scrollBehavior'],
        useInheritedMediaQuery: props['useInheritedMediaQuery'] ?? false,
      ),
  'MaterialApp.router': (props) => MaterialApp.router(
        key: props['key'],
        scaffoldMessengerKey: props['scaffoldMessengerKey'],
        routeInformationProvider: props['routeInformationProvider'],
        routeInformationParser: props['routeInformationParser'],
        routerDelegate: props['routerDelegate'],
        routerConfig: props['routerConfig'],
        backButtonDispatcher: props['backButtonDispatcher'],
        builder: props['builder'],
        title: props['title'] ?? '',
        onGenerateTitle: props['onGenerateTitle'],
        color: props['color'],
        theme: props['theme'],
        darkTheme: props['darkTheme'],
        highContrastTheme: props['highContrastTheme'],
        highContrastDarkTheme: props['highContrastDarkTheme'],
        themeMode: props['themeMode'] ?? ThemeMode.system,
        locale: props['locale'],
        localizationsDelegates: props['localizationsDelegates'],
        localeListResolutionCallback: props['localeListResolutionCallback'],
        localeResolutionCallback: props['localeResolutionCallback'],
        supportedLocales:
            props['supportedLocales'] ?? const <Locale>[Locale('en', 'US')],
        debugShowMaterialGrid: props['debugShowMaterialGrid'] ?? false,
        showPerformanceOverlay: props['showPerformanceOverlay'] ?? false,
        checkerboardRasterCacheImages:
            props['checkerboardRasterCacheImages'] ?? false,
        checkerboardOffscreenLayers:
            props['checkerboardOffscreenLayers'] ?? false,
        showSemanticsDebugger: props['showSemanticsDebugger'] ?? false,
        debugShowCheckedModeBanner: props['debugShowCheckedModeBanner'] ?? true,
        shortcuts: props['shortcuts'],
        actions: props['actions'],
        restorationScopeId: props['restorationScopeId'],
        scrollBehavior: props['scrollBehavior'],
        useInheritedMediaQuery: props['useInheritedMediaQuery'] ?? false,
      ),
  'MaterialApp.createMaterialHeroController': (props) =>
      MaterialApp.createMaterialHeroController(),
  'MaterialScrollBehavior': (props) => MaterialScrollBehavior(
        androidOverscrollIndicator: props['androidOverscrollIndicator'],
      ),
  'ThemeMode.system': ThemeMode.system,
  'ThemeMode.light': ThemeMode.light,
  'ThemeMode.dark': ThemeMode.dark,
  'ThemeMode.values': ThemeMode.values,
  'Icons.ten_k': Icons.ten_k,
  'Icons.ten_k_sharp': Icons.ten_k_sharp,
  'Icons.ten_k_rounded': Icons.ten_k_rounded,
  'Icons.ten_k_outlined': Icons.ten_k_outlined,
  'Icons.ten_mp': Icons.ten_mp,
  'Icons.ten_mp_sharp': Icons.ten_mp_sharp,
  'Icons.ten_mp_rounded': Icons.ten_mp_rounded,
  'Icons.ten_mp_outlined': Icons.ten_mp_outlined,
  'Icons.eleven_mp': Icons.eleven_mp,
  'Icons.eleven_mp_sharp': Icons.eleven_mp_sharp,
  'Icons.eleven_mp_rounded': Icons.eleven_mp_rounded,
  'Icons.eleven_mp_outlined': Icons.eleven_mp_outlined,
  'Icons.onetwothree': Icons.onetwothree,
  'Icons.onetwothree_sharp': Icons.onetwothree_sharp,
  'Icons.onetwothree_rounded': Icons.onetwothree_rounded,
  'Icons.onetwothree_outlined': Icons.onetwothree_outlined,
  'Icons.twelve_mp': Icons.twelve_mp,
  'Icons.twelve_mp_sharp': Icons.twelve_mp_sharp,
  'Icons.twelve_mp_rounded': Icons.twelve_mp_rounded,
  'Icons.twelve_mp_outlined': Icons.twelve_mp_outlined,
  'Icons.thirteen_mp': Icons.thirteen_mp,
  'Icons.thirteen_mp_sharp': Icons.thirteen_mp_sharp,
  'Icons.thirteen_mp_rounded': Icons.thirteen_mp_rounded,
  'Icons.thirteen_mp_outlined': Icons.thirteen_mp_outlined,
  'Icons.fourteen_mp': Icons.fourteen_mp,
  'Icons.fourteen_mp_sharp': Icons.fourteen_mp_sharp,
  'Icons.fourteen_mp_rounded': Icons.fourteen_mp_rounded,
  'Icons.fourteen_mp_outlined': Icons.fourteen_mp_outlined,
  'Icons.fifteen_mp': Icons.fifteen_mp,
  'Icons.fifteen_mp_sharp': Icons.fifteen_mp_sharp,
  'Icons.fifteen_mp_rounded': Icons.fifteen_mp_rounded,
  'Icons.fifteen_mp_outlined': Icons.fifteen_mp_outlined,
  'Icons.sixteen_mp': Icons.sixteen_mp,
  'Icons.sixteen_mp_sharp': Icons.sixteen_mp_sharp,
  'Icons.sixteen_mp_rounded': Icons.sixteen_mp_rounded,
  'Icons.sixteen_mp_outlined': Icons.sixteen_mp_outlined,
  'Icons.seventeen_mp': Icons.seventeen_mp,
  'Icons.seventeen_mp_sharp': Icons.seventeen_mp_sharp,
  'Icons.seventeen_mp_rounded': Icons.seventeen_mp_rounded,
  'Icons.seventeen_mp_outlined': Icons.seventeen_mp_outlined,
  'Icons.eighteen_up_rating': Icons.eighteen_up_rating,
  'Icons.eighteen_up_rating_sharp': Icons.eighteen_up_rating_sharp,
  'Icons.eighteen_up_rating_rounded': Icons.eighteen_up_rating_rounded,
  'Icons.eighteen_up_rating_outlined': Icons.eighteen_up_rating_outlined,
  'Icons.eighteen_mp': Icons.eighteen_mp,
  'Icons.eighteen_mp_sharp': Icons.eighteen_mp_sharp,
  'Icons.eighteen_mp_rounded': Icons.eighteen_mp_rounded,
  'Icons.eighteen_mp_outlined': Icons.eighteen_mp_outlined,
  'Icons.nineteen_mp': Icons.nineteen_mp,
  'Icons.nineteen_mp_sharp': Icons.nineteen_mp_sharp,
  'Icons.nineteen_mp_rounded': Icons.nineteen_mp_rounded,
  'Icons.nineteen_mp_outlined': Icons.nineteen_mp_outlined,
  'Icons.one_k': Icons.one_k,
  'Icons.one_k_sharp': Icons.one_k_sharp,
  'Icons.one_k_rounded': Icons.one_k_rounded,
  'Icons.one_k_outlined': Icons.one_k_outlined,
  'Icons.one_k_plus': Icons.one_k_plus,
  'Icons.one_k_plus_sharp': Icons.one_k_plus_sharp,
  'Icons.one_k_plus_rounded': Icons.one_k_plus_rounded,
  'Icons.one_k_plus_outlined': Icons.one_k_plus_outlined,
  'Icons.one_x_mobiledata': Icons.one_x_mobiledata,
  'Icons.one_x_mobiledata_sharp': Icons.one_x_mobiledata_sharp,
  'Icons.one_x_mobiledata_rounded': Icons.one_x_mobiledata_rounded,
  'Icons.one_x_mobiledata_outlined': Icons.one_x_mobiledata_outlined,
  'Icons.twenty_mp': Icons.twenty_mp,
  'Icons.twenty_mp_sharp': Icons.twenty_mp_sharp,
  'Icons.twenty_mp_rounded': Icons.twenty_mp_rounded,
  'Icons.twenty_mp_outlined': Icons.twenty_mp_outlined,
  'Icons.twenty_one_mp': Icons.twenty_one_mp,
  'Icons.twenty_one_mp_sharp': Icons.twenty_one_mp_sharp,
  'Icons.twenty_one_mp_rounded': Icons.twenty_one_mp_rounded,
  'Icons.twenty_one_mp_outlined': Icons.twenty_one_mp_outlined,
  'Icons.twenty_two_mp': Icons.twenty_two_mp,
  'Icons.twenty_two_mp_sharp': Icons.twenty_two_mp_sharp,
  'Icons.twenty_two_mp_rounded': Icons.twenty_two_mp_rounded,
  'Icons.twenty_two_mp_outlined': Icons.twenty_two_mp_outlined,
  'Icons.twenty_three_mp': Icons.twenty_three_mp,
  'Icons.twenty_three_mp_sharp': Icons.twenty_three_mp_sharp,
  'Icons.twenty_three_mp_rounded': Icons.twenty_three_mp_rounded,
  'Icons.twenty_three_mp_outlined': Icons.twenty_three_mp_outlined,
  'Icons.twenty_four_mp': Icons.twenty_four_mp,
  'Icons.twenty_four_mp_sharp': Icons.twenty_four_mp_sharp,
  'Icons.twenty_four_mp_rounded': Icons.twenty_four_mp_rounded,
  'Icons.twenty_four_mp_outlined': Icons.twenty_four_mp_outlined,
  'Icons.two_k': Icons.two_k,
  'Icons.two_k_sharp': Icons.two_k_sharp,
  'Icons.two_k_rounded': Icons.two_k_rounded,
  'Icons.two_k_outlined': Icons.two_k_outlined,
  'Icons.two_k_plus': Icons.two_k_plus,
  'Icons.two_k_plus_sharp': Icons.two_k_plus_sharp,
  'Icons.two_k_plus_rounded': Icons.two_k_plus_rounded,
  'Icons.two_k_plus_outlined': Icons.two_k_plus_outlined,
  'Icons.two_mp': Icons.two_mp,
  'Icons.two_mp_sharp': Icons.two_mp_sharp,
  'Icons.two_mp_rounded': Icons.two_mp_rounded,
  'Icons.two_mp_outlined': Icons.two_mp_outlined,
  'Icons.thirty_fps': Icons.thirty_fps,
  'Icons.thirty_fps_sharp': Icons.thirty_fps_sharp,
  'Icons.thirty_fps_rounded': Icons.thirty_fps_rounded,
  'Icons.thirty_fps_outlined': Icons.thirty_fps_outlined,
  'Icons.thirty_fps_select': Icons.thirty_fps_select,
  'Icons.thirty_fps_select_sharp': Icons.thirty_fps_select_sharp,
  'Icons.thirty_fps_select_rounded': Icons.thirty_fps_select_rounded,
  'Icons.thirty_fps_select_outlined': Icons.thirty_fps_select_outlined,
  'Icons.threesixty': Icons.threesixty,
  'Icons.threesixty_sharp': Icons.threesixty_sharp,
  'Icons.threesixty_rounded': Icons.threesixty_rounded,
  'Icons.threesixty_outlined': Icons.threesixty_outlined,
  'Icons.threed_rotation': Icons.threed_rotation,
  'Icons.threed_rotation_sharp': Icons.threed_rotation_sharp,
  'Icons.threed_rotation_rounded': Icons.threed_rotation_rounded,
  'Icons.threed_rotation_outlined': Icons.threed_rotation_outlined,
  'Icons.three_g_mobiledata': Icons.three_g_mobiledata,
  'Icons.three_g_mobiledata_sharp': Icons.three_g_mobiledata_sharp,
  'Icons.three_g_mobiledata_rounded': Icons.three_g_mobiledata_rounded,
  'Icons.three_g_mobiledata_outlined': Icons.three_g_mobiledata_outlined,
  'Icons.three_k': Icons.three_k,
  'Icons.three_k_sharp': Icons.three_k_sharp,
  'Icons.three_k_rounded': Icons.three_k_rounded,
  'Icons.three_k_outlined': Icons.three_k_outlined,
  'Icons.three_k_plus': Icons.three_k_plus,
  'Icons.three_k_plus_sharp': Icons.three_k_plus_sharp,
  'Icons.three_k_plus_rounded': Icons.three_k_plus_rounded,
  'Icons.three_k_plus_outlined': Icons.three_k_plus_outlined,
  'Icons.three_mp': Icons.three_mp,
  'Icons.three_mp_sharp': Icons.three_mp_sharp,
  'Icons.three_mp_rounded': Icons.three_mp_rounded,
  'Icons.three_mp_outlined': Icons.three_mp_outlined,
  'Icons.three_p': Icons.three_p,
  'Icons.three_p_sharp': Icons.three_p_sharp,
  'Icons.three_p_rounded': Icons.three_p_rounded,
  'Icons.three_p_outlined': Icons.three_p_outlined,
  'Icons.four_g_mobiledata': Icons.four_g_mobiledata,
  'Icons.four_g_mobiledata_sharp': Icons.four_g_mobiledata_sharp,
  'Icons.four_g_mobiledata_rounded': Icons.four_g_mobiledata_rounded,
  'Icons.four_g_mobiledata_outlined': Icons.four_g_mobiledata_outlined,
  'Icons.four_g_plus_mobiledata': Icons.four_g_plus_mobiledata,
  'Icons.four_g_plus_mobiledata_sharp': Icons.four_g_plus_mobiledata_sharp,
  'Icons.four_g_plus_mobiledata_rounded': Icons.four_g_plus_mobiledata_rounded,
  'Icons.four_g_plus_mobiledata_outlined':
      Icons.four_g_plus_mobiledata_outlined,
  'Icons.four_k': Icons.four_k,
  'Icons.four_k_sharp': Icons.four_k_sharp,
  'Icons.four_k_rounded': Icons.four_k_rounded,
  'Icons.four_k_outlined': Icons.four_k_outlined,
  'Icons.four_k_plus': Icons.four_k_plus,
  'Icons.four_k_plus_sharp': Icons.four_k_plus_sharp,
  'Icons.four_k_plus_rounded': Icons.four_k_plus_rounded,
  'Icons.four_k_plus_outlined': Icons.four_k_plus_outlined,
  'Icons.four_mp': Icons.four_mp,
  'Icons.four_mp_sharp': Icons.four_mp_sharp,
  'Icons.four_mp_rounded': Icons.four_mp_rounded,
  'Icons.four_mp_outlined': Icons.four_mp_outlined,
  'Icons.five_g': Icons.five_g,
  'Icons.five_g_sharp': Icons.five_g_sharp,
  'Icons.five_g_rounded': Icons.five_g_rounded,
  'Icons.five_g_outlined': Icons.five_g_outlined,
  'Icons.five_k': Icons.five_k,
  'Icons.five_k_sharp': Icons.five_k_sharp,
  'Icons.five_k_rounded': Icons.five_k_rounded,
  'Icons.five_k_outlined': Icons.five_k_outlined,
  'Icons.five_k_plus': Icons.five_k_plus,
  'Icons.five_k_plus_sharp': Icons.five_k_plus_sharp,
  'Icons.five_k_plus_rounded': Icons.five_k_plus_rounded,
  'Icons.five_k_plus_outlined': Icons.five_k_plus_outlined,
  'Icons.five_mp': Icons.five_mp,
  'Icons.five_mp_sharp': Icons.five_mp_sharp,
  'Icons.five_mp_rounded': Icons.five_mp_rounded,
  'Icons.five_mp_outlined': Icons.five_mp_outlined,
  'Icons.sixty_fps': Icons.sixty_fps,
  'Icons.sixty_fps_sharp': Icons.sixty_fps_sharp,
  'Icons.sixty_fps_rounded': Icons.sixty_fps_rounded,
  'Icons.sixty_fps_outlined': Icons.sixty_fps_outlined,
  'Icons.sixty_fps_select': Icons.sixty_fps_select,
  'Icons.sixty_fps_select_sharp': Icons.sixty_fps_select_sharp,
  'Icons.sixty_fps_select_rounded': Icons.sixty_fps_select_rounded,
  'Icons.sixty_fps_select_outlined': Icons.sixty_fps_select_outlined,
  'Icons.six_ft_apart': Icons.six_ft_apart,
  'Icons.six_ft_apart_sharp': Icons.six_ft_apart_sharp,
  'Icons.six_ft_apart_rounded': Icons.six_ft_apart_rounded,
  'Icons.six_ft_apart_outlined': Icons.six_ft_apart_outlined,
  'Icons.six_k': Icons.six_k,
  'Icons.six_k_sharp': Icons.six_k_sharp,
  'Icons.six_k_rounded': Icons.six_k_rounded,
  'Icons.six_k_outlined': Icons.six_k_outlined,
  'Icons.six_k_plus': Icons.six_k_plus,
  'Icons.six_k_plus_sharp': Icons.six_k_plus_sharp,
  'Icons.six_k_plus_rounded': Icons.six_k_plus_rounded,
  'Icons.six_k_plus_outlined': Icons.six_k_plus_outlined,
  'Icons.six_mp': Icons.six_mp,
  'Icons.six_mp_sharp': Icons.six_mp_sharp,
  'Icons.six_mp_rounded': Icons.six_mp_rounded,
  'Icons.six_mp_outlined': Icons.six_mp_outlined,
  'Icons.seven_k': Icons.seven_k,
  'Icons.seven_k_sharp': Icons.seven_k_sharp,
  'Icons.seven_k_rounded': Icons.seven_k_rounded,
  'Icons.seven_k_outlined': Icons.seven_k_outlined,
  'Icons.seven_k_plus': Icons.seven_k_plus,
  'Icons.seven_k_plus_sharp': Icons.seven_k_plus_sharp,
  'Icons.seven_k_plus_rounded': Icons.seven_k_plus_rounded,
  'Icons.seven_k_plus_outlined': Icons.seven_k_plus_outlined,
  'Icons.seven_mp': Icons.seven_mp,
  'Icons.seven_mp_sharp': Icons.seven_mp_sharp,
  'Icons.seven_mp_rounded': Icons.seven_mp_rounded,
  'Icons.seven_mp_outlined': Icons.seven_mp_outlined,
  'Icons.eight_k': Icons.eight_k,
  'Icons.eight_k_sharp': Icons.eight_k_sharp,
  'Icons.eight_k_rounded': Icons.eight_k_rounded,
  'Icons.eight_k_outlined': Icons.eight_k_outlined,
  'Icons.eight_k_plus': Icons.eight_k_plus,
  'Icons.eight_k_plus_sharp': Icons.eight_k_plus_sharp,
  'Icons.eight_k_plus_rounded': Icons.eight_k_plus_rounded,
  'Icons.eight_k_plus_outlined': Icons.eight_k_plus_outlined,
  'Icons.eight_mp': Icons.eight_mp,
  'Icons.eight_mp_sharp': Icons.eight_mp_sharp,
  'Icons.eight_mp_rounded': Icons.eight_mp_rounded,
  'Icons.eight_mp_outlined': Icons.eight_mp_outlined,
  'Icons.nine_k': Icons.nine_k,
  'Icons.nine_k_sharp': Icons.nine_k_sharp,
  'Icons.nine_k_rounded': Icons.nine_k_rounded,
  'Icons.nine_k_outlined': Icons.nine_k_outlined,
  'Icons.nine_k_plus': Icons.nine_k_plus,
  'Icons.nine_k_plus_sharp': Icons.nine_k_plus_sharp,
  'Icons.nine_k_plus_rounded': Icons.nine_k_plus_rounded,
  'Icons.nine_k_plus_outlined': Icons.nine_k_plus_outlined,
  'Icons.nine_mp': Icons.nine_mp,
  'Icons.nine_mp_sharp': Icons.nine_mp_sharp,
  'Icons.nine_mp_rounded': Icons.nine_mp_rounded,
  'Icons.nine_mp_outlined': Icons.nine_mp_outlined,
  'Icons.abc': Icons.abc,
  'Icons.abc_sharp': Icons.abc_sharp,
  'Icons.abc_rounded': Icons.abc_rounded,
  'Icons.abc_outlined': Icons.abc_outlined,
  'Icons.ac_unit': Icons.ac_unit,
  'Icons.ac_unit_sharp': Icons.ac_unit_sharp,
  'Icons.ac_unit_rounded': Icons.ac_unit_rounded,
  'Icons.ac_unit_outlined': Icons.ac_unit_outlined,
  'Icons.access_alarm': Icons.access_alarm,
  'Icons.access_alarm_sharp': Icons.access_alarm_sharp,
  'Icons.access_alarm_rounded': Icons.access_alarm_rounded,
  'Icons.access_alarm_outlined': Icons.access_alarm_outlined,
  'Icons.access_alarms': Icons.access_alarms,
  'Icons.access_alarms_sharp': Icons.access_alarms_sharp,
  'Icons.access_alarms_rounded': Icons.access_alarms_rounded,
  'Icons.access_alarms_outlined': Icons.access_alarms_outlined,
  'Icons.access_time': Icons.access_time,
  'Icons.access_time_sharp': Icons.access_time_sharp,
  'Icons.access_time_rounded': Icons.access_time_rounded,
  'Icons.access_time_outlined': Icons.access_time_outlined,
  'Icons.access_time_filled': Icons.access_time_filled,
  'Icons.access_time_filled_sharp': Icons.access_time_filled_sharp,
  'Icons.access_time_filled_rounded': Icons.access_time_filled_rounded,
  'Icons.access_time_filled_outlined': Icons.access_time_filled_outlined,
  'Icons.accessibility': Icons.accessibility,
  'Icons.accessibility_sharp': Icons.accessibility_sharp,
  'Icons.accessibility_rounded': Icons.accessibility_rounded,
  'Icons.accessibility_outlined': Icons.accessibility_outlined,
  'Icons.accessibility_new': Icons.accessibility_new,
  'Icons.accessibility_new_sharp': Icons.accessibility_new_sharp,
  'Icons.accessibility_new_rounded': Icons.accessibility_new_rounded,
  'Icons.accessibility_new_outlined': Icons.accessibility_new_outlined,
  'Icons.accessible': Icons.accessible,
  'Icons.accessible_sharp': Icons.accessible_sharp,
  'Icons.accessible_rounded': Icons.accessible_rounded,
  'Icons.accessible_outlined': Icons.accessible_outlined,
  'Icons.accessible_forward': Icons.accessible_forward,
  'Icons.accessible_forward_sharp': Icons.accessible_forward_sharp,
  'Icons.accessible_forward_rounded': Icons.accessible_forward_rounded,
  'Icons.accessible_forward_outlined': Icons.accessible_forward_outlined,
  'Icons.account_balance': Icons.account_balance,
  'Icons.account_balance_sharp': Icons.account_balance_sharp,
  'Icons.account_balance_rounded': Icons.account_balance_rounded,
  'Icons.account_balance_outlined': Icons.account_balance_outlined,
  'Icons.account_balance_wallet': Icons.account_balance_wallet,
  'Icons.account_balance_wallet_sharp': Icons.account_balance_wallet_sharp,
  'Icons.account_balance_wallet_rounded': Icons.account_balance_wallet_rounded,
  'Icons.account_balance_wallet_outlined':
      Icons.account_balance_wallet_outlined,
  'Icons.account_box': Icons.account_box,
  'Icons.account_box_sharp': Icons.account_box_sharp,
  'Icons.account_box_rounded': Icons.account_box_rounded,
  'Icons.account_box_outlined': Icons.account_box_outlined,
  'Icons.account_circle': Icons.account_circle,
  'Icons.account_circle_sharp': Icons.account_circle_sharp,
  'Icons.account_circle_rounded': Icons.account_circle_rounded,
  'Icons.account_circle_outlined': Icons.account_circle_outlined,
  'Icons.account_tree': Icons.account_tree,
  'Icons.account_tree_sharp': Icons.account_tree_sharp,
  'Icons.account_tree_rounded': Icons.account_tree_rounded,
  'Icons.account_tree_outlined': Icons.account_tree_outlined,
  'Icons.ad_units': Icons.ad_units,
  'Icons.ad_units_sharp': Icons.ad_units_sharp,
  'Icons.ad_units_rounded': Icons.ad_units_rounded,
  'Icons.ad_units_outlined': Icons.ad_units_outlined,
  'Icons.adb': Icons.adb,
  'Icons.adb_sharp': Icons.adb_sharp,
  'Icons.adb_rounded': Icons.adb_rounded,
  'Icons.adb_outlined': Icons.adb_outlined,
  'Icons.add': Icons.add,
  'Icons.add_sharp': Icons.add_sharp,
  'Icons.add_rounded': Icons.add_rounded,
  'Icons.add_outlined': Icons.add_outlined,
  'Icons.add_a_photo': Icons.add_a_photo,
  'Icons.add_a_photo_sharp': Icons.add_a_photo_sharp,
  'Icons.add_a_photo_rounded': Icons.add_a_photo_rounded,
  'Icons.add_a_photo_outlined': Icons.add_a_photo_outlined,
  'Icons.add_alarm': Icons.add_alarm,
  'Icons.add_alarm_sharp': Icons.add_alarm_sharp,
  'Icons.add_alarm_rounded': Icons.add_alarm_rounded,
  'Icons.add_alarm_outlined': Icons.add_alarm_outlined,
  'Icons.add_alert': Icons.add_alert,
  'Icons.add_alert_sharp': Icons.add_alert_sharp,
  'Icons.add_alert_rounded': Icons.add_alert_rounded,
  'Icons.add_alert_outlined': Icons.add_alert_outlined,
  'Icons.add_box': Icons.add_box,
  'Icons.add_box_sharp': Icons.add_box_sharp,
  'Icons.add_box_rounded': Icons.add_box_rounded,
  'Icons.add_box_outlined': Icons.add_box_outlined,
  'Icons.add_business': Icons.add_business,
  'Icons.add_business_sharp': Icons.add_business_sharp,
  'Icons.add_business_rounded': Icons.add_business_rounded,
  'Icons.add_business_outlined': Icons.add_business_outlined,
  'Icons.add_call': Icons.add_call,
  'Icons.add_card': Icons.add_card,
  'Icons.add_card_sharp': Icons.add_card_sharp,
  'Icons.add_card_rounded': Icons.add_card_rounded,
  'Icons.add_card_outlined': Icons.add_card_outlined,
  'Icons.add_chart': Icons.add_chart,
  'Icons.add_chart_sharp': Icons.add_chart_sharp,
  'Icons.add_chart_rounded': Icons.add_chart_rounded,
  'Icons.add_chart_outlined': Icons.add_chart_outlined,
  'Icons.add_circle': Icons.add_circle,
  'Icons.add_circle_sharp': Icons.add_circle_sharp,
  'Icons.add_circle_rounded': Icons.add_circle_rounded,
  'Icons.add_circle_outlined': Icons.add_circle_outlined,
  'Icons.add_circle_outline': Icons.add_circle_outline,
  'Icons.add_circle_outline_sharp': Icons.add_circle_outline_sharp,
  'Icons.add_circle_outline_rounded': Icons.add_circle_outline_rounded,
  'Icons.add_circle_outline_outlined': Icons.add_circle_outline_outlined,
  'Icons.add_comment': Icons.add_comment,
  'Icons.add_comment_sharp': Icons.add_comment_sharp,
  'Icons.add_comment_rounded': Icons.add_comment_rounded,
  'Icons.add_comment_outlined': Icons.add_comment_outlined,
  'Icons.add_home': Icons.add_home,
  'Icons.add_home_sharp': Icons.add_home_sharp,
  'Icons.add_home_rounded': Icons.add_home_rounded,
  'Icons.add_home_outlined': Icons.add_home_outlined,
  'Icons.add_home_work': Icons.add_home_work,
  'Icons.add_home_work_sharp': Icons.add_home_work_sharp,
  'Icons.add_home_work_rounded': Icons.add_home_work_rounded,
  'Icons.add_home_work_outlined': Icons.add_home_work_outlined,
  'Icons.add_ic_call': Icons.add_ic_call,
  'Icons.add_ic_call_sharp': Icons.add_ic_call_sharp,
  'Icons.add_ic_call_rounded': Icons.add_ic_call_rounded,
  'Icons.add_ic_call_outlined': Icons.add_ic_call_outlined,
  'Icons.add_link': Icons.add_link,
  'Icons.add_link_sharp': Icons.add_link_sharp,
  'Icons.add_link_rounded': Icons.add_link_rounded,
  'Icons.add_link_outlined': Icons.add_link_outlined,
  'Icons.add_location': Icons.add_location,
  'Icons.add_location_sharp': Icons.add_location_sharp,
  'Icons.add_location_rounded': Icons.add_location_rounded,
  'Icons.add_location_outlined': Icons.add_location_outlined,
  'Icons.add_location_alt': Icons.add_location_alt,
  'Icons.add_location_alt_sharp': Icons.add_location_alt_sharp,
  'Icons.add_location_alt_rounded': Icons.add_location_alt_rounded,
  'Icons.add_location_alt_outlined': Icons.add_location_alt_outlined,
  'Icons.add_moderator': Icons.add_moderator,
  'Icons.add_moderator_sharp': Icons.add_moderator_sharp,
  'Icons.add_moderator_rounded': Icons.add_moderator_rounded,
  'Icons.add_moderator_outlined': Icons.add_moderator_outlined,
  'Icons.add_photo_alternate': Icons.add_photo_alternate,
  'Icons.add_photo_alternate_sharp': Icons.add_photo_alternate_sharp,
  'Icons.add_photo_alternate_rounded': Icons.add_photo_alternate_rounded,
  'Icons.add_photo_alternate_outlined': Icons.add_photo_alternate_outlined,
  'Icons.add_reaction': Icons.add_reaction,
  'Icons.add_reaction_sharp': Icons.add_reaction_sharp,
  'Icons.add_reaction_rounded': Icons.add_reaction_rounded,
  'Icons.add_reaction_outlined': Icons.add_reaction_outlined,
  'Icons.add_road': Icons.add_road,
  'Icons.add_road_sharp': Icons.add_road_sharp,
  'Icons.add_road_rounded': Icons.add_road_rounded,
  'Icons.add_road_outlined': Icons.add_road_outlined,
  'Icons.add_shopping_cart': Icons.add_shopping_cart,
  'Icons.add_shopping_cart_sharp': Icons.add_shopping_cart_sharp,
  'Icons.add_shopping_cart_rounded': Icons.add_shopping_cart_rounded,
  'Icons.add_shopping_cart_outlined': Icons.add_shopping_cart_outlined,
  'Icons.add_task': Icons.add_task,
  'Icons.add_task_sharp': Icons.add_task_sharp,
  'Icons.add_task_rounded': Icons.add_task_rounded,
  'Icons.add_task_outlined': Icons.add_task_outlined,
  'Icons.add_to_drive': Icons.add_to_drive,
  'Icons.add_to_drive_sharp': Icons.add_to_drive_sharp,
  'Icons.add_to_drive_rounded': Icons.add_to_drive_rounded,
  'Icons.add_to_drive_outlined': Icons.add_to_drive_outlined,
  'Icons.add_to_home_screen': Icons.add_to_home_screen,
  'Icons.add_to_home_screen_sharp': Icons.add_to_home_screen_sharp,
  'Icons.add_to_home_screen_rounded': Icons.add_to_home_screen_rounded,
  'Icons.add_to_home_screen_outlined': Icons.add_to_home_screen_outlined,
  'Icons.add_to_photos': Icons.add_to_photos,
  'Icons.add_to_photos_sharp': Icons.add_to_photos_sharp,
  'Icons.add_to_photos_rounded': Icons.add_to_photos_rounded,
  'Icons.add_to_photos_outlined': Icons.add_to_photos_outlined,
  'Icons.add_to_queue': Icons.add_to_queue,
  'Icons.add_to_queue_sharp': Icons.add_to_queue_sharp,
  'Icons.add_to_queue_rounded': Icons.add_to_queue_rounded,
  'Icons.add_to_queue_outlined': Icons.add_to_queue_outlined,
  'Icons.addchart': Icons.addchart,
  'Icons.addchart_sharp': Icons.addchart_sharp,
  'Icons.addchart_rounded': Icons.addchart_rounded,
  'Icons.addchart_outlined': Icons.addchart_outlined,
  'Icons.adf_scanner': Icons.adf_scanner,
  'Icons.adf_scanner_sharp': Icons.adf_scanner_sharp,
  'Icons.adf_scanner_rounded': Icons.adf_scanner_rounded,
  'Icons.adf_scanner_outlined': Icons.adf_scanner_outlined,
  'Icons.adjust': Icons.adjust,
  'Icons.adjust_sharp': Icons.adjust_sharp,
  'Icons.adjust_rounded': Icons.adjust_rounded,
  'Icons.adjust_outlined': Icons.adjust_outlined,
  'Icons.admin_panel_settings': Icons.admin_panel_settings,
  'Icons.admin_panel_settings_sharp': Icons.admin_panel_settings_sharp,
  'Icons.admin_panel_settings_rounded': Icons.admin_panel_settings_rounded,
  'Icons.admin_panel_settings_outlined': Icons.admin_panel_settings_outlined,
  'Icons.adobe': Icons.adobe,
  'Icons.adobe_sharp': Icons.adobe_sharp,
  'Icons.adobe_rounded': Icons.adobe_rounded,
  'Icons.adobe_outlined': Icons.adobe_outlined,
  'Icons.ads_click': Icons.ads_click,
  'Icons.ads_click_sharp': Icons.ads_click_sharp,
  'Icons.ads_click_rounded': Icons.ads_click_rounded,
  'Icons.ads_click_outlined': Icons.ads_click_outlined,
  'Icons.agriculture': Icons.agriculture,
  'Icons.agriculture_sharp': Icons.agriculture_sharp,
  'Icons.agriculture_rounded': Icons.agriculture_rounded,
  'Icons.agriculture_outlined': Icons.agriculture_outlined,
  'Icons.air': Icons.air,
  'Icons.air_sharp': Icons.air_sharp,
  'Icons.air_rounded': Icons.air_rounded,
  'Icons.air_outlined': Icons.air_outlined,
  'Icons.airline_seat_flat': Icons.airline_seat_flat,
  'Icons.airline_seat_flat_sharp': Icons.airline_seat_flat_sharp,
  'Icons.airline_seat_flat_rounded': Icons.airline_seat_flat_rounded,
  'Icons.airline_seat_flat_outlined': Icons.airline_seat_flat_outlined,
  'Icons.airline_seat_flat_angled': Icons.airline_seat_flat_angled,
  'Icons.airline_seat_flat_angled_sharp': Icons.airline_seat_flat_angled_sharp,
  'Icons.airline_seat_flat_angled_rounded':
      Icons.airline_seat_flat_angled_rounded,
  'Icons.airline_seat_flat_angled_outlined':
      Icons.airline_seat_flat_angled_outlined,
  'Icons.airline_seat_individual_suite': Icons.airline_seat_individual_suite,
  'Icons.airline_seat_individual_suite_sharp':
      Icons.airline_seat_individual_suite_sharp,
  'Icons.airline_seat_individual_suite_rounded':
      Icons.airline_seat_individual_suite_rounded,
  'Icons.airline_seat_individual_suite_outlined':
      Icons.airline_seat_individual_suite_outlined,
  'Icons.airline_seat_legroom_extra': Icons.airline_seat_legroom_extra,
  'Icons.airline_seat_legroom_extra_sharp':
      Icons.airline_seat_legroom_extra_sharp,
  'Icons.airline_seat_legroom_extra_rounded':
      Icons.airline_seat_legroom_extra_rounded,
  'Icons.airline_seat_legroom_extra_outlined':
      Icons.airline_seat_legroom_extra_outlined,
  'Icons.airline_seat_legroom_normal': Icons.airline_seat_legroom_normal,
  'Icons.airline_seat_legroom_normal_sharp':
      Icons.airline_seat_legroom_normal_sharp,
  'Icons.airline_seat_legroom_normal_rounded':
      Icons.airline_seat_legroom_normal_rounded,
  'Icons.airline_seat_legroom_normal_outlined':
      Icons.airline_seat_legroom_normal_outlined,
  'Icons.airline_seat_legroom_reduced': Icons.airline_seat_legroom_reduced,
  'Icons.airline_seat_legroom_reduced_sharp':
      Icons.airline_seat_legroom_reduced_sharp,
  'Icons.airline_seat_legroom_reduced_rounded':
      Icons.airline_seat_legroom_reduced_rounded,
  'Icons.airline_seat_legroom_reduced_outlined':
      Icons.airline_seat_legroom_reduced_outlined,
  'Icons.airline_seat_recline_extra': Icons.airline_seat_recline_extra,
  'Icons.airline_seat_recline_extra_sharp':
      Icons.airline_seat_recline_extra_sharp,
  'Icons.airline_seat_recline_extra_rounded':
      Icons.airline_seat_recline_extra_rounded,
  'Icons.airline_seat_recline_extra_outlined':
      Icons.airline_seat_recline_extra_outlined,
  'Icons.airline_seat_recline_normal': Icons.airline_seat_recline_normal,
  'Icons.airline_seat_recline_normal_sharp':
      Icons.airline_seat_recline_normal_sharp,
  'Icons.airline_seat_recline_normal_rounded':
      Icons.airline_seat_recline_normal_rounded,
  'Icons.airline_seat_recline_normal_outlined':
      Icons.airline_seat_recline_normal_outlined,
  'Icons.airline_stops': Icons.airline_stops,
  'Icons.airline_stops_sharp': Icons.airline_stops_sharp,
  'Icons.airline_stops_rounded': Icons.airline_stops_rounded,
  'Icons.airline_stops_outlined': Icons.airline_stops_outlined,
  'Icons.airlines': Icons.airlines,
  'Icons.airlines_sharp': Icons.airlines_sharp,
  'Icons.airlines_rounded': Icons.airlines_rounded,
  'Icons.airlines_outlined': Icons.airlines_outlined,
  'Icons.airplane_ticket': Icons.airplane_ticket,
  'Icons.airplane_ticket_sharp': Icons.airplane_ticket_sharp,
  'Icons.airplane_ticket_rounded': Icons.airplane_ticket_rounded,
  'Icons.airplane_ticket_outlined': Icons.airplane_ticket_outlined,
  'Icons.airplanemode_active': Icons.airplanemode_active,
  'Icons.airplanemode_active_sharp': Icons.airplanemode_active_sharp,
  'Icons.airplanemode_active_rounded': Icons.airplanemode_active_rounded,
  'Icons.airplanemode_active_outlined': Icons.airplanemode_active_outlined,
  'Icons.airplanemode_inactive': Icons.airplanemode_inactive,
  'Icons.airplanemode_inactive_sharp': Icons.airplanemode_inactive_sharp,
  'Icons.airplanemode_inactive_rounded': Icons.airplanemode_inactive_rounded,
  'Icons.airplanemode_inactive_outlined': Icons.airplanemode_inactive_outlined,
  'Icons.airplanemode_off': Icons.airplanemode_off,
  'Icons.airplanemode_off_sharp': Icons.airplanemode_off_sharp,
  'Icons.airplanemode_off_rounded': Icons.airplanemode_off_rounded,
  'Icons.airplanemode_off_outlined': Icons.airplanemode_off_outlined,
  'Icons.airplanemode_on': Icons.airplanemode_on,
  'Icons.airplanemode_on_sharp': Icons.airplanemode_on_sharp,
  'Icons.airplanemode_on_rounded': Icons.airplanemode_on_rounded,
  'Icons.airplanemode_on_outlined': Icons.airplanemode_on_outlined,
  'Icons.airplay': Icons.airplay,
  'Icons.airplay_sharp': Icons.airplay_sharp,
  'Icons.airplay_rounded': Icons.airplay_rounded,
  'Icons.airplay_outlined': Icons.airplay_outlined,
  'Icons.airport_shuttle': Icons.airport_shuttle,
  'Icons.airport_shuttle_sharp': Icons.airport_shuttle_sharp,
  'Icons.airport_shuttle_rounded': Icons.airport_shuttle_rounded,
  'Icons.airport_shuttle_outlined': Icons.airport_shuttle_outlined,
  'Icons.alarm': Icons.alarm,
  'Icons.alarm_sharp': Icons.alarm_sharp,
  'Icons.alarm_rounded': Icons.alarm_rounded,
  'Icons.alarm_outlined': Icons.alarm_outlined,
  'Icons.alarm_add': Icons.alarm_add,
  'Icons.alarm_add_sharp': Icons.alarm_add_sharp,
  'Icons.alarm_add_rounded': Icons.alarm_add_rounded,
  'Icons.alarm_add_outlined': Icons.alarm_add_outlined,
  'Icons.alarm_off': Icons.alarm_off,
  'Icons.alarm_off_sharp': Icons.alarm_off_sharp,
  'Icons.alarm_off_rounded': Icons.alarm_off_rounded,
  'Icons.alarm_off_outlined': Icons.alarm_off_outlined,
  'Icons.alarm_on': Icons.alarm_on,
  'Icons.alarm_on_sharp': Icons.alarm_on_sharp,
  'Icons.alarm_on_rounded': Icons.alarm_on_rounded,
  'Icons.alarm_on_outlined': Icons.alarm_on_outlined,
  'Icons.album': Icons.album,
  'Icons.album_sharp': Icons.album_sharp,
  'Icons.album_rounded': Icons.album_rounded,
  'Icons.album_outlined': Icons.album_outlined,
  'Icons.align_horizontal_center': Icons.align_horizontal_center,
  'Icons.align_horizontal_center_sharp': Icons.align_horizontal_center_sharp,
  'Icons.align_horizontal_center_rounded':
      Icons.align_horizontal_center_rounded,
  'Icons.align_horizontal_center_outlined':
      Icons.align_horizontal_center_outlined,
  'Icons.align_horizontal_left': Icons.align_horizontal_left,
  'Icons.align_horizontal_left_sharp': Icons.align_horizontal_left_sharp,
  'Icons.align_horizontal_left_rounded': Icons.align_horizontal_left_rounded,
  'Icons.align_horizontal_left_outlined': Icons.align_horizontal_left_outlined,
  'Icons.align_horizontal_right': Icons.align_horizontal_right,
  'Icons.align_horizontal_right_sharp': Icons.align_horizontal_right_sharp,
  'Icons.align_horizontal_right_rounded': Icons.align_horizontal_right_rounded,
  'Icons.align_horizontal_right_outlined':
      Icons.align_horizontal_right_outlined,
  'Icons.align_vertical_bottom': Icons.align_vertical_bottom,
  'Icons.align_vertical_bottom_sharp': Icons.align_vertical_bottom_sharp,
  'Icons.align_vertical_bottom_rounded': Icons.align_vertical_bottom_rounded,
  'Icons.align_vertical_bottom_outlined': Icons.align_vertical_bottom_outlined,
  'Icons.align_vertical_center': Icons.align_vertical_center,
  'Icons.align_vertical_center_sharp': Icons.align_vertical_center_sharp,
  'Icons.align_vertical_center_rounded': Icons.align_vertical_center_rounded,
  'Icons.align_vertical_center_outlined': Icons.align_vertical_center_outlined,
  'Icons.align_vertical_top': Icons.align_vertical_top,
  'Icons.align_vertical_top_sharp': Icons.align_vertical_top_sharp,
  'Icons.align_vertical_top_rounded': Icons.align_vertical_top_rounded,
  'Icons.align_vertical_top_outlined': Icons.align_vertical_top_outlined,
  'Icons.all_inbox': Icons.all_inbox,
  'Icons.all_inbox_sharp': Icons.all_inbox_sharp,
  'Icons.all_inbox_rounded': Icons.all_inbox_rounded,
  'Icons.all_inbox_outlined': Icons.all_inbox_outlined,
  'Icons.all_inclusive': Icons.all_inclusive,
  'Icons.all_inclusive_sharp': Icons.all_inclusive_sharp,
  'Icons.all_inclusive_rounded': Icons.all_inclusive_rounded,
  'Icons.all_inclusive_outlined': Icons.all_inclusive_outlined,
  'Icons.all_out': Icons.all_out,
  'Icons.all_out_sharp': Icons.all_out_sharp,
  'Icons.all_out_rounded': Icons.all_out_rounded,
  'Icons.all_out_outlined': Icons.all_out_outlined,
  'Icons.alt_route': Icons.alt_route,
  'Icons.alt_route_sharp': Icons.alt_route_sharp,
  'Icons.alt_route_rounded': Icons.alt_route_rounded,
  'Icons.alt_route_outlined': Icons.alt_route_outlined,
  'Icons.alternate_email': Icons.alternate_email,
  'Icons.alternate_email_sharp': Icons.alternate_email_sharp,
  'Icons.alternate_email_rounded': Icons.alternate_email_rounded,
  'Icons.alternate_email_outlined': Icons.alternate_email_outlined,
  'Icons.amp_stories': Icons.amp_stories,
  'Icons.amp_stories_sharp': Icons.amp_stories_sharp,
  'Icons.amp_stories_rounded': Icons.amp_stories_rounded,
  'Icons.amp_stories_outlined': Icons.amp_stories_outlined,
  'Icons.analytics': Icons.analytics,
  'Icons.analytics_sharp': Icons.analytics_sharp,
  'Icons.analytics_rounded': Icons.analytics_rounded,
  'Icons.analytics_outlined': Icons.analytics_outlined,
  'Icons.anchor': Icons.anchor,
  'Icons.anchor_sharp': Icons.anchor_sharp,
  'Icons.anchor_rounded': Icons.anchor_rounded,
  'Icons.anchor_outlined': Icons.anchor_outlined,
  'Icons.android': Icons.android,
  'Icons.android_sharp': Icons.android_sharp,
  'Icons.android_rounded': Icons.android_rounded,
  'Icons.android_outlined': Icons.android_outlined,
  'Icons.animation': Icons.animation,
  'Icons.animation_sharp': Icons.animation_sharp,
  'Icons.animation_rounded': Icons.animation_rounded,
  'Icons.animation_outlined': Icons.animation_outlined,
  'Icons.announcement': Icons.announcement,
  'Icons.announcement_sharp': Icons.announcement_sharp,
  'Icons.announcement_rounded': Icons.announcement_rounded,
  'Icons.announcement_outlined': Icons.announcement_outlined,
  'Icons.aod': Icons.aod,
  'Icons.aod_sharp': Icons.aod_sharp,
  'Icons.aod_rounded': Icons.aod_rounded,
  'Icons.aod_outlined': Icons.aod_outlined,
  'Icons.apartment': Icons.apartment,
  'Icons.apartment_sharp': Icons.apartment_sharp,
  'Icons.apartment_rounded': Icons.apartment_rounded,
  'Icons.apartment_outlined': Icons.apartment_outlined,
  'Icons.api': Icons.api,
  'Icons.api_sharp': Icons.api_sharp,
  'Icons.api_rounded': Icons.api_rounded,
  'Icons.api_outlined': Icons.api_outlined,
  'Icons.app_blocking': Icons.app_blocking,
  'Icons.app_blocking_sharp': Icons.app_blocking_sharp,
  'Icons.app_blocking_rounded': Icons.app_blocking_rounded,
  'Icons.app_blocking_outlined': Icons.app_blocking_outlined,
  'Icons.app_registration': Icons.app_registration,
  'Icons.app_registration_sharp': Icons.app_registration_sharp,
  'Icons.app_registration_rounded': Icons.app_registration_rounded,
  'Icons.app_registration_outlined': Icons.app_registration_outlined,
  'Icons.app_settings_alt': Icons.app_settings_alt,
  'Icons.app_settings_alt_sharp': Icons.app_settings_alt_sharp,
  'Icons.app_settings_alt_rounded': Icons.app_settings_alt_rounded,
  'Icons.app_settings_alt_outlined': Icons.app_settings_alt_outlined,
  'Icons.app_shortcut': Icons.app_shortcut,
  'Icons.app_shortcut_sharp': Icons.app_shortcut_sharp,
  'Icons.app_shortcut_rounded': Icons.app_shortcut_rounded,
  'Icons.app_shortcut_outlined': Icons.app_shortcut_outlined,
  'Icons.apple': Icons.apple,
  'Icons.apple_sharp': Icons.apple_sharp,
  'Icons.apple_rounded': Icons.apple_rounded,
  'Icons.apple_outlined': Icons.apple_outlined,
  'Icons.approval': Icons.approval,
  'Icons.approval_sharp': Icons.approval_sharp,
  'Icons.approval_rounded': Icons.approval_rounded,
  'Icons.approval_outlined': Icons.approval_outlined,
  'Icons.apps': Icons.apps,
  'Icons.apps_sharp': Icons.apps_sharp,
  'Icons.apps_rounded': Icons.apps_rounded,
  'Icons.apps_outlined': Icons.apps_outlined,
  'Icons.apps_outage': Icons.apps_outage,
  'Icons.apps_outage_sharp': Icons.apps_outage_sharp,
  'Icons.apps_outage_rounded': Icons.apps_outage_rounded,
  'Icons.apps_outage_outlined': Icons.apps_outage_outlined,
  'Icons.architecture': Icons.architecture,
  'Icons.architecture_sharp': Icons.architecture_sharp,
  'Icons.architecture_rounded': Icons.architecture_rounded,
  'Icons.architecture_outlined': Icons.architecture_outlined,
  'Icons.archive': Icons.archive,
  'Icons.archive_sharp': Icons.archive_sharp,
  'Icons.archive_rounded': Icons.archive_rounded,
  'Icons.archive_outlined': Icons.archive_outlined,
  'Icons.area_chart': Icons.area_chart,
  'Icons.area_chart_sharp': Icons.area_chart_sharp,
  'Icons.area_chart_rounded': Icons.area_chart_rounded,
  'Icons.area_chart_outlined': Icons.area_chart_outlined,
  'Icons.arrow_back': Icons.arrow_back,
  'Icons.arrow_back_sharp': Icons.arrow_back_sharp,
  'Icons.arrow_back_rounded': Icons.arrow_back_rounded,
  'Icons.arrow_back_outlined': Icons.arrow_back_outlined,
  'Icons.arrow_back_ios': Icons.arrow_back_ios,
  'Icons.arrow_back_ios_sharp': Icons.arrow_back_ios_sharp,
  'Icons.arrow_back_ios_rounded': Icons.arrow_back_ios_rounded,
  'Icons.arrow_back_ios_outlined': Icons.arrow_back_ios_outlined,
  'Icons.arrow_back_ios_new': Icons.arrow_back_ios_new,
  'Icons.arrow_back_ios_new_sharp': Icons.arrow_back_ios_new_sharp,
  'Icons.arrow_back_ios_new_rounded': Icons.arrow_back_ios_new_rounded,
  'Icons.arrow_back_ios_new_outlined': Icons.arrow_back_ios_new_outlined,
  'Icons.arrow_circle_down': Icons.arrow_circle_down,
  'Icons.arrow_circle_down_sharp': Icons.arrow_circle_down_sharp,
  'Icons.arrow_circle_down_rounded': Icons.arrow_circle_down_rounded,
  'Icons.arrow_circle_down_outlined': Icons.arrow_circle_down_outlined,
  'Icons.arrow_circle_left': Icons.arrow_circle_left,
  'Icons.arrow_circle_left_sharp': Icons.arrow_circle_left_sharp,
  'Icons.arrow_circle_left_rounded': Icons.arrow_circle_left_rounded,
  'Icons.arrow_circle_left_outlined': Icons.arrow_circle_left_outlined,
  'Icons.arrow_circle_right': Icons.arrow_circle_right,
  'Icons.arrow_circle_right_sharp': Icons.arrow_circle_right_sharp,
  'Icons.arrow_circle_right_rounded': Icons.arrow_circle_right_rounded,
  'Icons.arrow_circle_right_outlined': Icons.arrow_circle_right_outlined,
  'Icons.arrow_circle_up': Icons.arrow_circle_up,
  'Icons.arrow_circle_up_sharp': Icons.arrow_circle_up_sharp,
  'Icons.arrow_circle_up_rounded': Icons.arrow_circle_up_rounded,
  'Icons.arrow_circle_up_outlined': Icons.arrow_circle_up_outlined,
  'Icons.arrow_downward': Icons.arrow_downward,
  'Icons.arrow_downward_sharp': Icons.arrow_downward_sharp,
  'Icons.arrow_downward_rounded': Icons.arrow_downward_rounded,
  'Icons.arrow_downward_outlined': Icons.arrow_downward_outlined,
  'Icons.arrow_drop_down': Icons.arrow_drop_down,
  'Icons.arrow_drop_down_sharp': Icons.arrow_drop_down_sharp,
  'Icons.arrow_drop_down_rounded': Icons.arrow_drop_down_rounded,
  'Icons.arrow_drop_down_outlined': Icons.arrow_drop_down_outlined,
  'Icons.arrow_drop_down_circle': Icons.arrow_drop_down_circle,
  'Icons.arrow_drop_down_circle_sharp': Icons.arrow_drop_down_circle_sharp,
  'Icons.arrow_drop_down_circle_rounded': Icons.arrow_drop_down_circle_rounded,
  'Icons.arrow_drop_down_circle_outlined':
      Icons.arrow_drop_down_circle_outlined,
  'Icons.arrow_drop_up': Icons.arrow_drop_up,
  'Icons.arrow_drop_up_sharp': Icons.arrow_drop_up_sharp,
  'Icons.arrow_drop_up_rounded': Icons.arrow_drop_up_rounded,
  'Icons.arrow_drop_up_outlined': Icons.arrow_drop_up_outlined,
  'Icons.arrow_forward': Icons.arrow_forward,
  'Icons.arrow_forward_sharp': Icons.arrow_forward_sharp,
  'Icons.arrow_forward_rounded': Icons.arrow_forward_rounded,
  'Icons.arrow_forward_outlined': Icons.arrow_forward_outlined,
  'Icons.arrow_forward_ios': Icons.arrow_forward_ios,
  'Icons.arrow_forward_ios_sharp': Icons.arrow_forward_ios_sharp,
  'Icons.arrow_forward_ios_rounded': Icons.arrow_forward_ios_rounded,
  'Icons.arrow_forward_ios_outlined': Icons.arrow_forward_ios_outlined,
  'Icons.arrow_left': Icons.arrow_left,
  'Icons.arrow_left_sharp': Icons.arrow_left_sharp,
  'Icons.arrow_left_rounded': Icons.arrow_left_rounded,
  'Icons.arrow_left_outlined': Icons.arrow_left_outlined,
  'Icons.arrow_right': Icons.arrow_right,
  'Icons.arrow_right_sharp': Icons.arrow_right_sharp,
  'Icons.arrow_right_rounded': Icons.arrow_right_rounded,
  'Icons.arrow_right_outlined': Icons.arrow_right_outlined,
  'Icons.arrow_right_alt': Icons.arrow_right_alt,
  'Icons.arrow_right_alt_sharp': Icons.arrow_right_alt_sharp,
  'Icons.arrow_right_alt_rounded': Icons.arrow_right_alt_rounded,
  'Icons.arrow_right_alt_outlined': Icons.arrow_right_alt_outlined,
  'Icons.arrow_upward': Icons.arrow_upward,
  'Icons.arrow_upward_sharp': Icons.arrow_upward_sharp,
  'Icons.arrow_upward_rounded': Icons.arrow_upward_rounded,
  'Icons.arrow_upward_outlined': Icons.arrow_upward_outlined,
  'Icons.art_track': Icons.art_track,
  'Icons.art_track_sharp': Icons.art_track_sharp,
  'Icons.art_track_rounded': Icons.art_track_rounded,
  'Icons.art_track_outlined': Icons.art_track_outlined,
  'Icons.article': Icons.article,
  'Icons.article_sharp': Icons.article_sharp,
  'Icons.article_rounded': Icons.article_rounded,
  'Icons.article_outlined': Icons.article_outlined,
  'Icons.aspect_ratio': Icons.aspect_ratio,
  'Icons.aspect_ratio_sharp': Icons.aspect_ratio_sharp,
  'Icons.aspect_ratio_rounded': Icons.aspect_ratio_rounded,
  'Icons.aspect_ratio_outlined': Icons.aspect_ratio_outlined,
  'Icons.assessment': Icons.assessment,
  'Icons.assessment_sharp': Icons.assessment_sharp,
  'Icons.assessment_rounded': Icons.assessment_rounded,
  'Icons.assessment_outlined': Icons.assessment_outlined,
  'Icons.assignment': Icons.assignment,
  'Icons.assignment_sharp': Icons.assignment_sharp,
  'Icons.assignment_rounded': Icons.assignment_rounded,
  'Icons.assignment_outlined': Icons.assignment_outlined,
  'Icons.assignment_ind': Icons.assignment_ind,
  'Icons.assignment_ind_sharp': Icons.assignment_ind_sharp,
  'Icons.assignment_ind_rounded': Icons.assignment_ind_rounded,
  'Icons.assignment_ind_outlined': Icons.assignment_ind_outlined,
  'Icons.assignment_late': Icons.assignment_late,
  'Icons.assignment_late_sharp': Icons.assignment_late_sharp,
  'Icons.assignment_late_rounded': Icons.assignment_late_rounded,
  'Icons.assignment_late_outlined': Icons.assignment_late_outlined,
  'Icons.assignment_return': Icons.assignment_return,
  'Icons.assignment_return_sharp': Icons.assignment_return_sharp,
  'Icons.assignment_return_rounded': Icons.assignment_return_rounded,
  'Icons.assignment_return_outlined': Icons.assignment_return_outlined,
  'Icons.assignment_returned': Icons.assignment_returned,
  'Icons.assignment_returned_sharp': Icons.assignment_returned_sharp,
  'Icons.assignment_returned_rounded': Icons.assignment_returned_rounded,
  'Icons.assignment_returned_outlined': Icons.assignment_returned_outlined,
  'Icons.assignment_turned_in': Icons.assignment_turned_in,
  'Icons.assignment_turned_in_sharp': Icons.assignment_turned_in_sharp,
  'Icons.assignment_turned_in_rounded': Icons.assignment_turned_in_rounded,
  'Icons.assignment_turned_in_outlined': Icons.assignment_turned_in_outlined,
  'Icons.assistant': Icons.assistant,
  'Icons.assistant_sharp': Icons.assistant_sharp,
  'Icons.assistant_rounded': Icons.assistant_rounded,
  'Icons.assistant_outlined': Icons.assistant_outlined,
  'Icons.assistant_direction': Icons.assistant_direction,
  'Icons.assistant_direction_sharp': Icons.assistant_direction_sharp,
  'Icons.assistant_direction_rounded': Icons.assistant_direction_rounded,
  'Icons.assistant_direction_outlined': Icons.assistant_direction_outlined,
  'Icons.assistant_navigation': Icons.assistant_navigation,
  'Icons.assistant_photo': Icons.assistant_photo,
  'Icons.assistant_photo_sharp': Icons.assistant_photo_sharp,
  'Icons.assistant_photo_rounded': Icons.assistant_photo_rounded,
  'Icons.assistant_photo_outlined': Icons.assistant_photo_outlined,
  'Icons.assured_workload': Icons.assured_workload,
  'Icons.assured_workload_sharp': Icons.assured_workload_sharp,
  'Icons.assured_workload_rounded': Icons.assured_workload_rounded,
  'Icons.assured_workload_outlined': Icons.assured_workload_outlined,
  'Icons.atm': Icons.atm,
  'Icons.atm_sharp': Icons.atm_sharp,
  'Icons.atm_rounded': Icons.atm_rounded,
  'Icons.atm_outlined': Icons.atm_outlined,
  'Icons.attach_email': Icons.attach_email,
  'Icons.attach_email_sharp': Icons.attach_email_sharp,
  'Icons.attach_email_rounded': Icons.attach_email_rounded,
  'Icons.attach_email_outlined': Icons.attach_email_outlined,
  'Icons.attach_file': Icons.attach_file,
  'Icons.attach_file_sharp': Icons.attach_file_sharp,
  'Icons.attach_file_rounded': Icons.attach_file_rounded,
  'Icons.attach_file_outlined': Icons.attach_file_outlined,
  'Icons.attach_money': Icons.attach_money,
  'Icons.attach_money_sharp': Icons.attach_money_sharp,
  'Icons.attach_money_rounded': Icons.attach_money_rounded,
  'Icons.attach_money_outlined': Icons.attach_money_outlined,
  'Icons.attachment': Icons.attachment,
  'Icons.attachment_sharp': Icons.attachment_sharp,
  'Icons.attachment_rounded': Icons.attachment_rounded,
  'Icons.attachment_outlined': Icons.attachment_outlined,
  'Icons.attractions': Icons.attractions,
  'Icons.attractions_sharp': Icons.attractions_sharp,
  'Icons.attractions_rounded': Icons.attractions_rounded,
  'Icons.attractions_outlined': Icons.attractions_outlined,
  'Icons.attribution': Icons.attribution,
  'Icons.attribution_sharp': Icons.attribution_sharp,
  'Icons.attribution_rounded': Icons.attribution_rounded,
  'Icons.attribution_outlined': Icons.attribution_outlined,
  'Icons.audio_file': Icons.audio_file,
  'Icons.audio_file_sharp': Icons.audio_file_sharp,
  'Icons.audio_file_rounded': Icons.audio_file_rounded,
  'Icons.audio_file_outlined': Icons.audio_file_outlined,
  'Icons.audiotrack': Icons.audiotrack,
  'Icons.audiotrack_sharp': Icons.audiotrack_sharp,
  'Icons.audiotrack_rounded': Icons.audiotrack_rounded,
  'Icons.audiotrack_outlined': Icons.audiotrack_outlined,
  'Icons.auto_awesome': Icons.auto_awesome,
  'Icons.auto_awesome_sharp': Icons.auto_awesome_sharp,
  'Icons.auto_awesome_rounded': Icons.auto_awesome_rounded,
  'Icons.auto_awesome_outlined': Icons.auto_awesome_outlined,
  'Icons.auto_awesome_mosaic': Icons.auto_awesome_mosaic,
  'Icons.auto_awesome_mosaic_sharp': Icons.auto_awesome_mosaic_sharp,
  'Icons.auto_awesome_mosaic_rounded': Icons.auto_awesome_mosaic_rounded,
  'Icons.auto_awesome_mosaic_outlined': Icons.auto_awesome_mosaic_outlined,
  'Icons.auto_awesome_motion': Icons.auto_awesome_motion,
  'Icons.auto_awesome_motion_sharp': Icons.auto_awesome_motion_sharp,
  'Icons.auto_awesome_motion_rounded': Icons.auto_awesome_motion_rounded,
  'Icons.auto_awesome_motion_outlined': Icons.auto_awesome_motion_outlined,
  'Icons.auto_delete': Icons.auto_delete,
  'Icons.auto_delete_sharp': Icons.auto_delete_sharp,
  'Icons.auto_delete_rounded': Icons.auto_delete_rounded,
  'Icons.auto_delete_outlined': Icons.auto_delete_outlined,
  'Icons.auto_fix_high': Icons.auto_fix_high,
  'Icons.auto_fix_high_sharp': Icons.auto_fix_high_sharp,
  'Icons.auto_fix_high_rounded': Icons.auto_fix_high_rounded,
  'Icons.auto_fix_high_outlined': Icons.auto_fix_high_outlined,
  'Icons.auto_fix_normal': Icons.auto_fix_normal,
  'Icons.auto_fix_normal_sharp': Icons.auto_fix_normal_sharp,
  'Icons.auto_fix_normal_rounded': Icons.auto_fix_normal_rounded,
  'Icons.auto_fix_normal_outlined': Icons.auto_fix_normal_outlined,
  'Icons.auto_fix_off': Icons.auto_fix_off,
  'Icons.auto_fix_off_sharp': Icons.auto_fix_off_sharp,
  'Icons.auto_fix_off_rounded': Icons.auto_fix_off_rounded,
  'Icons.auto_fix_off_outlined': Icons.auto_fix_off_outlined,
  'Icons.auto_graph': Icons.auto_graph,
  'Icons.auto_graph_sharp': Icons.auto_graph_sharp,
  'Icons.auto_graph_rounded': Icons.auto_graph_rounded,
  'Icons.auto_graph_outlined': Icons.auto_graph_outlined,
  'Icons.auto_mode': Icons.auto_mode,
  'Icons.auto_mode_sharp': Icons.auto_mode_sharp,
  'Icons.auto_mode_rounded': Icons.auto_mode_rounded,
  'Icons.auto_mode_outlined': Icons.auto_mode_outlined,
  'Icons.auto_stories': Icons.auto_stories,
  'Icons.auto_stories_sharp': Icons.auto_stories_sharp,
  'Icons.auto_stories_rounded': Icons.auto_stories_rounded,
  'Icons.auto_stories_outlined': Icons.auto_stories_outlined,
  'Icons.autofps_select': Icons.autofps_select,
  'Icons.autofps_select_sharp': Icons.autofps_select_sharp,
  'Icons.autofps_select_rounded': Icons.autofps_select_rounded,
  'Icons.autofps_select_outlined': Icons.autofps_select_outlined,
  'Icons.autorenew': Icons.autorenew,
  'Icons.autorenew_sharp': Icons.autorenew_sharp,
  'Icons.autorenew_rounded': Icons.autorenew_rounded,
  'Icons.autorenew_outlined': Icons.autorenew_outlined,
  'Icons.av_timer': Icons.av_timer,
  'Icons.av_timer_sharp': Icons.av_timer_sharp,
  'Icons.av_timer_rounded': Icons.av_timer_rounded,
  'Icons.av_timer_outlined': Icons.av_timer_outlined,
  'Icons.baby_changing_station': Icons.baby_changing_station,
  'Icons.baby_changing_station_sharp': Icons.baby_changing_station_sharp,
  'Icons.baby_changing_station_rounded': Icons.baby_changing_station_rounded,
  'Icons.baby_changing_station_outlined': Icons.baby_changing_station_outlined,
  'Icons.back_hand': Icons.back_hand,
  'Icons.back_hand_sharp': Icons.back_hand_sharp,
  'Icons.back_hand_rounded': Icons.back_hand_rounded,
  'Icons.back_hand_outlined': Icons.back_hand_outlined,
  'Icons.backpack': Icons.backpack,
  'Icons.backpack_sharp': Icons.backpack_sharp,
  'Icons.backpack_rounded': Icons.backpack_rounded,
  'Icons.backpack_outlined': Icons.backpack_outlined,
  'Icons.backspace': Icons.backspace,
  'Icons.backspace_sharp': Icons.backspace_sharp,
  'Icons.backspace_rounded': Icons.backspace_rounded,
  'Icons.backspace_outlined': Icons.backspace_outlined,
  'Icons.backup': Icons.backup,
  'Icons.backup_sharp': Icons.backup_sharp,
  'Icons.backup_rounded': Icons.backup_rounded,
  'Icons.backup_outlined': Icons.backup_outlined,
  'Icons.backup_table': Icons.backup_table,
  'Icons.backup_table_sharp': Icons.backup_table_sharp,
  'Icons.backup_table_rounded': Icons.backup_table_rounded,
  'Icons.backup_table_outlined': Icons.backup_table_outlined,
  'Icons.badge': Icons.badge,
  'Icons.badge_sharp': Icons.badge_sharp,
  'Icons.badge_rounded': Icons.badge_rounded,
  'Icons.badge_outlined': Icons.badge_outlined,
  'Icons.bakery_dining': Icons.bakery_dining,
  'Icons.bakery_dining_sharp': Icons.bakery_dining_sharp,
  'Icons.bakery_dining_rounded': Icons.bakery_dining_rounded,
  'Icons.bakery_dining_outlined': Icons.bakery_dining_outlined,
  'Icons.balance': Icons.balance,
  'Icons.balance_sharp': Icons.balance_sharp,
  'Icons.balance_rounded': Icons.balance_rounded,
  'Icons.balance_outlined': Icons.balance_outlined,
  'Icons.balcony': Icons.balcony,
  'Icons.balcony_sharp': Icons.balcony_sharp,
  'Icons.balcony_rounded': Icons.balcony_rounded,
  'Icons.balcony_outlined': Icons.balcony_outlined,
  'Icons.ballot': Icons.ballot,
  'Icons.ballot_sharp': Icons.ballot_sharp,
  'Icons.ballot_rounded': Icons.ballot_rounded,
  'Icons.ballot_outlined': Icons.ballot_outlined,
  'Icons.bar_chart': Icons.bar_chart,
  'Icons.bar_chart_sharp': Icons.bar_chart_sharp,
  'Icons.bar_chart_rounded': Icons.bar_chart_rounded,
  'Icons.bar_chart_outlined': Icons.bar_chart_outlined,
  'Icons.batch_prediction': Icons.batch_prediction,
  'Icons.batch_prediction_sharp': Icons.batch_prediction_sharp,
  'Icons.batch_prediction_rounded': Icons.batch_prediction_rounded,
  'Icons.batch_prediction_outlined': Icons.batch_prediction_outlined,
  'Icons.bathroom': Icons.bathroom,
  'Icons.bathroom_sharp': Icons.bathroom_sharp,
  'Icons.bathroom_rounded': Icons.bathroom_rounded,
  'Icons.bathroom_outlined': Icons.bathroom_outlined,
  'Icons.bathtub': Icons.bathtub,
  'Icons.bathtub_sharp': Icons.bathtub_sharp,
  'Icons.bathtub_rounded': Icons.bathtub_rounded,
  'Icons.bathtub_outlined': Icons.bathtub_outlined,
  'Icons.battery_0_bar': Icons.battery_0_bar,
  'Icons.battery_0_bar_sharp': Icons.battery_0_bar_sharp,
  'Icons.battery_0_bar_rounded': Icons.battery_0_bar_rounded,
  'Icons.battery_0_bar_outlined': Icons.battery_0_bar_outlined,
  'Icons.battery_1_bar': Icons.battery_1_bar,
  'Icons.battery_1_bar_sharp': Icons.battery_1_bar_sharp,
  'Icons.battery_1_bar_rounded': Icons.battery_1_bar_rounded,
  'Icons.battery_1_bar_outlined': Icons.battery_1_bar_outlined,
  'Icons.battery_2_bar': Icons.battery_2_bar,
  'Icons.battery_2_bar_sharp': Icons.battery_2_bar_sharp,
  'Icons.battery_2_bar_rounded': Icons.battery_2_bar_rounded,
  'Icons.battery_2_bar_outlined': Icons.battery_2_bar_outlined,
  'Icons.battery_3_bar': Icons.battery_3_bar,
  'Icons.battery_3_bar_sharp': Icons.battery_3_bar_sharp,
  'Icons.battery_3_bar_rounded': Icons.battery_3_bar_rounded,
  'Icons.battery_3_bar_outlined': Icons.battery_3_bar_outlined,
  'Icons.battery_4_bar': Icons.battery_4_bar,
  'Icons.battery_4_bar_sharp': Icons.battery_4_bar_sharp,
  'Icons.battery_4_bar_rounded': Icons.battery_4_bar_rounded,
  'Icons.battery_4_bar_outlined': Icons.battery_4_bar_outlined,
  'Icons.battery_5_bar': Icons.battery_5_bar,
  'Icons.battery_5_bar_sharp': Icons.battery_5_bar_sharp,
  'Icons.battery_5_bar_rounded': Icons.battery_5_bar_rounded,
  'Icons.battery_5_bar_outlined': Icons.battery_5_bar_outlined,
  'Icons.battery_6_bar': Icons.battery_6_bar,
  'Icons.battery_6_bar_sharp': Icons.battery_6_bar_sharp,
  'Icons.battery_6_bar_rounded': Icons.battery_6_bar_rounded,
  'Icons.battery_6_bar_outlined': Icons.battery_6_bar_outlined,
  'Icons.battery_alert': Icons.battery_alert,
  'Icons.battery_alert_sharp': Icons.battery_alert_sharp,
  'Icons.battery_alert_rounded': Icons.battery_alert_rounded,
  'Icons.battery_alert_outlined': Icons.battery_alert_outlined,
  'Icons.battery_charging_full': Icons.battery_charging_full,
  'Icons.battery_charging_full_sharp': Icons.battery_charging_full_sharp,
  'Icons.battery_charging_full_rounded': Icons.battery_charging_full_rounded,
  'Icons.battery_charging_full_outlined': Icons.battery_charging_full_outlined,
  'Icons.battery_full': Icons.battery_full,
  'Icons.battery_full_sharp': Icons.battery_full_sharp,
  'Icons.battery_full_rounded': Icons.battery_full_rounded,
  'Icons.battery_full_outlined': Icons.battery_full_outlined,
  'Icons.battery_saver': Icons.battery_saver,
  'Icons.battery_saver_sharp': Icons.battery_saver_sharp,
  'Icons.battery_saver_rounded': Icons.battery_saver_rounded,
  'Icons.battery_saver_outlined': Icons.battery_saver_outlined,
  'Icons.battery_std': Icons.battery_std,
  'Icons.battery_std_sharp': Icons.battery_std_sharp,
  'Icons.battery_std_rounded': Icons.battery_std_rounded,
  'Icons.battery_std_outlined': Icons.battery_std_outlined,
  'Icons.battery_unknown': Icons.battery_unknown,
  'Icons.battery_unknown_sharp': Icons.battery_unknown_sharp,
  'Icons.battery_unknown_rounded': Icons.battery_unknown_rounded,
  'Icons.battery_unknown_outlined': Icons.battery_unknown_outlined,
  'Icons.beach_access': Icons.beach_access,
  'Icons.beach_access_sharp': Icons.beach_access_sharp,
  'Icons.beach_access_rounded': Icons.beach_access_rounded,
  'Icons.beach_access_outlined': Icons.beach_access_outlined,
  'Icons.bed': Icons.bed,
  'Icons.bed_sharp': Icons.bed_sharp,
  'Icons.bed_rounded': Icons.bed_rounded,
  'Icons.bed_outlined': Icons.bed_outlined,
  'Icons.bedroom_baby': Icons.bedroom_baby,
  'Icons.bedroom_baby_sharp': Icons.bedroom_baby_sharp,
  'Icons.bedroom_baby_rounded': Icons.bedroom_baby_rounded,
  'Icons.bedroom_baby_outlined': Icons.bedroom_baby_outlined,
  'Icons.bedroom_child': Icons.bedroom_child,
  'Icons.bedroom_child_sharp': Icons.bedroom_child_sharp,
  'Icons.bedroom_child_rounded': Icons.bedroom_child_rounded,
  'Icons.bedroom_child_outlined': Icons.bedroom_child_outlined,
  'Icons.bedroom_parent': Icons.bedroom_parent,
  'Icons.bedroom_parent_sharp': Icons.bedroom_parent_sharp,
  'Icons.bedroom_parent_rounded': Icons.bedroom_parent_rounded,
  'Icons.bedroom_parent_outlined': Icons.bedroom_parent_outlined,
  'Icons.bedtime': Icons.bedtime,
  'Icons.bedtime_sharp': Icons.bedtime_sharp,
  'Icons.bedtime_rounded': Icons.bedtime_rounded,
  'Icons.bedtime_outlined': Icons.bedtime_outlined,
  'Icons.bedtime_off': Icons.bedtime_off,
  'Icons.bedtime_off_sharp': Icons.bedtime_off_sharp,
  'Icons.bedtime_off_rounded': Icons.bedtime_off_rounded,
  'Icons.bedtime_off_outlined': Icons.bedtime_off_outlined,
  'Icons.beenhere': Icons.beenhere,
  'Icons.beenhere_sharp': Icons.beenhere_sharp,
  'Icons.beenhere_rounded': Icons.beenhere_rounded,
  'Icons.beenhere_outlined': Icons.beenhere_outlined,
  'Icons.bento': Icons.bento,
  'Icons.bento_sharp': Icons.bento_sharp,
  'Icons.bento_rounded': Icons.bento_rounded,
  'Icons.bento_outlined': Icons.bento_outlined,
  'Icons.bike_scooter': Icons.bike_scooter,
  'Icons.bike_scooter_sharp': Icons.bike_scooter_sharp,
  'Icons.bike_scooter_rounded': Icons.bike_scooter_rounded,
  'Icons.bike_scooter_outlined': Icons.bike_scooter_outlined,
  'Icons.biotech': Icons.biotech,
  'Icons.biotech_sharp': Icons.biotech_sharp,
  'Icons.biotech_rounded': Icons.biotech_rounded,
  'Icons.biotech_outlined': Icons.biotech_outlined,
  'Icons.blender': Icons.blender,
  'Icons.blender_sharp': Icons.blender_sharp,
  'Icons.blender_rounded': Icons.blender_rounded,
  'Icons.blender_outlined': Icons.blender_outlined,
  'Icons.blinds': Icons.blinds,
  'Icons.blinds_sharp': Icons.blinds_sharp,
  'Icons.blinds_rounded': Icons.blinds_rounded,
  'Icons.blinds_outlined': Icons.blinds_outlined,
  'Icons.blinds_closed': Icons.blinds_closed,
  'Icons.blinds_closed_sharp': Icons.blinds_closed_sharp,
  'Icons.blinds_closed_rounded': Icons.blinds_closed_rounded,
  'Icons.blinds_closed_outlined': Icons.blinds_closed_outlined,
  'Icons.block': Icons.block,
  'Icons.block_sharp': Icons.block_sharp,
  'Icons.block_rounded': Icons.block_rounded,
  'Icons.block_outlined': Icons.block_outlined,
  'Icons.block_flipped': Icons.block_flipped,
  'Icons.bloodtype': Icons.bloodtype,
  'Icons.bloodtype_sharp': Icons.bloodtype_sharp,
  'Icons.bloodtype_rounded': Icons.bloodtype_rounded,
  'Icons.bloodtype_outlined': Icons.bloodtype_outlined,
  'Icons.bluetooth': Icons.bluetooth,
  'Icons.bluetooth_sharp': Icons.bluetooth_sharp,
  'Icons.bluetooth_rounded': Icons.bluetooth_rounded,
  'Icons.bluetooth_outlined': Icons.bluetooth_outlined,
  'Icons.bluetooth_audio': Icons.bluetooth_audio,
  'Icons.bluetooth_audio_sharp': Icons.bluetooth_audio_sharp,
  'Icons.bluetooth_audio_rounded': Icons.bluetooth_audio_rounded,
  'Icons.bluetooth_audio_outlined': Icons.bluetooth_audio_outlined,
  'Icons.bluetooth_connected': Icons.bluetooth_connected,
  'Icons.bluetooth_connected_sharp': Icons.bluetooth_connected_sharp,
  'Icons.bluetooth_connected_rounded': Icons.bluetooth_connected_rounded,
  'Icons.bluetooth_connected_outlined': Icons.bluetooth_connected_outlined,
  'Icons.bluetooth_disabled': Icons.bluetooth_disabled,
  'Icons.bluetooth_disabled_sharp': Icons.bluetooth_disabled_sharp,
  'Icons.bluetooth_disabled_rounded': Icons.bluetooth_disabled_rounded,
  'Icons.bluetooth_disabled_outlined': Icons.bluetooth_disabled_outlined,
  'Icons.bluetooth_drive': Icons.bluetooth_drive,
  'Icons.bluetooth_drive_sharp': Icons.bluetooth_drive_sharp,
  'Icons.bluetooth_drive_rounded': Icons.bluetooth_drive_rounded,
  'Icons.bluetooth_drive_outlined': Icons.bluetooth_drive_outlined,
  'Icons.bluetooth_searching': Icons.bluetooth_searching,
  'Icons.bluetooth_searching_sharp': Icons.bluetooth_searching_sharp,
  'Icons.bluetooth_searching_rounded': Icons.bluetooth_searching_rounded,
  'Icons.bluetooth_searching_outlined': Icons.bluetooth_searching_outlined,
  'Icons.blur_circular': Icons.blur_circular,
  'Icons.blur_circular_sharp': Icons.blur_circular_sharp,
  'Icons.blur_circular_rounded': Icons.blur_circular_rounded,
  'Icons.blur_circular_outlined': Icons.blur_circular_outlined,
  'Icons.blur_linear': Icons.blur_linear,
  'Icons.blur_linear_sharp': Icons.blur_linear_sharp,
  'Icons.blur_linear_rounded': Icons.blur_linear_rounded,
  'Icons.blur_linear_outlined': Icons.blur_linear_outlined,
  'Icons.blur_off': Icons.blur_off,
  'Icons.blur_off_sharp': Icons.blur_off_sharp,
  'Icons.blur_off_rounded': Icons.blur_off_rounded,
  'Icons.blur_off_outlined': Icons.blur_off_outlined,
  'Icons.blur_on': Icons.blur_on,
  'Icons.blur_on_sharp': Icons.blur_on_sharp,
  'Icons.blur_on_rounded': Icons.blur_on_rounded,
  'Icons.blur_on_outlined': Icons.blur_on_outlined,
  'Icons.bolt': Icons.bolt,
  'Icons.bolt_sharp': Icons.bolt_sharp,
  'Icons.bolt_rounded': Icons.bolt_rounded,
  'Icons.bolt_outlined': Icons.bolt_outlined,
  'Icons.book': Icons.book,
  'Icons.book_sharp': Icons.book_sharp,
  'Icons.book_rounded': Icons.book_rounded,
  'Icons.book_outlined': Icons.book_outlined,
  'Icons.book_online': Icons.book_online,
  'Icons.book_online_sharp': Icons.book_online_sharp,
  'Icons.book_online_rounded': Icons.book_online_rounded,
  'Icons.book_online_outlined': Icons.book_online_outlined,
  'Icons.bookmark': Icons.bookmark,
  'Icons.bookmark_sharp': Icons.bookmark_sharp,
  'Icons.bookmark_rounded': Icons.bookmark_rounded,
  'Icons.bookmark_outlined': Icons.bookmark_outlined,
  'Icons.bookmark_add': Icons.bookmark_add,
  'Icons.bookmark_add_sharp': Icons.bookmark_add_sharp,
  'Icons.bookmark_add_rounded': Icons.bookmark_add_rounded,
  'Icons.bookmark_add_outlined': Icons.bookmark_add_outlined,
  'Icons.bookmark_added': Icons.bookmark_added,
  'Icons.bookmark_added_sharp': Icons.bookmark_added_sharp,
  'Icons.bookmark_added_rounded': Icons.bookmark_added_rounded,
  'Icons.bookmark_added_outlined': Icons.bookmark_added_outlined,
  'Icons.bookmark_border': Icons.bookmark_border,
  'Icons.bookmark_border_sharp': Icons.bookmark_border_sharp,
  'Icons.bookmark_border_rounded': Icons.bookmark_border_rounded,
  'Icons.bookmark_border_outlined': Icons.bookmark_border_outlined,
  'Icons.bookmark_outline': Icons.bookmark_outline,
  'Icons.bookmark_outline_sharp': Icons.bookmark_outline_sharp,
  'Icons.bookmark_outline_rounded': Icons.bookmark_outline_rounded,
  'Icons.bookmark_outline_outlined': Icons.bookmark_outline_outlined,
  'Icons.bookmark_remove': Icons.bookmark_remove,
  'Icons.bookmark_remove_sharp': Icons.bookmark_remove_sharp,
  'Icons.bookmark_remove_rounded': Icons.bookmark_remove_rounded,
  'Icons.bookmark_remove_outlined': Icons.bookmark_remove_outlined,
  'Icons.bookmarks': Icons.bookmarks,
  'Icons.bookmarks_sharp': Icons.bookmarks_sharp,
  'Icons.bookmarks_rounded': Icons.bookmarks_rounded,
  'Icons.bookmarks_outlined': Icons.bookmarks_outlined,
  'Icons.border_all': Icons.border_all,
  'Icons.border_all_sharp': Icons.border_all_sharp,
  'Icons.border_all_rounded': Icons.border_all_rounded,
  'Icons.border_all_outlined': Icons.border_all_outlined,
  'Icons.border_bottom': Icons.border_bottom,
  'Icons.border_bottom_sharp': Icons.border_bottom_sharp,
  'Icons.border_bottom_rounded': Icons.border_bottom_rounded,
  'Icons.border_bottom_outlined': Icons.border_bottom_outlined,
  'Icons.border_clear': Icons.border_clear,
  'Icons.border_clear_sharp': Icons.border_clear_sharp,
  'Icons.border_clear_rounded': Icons.border_clear_rounded,
  'Icons.border_clear_outlined': Icons.border_clear_outlined,
  'Icons.border_color': Icons.border_color,
  'Icons.border_color_sharp': Icons.border_color_sharp,
  'Icons.border_color_rounded': Icons.border_color_rounded,
  'Icons.border_color_outlined': Icons.border_color_outlined,
  'Icons.border_horizontal': Icons.border_horizontal,
  'Icons.border_horizontal_sharp': Icons.border_horizontal_sharp,
  'Icons.border_horizontal_rounded': Icons.border_horizontal_rounded,
  'Icons.border_horizontal_outlined': Icons.border_horizontal_outlined,
  'Icons.border_inner': Icons.border_inner,
  'Icons.border_inner_sharp': Icons.border_inner_sharp,
  'Icons.border_inner_rounded': Icons.border_inner_rounded,
  'Icons.border_inner_outlined': Icons.border_inner_outlined,
  'Icons.border_left': Icons.border_left,
  'Icons.border_left_sharp': Icons.border_left_sharp,
  'Icons.border_left_rounded': Icons.border_left_rounded,
  'Icons.border_left_outlined': Icons.border_left_outlined,
  'Icons.border_outer': Icons.border_outer,
  'Icons.border_outer_sharp': Icons.border_outer_sharp,
  'Icons.border_outer_rounded': Icons.border_outer_rounded,
  'Icons.border_outer_outlined': Icons.border_outer_outlined,
  'Icons.border_right': Icons.border_right,
  'Icons.border_right_sharp': Icons.border_right_sharp,
  'Icons.border_right_rounded': Icons.border_right_rounded,
  'Icons.border_right_outlined': Icons.border_right_outlined,
  'Icons.border_style': Icons.border_style,
  'Icons.border_style_sharp': Icons.border_style_sharp,
  'Icons.border_style_rounded': Icons.border_style_rounded,
  'Icons.border_style_outlined': Icons.border_style_outlined,
  'Icons.border_top': Icons.border_top,
  'Icons.border_top_sharp': Icons.border_top_sharp,
  'Icons.border_top_rounded': Icons.border_top_rounded,
  'Icons.border_top_outlined': Icons.border_top_outlined,
  'Icons.border_vertical': Icons.border_vertical,
  'Icons.border_vertical_sharp': Icons.border_vertical_sharp,
  'Icons.border_vertical_rounded': Icons.border_vertical_rounded,
  'Icons.border_vertical_outlined': Icons.border_vertical_outlined,
  'Icons.boy': Icons.boy,
  'Icons.boy_sharp': Icons.boy_sharp,
  'Icons.boy_rounded': Icons.boy_rounded,
  'Icons.boy_outlined': Icons.boy_outlined,
  'Icons.branding_watermark': Icons.branding_watermark,
  'Icons.branding_watermark_sharp': Icons.branding_watermark_sharp,
  'Icons.branding_watermark_rounded': Icons.branding_watermark_rounded,
  'Icons.branding_watermark_outlined': Icons.branding_watermark_outlined,
  'Icons.breakfast_dining': Icons.breakfast_dining,
  'Icons.breakfast_dining_sharp': Icons.breakfast_dining_sharp,
  'Icons.breakfast_dining_rounded': Icons.breakfast_dining_rounded,
  'Icons.breakfast_dining_outlined': Icons.breakfast_dining_outlined,
  'Icons.brightness_1': Icons.brightness_1,
  'Icons.brightness_1_sharp': Icons.brightness_1_sharp,
  'Icons.brightness_1_rounded': Icons.brightness_1_rounded,
  'Icons.brightness_1_outlined': Icons.brightness_1_outlined,
  'Icons.brightness_2': Icons.brightness_2,
  'Icons.brightness_2_sharp': Icons.brightness_2_sharp,
  'Icons.brightness_2_rounded': Icons.brightness_2_rounded,
  'Icons.brightness_2_outlined': Icons.brightness_2_outlined,
  'Icons.brightness_3': Icons.brightness_3,
  'Icons.brightness_3_sharp': Icons.brightness_3_sharp,
  'Icons.brightness_3_rounded': Icons.brightness_3_rounded,
  'Icons.brightness_3_outlined': Icons.brightness_3_outlined,
  'Icons.brightness_4': Icons.brightness_4,
  'Icons.brightness_4_sharp': Icons.brightness_4_sharp,
  'Icons.brightness_4_rounded': Icons.brightness_4_rounded,
  'Icons.brightness_4_outlined': Icons.brightness_4_outlined,
  'Icons.brightness_5': Icons.brightness_5,
  'Icons.brightness_5_sharp': Icons.brightness_5_sharp,
  'Icons.brightness_5_rounded': Icons.brightness_5_rounded,
  'Icons.brightness_5_outlined': Icons.brightness_5_outlined,
  'Icons.brightness_6': Icons.brightness_6,
  'Icons.brightness_6_sharp': Icons.brightness_6_sharp,
  'Icons.brightness_6_rounded': Icons.brightness_6_rounded,
  'Icons.brightness_6_outlined': Icons.brightness_6_outlined,
  'Icons.brightness_7': Icons.brightness_7,
  'Icons.brightness_7_sharp': Icons.brightness_7_sharp,
  'Icons.brightness_7_rounded': Icons.brightness_7_rounded,
  'Icons.brightness_7_outlined': Icons.brightness_7_outlined,
  'Icons.brightness_auto': Icons.brightness_auto,
  'Icons.brightness_auto_sharp': Icons.brightness_auto_sharp,
  'Icons.brightness_auto_rounded': Icons.brightness_auto_rounded,
  'Icons.brightness_auto_outlined': Icons.brightness_auto_outlined,
  'Icons.brightness_high': Icons.brightness_high,
  'Icons.brightness_high_sharp': Icons.brightness_high_sharp,
  'Icons.brightness_high_rounded': Icons.brightness_high_rounded,
  'Icons.brightness_high_outlined': Icons.brightness_high_outlined,
  'Icons.brightness_low': Icons.brightness_low,
  'Icons.brightness_low_sharp': Icons.brightness_low_sharp,
  'Icons.brightness_low_rounded': Icons.brightness_low_rounded,
  'Icons.brightness_low_outlined': Icons.brightness_low_outlined,
  'Icons.brightness_medium': Icons.brightness_medium,
  'Icons.brightness_medium_sharp': Icons.brightness_medium_sharp,
  'Icons.brightness_medium_rounded': Icons.brightness_medium_rounded,
  'Icons.brightness_medium_outlined': Icons.brightness_medium_outlined,
  'Icons.broadcast_on_home': Icons.broadcast_on_home,
  'Icons.broadcast_on_home_sharp': Icons.broadcast_on_home_sharp,
  'Icons.broadcast_on_home_rounded': Icons.broadcast_on_home_rounded,
  'Icons.broadcast_on_home_outlined': Icons.broadcast_on_home_outlined,
  'Icons.broadcast_on_personal': Icons.broadcast_on_personal,
  'Icons.broadcast_on_personal_sharp': Icons.broadcast_on_personal_sharp,
  'Icons.broadcast_on_personal_rounded': Icons.broadcast_on_personal_rounded,
  'Icons.broadcast_on_personal_outlined': Icons.broadcast_on_personal_outlined,
  'Icons.broken_image': Icons.broken_image,
  'Icons.broken_image_sharp': Icons.broken_image_sharp,
  'Icons.broken_image_rounded': Icons.broken_image_rounded,
  'Icons.broken_image_outlined': Icons.broken_image_outlined,
  'Icons.browse_gallery': Icons.browse_gallery,
  'Icons.browse_gallery_sharp': Icons.browse_gallery_sharp,
  'Icons.browse_gallery_rounded': Icons.browse_gallery_rounded,
  'Icons.browse_gallery_outlined': Icons.browse_gallery_outlined,
  'Icons.browser_not_supported': Icons.browser_not_supported,
  'Icons.browser_not_supported_sharp': Icons.browser_not_supported_sharp,
  'Icons.browser_not_supported_rounded': Icons.browser_not_supported_rounded,
  'Icons.browser_not_supported_outlined': Icons.browser_not_supported_outlined,
  'Icons.browser_updated': Icons.browser_updated,
  'Icons.browser_updated_sharp': Icons.browser_updated_sharp,
  'Icons.browser_updated_rounded': Icons.browser_updated_rounded,
  'Icons.browser_updated_outlined': Icons.browser_updated_outlined,
  'Icons.brunch_dining': Icons.brunch_dining,
  'Icons.brunch_dining_sharp': Icons.brunch_dining_sharp,
  'Icons.brunch_dining_rounded': Icons.brunch_dining_rounded,
  'Icons.brunch_dining_outlined': Icons.brunch_dining_outlined,
  'Icons.brush': Icons.brush,
  'Icons.brush_sharp': Icons.brush_sharp,
  'Icons.brush_rounded': Icons.brush_rounded,
  'Icons.brush_outlined': Icons.brush_outlined,
  'Icons.bubble_chart': Icons.bubble_chart,
  'Icons.bubble_chart_sharp': Icons.bubble_chart_sharp,
  'Icons.bubble_chart_rounded': Icons.bubble_chart_rounded,
  'Icons.bubble_chart_outlined': Icons.bubble_chart_outlined,
  'Icons.bug_report': Icons.bug_report,
  'Icons.bug_report_sharp': Icons.bug_report_sharp,
  'Icons.bug_report_rounded': Icons.bug_report_rounded,
  'Icons.bug_report_outlined': Icons.bug_report_outlined,
  'Icons.build': Icons.build,
  'Icons.build_sharp': Icons.build_sharp,
  'Icons.build_rounded': Icons.build_rounded,
  'Icons.build_outlined': Icons.build_outlined,
  'Icons.build_circle': Icons.build_circle,
  'Icons.build_circle_sharp': Icons.build_circle_sharp,
  'Icons.build_circle_rounded': Icons.build_circle_rounded,
  'Icons.build_circle_outlined': Icons.build_circle_outlined,
  'Icons.bungalow': Icons.bungalow,
  'Icons.bungalow_sharp': Icons.bungalow_sharp,
  'Icons.bungalow_rounded': Icons.bungalow_rounded,
  'Icons.bungalow_outlined': Icons.bungalow_outlined,
  'Icons.burst_mode': Icons.burst_mode,
  'Icons.burst_mode_sharp': Icons.burst_mode_sharp,
  'Icons.burst_mode_rounded': Icons.burst_mode_rounded,
  'Icons.burst_mode_outlined': Icons.burst_mode_outlined,
  'Icons.bus_alert': Icons.bus_alert,
  'Icons.bus_alert_sharp': Icons.bus_alert_sharp,
  'Icons.bus_alert_rounded': Icons.bus_alert_rounded,
  'Icons.bus_alert_outlined': Icons.bus_alert_outlined,
  'Icons.business': Icons.business,
  'Icons.business_sharp': Icons.business_sharp,
  'Icons.business_rounded': Icons.business_rounded,
  'Icons.business_outlined': Icons.business_outlined,
  'Icons.business_center': Icons.business_center,
  'Icons.business_center_sharp': Icons.business_center_sharp,
  'Icons.business_center_rounded': Icons.business_center_rounded,
  'Icons.business_center_outlined': Icons.business_center_outlined,
  'Icons.cabin': Icons.cabin,
  'Icons.cabin_sharp': Icons.cabin_sharp,
  'Icons.cabin_rounded': Icons.cabin_rounded,
  'Icons.cabin_outlined': Icons.cabin_outlined,
  'Icons.cable': Icons.cable,
  'Icons.cable_sharp': Icons.cable_sharp,
  'Icons.cable_rounded': Icons.cable_rounded,
  'Icons.cable_outlined': Icons.cable_outlined,
  'Icons.cached': Icons.cached,
  'Icons.cached_sharp': Icons.cached_sharp,
  'Icons.cached_rounded': Icons.cached_rounded,
  'Icons.cached_outlined': Icons.cached_outlined,
  'Icons.cake': Icons.cake,
  'Icons.cake_sharp': Icons.cake_sharp,
  'Icons.cake_rounded': Icons.cake_rounded,
  'Icons.cake_outlined': Icons.cake_outlined,
  'Icons.calculate': Icons.calculate,
  'Icons.calculate_sharp': Icons.calculate_sharp,
  'Icons.calculate_rounded': Icons.calculate_rounded,
  'Icons.calculate_outlined': Icons.calculate_outlined,
  'Icons.calendar_month': Icons.calendar_month,
  'Icons.calendar_month_sharp': Icons.calendar_month_sharp,
  'Icons.calendar_month_rounded': Icons.calendar_month_rounded,
  'Icons.calendar_month_outlined': Icons.calendar_month_outlined,
  'Icons.calendar_today': Icons.calendar_today,
  'Icons.calendar_today_sharp': Icons.calendar_today_sharp,
  'Icons.calendar_today_rounded': Icons.calendar_today_rounded,
  'Icons.calendar_today_outlined': Icons.calendar_today_outlined,
  'Icons.calendar_view_day': Icons.calendar_view_day,
  'Icons.calendar_view_day_sharp': Icons.calendar_view_day_sharp,
  'Icons.calendar_view_day_rounded': Icons.calendar_view_day_rounded,
  'Icons.calendar_view_day_outlined': Icons.calendar_view_day_outlined,
  'Icons.calendar_view_month': Icons.calendar_view_month,
  'Icons.calendar_view_month_sharp': Icons.calendar_view_month_sharp,
  'Icons.calendar_view_month_rounded': Icons.calendar_view_month_rounded,
  'Icons.calendar_view_month_outlined': Icons.calendar_view_month_outlined,
  'Icons.calendar_view_week': Icons.calendar_view_week,
  'Icons.calendar_view_week_sharp': Icons.calendar_view_week_sharp,
  'Icons.calendar_view_week_rounded': Icons.calendar_view_week_rounded,
  'Icons.calendar_view_week_outlined': Icons.calendar_view_week_outlined,
  'Icons.call': Icons.call,
  'Icons.call_sharp': Icons.call_sharp,
  'Icons.call_rounded': Icons.call_rounded,
  'Icons.call_outlined': Icons.call_outlined,
  'Icons.call_end': Icons.call_end,
  'Icons.call_end_sharp': Icons.call_end_sharp,
  'Icons.call_end_rounded': Icons.call_end_rounded,
  'Icons.call_end_outlined': Icons.call_end_outlined,
  'Icons.call_made': Icons.call_made,
  'Icons.call_made_sharp': Icons.call_made_sharp,
  'Icons.call_made_rounded': Icons.call_made_rounded,
  'Icons.call_made_outlined': Icons.call_made_outlined,
  'Icons.call_merge': Icons.call_merge,
  'Icons.call_merge_sharp': Icons.call_merge_sharp,
  'Icons.call_merge_rounded': Icons.call_merge_rounded,
  'Icons.call_merge_outlined': Icons.call_merge_outlined,
  'Icons.call_missed': Icons.call_missed,
  'Icons.call_missed_sharp': Icons.call_missed_sharp,
  'Icons.call_missed_rounded': Icons.call_missed_rounded,
  'Icons.call_missed_outlined': Icons.call_missed_outlined,
  'Icons.call_missed_outgoing': Icons.call_missed_outgoing,
  'Icons.call_missed_outgoing_sharp': Icons.call_missed_outgoing_sharp,
  'Icons.call_missed_outgoing_rounded': Icons.call_missed_outgoing_rounded,
  'Icons.call_missed_outgoing_outlined': Icons.call_missed_outgoing_outlined,
  'Icons.call_received': Icons.call_received,
  'Icons.call_received_sharp': Icons.call_received_sharp,
  'Icons.call_received_rounded': Icons.call_received_rounded,
  'Icons.call_received_outlined': Icons.call_received_outlined,
  'Icons.call_split': Icons.call_split,
  'Icons.call_split_sharp': Icons.call_split_sharp,
  'Icons.call_split_rounded': Icons.call_split_rounded,
  'Icons.call_split_outlined': Icons.call_split_outlined,
  'Icons.call_to_action': Icons.call_to_action,
  'Icons.call_to_action_sharp': Icons.call_to_action_sharp,
  'Icons.call_to_action_rounded': Icons.call_to_action_rounded,
  'Icons.call_to_action_outlined': Icons.call_to_action_outlined,
  'Icons.camera': Icons.camera,
  'Icons.camera_sharp': Icons.camera_sharp,
  'Icons.camera_rounded': Icons.camera_rounded,
  'Icons.camera_outlined': Icons.camera_outlined,
  'Icons.camera_alt': Icons.camera_alt,
  'Icons.camera_alt_sharp': Icons.camera_alt_sharp,
  'Icons.camera_alt_rounded': Icons.camera_alt_rounded,
  'Icons.camera_alt_outlined': Icons.camera_alt_outlined,
  'Icons.camera_enhance': Icons.camera_enhance,
  'Icons.camera_enhance_sharp': Icons.camera_enhance_sharp,
  'Icons.camera_enhance_rounded': Icons.camera_enhance_rounded,
  'Icons.camera_enhance_outlined': Icons.camera_enhance_outlined,
  'Icons.camera_front': Icons.camera_front,
  'Icons.camera_front_sharp': Icons.camera_front_sharp,
  'Icons.camera_front_rounded': Icons.camera_front_rounded,
  'Icons.camera_front_outlined': Icons.camera_front_outlined,
  'Icons.camera_indoor': Icons.camera_indoor,
  'Icons.camera_indoor_sharp': Icons.camera_indoor_sharp,
  'Icons.camera_indoor_rounded': Icons.camera_indoor_rounded,
  'Icons.camera_indoor_outlined': Icons.camera_indoor_outlined,
  'Icons.camera_outdoor': Icons.camera_outdoor,
  'Icons.camera_outdoor_sharp': Icons.camera_outdoor_sharp,
  'Icons.camera_outdoor_rounded': Icons.camera_outdoor_rounded,
  'Icons.camera_outdoor_outlined': Icons.camera_outdoor_outlined,
  'Icons.camera_rear': Icons.camera_rear,
  'Icons.camera_rear_sharp': Icons.camera_rear_sharp,
  'Icons.camera_rear_rounded': Icons.camera_rear_rounded,
  'Icons.camera_rear_outlined': Icons.camera_rear_outlined,
  'Icons.camera_roll': Icons.camera_roll,
  'Icons.camera_roll_sharp': Icons.camera_roll_sharp,
  'Icons.camera_roll_rounded': Icons.camera_roll_rounded,
  'Icons.camera_roll_outlined': Icons.camera_roll_outlined,
  'Icons.cameraswitch': Icons.cameraswitch,
  'Icons.cameraswitch_sharp': Icons.cameraswitch_sharp,
  'Icons.cameraswitch_rounded': Icons.cameraswitch_rounded,
  'Icons.cameraswitch_outlined': Icons.cameraswitch_outlined,
  'Icons.campaign': Icons.campaign,
  'Icons.campaign_sharp': Icons.campaign_sharp,
  'Icons.campaign_rounded': Icons.campaign_rounded,
  'Icons.campaign_outlined': Icons.campaign_outlined,
  'Icons.cancel': Icons.cancel,
  'Icons.cancel_sharp': Icons.cancel_sharp,
  'Icons.cancel_rounded': Icons.cancel_rounded,
  'Icons.cancel_outlined': Icons.cancel_outlined,
  'Icons.cancel_presentation': Icons.cancel_presentation,
  'Icons.cancel_presentation_sharp': Icons.cancel_presentation_sharp,
  'Icons.cancel_presentation_rounded': Icons.cancel_presentation_rounded,
  'Icons.cancel_presentation_outlined': Icons.cancel_presentation_outlined,
  'Icons.cancel_schedule_send': Icons.cancel_schedule_send,
  'Icons.cancel_schedule_send_sharp': Icons.cancel_schedule_send_sharp,
  'Icons.cancel_schedule_send_rounded': Icons.cancel_schedule_send_rounded,
  'Icons.cancel_schedule_send_outlined': Icons.cancel_schedule_send_outlined,
  'Icons.candlestick_chart': Icons.candlestick_chart,
  'Icons.candlestick_chart_sharp': Icons.candlestick_chart_sharp,
  'Icons.candlestick_chart_rounded': Icons.candlestick_chart_rounded,
  'Icons.candlestick_chart_outlined': Icons.candlestick_chart_outlined,
  'Icons.car_crash': Icons.car_crash,
  'Icons.car_crash_sharp': Icons.car_crash_sharp,
  'Icons.car_crash_rounded': Icons.car_crash_rounded,
  'Icons.car_crash_outlined': Icons.car_crash_outlined,
  'Icons.car_rental': Icons.car_rental,
  'Icons.car_rental_sharp': Icons.car_rental_sharp,
  'Icons.car_rental_rounded': Icons.car_rental_rounded,
  'Icons.car_rental_outlined': Icons.car_rental_outlined,
  'Icons.car_repair': Icons.car_repair,
  'Icons.car_repair_sharp': Icons.car_repair_sharp,
  'Icons.car_repair_rounded': Icons.car_repair_rounded,
  'Icons.car_repair_outlined': Icons.car_repair_outlined,
  'Icons.card_giftcard': Icons.card_giftcard,
  'Icons.card_giftcard_sharp': Icons.card_giftcard_sharp,
  'Icons.card_giftcard_rounded': Icons.card_giftcard_rounded,
  'Icons.card_giftcard_outlined': Icons.card_giftcard_outlined,
  'Icons.card_membership': Icons.card_membership,
  'Icons.card_membership_sharp': Icons.card_membership_sharp,
  'Icons.card_membership_rounded': Icons.card_membership_rounded,
  'Icons.card_membership_outlined': Icons.card_membership_outlined,
  'Icons.card_travel': Icons.card_travel,
  'Icons.card_travel_sharp': Icons.card_travel_sharp,
  'Icons.card_travel_rounded': Icons.card_travel_rounded,
  'Icons.card_travel_outlined': Icons.card_travel_outlined,
  'Icons.carpenter': Icons.carpenter,
  'Icons.carpenter_sharp': Icons.carpenter_sharp,
  'Icons.carpenter_rounded': Icons.carpenter_rounded,
  'Icons.carpenter_outlined': Icons.carpenter_outlined,
  'Icons.cases': Icons.cases,
  'Icons.cases_sharp': Icons.cases_sharp,
  'Icons.cases_rounded': Icons.cases_rounded,
  'Icons.cases_outlined': Icons.cases_outlined,
  'Icons.casino': Icons.casino,
  'Icons.casino_sharp': Icons.casino_sharp,
  'Icons.casino_rounded': Icons.casino_rounded,
  'Icons.casino_outlined': Icons.casino_outlined,
  'Icons.cast': Icons.cast,
  'Icons.cast_sharp': Icons.cast_sharp,
  'Icons.cast_rounded': Icons.cast_rounded,
  'Icons.cast_outlined': Icons.cast_outlined,
  'Icons.cast_connected': Icons.cast_connected,
  'Icons.cast_connected_sharp': Icons.cast_connected_sharp,
  'Icons.cast_connected_rounded': Icons.cast_connected_rounded,
  'Icons.cast_connected_outlined': Icons.cast_connected_outlined,
  'Icons.cast_for_education': Icons.cast_for_education,
  'Icons.cast_for_education_sharp': Icons.cast_for_education_sharp,
  'Icons.cast_for_education_rounded': Icons.cast_for_education_rounded,
  'Icons.cast_for_education_outlined': Icons.cast_for_education_outlined,
  'Icons.castle': Icons.castle,
  'Icons.castle_sharp': Icons.castle_sharp,
  'Icons.castle_rounded': Icons.castle_rounded,
  'Icons.castle_outlined': Icons.castle_outlined,
  'Icons.catching_pokemon': Icons.catching_pokemon,
  'Icons.catching_pokemon_sharp': Icons.catching_pokemon_sharp,
  'Icons.catching_pokemon_rounded': Icons.catching_pokemon_rounded,
  'Icons.catching_pokemon_outlined': Icons.catching_pokemon_outlined,
  'Icons.category': Icons.category,
  'Icons.category_sharp': Icons.category_sharp,
  'Icons.category_rounded': Icons.category_rounded,
  'Icons.category_outlined': Icons.category_outlined,
  'Icons.celebration': Icons.celebration,
  'Icons.celebration_sharp': Icons.celebration_sharp,
  'Icons.celebration_rounded': Icons.celebration_rounded,
  'Icons.celebration_outlined': Icons.celebration_outlined,
  'Icons.cell_tower': Icons.cell_tower,
  'Icons.cell_tower_sharp': Icons.cell_tower_sharp,
  'Icons.cell_tower_rounded': Icons.cell_tower_rounded,
  'Icons.cell_tower_outlined': Icons.cell_tower_outlined,
  'Icons.cell_wifi': Icons.cell_wifi,
  'Icons.cell_wifi_sharp': Icons.cell_wifi_sharp,
  'Icons.cell_wifi_rounded': Icons.cell_wifi_rounded,
  'Icons.cell_wifi_outlined': Icons.cell_wifi_outlined,
  'Icons.center_focus_strong': Icons.center_focus_strong,
  'Icons.center_focus_strong_sharp': Icons.center_focus_strong_sharp,
  'Icons.center_focus_strong_rounded': Icons.center_focus_strong_rounded,
  'Icons.center_focus_strong_outlined': Icons.center_focus_strong_outlined,
  'Icons.center_focus_weak': Icons.center_focus_weak,
  'Icons.center_focus_weak_sharp': Icons.center_focus_weak_sharp,
  'Icons.center_focus_weak_rounded': Icons.center_focus_weak_rounded,
  'Icons.center_focus_weak_outlined': Icons.center_focus_weak_outlined,
  'Icons.chair': Icons.chair,
  'Icons.chair_sharp': Icons.chair_sharp,
  'Icons.chair_rounded': Icons.chair_rounded,
  'Icons.chair_outlined': Icons.chair_outlined,
  'Icons.chair_alt': Icons.chair_alt,
  'Icons.chair_alt_sharp': Icons.chair_alt_sharp,
  'Icons.chair_alt_rounded': Icons.chair_alt_rounded,
  'Icons.chair_alt_outlined': Icons.chair_alt_outlined,
  'Icons.chalet': Icons.chalet,
  'Icons.chalet_sharp': Icons.chalet_sharp,
  'Icons.chalet_rounded': Icons.chalet_rounded,
  'Icons.chalet_outlined': Icons.chalet_outlined,
  'Icons.change_circle': Icons.change_circle,
  'Icons.change_circle_sharp': Icons.change_circle_sharp,
  'Icons.change_circle_rounded': Icons.change_circle_rounded,
  'Icons.change_circle_outlined': Icons.change_circle_outlined,
  'Icons.change_history': Icons.change_history,
  'Icons.change_history_sharp': Icons.change_history_sharp,
  'Icons.change_history_rounded': Icons.change_history_rounded,
  'Icons.change_history_outlined': Icons.change_history_outlined,
  'Icons.charging_station': Icons.charging_station,
  'Icons.charging_station_sharp': Icons.charging_station_sharp,
  'Icons.charging_station_rounded': Icons.charging_station_rounded,
  'Icons.charging_station_outlined': Icons.charging_station_outlined,
  'Icons.chat': Icons.chat,
  'Icons.chat_sharp': Icons.chat_sharp,
  'Icons.chat_rounded': Icons.chat_rounded,
  'Icons.chat_outlined': Icons.chat_outlined,
  'Icons.chat_bubble': Icons.chat_bubble,
  'Icons.chat_bubble_sharp': Icons.chat_bubble_sharp,
  'Icons.chat_bubble_rounded': Icons.chat_bubble_rounded,
  'Icons.chat_bubble_outlined': Icons.chat_bubble_outlined,
  'Icons.chat_bubble_outline': Icons.chat_bubble_outline,
  'Icons.chat_bubble_outline_sharp': Icons.chat_bubble_outline_sharp,
  'Icons.chat_bubble_outline_rounded': Icons.chat_bubble_outline_rounded,
  'Icons.chat_bubble_outline_outlined': Icons.chat_bubble_outline_outlined,
  'Icons.check': Icons.check,
  'Icons.check_sharp': Icons.check_sharp,
  'Icons.check_rounded': Icons.check_rounded,
  'Icons.check_outlined': Icons.check_outlined,
  'Icons.check_box': Icons.check_box,
  'Icons.check_box_sharp': Icons.check_box_sharp,
  'Icons.check_box_rounded': Icons.check_box_rounded,
  'Icons.check_box_outlined': Icons.check_box_outlined,
  'Icons.check_box_outline_blank': Icons.check_box_outline_blank,
  'Icons.check_box_outline_blank_sharp': Icons.check_box_outline_blank_sharp,
  'Icons.check_box_outline_blank_rounded':
      Icons.check_box_outline_blank_rounded,
  'Icons.check_box_outline_blank_outlined':
      Icons.check_box_outline_blank_outlined,
  'Icons.check_circle': Icons.check_circle,
  'Icons.check_circle_sharp': Icons.check_circle_sharp,
  'Icons.check_circle_rounded': Icons.check_circle_rounded,
  'Icons.check_circle_outlined': Icons.check_circle_outlined,
  'Icons.check_circle_outline': Icons.check_circle_outline,
  'Icons.check_circle_outline_sharp': Icons.check_circle_outline_sharp,
  'Icons.check_circle_outline_rounded': Icons.check_circle_outline_rounded,
  'Icons.check_circle_outline_outlined': Icons.check_circle_outline_outlined,
  'Icons.checklist': Icons.checklist,
  'Icons.checklist_sharp': Icons.checklist_sharp,
  'Icons.checklist_rounded': Icons.checklist_rounded,
  'Icons.checklist_outlined': Icons.checklist_outlined,
  'Icons.checklist_rtl': Icons.checklist_rtl,
  'Icons.checklist_rtl_sharp': Icons.checklist_rtl_sharp,
  'Icons.checklist_rtl_rounded': Icons.checklist_rtl_rounded,
  'Icons.checklist_rtl_outlined': Icons.checklist_rtl_outlined,
  'Icons.checkroom': Icons.checkroom,
  'Icons.checkroom_sharp': Icons.checkroom_sharp,
  'Icons.checkroom_rounded': Icons.checkroom_rounded,
  'Icons.checkroom_outlined': Icons.checkroom_outlined,
  'Icons.chevron_left': Icons.chevron_left,
  'Icons.chevron_left_sharp': Icons.chevron_left_sharp,
  'Icons.chevron_left_rounded': Icons.chevron_left_rounded,
  'Icons.chevron_left_outlined': Icons.chevron_left_outlined,
  'Icons.chevron_right': Icons.chevron_right,
  'Icons.chevron_right_sharp': Icons.chevron_right_sharp,
  'Icons.chevron_right_rounded': Icons.chevron_right_rounded,
  'Icons.chevron_right_outlined': Icons.chevron_right_outlined,
  'Icons.child_care': Icons.child_care,
  'Icons.child_care_sharp': Icons.child_care_sharp,
  'Icons.child_care_rounded': Icons.child_care_rounded,
  'Icons.child_care_outlined': Icons.child_care_outlined,
  'Icons.child_friendly': Icons.child_friendly,
  'Icons.child_friendly_sharp': Icons.child_friendly_sharp,
  'Icons.child_friendly_rounded': Icons.child_friendly_rounded,
  'Icons.child_friendly_outlined': Icons.child_friendly_outlined,
  'Icons.chrome_reader_mode': Icons.chrome_reader_mode,
  'Icons.chrome_reader_mode_sharp': Icons.chrome_reader_mode_sharp,
  'Icons.chrome_reader_mode_rounded': Icons.chrome_reader_mode_rounded,
  'Icons.chrome_reader_mode_outlined': Icons.chrome_reader_mode_outlined,
  'Icons.church': Icons.church,
  'Icons.church_sharp': Icons.church_sharp,
  'Icons.church_rounded': Icons.church_rounded,
  'Icons.church_outlined': Icons.church_outlined,
  'Icons.circle': Icons.circle,
  'Icons.circle_sharp': Icons.circle_sharp,
  'Icons.circle_rounded': Icons.circle_rounded,
  'Icons.circle_outlined': Icons.circle_outlined,
  'Icons.circle_notifications': Icons.circle_notifications,
  'Icons.circle_notifications_sharp': Icons.circle_notifications_sharp,
  'Icons.circle_notifications_rounded': Icons.circle_notifications_rounded,
  'Icons.circle_notifications_outlined': Icons.circle_notifications_outlined,
  'Icons.class_': Icons.class_,
  'Icons.class_sharp': Icons.class_sharp,
  'Icons.class_rounded': Icons.class_rounded,
  'Icons.class_outlined': Icons.class_outlined,
  'Icons.clean_hands': Icons.clean_hands,
  'Icons.clean_hands_sharp': Icons.clean_hands_sharp,
  'Icons.clean_hands_rounded': Icons.clean_hands_rounded,
  'Icons.clean_hands_outlined': Icons.clean_hands_outlined,
  'Icons.cleaning_services': Icons.cleaning_services,
  'Icons.cleaning_services_sharp': Icons.cleaning_services_sharp,
  'Icons.cleaning_services_rounded': Icons.cleaning_services_rounded,
  'Icons.cleaning_services_outlined': Icons.cleaning_services_outlined,
  'Icons.clear': Icons.clear,
  'Icons.clear_sharp': Icons.clear_sharp,
  'Icons.clear_rounded': Icons.clear_rounded,
  'Icons.clear_outlined': Icons.clear_outlined,
  'Icons.clear_all': Icons.clear_all,
  'Icons.clear_all_sharp': Icons.clear_all_sharp,
  'Icons.clear_all_rounded': Icons.clear_all_rounded,
  'Icons.clear_all_outlined': Icons.clear_all_outlined,
  'Icons.close': Icons.close,
  'Icons.close_sharp': Icons.close_sharp,
  'Icons.close_rounded': Icons.close_rounded,
  'Icons.close_outlined': Icons.close_outlined,
  'Icons.close_fullscreen': Icons.close_fullscreen,
  'Icons.close_fullscreen_sharp': Icons.close_fullscreen_sharp,
  'Icons.close_fullscreen_rounded': Icons.close_fullscreen_rounded,
  'Icons.close_fullscreen_outlined': Icons.close_fullscreen_outlined,
  'Icons.closed_caption': Icons.closed_caption,
  'Icons.closed_caption_sharp': Icons.closed_caption_sharp,
  'Icons.closed_caption_rounded': Icons.closed_caption_rounded,
  'Icons.closed_caption_outlined': Icons.closed_caption_outlined,
  'Icons.closed_caption_disabled': Icons.closed_caption_disabled,
  'Icons.closed_caption_disabled_sharp': Icons.closed_caption_disabled_sharp,
  'Icons.closed_caption_disabled_rounded':
      Icons.closed_caption_disabled_rounded,
  'Icons.closed_caption_disabled_outlined':
      Icons.closed_caption_disabled_outlined,
  'Icons.closed_caption_off': Icons.closed_caption_off,
  'Icons.closed_caption_off_sharp': Icons.closed_caption_off_sharp,
  'Icons.closed_caption_off_rounded': Icons.closed_caption_off_rounded,
  'Icons.closed_caption_off_outlined': Icons.closed_caption_off_outlined,
  'Icons.cloud': Icons.cloud,
  'Icons.cloud_sharp': Icons.cloud_sharp,
  'Icons.cloud_rounded': Icons.cloud_rounded,
  'Icons.cloud_outlined': Icons.cloud_outlined,
  'Icons.cloud_circle': Icons.cloud_circle,
  'Icons.cloud_circle_sharp': Icons.cloud_circle_sharp,
  'Icons.cloud_circle_rounded': Icons.cloud_circle_rounded,
  'Icons.cloud_circle_outlined': Icons.cloud_circle_outlined,
  'Icons.cloud_done': Icons.cloud_done,
  'Icons.cloud_done_sharp': Icons.cloud_done_sharp,
  'Icons.cloud_done_rounded': Icons.cloud_done_rounded,
  'Icons.cloud_done_outlined': Icons.cloud_done_outlined,
  'Icons.cloud_download': Icons.cloud_download,
  'Icons.cloud_download_sharp': Icons.cloud_download_sharp,
  'Icons.cloud_download_rounded': Icons.cloud_download_rounded,
  'Icons.cloud_download_outlined': Icons.cloud_download_outlined,
  'Icons.cloud_off': Icons.cloud_off,
  'Icons.cloud_off_sharp': Icons.cloud_off_sharp,
  'Icons.cloud_off_rounded': Icons.cloud_off_rounded,
  'Icons.cloud_off_outlined': Icons.cloud_off_outlined,
  'Icons.cloud_queue': Icons.cloud_queue,
  'Icons.cloud_queue_sharp': Icons.cloud_queue_sharp,
  'Icons.cloud_queue_rounded': Icons.cloud_queue_rounded,
  'Icons.cloud_queue_outlined': Icons.cloud_queue_outlined,
  'Icons.cloud_sync': Icons.cloud_sync,
  'Icons.cloud_sync_sharp': Icons.cloud_sync_sharp,
  'Icons.cloud_sync_rounded': Icons.cloud_sync_rounded,
  'Icons.cloud_sync_outlined': Icons.cloud_sync_outlined,
  'Icons.cloud_upload': Icons.cloud_upload,
  'Icons.cloud_upload_sharp': Icons.cloud_upload_sharp,
  'Icons.cloud_upload_rounded': Icons.cloud_upload_rounded,
  'Icons.cloud_upload_outlined': Icons.cloud_upload_outlined,
  'Icons.cloudy_snowing': Icons.cloudy_snowing,
  'Icons.co2': Icons.co2,
  'Icons.co2_sharp': Icons.co2_sharp,
  'Icons.co2_rounded': Icons.co2_rounded,
  'Icons.co2_outlined': Icons.co2_outlined,
  'Icons.co_present': Icons.co_present,
  'Icons.co_present_sharp': Icons.co_present_sharp,
  'Icons.co_present_rounded': Icons.co_present_rounded,
  'Icons.co_present_outlined': Icons.co_present_outlined,
  'Icons.code': Icons.code,
  'Icons.code_sharp': Icons.code_sharp,
  'Icons.code_rounded': Icons.code_rounded,
  'Icons.code_outlined': Icons.code_outlined,
  'Icons.code_off': Icons.code_off,
  'Icons.code_off_sharp': Icons.code_off_sharp,
  'Icons.code_off_rounded': Icons.code_off_rounded,
  'Icons.code_off_outlined': Icons.code_off_outlined,
  'Icons.coffee': Icons.coffee,
  'Icons.coffee_sharp': Icons.coffee_sharp,
  'Icons.coffee_rounded': Icons.coffee_rounded,
  'Icons.coffee_outlined': Icons.coffee_outlined,
  'Icons.coffee_maker': Icons.coffee_maker,
  'Icons.coffee_maker_sharp': Icons.coffee_maker_sharp,
  'Icons.coffee_maker_rounded': Icons.coffee_maker_rounded,
  'Icons.coffee_maker_outlined': Icons.coffee_maker_outlined,
  'Icons.collections': Icons.collections,
  'Icons.collections_sharp': Icons.collections_sharp,
  'Icons.collections_rounded': Icons.collections_rounded,
  'Icons.collections_outlined': Icons.collections_outlined,
  'Icons.collections_bookmark': Icons.collections_bookmark,
  'Icons.collections_bookmark_sharp': Icons.collections_bookmark_sharp,
  'Icons.collections_bookmark_rounded': Icons.collections_bookmark_rounded,
  'Icons.collections_bookmark_outlined': Icons.collections_bookmark_outlined,
  'Icons.color_lens': Icons.color_lens,
  'Icons.color_lens_sharp': Icons.color_lens_sharp,
  'Icons.color_lens_rounded': Icons.color_lens_rounded,
  'Icons.color_lens_outlined': Icons.color_lens_outlined,
  'Icons.colorize': Icons.colorize,
  'Icons.colorize_sharp': Icons.colorize_sharp,
  'Icons.colorize_rounded': Icons.colorize_rounded,
  'Icons.colorize_outlined': Icons.colorize_outlined,
  'Icons.comment': Icons.comment,
  'Icons.comment_sharp': Icons.comment_sharp,
  'Icons.comment_rounded': Icons.comment_rounded,
  'Icons.comment_outlined': Icons.comment_outlined,
  'Icons.comment_bank': Icons.comment_bank,
  'Icons.comment_bank_sharp': Icons.comment_bank_sharp,
  'Icons.comment_bank_rounded': Icons.comment_bank_rounded,
  'Icons.comment_bank_outlined': Icons.comment_bank_outlined,
  'Icons.comments_disabled': Icons.comments_disabled,
  'Icons.comments_disabled_sharp': Icons.comments_disabled_sharp,
  'Icons.comments_disabled_rounded': Icons.comments_disabled_rounded,
  'Icons.comments_disabled_outlined': Icons.comments_disabled_outlined,
  'Icons.commit': Icons.commit,
  'Icons.commit_sharp': Icons.commit_sharp,
  'Icons.commit_rounded': Icons.commit_rounded,
  'Icons.commit_outlined': Icons.commit_outlined,
  'Icons.commute': Icons.commute,
  'Icons.commute_sharp': Icons.commute_sharp,
  'Icons.commute_rounded': Icons.commute_rounded,
  'Icons.commute_outlined': Icons.commute_outlined,
  'Icons.compare': Icons.compare,
  'Icons.compare_sharp': Icons.compare_sharp,
  'Icons.compare_rounded': Icons.compare_rounded,
  'Icons.compare_outlined': Icons.compare_outlined,
  'Icons.compare_arrows': Icons.compare_arrows,
  'Icons.compare_arrows_sharp': Icons.compare_arrows_sharp,
  'Icons.compare_arrows_rounded': Icons.compare_arrows_rounded,
  'Icons.compare_arrows_outlined': Icons.compare_arrows_outlined,
  'Icons.compass_calibration': Icons.compass_calibration,
  'Icons.compass_calibration_sharp': Icons.compass_calibration_sharp,
  'Icons.compass_calibration_rounded': Icons.compass_calibration_rounded,
  'Icons.compass_calibration_outlined': Icons.compass_calibration_outlined,
  'Icons.compost': Icons.compost,
  'Icons.compost_sharp': Icons.compost_sharp,
  'Icons.compost_rounded': Icons.compost_rounded,
  'Icons.compost_outlined': Icons.compost_outlined,
  'Icons.compress': Icons.compress,
  'Icons.compress_sharp': Icons.compress_sharp,
  'Icons.compress_rounded': Icons.compress_rounded,
  'Icons.compress_outlined': Icons.compress_outlined,
  'Icons.computer': Icons.computer,
  'Icons.computer_sharp': Icons.computer_sharp,
  'Icons.computer_rounded': Icons.computer_rounded,
  'Icons.computer_outlined': Icons.computer_outlined,
  'Icons.confirmation_num': Icons.confirmation_num,
  'Icons.confirmation_num_sharp': Icons.confirmation_num_sharp,
  'Icons.confirmation_num_rounded': Icons.confirmation_num_rounded,
  'Icons.confirmation_num_outlined': Icons.confirmation_num_outlined,
  'Icons.confirmation_number': Icons.confirmation_number,
  'Icons.confirmation_number_sharp': Icons.confirmation_number_sharp,
  'Icons.confirmation_number_rounded': Icons.confirmation_number_rounded,
  'Icons.confirmation_number_outlined': Icons.confirmation_number_outlined,
  'Icons.connect_without_contact': Icons.connect_without_contact,
  'Icons.connect_without_contact_sharp': Icons.connect_without_contact_sharp,
  'Icons.connect_without_contact_rounded':
      Icons.connect_without_contact_rounded,
  'Icons.connect_without_contact_outlined':
      Icons.connect_without_contact_outlined,
  'Icons.connected_tv': Icons.connected_tv,
  'Icons.connected_tv_sharp': Icons.connected_tv_sharp,
  'Icons.connected_tv_rounded': Icons.connected_tv_rounded,
  'Icons.connected_tv_outlined': Icons.connected_tv_outlined,
  'Icons.connecting_airports': Icons.connecting_airports,
  'Icons.connecting_airports_sharp': Icons.connecting_airports_sharp,
  'Icons.connecting_airports_rounded': Icons.connecting_airports_rounded,
  'Icons.connecting_airports_outlined': Icons.connecting_airports_outlined,
  'Icons.construction': Icons.construction,
  'Icons.construction_sharp': Icons.construction_sharp,
  'Icons.construction_rounded': Icons.construction_rounded,
  'Icons.construction_outlined': Icons.construction_outlined,
  'Icons.contact_mail': Icons.contact_mail,
  'Icons.contact_mail_sharp': Icons.contact_mail_sharp,
  'Icons.contact_mail_rounded': Icons.contact_mail_rounded,
  'Icons.contact_mail_outlined': Icons.contact_mail_outlined,
  'Icons.contact_page': Icons.contact_page,
  'Icons.contact_page_sharp': Icons.contact_page_sharp,
  'Icons.contact_page_rounded': Icons.contact_page_rounded,
  'Icons.contact_page_outlined': Icons.contact_page_outlined,
  'Icons.contact_phone': Icons.contact_phone,
  'Icons.contact_phone_sharp': Icons.contact_phone_sharp,
  'Icons.contact_phone_rounded': Icons.contact_phone_rounded,
  'Icons.contact_phone_outlined': Icons.contact_phone_outlined,
  'Icons.contact_support': Icons.contact_support,
  'Icons.contact_support_sharp': Icons.contact_support_sharp,
  'Icons.contact_support_rounded': Icons.contact_support_rounded,
  'Icons.contact_support_outlined': Icons.contact_support_outlined,
  'Icons.contactless': Icons.contactless,
  'Icons.contactless_sharp': Icons.contactless_sharp,
  'Icons.contactless_rounded': Icons.contactless_rounded,
  'Icons.contactless_outlined': Icons.contactless_outlined,
  'Icons.contacts': Icons.contacts,
  'Icons.contacts_sharp': Icons.contacts_sharp,
  'Icons.contacts_rounded': Icons.contacts_rounded,
  'Icons.contacts_outlined': Icons.contacts_outlined,
  'Icons.content_copy': Icons.content_copy,
  'Icons.content_copy_sharp': Icons.content_copy_sharp,
  'Icons.content_copy_rounded': Icons.content_copy_rounded,
  'Icons.content_copy_outlined': Icons.content_copy_outlined,
  'Icons.content_cut': Icons.content_cut,
  'Icons.content_cut_sharp': Icons.content_cut_sharp,
  'Icons.content_cut_rounded': Icons.content_cut_rounded,
  'Icons.content_cut_outlined': Icons.content_cut_outlined,
  'Icons.content_paste': Icons.content_paste,
  'Icons.content_paste_sharp': Icons.content_paste_sharp,
  'Icons.content_paste_rounded': Icons.content_paste_rounded,
  'Icons.content_paste_outlined': Icons.content_paste_outlined,
  'Icons.content_paste_go': Icons.content_paste_go,
  'Icons.content_paste_go_sharp': Icons.content_paste_go_sharp,
  'Icons.content_paste_go_rounded': Icons.content_paste_go_rounded,
  'Icons.content_paste_go_outlined': Icons.content_paste_go_outlined,
  'Icons.content_paste_off': Icons.content_paste_off,
  'Icons.content_paste_off_sharp': Icons.content_paste_off_sharp,
  'Icons.content_paste_off_rounded': Icons.content_paste_off_rounded,
  'Icons.content_paste_off_outlined': Icons.content_paste_off_outlined,
  'Icons.content_paste_search': Icons.content_paste_search,
  'Icons.content_paste_search_sharp': Icons.content_paste_search_sharp,
  'Icons.content_paste_search_rounded': Icons.content_paste_search_rounded,
  'Icons.content_paste_search_outlined': Icons.content_paste_search_outlined,
  'Icons.contrast': Icons.contrast,
  'Icons.contrast_sharp': Icons.contrast_sharp,
  'Icons.contrast_rounded': Icons.contrast_rounded,
  'Icons.contrast_outlined': Icons.contrast_outlined,
  'Icons.control_camera': Icons.control_camera,
  'Icons.control_camera_sharp': Icons.control_camera_sharp,
  'Icons.control_camera_rounded': Icons.control_camera_rounded,
  'Icons.control_camera_outlined': Icons.control_camera_outlined,
  'Icons.control_point': Icons.control_point,
  'Icons.control_point_sharp': Icons.control_point_sharp,
  'Icons.control_point_rounded': Icons.control_point_rounded,
  'Icons.control_point_outlined': Icons.control_point_outlined,
  'Icons.control_point_duplicate': Icons.control_point_duplicate,
  'Icons.control_point_duplicate_sharp': Icons.control_point_duplicate_sharp,
  'Icons.control_point_duplicate_rounded':
      Icons.control_point_duplicate_rounded,
  'Icons.control_point_duplicate_outlined':
      Icons.control_point_duplicate_outlined,
  'Icons.cookie': Icons.cookie,
  'Icons.cookie_sharp': Icons.cookie_sharp,
  'Icons.cookie_rounded': Icons.cookie_rounded,
  'Icons.cookie_outlined': Icons.cookie_outlined,
  'Icons.copy': Icons.copy,
  'Icons.copy_sharp': Icons.copy_sharp,
  'Icons.copy_rounded': Icons.copy_rounded,
  'Icons.copy_outlined': Icons.copy_outlined,
  'Icons.copy_all': Icons.copy_all,
  'Icons.copy_all_sharp': Icons.copy_all_sharp,
  'Icons.copy_all_rounded': Icons.copy_all_rounded,
  'Icons.copy_all_outlined': Icons.copy_all_outlined,
  'Icons.copyright': Icons.copyright,
  'Icons.copyright_sharp': Icons.copyright_sharp,
  'Icons.copyright_rounded': Icons.copyright_rounded,
  'Icons.copyright_outlined': Icons.copyright_outlined,
  'Icons.coronavirus': Icons.coronavirus,
  'Icons.coronavirus_sharp': Icons.coronavirus_sharp,
  'Icons.coronavirus_rounded': Icons.coronavirus_rounded,
  'Icons.coronavirus_outlined': Icons.coronavirus_outlined,
  'Icons.corporate_fare': Icons.corporate_fare,
  'Icons.corporate_fare_sharp': Icons.corporate_fare_sharp,
  'Icons.corporate_fare_rounded': Icons.corporate_fare_rounded,
  'Icons.corporate_fare_outlined': Icons.corporate_fare_outlined,
  'Icons.cottage': Icons.cottage,
  'Icons.cottage_sharp': Icons.cottage_sharp,
  'Icons.cottage_rounded': Icons.cottage_rounded,
  'Icons.cottage_outlined': Icons.cottage_outlined,
  'Icons.countertops': Icons.countertops,
  'Icons.countertops_sharp': Icons.countertops_sharp,
  'Icons.countertops_rounded': Icons.countertops_rounded,
  'Icons.countertops_outlined': Icons.countertops_outlined,
  'Icons.create': Icons.create,
  'Icons.create_sharp': Icons.create_sharp,
  'Icons.create_rounded': Icons.create_rounded,
  'Icons.create_outlined': Icons.create_outlined,
  'Icons.create_new_folder': Icons.create_new_folder,
  'Icons.create_new_folder_sharp': Icons.create_new_folder_sharp,
  'Icons.create_new_folder_rounded': Icons.create_new_folder_rounded,
  'Icons.create_new_folder_outlined': Icons.create_new_folder_outlined,
  'Icons.credit_card': Icons.credit_card,
  'Icons.credit_card_sharp': Icons.credit_card_sharp,
  'Icons.credit_card_rounded': Icons.credit_card_rounded,
  'Icons.credit_card_outlined': Icons.credit_card_outlined,
  'Icons.credit_card_off': Icons.credit_card_off,
  'Icons.credit_card_off_sharp': Icons.credit_card_off_sharp,
  'Icons.credit_card_off_rounded': Icons.credit_card_off_rounded,
  'Icons.credit_card_off_outlined': Icons.credit_card_off_outlined,
  'Icons.credit_score': Icons.credit_score,
  'Icons.credit_score_sharp': Icons.credit_score_sharp,
  'Icons.credit_score_rounded': Icons.credit_score_rounded,
  'Icons.credit_score_outlined': Icons.credit_score_outlined,
  'Icons.crib': Icons.crib,
  'Icons.crib_sharp': Icons.crib_sharp,
  'Icons.crib_rounded': Icons.crib_rounded,
  'Icons.crib_outlined': Icons.crib_outlined,
  'Icons.crisis_alert': Icons.crisis_alert,
  'Icons.crisis_alert_sharp': Icons.crisis_alert_sharp,
  'Icons.crisis_alert_rounded': Icons.crisis_alert_rounded,
  'Icons.crisis_alert_outlined': Icons.crisis_alert_outlined,
  'Icons.crop': Icons.crop,
  'Icons.crop_sharp': Icons.crop_sharp,
  'Icons.crop_rounded': Icons.crop_rounded,
  'Icons.crop_outlined': Icons.crop_outlined,
  'Icons.crop_16_9': Icons.crop_16_9,
  'Icons.crop_16_9_sharp': Icons.crop_16_9_sharp,
  'Icons.crop_16_9_rounded': Icons.crop_16_9_rounded,
  'Icons.crop_16_9_outlined': Icons.crop_16_9_outlined,
  'Icons.crop_3_2': Icons.crop_3_2,
  'Icons.crop_3_2_sharp': Icons.crop_3_2_sharp,
  'Icons.crop_3_2_rounded': Icons.crop_3_2_rounded,
  'Icons.crop_3_2_outlined': Icons.crop_3_2_outlined,
  'Icons.crop_5_4': Icons.crop_5_4,
  'Icons.crop_5_4_sharp': Icons.crop_5_4_sharp,
  'Icons.crop_5_4_rounded': Icons.crop_5_4_rounded,
  'Icons.crop_5_4_outlined': Icons.crop_5_4_outlined,
  'Icons.crop_7_5': Icons.crop_7_5,
  'Icons.crop_7_5_sharp': Icons.crop_7_5_sharp,
  'Icons.crop_7_5_rounded': Icons.crop_7_5_rounded,
  'Icons.crop_7_5_outlined': Icons.crop_7_5_outlined,
  'Icons.crop_din': Icons.crop_din,
  'Icons.crop_din_sharp': Icons.crop_din_sharp,
  'Icons.crop_din_rounded': Icons.crop_din_rounded,
  'Icons.crop_din_outlined': Icons.crop_din_outlined,
  'Icons.crop_free': Icons.crop_free,
  'Icons.crop_free_sharp': Icons.crop_free_sharp,
  'Icons.crop_free_rounded': Icons.crop_free_rounded,
  'Icons.crop_free_outlined': Icons.crop_free_outlined,
  'Icons.crop_landscape': Icons.crop_landscape,
  'Icons.crop_landscape_sharp': Icons.crop_landscape_sharp,
  'Icons.crop_landscape_rounded': Icons.crop_landscape_rounded,
  'Icons.crop_landscape_outlined': Icons.crop_landscape_outlined,
  'Icons.crop_original': Icons.crop_original,
  'Icons.crop_original_sharp': Icons.crop_original_sharp,
  'Icons.crop_original_rounded': Icons.crop_original_rounded,
  'Icons.crop_original_outlined': Icons.crop_original_outlined,
  'Icons.crop_portrait': Icons.crop_portrait,
  'Icons.crop_portrait_sharp': Icons.crop_portrait_sharp,
  'Icons.crop_portrait_rounded': Icons.crop_portrait_rounded,
  'Icons.crop_portrait_outlined': Icons.crop_portrait_outlined,
  'Icons.crop_rotate': Icons.crop_rotate,
  'Icons.crop_rotate_sharp': Icons.crop_rotate_sharp,
  'Icons.crop_rotate_rounded': Icons.crop_rotate_rounded,
  'Icons.crop_rotate_outlined': Icons.crop_rotate_outlined,
  'Icons.crop_square': Icons.crop_square,
  'Icons.crop_square_sharp': Icons.crop_square_sharp,
  'Icons.crop_square_rounded': Icons.crop_square_rounded,
  'Icons.crop_square_outlined': Icons.crop_square_outlined,
  'Icons.cruelty_free': Icons.cruelty_free,
  'Icons.cruelty_free_sharp': Icons.cruelty_free_sharp,
  'Icons.cruelty_free_rounded': Icons.cruelty_free_rounded,
  'Icons.cruelty_free_outlined': Icons.cruelty_free_outlined,
  'Icons.css': Icons.css,
  'Icons.css_sharp': Icons.css_sharp,
  'Icons.css_rounded': Icons.css_rounded,
  'Icons.css_outlined': Icons.css_outlined,
  'Icons.currency_bitcoin': Icons.currency_bitcoin,
  'Icons.currency_bitcoin_sharp': Icons.currency_bitcoin_sharp,
  'Icons.currency_bitcoin_rounded': Icons.currency_bitcoin_rounded,
  'Icons.currency_bitcoin_outlined': Icons.currency_bitcoin_outlined,
  'Icons.currency_exchange': Icons.currency_exchange,
  'Icons.currency_exchange_sharp': Icons.currency_exchange_sharp,
  'Icons.currency_exchange_rounded': Icons.currency_exchange_rounded,
  'Icons.currency_exchange_outlined': Icons.currency_exchange_outlined,
  'Icons.currency_franc': Icons.currency_franc,
  'Icons.currency_franc_sharp': Icons.currency_franc_sharp,
  'Icons.currency_franc_rounded': Icons.currency_franc_rounded,
  'Icons.currency_franc_outlined': Icons.currency_franc_outlined,
  'Icons.currency_lira': Icons.currency_lira,
  'Icons.currency_lira_sharp': Icons.currency_lira_sharp,
  'Icons.currency_lira_rounded': Icons.currency_lira_rounded,
  'Icons.currency_lira_outlined': Icons.currency_lira_outlined,
  'Icons.currency_pound': Icons.currency_pound,
  'Icons.currency_pound_sharp': Icons.currency_pound_sharp,
  'Icons.currency_pound_rounded': Icons.currency_pound_rounded,
  'Icons.currency_pound_outlined': Icons.currency_pound_outlined,
  'Icons.currency_ruble': Icons.currency_ruble,
  'Icons.currency_ruble_sharp': Icons.currency_ruble_sharp,
  'Icons.currency_ruble_rounded': Icons.currency_ruble_rounded,
  'Icons.currency_ruble_outlined': Icons.currency_ruble_outlined,
  'Icons.currency_rupee': Icons.currency_rupee,
  'Icons.currency_rupee_sharp': Icons.currency_rupee_sharp,
  'Icons.currency_rupee_rounded': Icons.currency_rupee_rounded,
  'Icons.currency_rupee_outlined': Icons.currency_rupee_outlined,
  'Icons.currency_yen': Icons.currency_yen,
  'Icons.currency_yen_sharp': Icons.currency_yen_sharp,
  'Icons.currency_yen_rounded': Icons.currency_yen_rounded,
  'Icons.currency_yen_outlined': Icons.currency_yen_outlined,
  'Icons.currency_yuan': Icons.currency_yuan,
  'Icons.currency_yuan_sharp': Icons.currency_yuan_sharp,
  'Icons.currency_yuan_rounded': Icons.currency_yuan_rounded,
  'Icons.currency_yuan_outlined': Icons.currency_yuan_outlined,
  'Icons.curtains': Icons.curtains,
  'Icons.curtains_sharp': Icons.curtains_sharp,
  'Icons.curtains_rounded': Icons.curtains_rounded,
  'Icons.curtains_outlined': Icons.curtains_outlined,
  'Icons.curtains_closed': Icons.curtains_closed,
  'Icons.curtains_closed_sharp': Icons.curtains_closed_sharp,
  'Icons.curtains_closed_rounded': Icons.curtains_closed_rounded,
  'Icons.curtains_closed_outlined': Icons.curtains_closed_outlined,
  'Icons.cut': Icons.cut,
  'Icons.cut_sharp': Icons.cut_sharp,
  'Icons.cut_rounded': Icons.cut_rounded,
  'Icons.cut_outlined': Icons.cut_outlined,
  'Icons.cyclone': Icons.cyclone,
  'Icons.cyclone_sharp': Icons.cyclone_sharp,
  'Icons.cyclone_rounded': Icons.cyclone_rounded,
  'Icons.cyclone_outlined': Icons.cyclone_outlined,
  'Icons.dangerous': Icons.dangerous,
  'Icons.dangerous_sharp': Icons.dangerous_sharp,
  'Icons.dangerous_rounded': Icons.dangerous_rounded,
  'Icons.dangerous_outlined': Icons.dangerous_outlined,
  'Icons.dark_mode': Icons.dark_mode,
  'Icons.dark_mode_sharp': Icons.dark_mode_sharp,
  'Icons.dark_mode_rounded': Icons.dark_mode_rounded,
  'Icons.dark_mode_outlined': Icons.dark_mode_outlined,
  'Icons.dashboard': Icons.dashboard,
  'Icons.dashboard_sharp': Icons.dashboard_sharp,
  'Icons.dashboard_rounded': Icons.dashboard_rounded,
  'Icons.dashboard_outlined': Icons.dashboard_outlined,
  'Icons.dashboard_customize': Icons.dashboard_customize,
  'Icons.dashboard_customize_sharp': Icons.dashboard_customize_sharp,
  'Icons.dashboard_customize_rounded': Icons.dashboard_customize_rounded,
  'Icons.dashboard_customize_outlined': Icons.dashboard_customize_outlined,
  'Icons.data_array': Icons.data_array,
  'Icons.data_array_sharp': Icons.data_array_sharp,
  'Icons.data_array_rounded': Icons.data_array_rounded,
  'Icons.data_array_outlined': Icons.data_array_outlined,
  'Icons.data_exploration': Icons.data_exploration,
  'Icons.data_exploration_sharp': Icons.data_exploration_sharp,
  'Icons.data_exploration_rounded': Icons.data_exploration_rounded,
  'Icons.data_exploration_outlined': Icons.data_exploration_outlined,
  'Icons.data_object': Icons.data_object,
  'Icons.data_object_sharp': Icons.data_object_sharp,
  'Icons.data_object_rounded': Icons.data_object_rounded,
  'Icons.data_object_outlined': Icons.data_object_outlined,
  'Icons.data_saver_off': Icons.data_saver_off,
  'Icons.data_saver_off_sharp': Icons.data_saver_off_sharp,
  'Icons.data_saver_off_rounded': Icons.data_saver_off_rounded,
  'Icons.data_saver_off_outlined': Icons.data_saver_off_outlined,
  'Icons.data_saver_on': Icons.data_saver_on,
  'Icons.data_saver_on_sharp': Icons.data_saver_on_sharp,
  'Icons.data_saver_on_rounded': Icons.data_saver_on_rounded,
  'Icons.data_saver_on_outlined': Icons.data_saver_on_outlined,
  'Icons.data_thresholding': Icons.data_thresholding,
  'Icons.data_thresholding_sharp': Icons.data_thresholding_sharp,
  'Icons.data_thresholding_rounded': Icons.data_thresholding_rounded,
  'Icons.data_thresholding_outlined': Icons.data_thresholding_outlined,
  'Icons.data_usage': Icons.data_usage,
  'Icons.data_usage_sharp': Icons.data_usage_sharp,
  'Icons.data_usage_rounded': Icons.data_usage_rounded,
  'Icons.data_usage_outlined': Icons.data_usage_outlined,
  'Icons.dataset': Icons.dataset,
  'Icons.dataset_sharp': Icons.dataset_sharp,
  'Icons.dataset_rounded': Icons.dataset_rounded,
  'Icons.dataset_outlined': Icons.dataset_outlined,
  'Icons.dataset_linked': Icons.dataset_linked,
  'Icons.dataset_linked_sharp': Icons.dataset_linked_sharp,
  'Icons.dataset_linked_rounded': Icons.dataset_linked_rounded,
  'Icons.dataset_linked_outlined': Icons.dataset_linked_outlined,
  'Icons.date_range': Icons.date_range,
  'Icons.date_range_sharp': Icons.date_range_sharp,
  'Icons.date_range_rounded': Icons.date_range_rounded,
  'Icons.date_range_outlined': Icons.date_range_outlined,
  'Icons.deblur': Icons.deblur,
  'Icons.deblur_sharp': Icons.deblur_sharp,
  'Icons.deblur_rounded': Icons.deblur_rounded,
  'Icons.deblur_outlined': Icons.deblur_outlined,
  'Icons.deck': Icons.deck,
  'Icons.deck_sharp': Icons.deck_sharp,
  'Icons.deck_rounded': Icons.deck_rounded,
  'Icons.deck_outlined': Icons.deck_outlined,
  'Icons.dehaze': Icons.dehaze,
  'Icons.dehaze_sharp': Icons.dehaze_sharp,
  'Icons.dehaze_rounded': Icons.dehaze_rounded,
  'Icons.dehaze_outlined': Icons.dehaze_outlined,
  'Icons.delete': Icons.delete,
  'Icons.delete_sharp': Icons.delete_sharp,
  'Icons.delete_rounded': Icons.delete_rounded,
  'Icons.delete_outlined': Icons.delete_outlined,
  'Icons.delete_forever': Icons.delete_forever,
  'Icons.delete_forever_sharp': Icons.delete_forever_sharp,
  'Icons.delete_forever_rounded': Icons.delete_forever_rounded,
  'Icons.delete_forever_outlined': Icons.delete_forever_outlined,
  'Icons.delete_outline': Icons.delete_outline,
  'Icons.delete_outline_sharp': Icons.delete_outline_sharp,
  'Icons.delete_outline_rounded': Icons.delete_outline_rounded,
  'Icons.delete_outline_outlined': Icons.delete_outline_outlined,
  'Icons.delete_sweep': Icons.delete_sweep,
  'Icons.delete_sweep_sharp': Icons.delete_sweep_sharp,
  'Icons.delete_sweep_rounded': Icons.delete_sweep_rounded,
  'Icons.delete_sweep_outlined': Icons.delete_sweep_outlined,
  'Icons.delivery_dining': Icons.delivery_dining,
  'Icons.delivery_dining_sharp': Icons.delivery_dining_sharp,
  'Icons.delivery_dining_rounded': Icons.delivery_dining_rounded,
  'Icons.delivery_dining_outlined': Icons.delivery_dining_outlined,
  'Icons.density_large': Icons.density_large,
  'Icons.density_large_sharp': Icons.density_large_sharp,
  'Icons.density_large_rounded': Icons.density_large_rounded,
  'Icons.density_large_outlined': Icons.density_large_outlined,
  'Icons.density_medium': Icons.density_medium,
  'Icons.density_medium_sharp': Icons.density_medium_sharp,
  'Icons.density_medium_rounded': Icons.density_medium_rounded,
  'Icons.density_medium_outlined': Icons.density_medium_outlined,
  'Icons.density_small': Icons.density_small,
  'Icons.density_small_sharp': Icons.density_small_sharp,
  'Icons.density_small_rounded': Icons.density_small_rounded,
  'Icons.density_small_outlined': Icons.density_small_outlined,
  'Icons.departure_board': Icons.departure_board,
  'Icons.departure_board_sharp': Icons.departure_board_sharp,
  'Icons.departure_board_rounded': Icons.departure_board_rounded,
  'Icons.departure_board_outlined': Icons.departure_board_outlined,
  'Icons.description': Icons.description,
  'Icons.description_sharp': Icons.description_sharp,
  'Icons.description_rounded': Icons.description_rounded,
  'Icons.description_outlined': Icons.description_outlined,
  'Icons.deselect': Icons.deselect,
  'Icons.deselect_sharp': Icons.deselect_sharp,
  'Icons.deselect_rounded': Icons.deselect_rounded,
  'Icons.deselect_outlined': Icons.deselect_outlined,
  'Icons.design_services': Icons.design_services,
  'Icons.design_services_sharp': Icons.design_services_sharp,
  'Icons.design_services_rounded': Icons.design_services_rounded,
  'Icons.design_services_outlined': Icons.design_services_outlined,
  'Icons.desk': Icons.desk,
  'Icons.desk_sharp': Icons.desk_sharp,
  'Icons.desk_rounded': Icons.desk_rounded,
  'Icons.desk_outlined': Icons.desk_outlined,
  'Icons.desktop_access_disabled': Icons.desktop_access_disabled,
  'Icons.desktop_access_disabled_sharp': Icons.desktop_access_disabled_sharp,
  'Icons.desktop_access_disabled_rounded':
      Icons.desktop_access_disabled_rounded,
  'Icons.desktop_access_disabled_outlined':
      Icons.desktop_access_disabled_outlined,
  'Icons.desktop_mac': Icons.desktop_mac,
  'Icons.desktop_mac_sharp': Icons.desktop_mac_sharp,
  'Icons.desktop_mac_rounded': Icons.desktop_mac_rounded,
  'Icons.desktop_mac_outlined': Icons.desktop_mac_outlined,
  'Icons.desktop_windows': Icons.desktop_windows,
  'Icons.desktop_windows_sharp': Icons.desktop_windows_sharp,
  'Icons.desktop_windows_rounded': Icons.desktop_windows_rounded,
  'Icons.desktop_windows_outlined': Icons.desktop_windows_outlined,
  'Icons.details': Icons.details,
  'Icons.details_sharp': Icons.details_sharp,
  'Icons.details_rounded': Icons.details_rounded,
  'Icons.details_outlined': Icons.details_outlined,
  'Icons.developer_board': Icons.developer_board,
  'Icons.developer_board_sharp': Icons.developer_board_sharp,
  'Icons.developer_board_rounded': Icons.developer_board_rounded,
  'Icons.developer_board_outlined': Icons.developer_board_outlined,
  'Icons.developer_board_off': Icons.developer_board_off,
  'Icons.developer_board_off_sharp': Icons.developer_board_off_sharp,
  'Icons.developer_board_off_rounded': Icons.developer_board_off_rounded,
  'Icons.developer_board_off_outlined': Icons.developer_board_off_outlined,
  'Icons.developer_mode': Icons.developer_mode,
  'Icons.developer_mode_sharp': Icons.developer_mode_sharp,
  'Icons.developer_mode_rounded': Icons.developer_mode_rounded,
  'Icons.developer_mode_outlined': Icons.developer_mode_outlined,
  'Icons.device_hub': Icons.device_hub,
  'Icons.device_hub_sharp': Icons.device_hub_sharp,
  'Icons.device_hub_rounded': Icons.device_hub_rounded,
  'Icons.device_hub_outlined': Icons.device_hub_outlined,
  'Icons.device_thermostat': Icons.device_thermostat,
  'Icons.device_thermostat_sharp': Icons.device_thermostat_sharp,
  'Icons.device_thermostat_rounded': Icons.device_thermostat_rounded,
  'Icons.device_thermostat_outlined': Icons.device_thermostat_outlined,
  'Icons.device_unknown': Icons.device_unknown,
  'Icons.device_unknown_sharp': Icons.device_unknown_sharp,
  'Icons.device_unknown_rounded': Icons.device_unknown_rounded,
  'Icons.device_unknown_outlined': Icons.device_unknown_outlined,
  'Icons.devices': Icons.devices,
  'Icons.devices_sharp': Icons.devices_sharp,
  'Icons.devices_rounded': Icons.devices_rounded,
  'Icons.devices_outlined': Icons.devices_outlined,
  'Icons.devices_fold': Icons.devices_fold,
  'Icons.devices_fold_sharp': Icons.devices_fold_sharp,
  'Icons.devices_fold_rounded': Icons.devices_fold_rounded,
  'Icons.devices_fold_outlined': Icons.devices_fold_outlined,
  'Icons.devices_other': Icons.devices_other,
  'Icons.devices_other_sharp': Icons.devices_other_sharp,
  'Icons.devices_other_rounded': Icons.devices_other_rounded,
  'Icons.devices_other_outlined': Icons.devices_other_outlined,
  'Icons.dialer_sip': Icons.dialer_sip,
  'Icons.dialer_sip_sharp': Icons.dialer_sip_sharp,
  'Icons.dialer_sip_rounded': Icons.dialer_sip_rounded,
  'Icons.dialer_sip_outlined': Icons.dialer_sip_outlined,
  'Icons.dialpad': Icons.dialpad,
  'Icons.dialpad_sharp': Icons.dialpad_sharp,
  'Icons.dialpad_rounded': Icons.dialpad_rounded,
  'Icons.dialpad_outlined': Icons.dialpad_outlined,
  'Icons.diamond': Icons.diamond,
  'Icons.diamond_sharp': Icons.diamond_sharp,
  'Icons.diamond_rounded': Icons.diamond_rounded,
  'Icons.diamond_outlined': Icons.diamond_outlined,
  'Icons.difference': Icons.difference,
  'Icons.difference_sharp': Icons.difference_sharp,
  'Icons.difference_rounded': Icons.difference_rounded,
  'Icons.difference_outlined': Icons.difference_outlined,
  'Icons.dining': Icons.dining,
  'Icons.dining_sharp': Icons.dining_sharp,
  'Icons.dining_rounded': Icons.dining_rounded,
  'Icons.dining_outlined': Icons.dining_outlined,
  'Icons.dinner_dining': Icons.dinner_dining,
  'Icons.dinner_dining_sharp': Icons.dinner_dining_sharp,
  'Icons.dinner_dining_rounded': Icons.dinner_dining_rounded,
  'Icons.dinner_dining_outlined': Icons.dinner_dining_outlined,
  'Icons.directions': Icons.directions,
  'Icons.directions_sharp': Icons.directions_sharp,
  'Icons.directions_rounded': Icons.directions_rounded,
  'Icons.directions_outlined': Icons.directions_outlined,
  'Icons.directions_bike': Icons.directions_bike,
  'Icons.directions_bike_sharp': Icons.directions_bike_sharp,
  'Icons.directions_bike_rounded': Icons.directions_bike_rounded,
  'Icons.directions_bike_outlined': Icons.directions_bike_outlined,
  'Icons.directions_boat': Icons.directions_boat,
  'Icons.directions_boat_sharp': Icons.directions_boat_sharp,
  'Icons.directions_boat_rounded': Icons.directions_boat_rounded,
  'Icons.directions_boat_outlined': Icons.directions_boat_outlined,
  'Icons.directions_boat_filled': Icons.directions_boat_filled,
  'Icons.directions_boat_filled_sharp': Icons.directions_boat_filled_sharp,
  'Icons.directions_boat_filled_rounded': Icons.directions_boat_filled_rounded,
  'Icons.directions_boat_filled_outlined':
      Icons.directions_boat_filled_outlined,
  'Icons.directions_bus': Icons.directions_bus,
  'Icons.directions_bus_sharp': Icons.directions_bus_sharp,
  'Icons.directions_bus_rounded': Icons.directions_bus_rounded,
  'Icons.directions_bus_outlined': Icons.directions_bus_outlined,
  'Icons.directions_bus_filled': Icons.directions_bus_filled,
  'Icons.directions_bus_filled_sharp': Icons.directions_bus_filled_sharp,
  'Icons.directions_bus_filled_rounded': Icons.directions_bus_filled_rounded,
  'Icons.directions_bus_filled_outlined': Icons.directions_bus_filled_outlined,
  'Icons.directions_car': Icons.directions_car,
  'Icons.directions_car_sharp': Icons.directions_car_sharp,
  'Icons.directions_car_rounded': Icons.directions_car_rounded,
  'Icons.directions_car_outlined': Icons.directions_car_outlined,
  'Icons.directions_car_filled': Icons.directions_car_filled,
  'Icons.directions_car_filled_sharp': Icons.directions_car_filled_sharp,
  'Icons.directions_car_filled_rounded': Icons.directions_car_filled_rounded,
  'Icons.directions_car_filled_outlined': Icons.directions_car_filled_outlined,
  'Icons.directions_ferry': Icons.directions_ferry,
  'Icons.directions_ferry_sharp': Icons.directions_ferry_sharp,
  'Icons.directions_ferry_rounded': Icons.directions_ferry_rounded,
  'Icons.directions_ferry_outlined': Icons.directions_ferry_outlined,
  'Icons.directions_off': Icons.directions_off,
  'Icons.directions_off_sharp': Icons.directions_off_sharp,
  'Icons.directions_off_rounded': Icons.directions_off_rounded,
  'Icons.directions_off_outlined': Icons.directions_off_outlined,
  'Icons.directions_railway': Icons.directions_railway,
  'Icons.directions_railway_sharp': Icons.directions_railway_sharp,
  'Icons.directions_railway_rounded': Icons.directions_railway_rounded,
  'Icons.directions_railway_outlined': Icons.directions_railway_outlined,
  'Icons.directions_railway_filled': Icons.directions_railway_filled,
  'Icons.directions_railway_filled_sharp':
      Icons.directions_railway_filled_sharp,
  'Icons.directions_railway_filled_rounded':
      Icons.directions_railway_filled_rounded,
  'Icons.directions_railway_filled_outlined':
      Icons.directions_railway_filled_outlined,
  'Icons.directions_run': Icons.directions_run,
  'Icons.directions_run_sharp': Icons.directions_run_sharp,
  'Icons.directions_run_rounded': Icons.directions_run_rounded,
  'Icons.directions_run_outlined': Icons.directions_run_outlined,
  'Icons.directions_subway': Icons.directions_subway,
  'Icons.directions_subway_sharp': Icons.directions_subway_sharp,
  'Icons.directions_subway_rounded': Icons.directions_subway_rounded,
  'Icons.directions_subway_outlined': Icons.directions_subway_outlined,
  'Icons.directions_subway_filled': Icons.directions_subway_filled,
  'Icons.directions_subway_filled_sharp': Icons.directions_subway_filled_sharp,
  'Icons.directions_subway_filled_rounded':
      Icons.directions_subway_filled_rounded,
  'Icons.directions_subway_filled_outlined':
      Icons.directions_subway_filled_outlined,
  'Icons.directions_train': Icons.directions_train,
  'Icons.directions_train_sharp': Icons.directions_train_sharp,
  'Icons.directions_train_rounded': Icons.directions_train_rounded,
  'Icons.directions_train_outlined': Icons.directions_train_outlined,
  'Icons.directions_transit': Icons.directions_transit,
  'Icons.directions_transit_sharp': Icons.directions_transit_sharp,
  'Icons.directions_transit_rounded': Icons.directions_transit_rounded,
  'Icons.directions_transit_outlined': Icons.directions_transit_outlined,
  'Icons.directions_transit_filled': Icons.directions_transit_filled,
  'Icons.directions_transit_filled_sharp':
      Icons.directions_transit_filled_sharp,
  'Icons.directions_transit_filled_rounded':
      Icons.directions_transit_filled_rounded,
  'Icons.directions_transit_filled_outlined':
      Icons.directions_transit_filled_outlined,
  'Icons.directions_walk': Icons.directions_walk,
  'Icons.directions_walk_sharp': Icons.directions_walk_sharp,
  'Icons.directions_walk_rounded': Icons.directions_walk_rounded,
  'Icons.directions_walk_outlined': Icons.directions_walk_outlined,
  'Icons.dirty_lens': Icons.dirty_lens,
  'Icons.dirty_lens_sharp': Icons.dirty_lens_sharp,
  'Icons.dirty_lens_rounded': Icons.dirty_lens_rounded,
  'Icons.dirty_lens_outlined': Icons.dirty_lens_outlined,
  'Icons.disabled_by_default': Icons.disabled_by_default,
  'Icons.disabled_by_default_sharp': Icons.disabled_by_default_sharp,
  'Icons.disabled_by_default_rounded': Icons.disabled_by_default_rounded,
  'Icons.disabled_by_default_outlined': Icons.disabled_by_default_outlined,
  'Icons.disabled_visible': Icons.disabled_visible,
  'Icons.disabled_visible_sharp': Icons.disabled_visible_sharp,
  'Icons.disabled_visible_rounded': Icons.disabled_visible_rounded,
  'Icons.disabled_visible_outlined': Icons.disabled_visible_outlined,
  'Icons.disc_full': Icons.disc_full,
  'Icons.disc_full_sharp': Icons.disc_full_sharp,
  'Icons.disc_full_rounded': Icons.disc_full_rounded,
  'Icons.disc_full_outlined': Icons.disc_full_outlined,
  'Icons.discord': Icons.discord,
  'Icons.discord_sharp': Icons.discord_sharp,
  'Icons.discord_rounded': Icons.discord_rounded,
  'Icons.discord_outlined': Icons.discord_outlined,
  'Icons.discount': Icons.discount,
  'Icons.discount_sharp': Icons.discount_sharp,
  'Icons.discount_rounded': Icons.discount_rounded,
  'Icons.discount_outlined': Icons.discount_outlined,
  'Icons.display_settings': Icons.display_settings,
  'Icons.display_settings_sharp': Icons.display_settings_sharp,
  'Icons.display_settings_rounded': Icons.display_settings_rounded,
  'Icons.display_settings_outlined': Icons.display_settings_outlined,
  'Icons.dnd_forwardslash': Icons.dnd_forwardslash,
  'Icons.dnd_forwardslash_sharp': Icons.dnd_forwardslash_sharp,
  'Icons.dnd_forwardslash_rounded': Icons.dnd_forwardslash_rounded,
  'Icons.dnd_forwardslash_outlined': Icons.dnd_forwardslash_outlined,
  'Icons.dns': Icons.dns,
  'Icons.dns_sharp': Icons.dns_sharp,
  'Icons.dns_rounded': Icons.dns_rounded,
  'Icons.dns_outlined': Icons.dns_outlined,
  'Icons.do_disturb': Icons.do_disturb,
  'Icons.do_disturb_sharp': Icons.do_disturb_sharp,
  'Icons.do_disturb_rounded': Icons.do_disturb_rounded,
  'Icons.do_disturb_outlined': Icons.do_disturb_outlined,
  'Icons.do_disturb_alt': Icons.do_disturb_alt,
  'Icons.do_disturb_alt_sharp': Icons.do_disturb_alt_sharp,
  'Icons.do_disturb_alt_rounded': Icons.do_disturb_alt_rounded,
  'Icons.do_disturb_alt_outlined': Icons.do_disturb_alt_outlined,
  'Icons.do_disturb_off': Icons.do_disturb_off,
  'Icons.do_disturb_off_sharp': Icons.do_disturb_off_sharp,
  'Icons.do_disturb_off_rounded': Icons.do_disturb_off_rounded,
  'Icons.do_disturb_off_outlined': Icons.do_disturb_off_outlined,
  'Icons.do_disturb_on': Icons.do_disturb_on,
  'Icons.do_disturb_on_sharp': Icons.do_disturb_on_sharp,
  'Icons.do_disturb_on_rounded': Icons.do_disturb_on_rounded,
  'Icons.do_disturb_on_outlined': Icons.do_disturb_on_outlined,
  'Icons.do_not_disturb': Icons.do_not_disturb,
  'Icons.do_not_disturb_sharp': Icons.do_not_disturb_sharp,
  'Icons.do_not_disturb_rounded': Icons.do_not_disturb_rounded,
  'Icons.do_not_disturb_outlined': Icons.do_not_disturb_outlined,
  'Icons.do_not_disturb_alt': Icons.do_not_disturb_alt,
  'Icons.do_not_disturb_alt_sharp': Icons.do_not_disturb_alt_sharp,
  'Icons.do_not_disturb_alt_rounded': Icons.do_not_disturb_alt_rounded,
  'Icons.do_not_disturb_alt_outlined': Icons.do_not_disturb_alt_outlined,
  'Icons.do_not_disturb_off': Icons.do_not_disturb_off,
  'Icons.do_not_disturb_off_sharp': Icons.do_not_disturb_off_sharp,
  'Icons.do_not_disturb_off_rounded': Icons.do_not_disturb_off_rounded,
  'Icons.do_not_disturb_off_outlined': Icons.do_not_disturb_off_outlined,
  'Icons.do_not_disturb_on': Icons.do_not_disturb_on,
  'Icons.do_not_disturb_on_sharp': Icons.do_not_disturb_on_sharp,
  'Icons.do_not_disturb_on_rounded': Icons.do_not_disturb_on_rounded,
  'Icons.do_not_disturb_on_outlined': Icons.do_not_disturb_on_outlined,
  'Icons.do_not_disturb_on_total_silence':
      Icons.do_not_disturb_on_total_silence,
  'Icons.do_not_disturb_on_total_silence_sharp':
      Icons.do_not_disturb_on_total_silence_sharp,
  'Icons.do_not_disturb_on_total_silence_rounded':
      Icons.do_not_disturb_on_total_silence_rounded,
  'Icons.do_not_disturb_on_total_silence_outlined':
      Icons.do_not_disturb_on_total_silence_outlined,
  'Icons.do_not_step': Icons.do_not_step,
  'Icons.do_not_step_sharp': Icons.do_not_step_sharp,
  'Icons.do_not_step_rounded': Icons.do_not_step_rounded,
  'Icons.do_not_step_outlined': Icons.do_not_step_outlined,
  'Icons.do_not_touch': Icons.do_not_touch,
  'Icons.do_not_touch_sharp': Icons.do_not_touch_sharp,
  'Icons.do_not_touch_rounded': Icons.do_not_touch_rounded,
  'Icons.do_not_touch_outlined': Icons.do_not_touch_outlined,
  'Icons.dock': Icons.dock,
  'Icons.dock_sharp': Icons.dock_sharp,
  'Icons.dock_rounded': Icons.dock_rounded,
  'Icons.dock_outlined': Icons.dock_outlined,
  'Icons.document_scanner': Icons.document_scanner,
  'Icons.document_scanner_sharp': Icons.document_scanner_sharp,
  'Icons.document_scanner_rounded': Icons.document_scanner_rounded,
  'Icons.document_scanner_outlined': Icons.document_scanner_outlined,
  'Icons.domain': Icons.domain,
  'Icons.domain_sharp': Icons.domain_sharp,
  'Icons.domain_rounded': Icons.domain_rounded,
  'Icons.domain_outlined': Icons.domain_outlined,
  'Icons.domain_add': Icons.domain_add,
  'Icons.domain_add_sharp': Icons.domain_add_sharp,
  'Icons.domain_add_rounded': Icons.domain_add_rounded,
  'Icons.domain_add_outlined': Icons.domain_add_outlined,
  'Icons.domain_disabled': Icons.domain_disabled,
  'Icons.domain_disabled_sharp': Icons.domain_disabled_sharp,
  'Icons.domain_disabled_rounded': Icons.domain_disabled_rounded,
  'Icons.domain_disabled_outlined': Icons.domain_disabled_outlined,
  'Icons.domain_verification': Icons.domain_verification,
  'Icons.domain_verification_sharp': Icons.domain_verification_sharp,
  'Icons.domain_verification_rounded': Icons.domain_verification_rounded,
  'Icons.domain_verification_outlined': Icons.domain_verification_outlined,
  'Icons.done': Icons.done,
  'Icons.done_sharp': Icons.done_sharp,
  'Icons.done_rounded': Icons.done_rounded,
  'Icons.done_outlined': Icons.done_outlined,
  'Icons.done_all': Icons.done_all,
  'Icons.done_all_sharp': Icons.done_all_sharp,
  'Icons.done_all_rounded': Icons.done_all_rounded,
  'Icons.done_all_outlined': Icons.done_all_outlined,
  'Icons.done_outline': Icons.done_outline,
  'Icons.done_outline_sharp': Icons.done_outline_sharp,
  'Icons.done_outline_rounded': Icons.done_outline_rounded,
  'Icons.done_outline_outlined': Icons.done_outline_outlined,
  'Icons.donut_large': Icons.donut_large,
  'Icons.donut_large_sharp': Icons.donut_large_sharp,
  'Icons.donut_large_rounded': Icons.donut_large_rounded,
  'Icons.donut_large_outlined': Icons.donut_large_outlined,
  'Icons.donut_small': Icons.donut_small,
  'Icons.donut_small_sharp': Icons.donut_small_sharp,
  'Icons.donut_small_rounded': Icons.donut_small_rounded,
  'Icons.donut_small_outlined': Icons.donut_small_outlined,
  'Icons.door_back_door': Icons.door_back_door,
  'Icons.door_back_door_sharp': Icons.door_back_door_sharp,
  'Icons.door_back_door_rounded': Icons.door_back_door_rounded,
  'Icons.door_back_door_outlined': Icons.door_back_door_outlined,
  'Icons.door_front_door': Icons.door_front_door,
  'Icons.door_front_door_sharp': Icons.door_front_door_sharp,
  'Icons.door_front_door_rounded': Icons.door_front_door_rounded,
  'Icons.door_front_door_outlined': Icons.door_front_door_outlined,
  'Icons.door_sliding': Icons.door_sliding,
  'Icons.door_sliding_sharp': Icons.door_sliding_sharp,
  'Icons.door_sliding_rounded': Icons.door_sliding_rounded,
  'Icons.door_sliding_outlined': Icons.door_sliding_outlined,
  'Icons.doorbell': Icons.doorbell,
  'Icons.doorbell_sharp': Icons.doorbell_sharp,
  'Icons.doorbell_rounded': Icons.doorbell_rounded,
  'Icons.doorbell_outlined': Icons.doorbell_outlined,
  'Icons.double_arrow': Icons.double_arrow,
  'Icons.double_arrow_sharp': Icons.double_arrow_sharp,
  'Icons.double_arrow_rounded': Icons.double_arrow_rounded,
  'Icons.double_arrow_outlined': Icons.double_arrow_outlined,
  'Icons.downhill_skiing': Icons.downhill_skiing,
  'Icons.downhill_skiing_sharp': Icons.downhill_skiing_sharp,
  'Icons.downhill_skiing_rounded': Icons.downhill_skiing_rounded,
  'Icons.downhill_skiing_outlined': Icons.downhill_skiing_outlined,
  'Icons.download': Icons.download,
  'Icons.download_sharp': Icons.download_sharp,
  'Icons.download_rounded': Icons.download_rounded,
  'Icons.download_outlined': Icons.download_outlined,
  'Icons.download_done': Icons.download_done,
  'Icons.download_done_sharp': Icons.download_done_sharp,
  'Icons.download_done_rounded': Icons.download_done_rounded,
  'Icons.download_done_outlined': Icons.download_done_outlined,
  'Icons.download_for_offline': Icons.download_for_offline,
  'Icons.download_for_offline_sharp': Icons.download_for_offline_sharp,
  'Icons.download_for_offline_rounded': Icons.download_for_offline_rounded,
  'Icons.download_for_offline_outlined': Icons.download_for_offline_outlined,
  'Icons.downloading': Icons.downloading,
  'Icons.downloading_sharp': Icons.downloading_sharp,
  'Icons.downloading_rounded': Icons.downloading_rounded,
  'Icons.downloading_outlined': Icons.downloading_outlined,
  'Icons.drafts': Icons.drafts,
  'Icons.drafts_sharp': Icons.drafts_sharp,
  'Icons.drafts_rounded': Icons.drafts_rounded,
  'Icons.drafts_outlined': Icons.drafts_outlined,
  'Icons.drag_handle': Icons.drag_handle,
  'Icons.drag_handle_sharp': Icons.drag_handle_sharp,
  'Icons.drag_handle_rounded': Icons.drag_handle_rounded,
  'Icons.drag_handle_outlined': Icons.drag_handle_outlined,
  'Icons.drag_indicator': Icons.drag_indicator,
  'Icons.drag_indicator_sharp': Icons.drag_indicator_sharp,
  'Icons.drag_indicator_rounded': Icons.drag_indicator_rounded,
  'Icons.drag_indicator_outlined': Icons.drag_indicator_outlined,
  'Icons.draw': Icons.draw,
  'Icons.draw_sharp': Icons.draw_sharp,
  'Icons.draw_rounded': Icons.draw_rounded,
  'Icons.draw_outlined': Icons.draw_outlined,
  'Icons.drive_eta': Icons.drive_eta,
  'Icons.drive_eta_sharp': Icons.drive_eta_sharp,
  'Icons.drive_eta_rounded': Icons.drive_eta_rounded,
  'Icons.drive_eta_outlined': Icons.drive_eta_outlined,
  'Icons.drive_file_move': Icons.drive_file_move,
  'Icons.drive_file_move_sharp': Icons.drive_file_move_sharp,
  'Icons.drive_file_move_rounded': Icons.drive_file_move_rounded,
  'Icons.drive_file_move_outlined': Icons.drive_file_move_outlined,
  'Icons.drive_file_move_outline': Icons.drive_file_move_outline,
  'Icons.drive_file_move_rtl': Icons.drive_file_move_rtl,
  'Icons.drive_file_move_rtl_sharp': Icons.drive_file_move_rtl_sharp,
  'Icons.drive_file_move_rtl_rounded': Icons.drive_file_move_rtl_rounded,
  'Icons.drive_file_move_rtl_outlined': Icons.drive_file_move_rtl_outlined,
  'Icons.drive_file_rename_outline': Icons.drive_file_rename_outline,
  'Icons.drive_file_rename_outline_sharp':
      Icons.drive_file_rename_outline_sharp,
  'Icons.drive_file_rename_outline_rounded':
      Icons.drive_file_rename_outline_rounded,
  'Icons.drive_file_rename_outline_outlined':
      Icons.drive_file_rename_outline_outlined,
  'Icons.drive_folder_upload': Icons.drive_folder_upload,
  'Icons.drive_folder_upload_sharp': Icons.drive_folder_upload_sharp,
  'Icons.drive_folder_upload_rounded': Icons.drive_folder_upload_rounded,
  'Icons.drive_folder_upload_outlined': Icons.drive_folder_upload_outlined,
  'Icons.dry': Icons.dry,
  'Icons.dry_sharp': Icons.dry_sharp,
  'Icons.dry_rounded': Icons.dry_rounded,
  'Icons.dry_outlined': Icons.dry_outlined,
  'Icons.dry_cleaning': Icons.dry_cleaning,
  'Icons.dry_cleaning_sharp': Icons.dry_cleaning_sharp,
  'Icons.dry_cleaning_rounded': Icons.dry_cleaning_rounded,
  'Icons.dry_cleaning_outlined': Icons.dry_cleaning_outlined,
  'Icons.duo': Icons.duo,
  'Icons.duo_sharp': Icons.duo_sharp,
  'Icons.duo_rounded': Icons.duo_rounded,
  'Icons.duo_outlined': Icons.duo_outlined,
  'Icons.dvr': Icons.dvr,
  'Icons.dvr_sharp': Icons.dvr_sharp,
  'Icons.dvr_rounded': Icons.dvr_rounded,
  'Icons.dvr_outlined': Icons.dvr_outlined,
  'Icons.dynamic_feed': Icons.dynamic_feed,
  'Icons.dynamic_feed_sharp': Icons.dynamic_feed_sharp,
  'Icons.dynamic_feed_rounded': Icons.dynamic_feed_rounded,
  'Icons.dynamic_feed_outlined': Icons.dynamic_feed_outlined,
  'Icons.dynamic_form': Icons.dynamic_form,
  'Icons.dynamic_form_sharp': Icons.dynamic_form_sharp,
  'Icons.dynamic_form_rounded': Icons.dynamic_form_rounded,
  'Icons.dynamic_form_outlined': Icons.dynamic_form_outlined,
  'Icons.e_mobiledata': Icons.e_mobiledata,
  'Icons.e_mobiledata_sharp': Icons.e_mobiledata_sharp,
  'Icons.e_mobiledata_rounded': Icons.e_mobiledata_rounded,
  'Icons.e_mobiledata_outlined': Icons.e_mobiledata_outlined,
  'Icons.earbuds': Icons.earbuds,
  'Icons.earbuds_sharp': Icons.earbuds_sharp,
  'Icons.earbuds_rounded': Icons.earbuds_rounded,
  'Icons.earbuds_outlined': Icons.earbuds_outlined,
  'Icons.earbuds_battery': Icons.earbuds_battery,
  'Icons.earbuds_battery_sharp': Icons.earbuds_battery_sharp,
  'Icons.earbuds_battery_rounded': Icons.earbuds_battery_rounded,
  'Icons.earbuds_battery_outlined': Icons.earbuds_battery_outlined,
  'Icons.east': Icons.east,
  'Icons.east_sharp': Icons.east_sharp,
  'Icons.east_rounded': Icons.east_rounded,
  'Icons.east_outlined': Icons.east_outlined,
  'Icons.eco': Icons.eco,
  'Icons.eco_sharp': Icons.eco_sharp,
  'Icons.eco_rounded': Icons.eco_rounded,
  'Icons.eco_outlined': Icons.eco_outlined,
  'Icons.edgesensor_high': Icons.edgesensor_high,
  'Icons.edgesensor_high_sharp': Icons.edgesensor_high_sharp,
  'Icons.edgesensor_high_rounded': Icons.edgesensor_high_rounded,
  'Icons.edgesensor_high_outlined': Icons.edgesensor_high_outlined,
  'Icons.edgesensor_low': Icons.edgesensor_low,
  'Icons.edgesensor_low_sharp': Icons.edgesensor_low_sharp,
  'Icons.edgesensor_low_rounded': Icons.edgesensor_low_rounded,
  'Icons.edgesensor_low_outlined': Icons.edgesensor_low_outlined,
  'Icons.edit': Icons.edit,
  'Icons.edit_sharp': Icons.edit_sharp,
  'Icons.edit_rounded': Icons.edit_rounded,
  'Icons.edit_outlined': Icons.edit_outlined,
  'Icons.edit_attributes': Icons.edit_attributes,
  'Icons.edit_attributes_sharp': Icons.edit_attributes_sharp,
  'Icons.edit_attributes_rounded': Icons.edit_attributes_rounded,
  'Icons.edit_attributes_outlined': Icons.edit_attributes_outlined,
  'Icons.edit_calendar': Icons.edit_calendar,
  'Icons.edit_calendar_sharp': Icons.edit_calendar_sharp,
  'Icons.edit_calendar_rounded': Icons.edit_calendar_rounded,
  'Icons.edit_calendar_outlined': Icons.edit_calendar_outlined,
  'Icons.edit_location': Icons.edit_location,
  'Icons.edit_location_sharp': Icons.edit_location_sharp,
  'Icons.edit_location_rounded': Icons.edit_location_rounded,
  'Icons.edit_location_outlined': Icons.edit_location_outlined,
  'Icons.edit_location_alt': Icons.edit_location_alt,
  'Icons.edit_location_alt_sharp': Icons.edit_location_alt_sharp,
  'Icons.edit_location_alt_rounded': Icons.edit_location_alt_rounded,
  'Icons.edit_location_alt_outlined': Icons.edit_location_alt_outlined,
  'Icons.edit_note': Icons.edit_note,
  'Icons.edit_note_sharp': Icons.edit_note_sharp,
  'Icons.edit_note_rounded': Icons.edit_note_rounded,
  'Icons.edit_note_outlined': Icons.edit_note_outlined,
  'Icons.edit_notifications': Icons.edit_notifications,
  'Icons.edit_notifications_sharp': Icons.edit_notifications_sharp,
  'Icons.edit_notifications_rounded': Icons.edit_notifications_rounded,
  'Icons.edit_notifications_outlined': Icons.edit_notifications_outlined,
  'Icons.edit_off': Icons.edit_off,
  'Icons.edit_off_sharp': Icons.edit_off_sharp,
  'Icons.edit_off_rounded': Icons.edit_off_rounded,
  'Icons.edit_off_outlined': Icons.edit_off_outlined,
  'Icons.edit_road': Icons.edit_road,
  'Icons.edit_road_sharp': Icons.edit_road_sharp,
  'Icons.edit_road_rounded': Icons.edit_road_rounded,
  'Icons.edit_road_outlined': Icons.edit_road_outlined,
  'Icons.egg': Icons.egg,
  'Icons.egg_sharp': Icons.egg_sharp,
  'Icons.egg_rounded': Icons.egg_rounded,
  'Icons.egg_outlined': Icons.egg_outlined,
  'Icons.egg_alt': Icons.egg_alt,
  'Icons.egg_alt_sharp': Icons.egg_alt_sharp,
  'Icons.egg_alt_rounded': Icons.egg_alt_rounded,
  'Icons.egg_alt_outlined': Icons.egg_alt_outlined,
  'Icons.eject': Icons.eject,
  'Icons.eject_sharp': Icons.eject_sharp,
  'Icons.eject_rounded': Icons.eject_rounded,
  'Icons.eject_outlined': Icons.eject_outlined,
  'Icons.elderly': Icons.elderly,
  'Icons.elderly_sharp': Icons.elderly_sharp,
  'Icons.elderly_rounded': Icons.elderly_rounded,
  'Icons.elderly_outlined': Icons.elderly_outlined,
  'Icons.elderly_woman': Icons.elderly_woman,
  'Icons.elderly_woman_sharp': Icons.elderly_woman_sharp,
  'Icons.elderly_woman_rounded': Icons.elderly_woman_rounded,
  'Icons.elderly_woman_outlined': Icons.elderly_woman_outlined,
  'Icons.electric_bike': Icons.electric_bike,
  'Icons.electric_bike_sharp': Icons.electric_bike_sharp,
  'Icons.electric_bike_rounded': Icons.electric_bike_rounded,
  'Icons.electric_bike_outlined': Icons.electric_bike_outlined,
  'Icons.electric_bolt': Icons.electric_bolt,
  'Icons.electric_bolt_sharp': Icons.electric_bolt_sharp,
  'Icons.electric_bolt_rounded': Icons.electric_bolt_rounded,
  'Icons.electric_bolt_outlined': Icons.electric_bolt_outlined,
  'Icons.electric_car': Icons.electric_car,
  'Icons.electric_car_sharp': Icons.electric_car_sharp,
  'Icons.electric_car_rounded': Icons.electric_car_rounded,
  'Icons.electric_car_outlined': Icons.electric_car_outlined,
  'Icons.electric_meter': Icons.electric_meter,
  'Icons.electric_meter_sharp': Icons.electric_meter_sharp,
  'Icons.electric_meter_rounded': Icons.electric_meter_rounded,
  'Icons.electric_meter_outlined': Icons.electric_meter_outlined,
  'Icons.electric_moped': Icons.electric_moped,
  'Icons.electric_moped_sharp': Icons.electric_moped_sharp,
  'Icons.electric_moped_rounded': Icons.electric_moped_rounded,
  'Icons.electric_moped_outlined': Icons.electric_moped_outlined,
  'Icons.electric_rickshaw': Icons.electric_rickshaw,
  'Icons.electric_rickshaw_sharp': Icons.electric_rickshaw_sharp,
  'Icons.electric_rickshaw_rounded': Icons.electric_rickshaw_rounded,
  'Icons.electric_rickshaw_outlined': Icons.electric_rickshaw_outlined,
  'Icons.electric_scooter': Icons.electric_scooter,
  'Icons.electric_scooter_sharp': Icons.electric_scooter_sharp,
  'Icons.electric_scooter_rounded': Icons.electric_scooter_rounded,
  'Icons.electric_scooter_outlined': Icons.electric_scooter_outlined,
  'Icons.electrical_services': Icons.electrical_services,
  'Icons.electrical_services_sharp': Icons.electrical_services_sharp,
  'Icons.electrical_services_rounded': Icons.electrical_services_rounded,
  'Icons.electrical_services_outlined': Icons.electrical_services_outlined,
  'Icons.elevator': Icons.elevator,
  'Icons.elevator_sharp': Icons.elevator_sharp,
  'Icons.elevator_rounded': Icons.elevator_rounded,
  'Icons.elevator_outlined': Icons.elevator_outlined,
  'Icons.email': Icons.email,
  'Icons.email_sharp': Icons.email_sharp,
  'Icons.email_rounded': Icons.email_rounded,
  'Icons.email_outlined': Icons.email_outlined,
  'Icons.emergency': Icons.emergency,
  'Icons.emergency_sharp': Icons.emergency_sharp,
  'Icons.emergency_rounded': Icons.emergency_rounded,
  'Icons.emergency_outlined': Icons.emergency_outlined,
  'Icons.emergency_recording': Icons.emergency_recording,
  'Icons.emergency_recording_sharp': Icons.emergency_recording_sharp,
  'Icons.emergency_recording_rounded': Icons.emergency_recording_rounded,
  'Icons.emergency_recording_outlined': Icons.emergency_recording_outlined,
  'Icons.emergency_share': Icons.emergency_share,
  'Icons.emergency_share_sharp': Icons.emergency_share_sharp,
  'Icons.emergency_share_rounded': Icons.emergency_share_rounded,
  'Icons.emergency_share_outlined': Icons.emergency_share_outlined,
  'Icons.emoji_emotions': Icons.emoji_emotions,
  'Icons.emoji_emotions_sharp': Icons.emoji_emotions_sharp,
  'Icons.emoji_emotions_rounded': Icons.emoji_emotions_rounded,
  'Icons.emoji_emotions_outlined': Icons.emoji_emotions_outlined,
  'Icons.emoji_events': Icons.emoji_events,
  'Icons.emoji_events_sharp': Icons.emoji_events_sharp,
  'Icons.emoji_events_rounded': Icons.emoji_events_rounded,
  'Icons.emoji_events_outlined': Icons.emoji_events_outlined,
  'Icons.emoji_flags': Icons.emoji_flags,
  'Icons.emoji_flags_sharp': Icons.emoji_flags_sharp,
  'Icons.emoji_flags_rounded': Icons.emoji_flags_rounded,
  'Icons.emoji_flags_outlined': Icons.emoji_flags_outlined,
  'Icons.emoji_food_beverage': Icons.emoji_food_beverage,
  'Icons.emoji_food_beverage_sharp': Icons.emoji_food_beverage_sharp,
  'Icons.emoji_food_beverage_rounded': Icons.emoji_food_beverage_rounded,
  'Icons.emoji_food_beverage_outlined': Icons.emoji_food_beverage_outlined,
  'Icons.emoji_nature': Icons.emoji_nature,
  'Icons.emoji_nature_sharp': Icons.emoji_nature_sharp,
  'Icons.emoji_nature_rounded': Icons.emoji_nature_rounded,
  'Icons.emoji_nature_outlined': Icons.emoji_nature_outlined,
  'Icons.emoji_objects': Icons.emoji_objects,
  'Icons.emoji_objects_sharp': Icons.emoji_objects_sharp,
  'Icons.emoji_objects_rounded': Icons.emoji_objects_rounded,
  'Icons.emoji_objects_outlined': Icons.emoji_objects_outlined,
  'Icons.emoji_people': Icons.emoji_people,
  'Icons.emoji_people_sharp': Icons.emoji_people_sharp,
  'Icons.emoji_people_rounded': Icons.emoji_people_rounded,
  'Icons.emoji_people_outlined': Icons.emoji_people_outlined,
  'Icons.emoji_symbols': Icons.emoji_symbols,
  'Icons.emoji_symbols_sharp': Icons.emoji_symbols_sharp,
  'Icons.emoji_symbols_rounded': Icons.emoji_symbols_rounded,
  'Icons.emoji_symbols_outlined': Icons.emoji_symbols_outlined,
  'Icons.emoji_transportation': Icons.emoji_transportation,
  'Icons.emoji_transportation_sharp': Icons.emoji_transportation_sharp,
  'Icons.emoji_transportation_rounded': Icons.emoji_transportation_rounded,
  'Icons.emoji_transportation_outlined': Icons.emoji_transportation_outlined,
  'Icons.energy_savings_leaf': Icons.energy_savings_leaf,
  'Icons.energy_savings_leaf_sharp': Icons.energy_savings_leaf_sharp,
  'Icons.energy_savings_leaf_rounded': Icons.energy_savings_leaf_rounded,
  'Icons.energy_savings_leaf_outlined': Icons.energy_savings_leaf_outlined,
  'Icons.engineering': Icons.engineering,
  'Icons.engineering_sharp': Icons.engineering_sharp,
  'Icons.engineering_rounded': Icons.engineering_rounded,
  'Icons.engineering_outlined': Icons.engineering_outlined,
  'Icons.enhance_photo_translate': Icons.enhance_photo_translate,
  'Icons.enhance_photo_translate_sharp': Icons.enhance_photo_translate_sharp,
  'Icons.enhance_photo_translate_rounded':
      Icons.enhance_photo_translate_rounded,
  'Icons.enhance_photo_translate_outlined':
      Icons.enhance_photo_translate_outlined,
  'Icons.enhanced_encryption': Icons.enhanced_encryption,
  'Icons.enhanced_encryption_sharp': Icons.enhanced_encryption_sharp,
  'Icons.enhanced_encryption_rounded': Icons.enhanced_encryption_rounded,
  'Icons.enhanced_encryption_outlined': Icons.enhanced_encryption_outlined,
  'Icons.equalizer': Icons.equalizer,
  'Icons.equalizer_sharp': Icons.equalizer_sharp,
  'Icons.equalizer_rounded': Icons.equalizer_rounded,
  'Icons.equalizer_outlined': Icons.equalizer_outlined,
  'Icons.error': Icons.error,
  'Icons.error_sharp': Icons.error_sharp,
  'Icons.error_rounded': Icons.error_rounded,
  'Icons.error_outlined': Icons.error_outlined,
  'Icons.error_outline': Icons.error_outline,
  'Icons.error_outline_sharp': Icons.error_outline_sharp,
  'Icons.error_outline_rounded': Icons.error_outline_rounded,
  'Icons.error_outline_outlined': Icons.error_outline_outlined,
  'Icons.escalator': Icons.escalator,
  'Icons.escalator_sharp': Icons.escalator_sharp,
  'Icons.escalator_rounded': Icons.escalator_rounded,
  'Icons.escalator_outlined': Icons.escalator_outlined,
  'Icons.escalator_warning': Icons.escalator_warning,
  'Icons.escalator_warning_sharp': Icons.escalator_warning_sharp,
  'Icons.escalator_warning_rounded': Icons.escalator_warning_rounded,
  'Icons.escalator_warning_outlined': Icons.escalator_warning_outlined,
  'Icons.euro': Icons.euro,
  'Icons.euro_sharp': Icons.euro_sharp,
  'Icons.euro_rounded': Icons.euro_rounded,
  'Icons.euro_outlined': Icons.euro_outlined,
  'Icons.euro_symbol': Icons.euro_symbol,
  'Icons.euro_symbol_sharp': Icons.euro_symbol_sharp,
  'Icons.euro_symbol_rounded': Icons.euro_symbol_rounded,
  'Icons.euro_symbol_outlined': Icons.euro_symbol_outlined,
  'Icons.ev_station': Icons.ev_station,
  'Icons.ev_station_sharp': Icons.ev_station_sharp,
  'Icons.ev_station_rounded': Icons.ev_station_rounded,
  'Icons.ev_station_outlined': Icons.ev_station_outlined,
  'Icons.event': Icons.event,
  'Icons.event_sharp': Icons.event_sharp,
  'Icons.event_rounded': Icons.event_rounded,
  'Icons.event_outlined': Icons.event_outlined,
  'Icons.event_available': Icons.event_available,
  'Icons.event_available_sharp': Icons.event_available_sharp,
  'Icons.event_available_rounded': Icons.event_available_rounded,
  'Icons.event_available_outlined': Icons.event_available_outlined,
  'Icons.event_busy': Icons.event_busy,
  'Icons.event_busy_sharp': Icons.event_busy_sharp,
  'Icons.event_busy_rounded': Icons.event_busy_rounded,
  'Icons.event_busy_outlined': Icons.event_busy_outlined,
  'Icons.event_note': Icons.event_note,
  'Icons.event_note_sharp': Icons.event_note_sharp,
  'Icons.event_note_rounded': Icons.event_note_rounded,
  'Icons.event_note_outlined': Icons.event_note_outlined,
  'Icons.event_repeat': Icons.event_repeat,
  'Icons.event_repeat_sharp': Icons.event_repeat_sharp,
  'Icons.event_repeat_rounded': Icons.event_repeat_rounded,
  'Icons.event_repeat_outlined': Icons.event_repeat_outlined,
  'Icons.event_seat': Icons.event_seat,
  'Icons.event_seat_sharp': Icons.event_seat_sharp,
  'Icons.event_seat_rounded': Icons.event_seat_rounded,
  'Icons.event_seat_outlined': Icons.event_seat_outlined,
  'Icons.exit_to_app': Icons.exit_to_app,
  'Icons.exit_to_app_sharp': Icons.exit_to_app_sharp,
  'Icons.exit_to_app_rounded': Icons.exit_to_app_rounded,
  'Icons.exit_to_app_outlined': Icons.exit_to_app_outlined,
  'Icons.expand': Icons.expand,
  'Icons.expand_sharp': Icons.expand_sharp,
  'Icons.expand_rounded': Icons.expand_rounded,
  'Icons.expand_outlined': Icons.expand_outlined,
  'Icons.expand_circle_down': Icons.expand_circle_down,
  'Icons.expand_circle_down_sharp': Icons.expand_circle_down_sharp,
  'Icons.expand_circle_down_rounded': Icons.expand_circle_down_rounded,
  'Icons.expand_circle_down_outlined': Icons.expand_circle_down_outlined,
  'Icons.expand_less': Icons.expand_less,
  'Icons.expand_less_sharp': Icons.expand_less_sharp,
  'Icons.expand_less_rounded': Icons.expand_less_rounded,
  'Icons.expand_less_outlined': Icons.expand_less_outlined,
  'Icons.expand_more': Icons.expand_more,
  'Icons.expand_more_sharp': Icons.expand_more_sharp,
  'Icons.expand_more_rounded': Icons.expand_more_rounded,
  'Icons.expand_more_outlined': Icons.expand_more_outlined,
  'Icons.explicit': Icons.explicit,
  'Icons.explicit_sharp': Icons.explicit_sharp,
  'Icons.explicit_rounded': Icons.explicit_rounded,
  'Icons.explicit_outlined': Icons.explicit_outlined,
  'Icons.explore': Icons.explore,
  'Icons.explore_sharp': Icons.explore_sharp,
  'Icons.explore_rounded': Icons.explore_rounded,
  'Icons.explore_outlined': Icons.explore_outlined,
  'Icons.explore_off': Icons.explore_off,
  'Icons.explore_off_sharp': Icons.explore_off_sharp,
  'Icons.explore_off_rounded': Icons.explore_off_rounded,
  'Icons.explore_off_outlined': Icons.explore_off_outlined,
  'Icons.exposure': Icons.exposure,
  'Icons.exposure_sharp': Icons.exposure_sharp,
  'Icons.exposure_rounded': Icons.exposure_rounded,
  'Icons.exposure_outlined': Icons.exposure_outlined,
  'Icons.exposure_minus_1': Icons.exposure_minus_1,
  'Icons.exposure_minus_1_sharp': Icons.exposure_minus_1_sharp,
  'Icons.exposure_minus_1_rounded': Icons.exposure_minus_1_rounded,
  'Icons.exposure_minus_1_outlined': Icons.exposure_minus_1_outlined,
  'Icons.exposure_minus_2': Icons.exposure_minus_2,
  'Icons.exposure_minus_2_sharp': Icons.exposure_minus_2_sharp,
  'Icons.exposure_minus_2_rounded': Icons.exposure_minus_2_rounded,
  'Icons.exposure_minus_2_outlined': Icons.exposure_minus_2_outlined,
  'Icons.exposure_neg_1': Icons.exposure_neg_1,
  'Icons.exposure_neg_1_sharp': Icons.exposure_neg_1_sharp,
  'Icons.exposure_neg_1_rounded': Icons.exposure_neg_1_rounded,
  'Icons.exposure_neg_1_outlined': Icons.exposure_neg_1_outlined,
  'Icons.exposure_neg_2': Icons.exposure_neg_2,
  'Icons.exposure_neg_2_sharp': Icons.exposure_neg_2_sharp,
  'Icons.exposure_neg_2_rounded': Icons.exposure_neg_2_rounded,
  'Icons.exposure_neg_2_outlined': Icons.exposure_neg_2_outlined,
  'Icons.exposure_plus_1': Icons.exposure_plus_1,
  'Icons.exposure_plus_1_sharp': Icons.exposure_plus_1_sharp,
  'Icons.exposure_plus_1_rounded': Icons.exposure_plus_1_rounded,
  'Icons.exposure_plus_1_outlined': Icons.exposure_plus_1_outlined,
  'Icons.exposure_plus_2': Icons.exposure_plus_2,
  'Icons.exposure_plus_2_sharp': Icons.exposure_plus_2_sharp,
  'Icons.exposure_plus_2_rounded': Icons.exposure_plus_2_rounded,
  'Icons.exposure_plus_2_outlined': Icons.exposure_plus_2_outlined,
  'Icons.exposure_zero': Icons.exposure_zero,
  'Icons.exposure_zero_sharp': Icons.exposure_zero_sharp,
  'Icons.exposure_zero_rounded': Icons.exposure_zero_rounded,
  'Icons.exposure_zero_outlined': Icons.exposure_zero_outlined,
  'Icons.extension': Icons.extension,
  'Icons.extension_sharp': Icons.extension_sharp,
  'Icons.extension_rounded': Icons.extension_rounded,
  'Icons.extension_outlined': Icons.extension_outlined,
  'Icons.extension_off': Icons.extension_off,
  'Icons.extension_off_sharp': Icons.extension_off_sharp,
  'Icons.extension_off_rounded': Icons.extension_off_rounded,
  'Icons.extension_off_outlined': Icons.extension_off_outlined,
  'Icons.face': Icons.face,
  'Icons.face_sharp': Icons.face_sharp,
  'Icons.face_rounded': Icons.face_rounded,
  'Icons.face_outlined': Icons.face_outlined,
  'Icons.face_retouching_natural': Icons.face_retouching_natural,
  'Icons.face_retouching_natural_sharp': Icons.face_retouching_natural_sharp,
  'Icons.face_retouching_natural_rounded':
      Icons.face_retouching_natural_rounded,
  'Icons.face_retouching_natural_outlined':
      Icons.face_retouching_natural_outlined,
  'Icons.face_retouching_off': Icons.face_retouching_off,
  'Icons.face_retouching_off_sharp': Icons.face_retouching_off_sharp,
  'Icons.face_retouching_off_rounded': Icons.face_retouching_off_rounded,
  'Icons.face_retouching_off_outlined': Icons.face_retouching_off_outlined,
  'Icons.face_unlock_sharp': Icons.face_unlock_sharp,
  'Icons.face_unlock_rounded': Icons.face_unlock_rounded,
  'Icons.face_unlock_outlined': Icons.face_unlock_outlined,
  'Icons.facebook': Icons.facebook,
  'Icons.facebook_sharp': Icons.facebook_sharp,
  'Icons.facebook_rounded': Icons.facebook_rounded,
  'Icons.facebook_outlined': Icons.facebook_outlined,
  'Icons.fact_check': Icons.fact_check,
  'Icons.fact_check_sharp': Icons.fact_check_sharp,
  'Icons.fact_check_rounded': Icons.fact_check_rounded,
  'Icons.fact_check_outlined': Icons.fact_check_outlined,
  'Icons.factory': Icons.factory,
  'Icons.factory_sharp': Icons.factory_sharp,
  'Icons.factory_rounded': Icons.factory_rounded,
  'Icons.factory_outlined': Icons.factory_outlined,
  'Icons.family_restroom': Icons.family_restroom,
  'Icons.family_restroom_sharp': Icons.family_restroom_sharp,
  'Icons.family_restroom_rounded': Icons.family_restroom_rounded,
  'Icons.family_restroom_outlined': Icons.family_restroom_outlined,
  'Icons.fast_forward': Icons.fast_forward,
  'Icons.fast_forward_sharp': Icons.fast_forward_sharp,
  'Icons.fast_forward_rounded': Icons.fast_forward_rounded,
  'Icons.fast_forward_outlined': Icons.fast_forward_outlined,
  'Icons.fast_rewind': Icons.fast_rewind,
  'Icons.fast_rewind_sharp': Icons.fast_rewind_sharp,
  'Icons.fast_rewind_rounded': Icons.fast_rewind_rounded,
  'Icons.fast_rewind_outlined': Icons.fast_rewind_outlined,
  'Icons.fastfood': Icons.fastfood,
  'Icons.fastfood_sharp': Icons.fastfood_sharp,
  'Icons.fastfood_rounded': Icons.fastfood_rounded,
  'Icons.fastfood_outlined': Icons.fastfood_outlined,
  'Icons.favorite': Icons.favorite,
  'Icons.favorite_sharp': Icons.favorite_sharp,
  'Icons.favorite_rounded': Icons.favorite_rounded,
  'Icons.favorite_outlined': Icons.favorite_outlined,
  'Icons.favorite_border': Icons.favorite_border,
  'Icons.favorite_border_sharp': Icons.favorite_border_sharp,
  'Icons.favorite_border_rounded': Icons.favorite_border_rounded,
  'Icons.favorite_border_outlined': Icons.favorite_border_outlined,
  'Icons.favorite_outline': Icons.favorite_outline,
  'Icons.favorite_outline_sharp': Icons.favorite_outline_sharp,
  'Icons.favorite_outline_rounded': Icons.favorite_outline_rounded,
  'Icons.favorite_outline_outlined': Icons.favorite_outline_outlined,
  'Icons.fax': Icons.fax,
  'Icons.fax_sharp': Icons.fax_sharp,
  'Icons.fax_rounded': Icons.fax_rounded,
  'Icons.fax_outlined': Icons.fax_outlined,
  'Icons.featured_play_list': Icons.featured_play_list,
  'Icons.featured_play_list_sharp': Icons.featured_play_list_sharp,
  'Icons.featured_play_list_rounded': Icons.featured_play_list_rounded,
  'Icons.featured_play_list_outlined': Icons.featured_play_list_outlined,
  'Icons.featured_video': Icons.featured_video,
  'Icons.featured_video_sharp': Icons.featured_video_sharp,
  'Icons.featured_video_rounded': Icons.featured_video_rounded,
  'Icons.featured_video_outlined': Icons.featured_video_outlined,
  'Icons.feed': Icons.feed,
  'Icons.feed_sharp': Icons.feed_sharp,
  'Icons.feed_rounded': Icons.feed_rounded,
  'Icons.feed_outlined': Icons.feed_outlined,
  'Icons.feedback': Icons.feedback,
  'Icons.feedback_sharp': Icons.feedback_sharp,
  'Icons.feedback_rounded': Icons.feedback_rounded,
  'Icons.feedback_outlined': Icons.feedback_outlined,
  'Icons.female': Icons.female,
  'Icons.female_sharp': Icons.female_sharp,
  'Icons.female_rounded': Icons.female_rounded,
  'Icons.female_outlined': Icons.female_outlined,
  'Icons.fence': Icons.fence,
  'Icons.fence_sharp': Icons.fence_sharp,
  'Icons.fence_rounded': Icons.fence_rounded,
  'Icons.fence_outlined': Icons.fence_outlined,
  'Icons.festival': Icons.festival,
  'Icons.festival_sharp': Icons.festival_sharp,
  'Icons.festival_rounded': Icons.festival_rounded,
  'Icons.festival_outlined': Icons.festival_outlined,
  'Icons.fiber_dvr': Icons.fiber_dvr,
  'Icons.fiber_dvr_sharp': Icons.fiber_dvr_sharp,
  'Icons.fiber_dvr_rounded': Icons.fiber_dvr_rounded,
  'Icons.fiber_dvr_outlined': Icons.fiber_dvr_outlined,
  'Icons.fiber_manual_record': Icons.fiber_manual_record,
  'Icons.fiber_manual_record_sharp': Icons.fiber_manual_record_sharp,
  'Icons.fiber_manual_record_rounded': Icons.fiber_manual_record_rounded,
  'Icons.fiber_manual_record_outlined': Icons.fiber_manual_record_outlined,
  'Icons.fiber_new': Icons.fiber_new,
  'Icons.fiber_new_sharp': Icons.fiber_new_sharp,
  'Icons.fiber_new_rounded': Icons.fiber_new_rounded,
  'Icons.fiber_new_outlined': Icons.fiber_new_outlined,
  'Icons.fiber_pin': Icons.fiber_pin,
  'Icons.fiber_pin_sharp': Icons.fiber_pin_sharp,
  'Icons.fiber_pin_rounded': Icons.fiber_pin_rounded,
  'Icons.fiber_pin_outlined': Icons.fiber_pin_outlined,
  'Icons.fiber_smart_record': Icons.fiber_smart_record,
  'Icons.fiber_smart_record_sharp': Icons.fiber_smart_record_sharp,
  'Icons.fiber_smart_record_rounded': Icons.fiber_smart_record_rounded,
  'Icons.fiber_smart_record_outlined': Icons.fiber_smart_record_outlined,
  'Icons.file_copy': Icons.file_copy,
  'Icons.file_copy_sharp': Icons.file_copy_sharp,
  'Icons.file_copy_rounded': Icons.file_copy_rounded,
  'Icons.file_copy_outlined': Icons.file_copy_outlined,
  'Icons.file_download': Icons.file_download,
  'Icons.file_download_sharp': Icons.file_download_sharp,
  'Icons.file_download_rounded': Icons.file_download_rounded,
  'Icons.file_download_outlined': Icons.file_download_outlined,
  'Icons.file_download_done': Icons.file_download_done,
  'Icons.file_download_done_sharp': Icons.file_download_done_sharp,
  'Icons.file_download_done_rounded': Icons.file_download_done_rounded,
  'Icons.file_download_done_outlined': Icons.file_download_done_outlined,
  'Icons.file_download_off': Icons.file_download_off,
  'Icons.file_download_off_sharp': Icons.file_download_off_sharp,
  'Icons.file_download_off_rounded': Icons.file_download_off_rounded,
  'Icons.file_download_off_outlined': Icons.file_download_off_outlined,
  'Icons.file_open': Icons.file_open,
  'Icons.file_open_sharp': Icons.file_open_sharp,
  'Icons.file_open_rounded': Icons.file_open_rounded,
  'Icons.file_open_outlined': Icons.file_open_outlined,
  'Icons.file_present': Icons.file_present,
  'Icons.file_present_sharp': Icons.file_present_sharp,
  'Icons.file_present_rounded': Icons.file_present_rounded,
  'Icons.file_present_outlined': Icons.file_present_outlined,
  'Icons.file_upload': Icons.file_upload,
  'Icons.file_upload_sharp': Icons.file_upload_sharp,
  'Icons.file_upload_rounded': Icons.file_upload_rounded,
  'Icons.file_upload_outlined': Icons.file_upload_outlined,
  'Icons.filter': Icons.filter,
  'Icons.filter_sharp': Icons.filter_sharp,
  'Icons.filter_rounded': Icons.filter_rounded,
  'Icons.filter_outlined': Icons.filter_outlined,
  'Icons.filter_1': Icons.filter_1,
  'Icons.filter_1_sharp': Icons.filter_1_sharp,
  'Icons.filter_1_rounded': Icons.filter_1_rounded,
  'Icons.filter_1_outlined': Icons.filter_1_outlined,
  'Icons.filter_2': Icons.filter_2,
  'Icons.filter_2_sharp': Icons.filter_2_sharp,
  'Icons.filter_2_rounded': Icons.filter_2_rounded,
  'Icons.filter_2_outlined': Icons.filter_2_outlined,
  'Icons.filter_3': Icons.filter_3,
  'Icons.filter_3_sharp': Icons.filter_3_sharp,
  'Icons.filter_3_rounded': Icons.filter_3_rounded,
  'Icons.filter_3_outlined': Icons.filter_3_outlined,
  'Icons.filter_4': Icons.filter_4,
  'Icons.filter_4_sharp': Icons.filter_4_sharp,
  'Icons.filter_4_rounded': Icons.filter_4_rounded,
  'Icons.filter_4_outlined': Icons.filter_4_outlined,
  'Icons.filter_5': Icons.filter_5,
  'Icons.filter_5_sharp': Icons.filter_5_sharp,
  'Icons.filter_5_rounded': Icons.filter_5_rounded,
  'Icons.filter_5_outlined': Icons.filter_5_outlined,
  'Icons.filter_6': Icons.filter_6,
  'Icons.filter_6_sharp': Icons.filter_6_sharp,
  'Icons.filter_6_rounded': Icons.filter_6_rounded,
  'Icons.filter_6_outlined': Icons.filter_6_outlined,
  'Icons.filter_7': Icons.filter_7,
  'Icons.filter_7_sharp': Icons.filter_7_sharp,
  'Icons.filter_7_rounded': Icons.filter_7_rounded,
  'Icons.filter_7_outlined': Icons.filter_7_outlined,
  'Icons.filter_8': Icons.filter_8,
  'Icons.filter_8_sharp': Icons.filter_8_sharp,
  'Icons.filter_8_rounded': Icons.filter_8_rounded,
  'Icons.filter_8_outlined': Icons.filter_8_outlined,
  'Icons.filter_9': Icons.filter_9,
  'Icons.filter_9_sharp': Icons.filter_9_sharp,
  'Icons.filter_9_rounded': Icons.filter_9_rounded,
  'Icons.filter_9_outlined': Icons.filter_9_outlined,
  'Icons.filter_9_plus': Icons.filter_9_plus,
  'Icons.filter_9_plus_sharp': Icons.filter_9_plus_sharp,
  'Icons.filter_9_plus_rounded': Icons.filter_9_plus_rounded,
  'Icons.filter_9_plus_outlined': Icons.filter_9_plus_outlined,
  'Icons.filter_alt': Icons.filter_alt,
  'Icons.filter_alt_sharp': Icons.filter_alt_sharp,
  'Icons.filter_alt_rounded': Icons.filter_alt_rounded,
  'Icons.filter_alt_outlined': Icons.filter_alt_outlined,
  'Icons.filter_alt_off': Icons.filter_alt_off,
  'Icons.filter_alt_off_sharp': Icons.filter_alt_off_sharp,
  'Icons.filter_alt_off_rounded': Icons.filter_alt_off_rounded,
  'Icons.filter_alt_off_outlined': Icons.filter_alt_off_outlined,
  'Icons.filter_b_and_w': Icons.filter_b_and_w,
  'Icons.filter_b_and_w_sharp': Icons.filter_b_and_w_sharp,
  'Icons.filter_b_and_w_rounded': Icons.filter_b_and_w_rounded,
  'Icons.filter_b_and_w_outlined': Icons.filter_b_and_w_outlined,
  'Icons.filter_center_focus': Icons.filter_center_focus,
  'Icons.filter_center_focus_sharp': Icons.filter_center_focus_sharp,
  'Icons.filter_center_focus_rounded': Icons.filter_center_focus_rounded,
  'Icons.filter_center_focus_outlined': Icons.filter_center_focus_outlined,
  'Icons.filter_drama': Icons.filter_drama,
  'Icons.filter_drama_sharp': Icons.filter_drama_sharp,
  'Icons.filter_drama_rounded': Icons.filter_drama_rounded,
  'Icons.filter_drama_outlined': Icons.filter_drama_outlined,
  'Icons.filter_frames': Icons.filter_frames,
  'Icons.filter_frames_sharp': Icons.filter_frames_sharp,
  'Icons.filter_frames_rounded': Icons.filter_frames_rounded,
  'Icons.filter_frames_outlined': Icons.filter_frames_outlined,
  'Icons.filter_hdr': Icons.filter_hdr,
  'Icons.filter_hdr_sharp': Icons.filter_hdr_sharp,
  'Icons.filter_hdr_rounded': Icons.filter_hdr_rounded,
  'Icons.filter_hdr_outlined': Icons.filter_hdr_outlined,
  'Icons.filter_list': Icons.filter_list,
  'Icons.filter_list_sharp': Icons.filter_list_sharp,
  'Icons.filter_list_rounded': Icons.filter_list_rounded,
  'Icons.filter_list_outlined': Icons.filter_list_outlined,
  'Icons.filter_list_alt': Icons.filter_list_alt,
  'Icons.filter_list_off': Icons.filter_list_off,
  'Icons.filter_list_off_sharp': Icons.filter_list_off_sharp,
  'Icons.filter_list_off_rounded': Icons.filter_list_off_rounded,
  'Icons.filter_list_off_outlined': Icons.filter_list_off_outlined,
  'Icons.filter_none': Icons.filter_none,
  'Icons.filter_none_sharp': Icons.filter_none_sharp,
  'Icons.filter_none_rounded': Icons.filter_none_rounded,
  'Icons.filter_none_outlined': Icons.filter_none_outlined,
  'Icons.filter_tilt_shift': Icons.filter_tilt_shift,
  'Icons.filter_tilt_shift_sharp': Icons.filter_tilt_shift_sharp,
  'Icons.filter_tilt_shift_rounded': Icons.filter_tilt_shift_rounded,
  'Icons.filter_tilt_shift_outlined': Icons.filter_tilt_shift_outlined,
  'Icons.filter_vintage': Icons.filter_vintage,
  'Icons.filter_vintage_sharp': Icons.filter_vintage_sharp,
  'Icons.filter_vintage_rounded': Icons.filter_vintage_rounded,
  'Icons.filter_vintage_outlined': Icons.filter_vintage_outlined,
  'Icons.find_in_page': Icons.find_in_page,
  'Icons.find_in_page_sharp': Icons.find_in_page_sharp,
  'Icons.find_in_page_rounded': Icons.find_in_page_rounded,
  'Icons.find_in_page_outlined': Icons.find_in_page_outlined,
  'Icons.find_replace': Icons.find_replace,
  'Icons.find_replace_sharp': Icons.find_replace_sharp,
  'Icons.find_replace_rounded': Icons.find_replace_rounded,
  'Icons.find_replace_outlined': Icons.find_replace_outlined,
  'Icons.fingerprint': Icons.fingerprint,
  'Icons.fingerprint_sharp': Icons.fingerprint_sharp,
  'Icons.fingerprint_rounded': Icons.fingerprint_rounded,
  'Icons.fingerprint_outlined': Icons.fingerprint_outlined,
  'Icons.fire_extinguisher': Icons.fire_extinguisher,
  'Icons.fire_extinguisher_sharp': Icons.fire_extinguisher_sharp,
  'Icons.fire_extinguisher_rounded': Icons.fire_extinguisher_rounded,
  'Icons.fire_extinguisher_outlined': Icons.fire_extinguisher_outlined,
  'Icons.fire_hydrant': Icons.fire_hydrant,
  'Icons.fire_hydrant_alt': Icons.fire_hydrant_alt,
  'Icons.fire_hydrant_alt_sharp': Icons.fire_hydrant_alt_sharp,
  'Icons.fire_hydrant_alt_rounded': Icons.fire_hydrant_alt_rounded,
  'Icons.fire_hydrant_alt_outlined': Icons.fire_hydrant_alt_outlined,
  'Icons.fire_truck': Icons.fire_truck,
  'Icons.fire_truck_sharp': Icons.fire_truck_sharp,
  'Icons.fire_truck_rounded': Icons.fire_truck_rounded,
  'Icons.fire_truck_outlined': Icons.fire_truck_outlined,
  'Icons.fireplace': Icons.fireplace,
  'Icons.fireplace_sharp': Icons.fireplace_sharp,
  'Icons.fireplace_rounded': Icons.fireplace_rounded,
  'Icons.fireplace_outlined': Icons.fireplace_outlined,
  'Icons.first_page': Icons.first_page,
  'Icons.first_page_sharp': Icons.first_page_sharp,
  'Icons.first_page_rounded': Icons.first_page_rounded,
  'Icons.first_page_outlined': Icons.first_page_outlined,
  'Icons.fit_screen': Icons.fit_screen,
  'Icons.fit_screen_sharp': Icons.fit_screen_sharp,
  'Icons.fit_screen_rounded': Icons.fit_screen_rounded,
  'Icons.fit_screen_outlined': Icons.fit_screen_outlined,
  'Icons.fitbit': Icons.fitbit,
  'Icons.fitbit_sharp': Icons.fitbit_sharp,
  'Icons.fitbit_rounded': Icons.fitbit_rounded,
  'Icons.fitbit_outlined': Icons.fitbit_outlined,
  'Icons.fitness_center': Icons.fitness_center,
  'Icons.fitness_center_sharp': Icons.fitness_center_sharp,
  'Icons.fitness_center_rounded': Icons.fitness_center_rounded,
  'Icons.fitness_center_outlined': Icons.fitness_center_outlined,
  'Icons.flag': Icons.flag,
  'Icons.flag_sharp': Icons.flag_sharp,
  'Icons.flag_rounded': Icons.flag_rounded,
  'Icons.flag_outlined': Icons.flag_outlined,
  'Icons.flag_circle': Icons.flag_circle,
  'Icons.flag_circle_sharp': Icons.flag_circle_sharp,
  'Icons.flag_circle_rounded': Icons.flag_circle_rounded,
  'Icons.flag_circle_outlined': Icons.flag_circle_outlined,
  'Icons.flaky': Icons.flaky,
  'Icons.flaky_sharp': Icons.flaky_sharp,
  'Icons.flaky_rounded': Icons.flaky_rounded,
  'Icons.flaky_outlined': Icons.flaky_outlined,
  'Icons.flare': Icons.flare,
  'Icons.flare_sharp': Icons.flare_sharp,
  'Icons.flare_rounded': Icons.flare_rounded,
  'Icons.flare_outlined': Icons.flare_outlined,
  'Icons.flash_auto': Icons.flash_auto,
  'Icons.flash_auto_sharp': Icons.flash_auto_sharp,
  'Icons.flash_auto_rounded': Icons.flash_auto_rounded,
  'Icons.flash_auto_outlined': Icons.flash_auto_outlined,
  'Icons.flash_off': Icons.flash_off,
  'Icons.flash_off_sharp': Icons.flash_off_sharp,
  'Icons.flash_off_rounded': Icons.flash_off_rounded,
  'Icons.flash_off_outlined': Icons.flash_off_outlined,
  'Icons.flash_on': Icons.flash_on,
  'Icons.flash_on_sharp': Icons.flash_on_sharp,
  'Icons.flash_on_rounded': Icons.flash_on_rounded,
  'Icons.flash_on_outlined': Icons.flash_on_outlined,
  'Icons.flashlight_off': Icons.flashlight_off,
  'Icons.flashlight_off_sharp': Icons.flashlight_off_sharp,
  'Icons.flashlight_off_rounded': Icons.flashlight_off_rounded,
  'Icons.flashlight_off_outlined': Icons.flashlight_off_outlined,
  'Icons.flashlight_on': Icons.flashlight_on,
  'Icons.flashlight_on_sharp': Icons.flashlight_on_sharp,
  'Icons.flashlight_on_rounded': Icons.flashlight_on_rounded,
  'Icons.flashlight_on_outlined': Icons.flashlight_on_outlined,
  'Icons.flatware': Icons.flatware,
  'Icons.flatware_sharp': Icons.flatware_sharp,
  'Icons.flatware_rounded': Icons.flatware_rounded,
  'Icons.flatware_outlined': Icons.flatware_outlined,
  'Icons.flight': Icons.flight,
  'Icons.flight_sharp': Icons.flight_sharp,
  'Icons.flight_rounded': Icons.flight_rounded,
  'Icons.flight_outlined': Icons.flight_outlined,
  'Icons.flight_class': Icons.flight_class,
  'Icons.flight_class_sharp': Icons.flight_class_sharp,
  'Icons.flight_class_rounded': Icons.flight_class_rounded,
  'Icons.flight_class_outlined': Icons.flight_class_outlined,
  'Icons.flight_land': Icons.flight_land,
  'Icons.flight_land_sharp': Icons.flight_land_sharp,
  'Icons.flight_land_rounded': Icons.flight_land_rounded,
  'Icons.flight_land_outlined': Icons.flight_land_outlined,
  'Icons.flight_takeoff': Icons.flight_takeoff,
  'Icons.flight_takeoff_sharp': Icons.flight_takeoff_sharp,
  'Icons.flight_takeoff_rounded': Icons.flight_takeoff_rounded,
  'Icons.flight_takeoff_outlined': Icons.flight_takeoff_outlined,
  'Icons.flip': Icons.flip,
  'Icons.flip_sharp': Icons.flip_sharp,
  'Icons.flip_rounded': Icons.flip_rounded,
  'Icons.flip_outlined': Icons.flip_outlined,
  'Icons.flip_camera_android': Icons.flip_camera_android,
  'Icons.flip_camera_android_sharp': Icons.flip_camera_android_sharp,
  'Icons.flip_camera_android_rounded': Icons.flip_camera_android_rounded,
  'Icons.flip_camera_android_outlined': Icons.flip_camera_android_outlined,
  'Icons.flip_camera_ios': Icons.flip_camera_ios,
  'Icons.flip_camera_ios_sharp': Icons.flip_camera_ios_sharp,
  'Icons.flip_camera_ios_rounded': Icons.flip_camera_ios_rounded,
  'Icons.flip_camera_ios_outlined': Icons.flip_camera_ios_outlined,
  'Icons.flip_to_back': Icons.flip_to_back,
  'Icons.flip_to_back_sharp': Icons.flip_to_back_sharp,
  'Icons.flip_to_back_rounded': Icons.flip_to_back_rounded,
  'Icons.flip_to_back_outlined': Icons.flip_to_back_outlined,
  'Icons.flip_to_front': Icons.flip_to_front,
  'Icons.flip_to_front_sharp': Icons.flip_to_front_sharp,
  'Icons.flip_to_front_rounded': Icons.flip_to_front_rounded,
  'Icons.flip_to_front_outlined': Icons.flip_to_front_outlined,
  'Icons.flood': Icons.flood,
  'Icons.flood_sharp': Icons.flood_sharp,
  'Icons.flood_rounded': Icons.flood_rounded,
  'Icons.flood_outlined': Icons.flood_outlined,
  'Icons.flourescent': Icons.flourescent,
  'Icons.flourescent_sharp': Icons.flourescent_sharp,
  'Icons.flourescent_rounded': Icons.flourescent_rounded,
  'Icons.flourescent_outlined': Icons.flourescent_outlined,
  'Icons.flutter_dash': Icons.flutter_dash,
  'Icons.flutter_dash_sharp': Icons.flutter_dash_sharp,
  'Icons.flutter_dash_rounded': Icons.flutter_dash_rounded,
  'Icons.flutter_dash_outlined': Icons.flutter_dash_outlined,
  'Icons.fmd_bad': Icons.fmd_bad,
  'Icons.fmd_bad_sharp': Icons.fmd_bad_sharp,
  'Icons.fmd_bad_rounded': Icons.fmd_bad_rounded,
  'Icons.fmd_bad_outlined': Icons.fmd_bad_outlined,
  'Icons.fmd_good': Icons.fmd_good,
  'Icons.fmd_good_sharp': Icons.fmd_good_sharp,
  'Icons.fmd_good_rounded': Icons.fmd_good_rounded,
  'Icons.fmd_good_outlined': Icons.fmd_good_outlined,
  'Icons.foggy': Icons.foggy,
  'Icons.folder': Icons.folder,
  'Icons.folder_sharp': Icons.folder_sharp,
  'Icons.folder_rounded': Icons.folder_rounded,
  'Icons.folder_outlined': Icons.folder_outlined,
  'Icons.folder_copy': Icons.folder_copy,
  'Icons.folder_copy_sharp': Icons.folder_copy_sharp,
  'Icons.folder_copy_rounded': Icons.folder_copy_rounded,
  'Icons.folder_copy_outlined': Icons.folder_copy_outlined,
  'Icons.folder_delete': Icons.folder_delete,
  'Icons.folder_delete_sharp': Icons.folder_delete_sharp,
  'Icons.folder_delete_rounded': Icons.folder_delete_rounded,
  'Icons.folder_delete_outlined': Icons.folder_delete_outlined,
  'Icons.folder_off': Icons.folder_off,
  'Icons.folder_off_sharp': Icons.folder_off_sharp,
  'Icons.folder_off_rounded': Icons.folder_off_rounded,
  'Icons.folder_off_outlined': Icons.folder_off_outlined,
  'Icons.folder_open': Icons.folder_open,
  'Icons.folder_open_sharp': Icons.folder_open_sharp,
  'Icons.folder_open_rounded': Icons.folder_open_rounded,
  'Icons.folder_open_outlined': Icons.folder_open_outlined,
  'Icons.folder_shared': Icons.folder_shared,
  'Icons.folder_shared_sharp': Icons.folder_shared_sharp,
  'Icons.folder_shared_rounded': Icons.folder_shared_rounded,
  'Icons.folder_shared_outlined': Icons.folder_shared_outlined,
  'Icons.folder_special': Icons.folder_special,
  'Icons.folder_special_sharp': Icons.folder_special_sharp,
  'Icons.folder_special_rounded': Icons.folder_special_rounded,
  'Icons.folder_special_outlined': Icons.folder_special_outlined,
  'Icons.folder_zip': Icons.folder_zip,
  'Icons.folder_zip_sharp': Icons.folder_zip_sharp,
  'Icons.folder_zip_rounded': Icons.folder_zip_rounded,
  'Icons.folder_zip_outlined': Icons.folder_zip_outlined,
  'Icons.follow_the_signs': Icons.follow_the_signs,
  'Icons.follow_the_signs_sharp': Icons.follow_the_signs_sharp,
  'Icons.follow_the_signs_rounded': Icons.follow_the_signs_rounded,
  'Icons.follow_the_signs_outlined': Icons.follow_the_signs_outlined,
  'Icons.font_download': Icons.font_download,
  'Icons.font_download_sharp': Icons.font_download_sharp,
  'Icons.font_download_rounded': Icons.font_download_rounded,
  'Icons.font_download_outlined': Icons.font_download_outlined,
  'Icons.font_download_off': Icons.font_download_off,
  'Icons.font_download_off_sharp': Icons.font_download_off_sharp,
  'Icons.font_download_off_rounded': Icons.font_download_off_rounded,
  'Icons.font_download_off_outlined': Icons.font_download_off_outlined,
  'Icons.food_bank': Icons.food_bank,
  'Icons.food_bank_sharp': Icons.food_bank_sharp,
  'Icons.food_bank_rounded': Icons.food_bank_rounded,
  'Icons.food_bank_outlined': Icons.food_bank_outlined,
  'Icons.forest': Icons.forest,
  'Icons.forest_sharp': Icons.forest_sharp,
  'Icons.forest_rounded': Icons.forest_rounded,
  'Icons.forest_outlined': Icons.forest_outlined,
  'Icons.fork_left': Icons.fork_left,
  'Icons.fork_left_sharp': Icons.fork_left_sharp,
  'Icons.fork_left_rounded': Icons.fork_left_rounded,
  'Icons.fork_left_outlined': Icons.fork_left_outlined,
  'Icons.fork_right': Icons.fork_right,
  'Icons.fork_right_sharp': Icons.fork_right_sharp,
  'Icons.fork_right_rounded': Icons.fork_right_rounded,
  'Icons.fork_right_outlined': Icons.fork_right_outlined,
  'Icons.format_align_center': Icons.format_align_center,
  'Icons.format_align_center_sharp': Icons.format_align_center_sharp,
  'Icons.format_align_center_rounded': Icons.format_align_center_rounded,
  'Icons.format_align_center_outlined': Icons.format_align_center_outlined,
  'Icons.format_align_justify': Icons.format_align_justify,
  'Icons.format_align_justify_sharp': Icons.format_align_justify_sharp,
  'Icons.format_align_justify_rounded': Icons.format_align_justify_rounded,
  'Icons.format_align_justify_outlined': Icons.format_align_justify_outlined,
  'Icons.format_align_left': Icons.format_align_left,
  'Icons.format_align_left_sharp': Icons.format_align_left_sharp,
  'Icons.format_align_left_rounded': Icons.format_align_left_rounded,
  'Icons.format_align_left_outlined': Icons.format_align_left_outlined,
  'Icons.format_align_right': Icons.format_align_right,
  'Icons.format_align_right_sharp': Icons.format_align_right_sharp,
  'Icons.format_align_right_rounded': Icons.format_align_right_rounded,
  'Icons.format_align_right_outlined': Icons.format_align_right_outlined,
  'Icons.format_bold': Icons.format_bold,
  'Icons.format_bold_sharp': Icons.format_bold_sharp,
  'Icons.format_bold_rounded': Icons.format_bold_rounded,
  'Icons.format_bold_outlined': Icons.format_bold_outlined,
  'Icons.format_clear': Icons.format_clear,
  'Icons.format_clear_sharp': Icons.format_clear_sharp,
  'Icons.format_clear_rounded': Icons.format_clear_rounded,
  'Icons.format_clear_outlined': Icons.format_clear_outlined,
  'Icons.format_color_fill': Icons.format_color_fill,
  'Icons.format_color_fill_sharp': Icons.format_color_fill_sharp,
  'Icons.format_color_fill_rounded': Icons.format_color_fill_rounded,
  'Icons.format_color_fill_outlined': Icons.format_color_fill_outlined,
  'Icons.format_color_reset': Icons.format_color_reset,
  'Icons.format_color_reset_sharp': Icons.format_color_reset_sharp,
  'Icons.format_color_reset_rounded': Icons.format_color_reset_rounded,
  'Icons.format_color_reset_outlined': Icons.format_color_reset_outlined,
  'Icons.format_color_text': Icons.format_color_text,
  'Icons.format_color_text_sharp': Icons.format_color_text_sharp,
  'Icons.format_color_text_rounded': Icons.format_color_text_rounded,
  'Icons.format_color_text_outlined': Icons.format_color_text_outlined,
  'Icons.format_indent_decrease': Icons.format_indent_decrease,
  'Icons.format_indent_decrease_sharp': Icons.format_indent_decrease_sharp,
  'Icons.format_indent_decrease_rounded': Icons.format_indent_decrease_rounded,
  'Icons.format_indent_decrease_outlined':
      Icons.format_indent_decrease_outlined,
  'Icons.format_indent_increase': Icons.format_indent_increase,
  'Icons.format_indent_increase_sharp': Icons.format_indent_increase_sharp,
  'Icons.format_indent_increase_rounded': Icons.format_indent_increase_rounded,
  'Icons.format_indent_increase_outlined':
      Icons.format_indent_increase_outlined,
  'Icons.format_italic': Icons.format_italic,
  'Icons.format_italic_sharp': Icons.format_italic_sharp,
  'Icons.format_italic_rounded': Icons.format_italic_rounded,
  'Icons.format_italic_outlined': Icons.format_italic_outlined,
  'Icons.format_line_spacing': Icons.format_line_spacing,
  'Icons.format_line_spacing_sharp': Icons.format_line_spacing_sharp,
  'Icons.format_line_spacing_rounded': Icons.format_line_spacing_rounded,
  'Icons.format_line_spacing_outlined': Icons.format_line_spacing_outlined,
  'Icons.format_list_bulleted': Icons.format_list_bulleted,
  'Icons.format_list_bulleted_sharp': Icons.format_list_bulleted_sharp,
  'Icons.format_list_bulleted_rounded': Icons.format_list_bulleted_rounded,
  'Icons.format_list_bulleted_outlined': Icons.format_list_bulleted_outlined,
  'Icons.format_list_numbered': Icons.format_list_numbered,
  'Icons.format_list_numbered_sharp': Icons.format_list_numbered_sharp,
  'Icons.format_list_numbered_rounded': Icons.format_list_numbered_rounded,
  'Icons.format_list_numbered_outlined': Icons.format_list_numbered_outlined,
  'Icons.format_list_numbered_rtl': Icons.format_list_numbered_rtl,
  'Icons.format_list_numbered_rtl_sharp': Icons.format_list_numbered_rtl_sharp,
  'Icons.format_list_numbered_rtl_rounded':
      Icons.format_list_numbered_rtl_rounded,
  'Icons.format_list_numbered_rtl_outlined':
      Icons.format_list_numbered_rtl_outlined,
  'Icons.format_overline': Icons.format_overline,
  'Icons.format_overline_sharp': Icons.format_overline_sharp,
  'Icons.format_overline_rounded': Icons.format_overline_rounded,
  'Icons.format_overline_outlined': Icons.format_overline_outlined,
  'Icons.format_paint': Icons.format_paint,
  'Icons.format_paint_sharp': Icons.format_paint_sharp,
  'Icons.format_paint_rounded': Icons.format_paint_rounded,
  'Icons.format_paint_outlined': Icons.format_paint_outlined,
  'Icons.format_quote': Icons.format_quote,
  'Icons.format_quote_sharp': Icons.format_quote_sharp,
  'Icons.format_quote_rounded': Icons.format_quote_rounded,
  'Icons.format_quote_outlined': Icons.format_quote_outlined,
  'Icons.format_shapes': Icons.format_shapes,
  'Icons.format_shapes_sharp': Icons.format_shapes_sharp,
  'Icons.format_shapes_rounded': Icons.format_shapes_rounded,
  'Icons.format_shapes_outlined': Icons.format_shapes_outlined,
  'Icons.format_size': Icons.format_size,
  'Icons.format_size_sharp': Icons.format_size_sharp,
  'Icons.format_size_rounded': Icons.format_size_rounded,
  'Icons.format_size_outlined': Icons.format_size_outlined,
  'Icons.format_strikethrough': Icons.format_strikethrough,
  'Icons.format_strikethrough_sharp': Icons.format_strikethrough_sharp,
  'Icons.format_strikethrough_rounded': Icons.format_strikethrough_rounded,
  'Icons.format_strikethrough_outlined': Icons.format_strikethrough_outlined,
  'Icons.format_textdirection_l_to_r': Icons.format_textdirection_l_to_r,
  'Icons.format_textdirection_l_to_r_sharp':
      Icons.format_textdirection_l_to_r_sharp,
  'Icons.format_textdirection_l_to_r_rounded':
      Icons.format_textdirection_l_to_r_rounded,
  'Icons.format_textdirection_l_to_r_outlined':
      Icons.format_textdirection_l_to_r_outlined,
  'Icons.format_textdirection_r_to_l': Icons.format_textdirection_r_to_l,
  'Icons.format_textdirection_r_to_l_sharp':
      Icons.format_textdirection_r_to_l_sharp,
  'Icons.format_textdirection_r_to_l_rounded':
      Icons.format_textdirection_r_to_l_rounded,
  'Icons.format_textdirection_r_to_l_outlined':
      Icons.format_textdirection_r_to_l_outlined,
  'Icons.format_underline': Icons.format_underline,
  'Icons.format_underline_sharp': Icons.format_underline_sharp,
  'Icons.format_underline_rounded': Icons.format_underline_rounded,
  'Icons.format_underline_outlined': Icons.format_underline_outlined,
  'Icons.format_underlined': Icons.format_underlined,
  'Icons.format_underlined_sharp': Icons.format_underlined_sharp,
  'Icons.format_underlined_rounded': Icons.format_underlined_rounded,
  'Icons.format_underlined_outlined': Icons.format_underlined_outlined,
  'Icons.fort': Icons.fort,
  'Icons.fort_sharp': Icons.fort_sharp,
  'Icons.fort_rounded': Icons.fort_rounded,
  'Icons.fort_outlined': Icons.fort_outlined,
  'Icons.forum': Icons.forum,
  'Icons.forum_sharp': Icons.forum_sharp,
  'Icons.forum_rounded': Icons.forum_rounded,
  'Icons.forum_outlined': Icons.forum_outlined,
  'Icons.forward': Icons.forward,
  'Icons.forward_sharp': Icons.forward_sharp,
  'Icons.forward_rounded': Icons.forward_rounded,
  'Icons.forward_outlined': Icons.forward_outlined,
  'Icons.forward_10': Icons.forward_10,
  'Icons.forward_10_sharp': Icons.forward_10_sharp,
  'Icons.forward_10_rounded': Icons.forward_10_rounded,
  'Icons.forward_10_outlined': Icons.forward_10_outlined,
  'Icons.forward_30': Icons.forward_30,
  'Icons.forward_30_sharp': Icons.forward_30_sharp,
  'Icons.forward_30_rounded': Icons.forward_30_rounded,
  'Icons.forward_30_outlined': Icons.forward_30_outlined,
  'Icons.forward_5': Icons.forward_5,
  'Icons.forward_5_sharp': Icons.forward_5_sharp,
  'Icons.forward_5_rounded': Icons.forward_5_rounded,
  'Icons.forward_5_outlined': Icons.forward_5_outlined,
  'Icons.forward_to_inbox': Icons.forward_to_inbox,
  'Icons.forward_to_inbox_sharp': Icons.forward_to_inbox_sharp,
  'Icons.forward_to_inbox_rounded': Icons.forward_to_inbox_rounded,
  'Icons.forward_to_inbox_outlined': Icons.forward_to_inbox_outlined,
  'Icons.foundation': Icons.foundation,
  'Icons.foundation_sharp': Icons.foundation_sharp,
  'Icons.foundation_rounded': Icons.foundation_rounded,
  'Icons.foundation_outlined': Icons.foundation_outlined,
  'Icons.free_breakfast': Icons.free_breakfast,
  'Icons.free_breakfast_sharp': Icons.free_breakfast_sharp,
  'Icons.free_breakfast_rounded': Icons.free_breakfast_rounded,
  'Icons.free_breakfast_outlined': Icons.free_breakfast_outlined,
  'Icons.free_cancellation': Icons.free_cancellation,
  'Icons.free_cancellation_sharp': Icons.free_cancellation_sharp,
  'Icons.free_cancellation_rounded': Icons.free_cancellation_rounded,
  'Icons.free_cancellation_outlined': Icons.free_cancellation_outlined,
  'Icons.front_hand': Icons.front_hand,
  'Icons.front_hand_sharp': Icons.front_hand_sharp,
  'Icons.front_hand_rounded': Icons.front_hand_rounded,
  'Icons.front_hand_outlined': Icons.front_hand_outlined,
  'Icons.fullscreen': Icons.fullscreen,
  'Icons.fullscreen_sharp': Icons.fullscreen_sharp,
  'Icons.fullscreen_rounded': Icons.fullscreen_rounded,
  'Icons.fullscreen_outlined': Icons.fullscreen_outlined,
  'Icons.fullscreen_exit': Icons.fullscreen_exit,
  'Icons.fullscreen_exit_sharp': Icons.fullscreen_exit_sharp,
  'Icons.fullscreen_exit_rounded': Icons.fullscreen_exit_rounded,
  'Icons.fullscreen_exit_outlined': Icons.fullscreen_exit_outlined,
  'Icons.functions': Icons.functions,
  'Icons.functions_sharp': Icons.functions_sharp,
  'Icons.functions_rounded': Icons.functions_rounded,
  'Icons.functions_outlined': Icons.functions_outlined,
  'Icons.g_mobiledata': Icons.g_mobiledata,
  'Icons.g_mobiledata_sharp': Icons.g_mobiledata_sharp,
  'Icons.g_mobiledata_rounded': Icons.g_mobiledata_rounded,
  'Icons.g_mobiledata_outlined': Icons.g_mobiledata_outlined,
  'Icons.g_translate': Icons.g_translate,
  'Icons.g_translate_sharp': Icons.g_translate_sharp,
  'Icons.g_translate_rounded': Icons.g_translate_rounded,
  'Icons.g_translate_outlined': Icons.g_translate_outlined,
  'Icons.gamepad': Icons.gamepad,
  'Icons.gamepad_sharp': Icons.gamepad_sharp,
  'Icons.gamepad_rounded': Icons.gamepad_rounded,
  'Icons.gamepad_outlined': Icons.gamepad_outlined,
  'Icons.games': Icons.games,
  'Icons.games_sharp': Icons.games_sharp,
  'Icons.games_rounded': Icons.games_rounded,
  'Icons.games_outlined': Icons.games_outlined,
  'Icons.garage': Icons.garage,
  'Icons.garage_sharp': Icons.garage_sharp,
  'Icons.garage_rounded': Icons.garage_rounded,
  'Icons.garage_outlined': Icons.garage_outlined,
  'Icons.gas_meter': Icons.gas_meter,
  'Icons.gas_meter_sharp': Icons.gas_meter_sharp,
  'Icons.gas_meter_rounded': Icons.gas_meter_rounded,
  'Icons.gas_meter_outlined': Icons.gas_meter_outlined,
  'Icons.gavel': Icons.gavel,
  'Icons.gavel_sharp': Icons.gavel_sharp,
  'Icons.gavel_rounded': Icons.gavel_rounded,
  'Icons.gavel_outlined': Icons.gavel_outlined,
  'Icons.generating_tokens': Icons.generating_tokens,
  'Icons.generating_tokens_sharp': Icons.generating_tokens_sharp,
  'Icons.generating_tokens_rounded': Icons.generating_tokens_rounded,
  'Icons.generating_tokens_outlined': Icons.generating_tokens_outlined,
  'Icons.gesture': Icons.gesture,
  'Icons.gesture_sharp': Icons.gesture_sharp,
  'Icons.gesture_rounded': Icons.gesture_rounded,
  'Icons.gesture_outlined': Icons.gesture_outlined,
  'Icons.get_app': Icons.get_app,
  'Icons.get_app_sharp': Icons.get_app_sharp,
  'Icons.get_app_rounded': Icons.get_app_rounded,
  'Icons.get_app_outlined': Icons.get_app_outlined,
  'Icons.gif': Icons.gif,
  'Icons.gif_sharp': Icons.gif_sharp,
  'Icons.gif_rounded': Icons.gif_rounded,
  'Icons.gif_outlined': Icons.gif_outlined,
  'Icons.gif_box': Icons.gif_box,
  'Icons.gif_box_sharp': Icons.gif_box_sharp,
  'Icons.gif_box_rounded': Icons.gif_box_rounded,
  'Icons.gif_box_outlined': Icons.gif_box_outlined,
  'Icons.girl': Icons.girl,
  'Icons.girl_sharp': Icons.girl_sharp,
  'Icons.girl_rounded': Icons.girl_rounded,
  'Icons.girl_outlined': Icons.girl_outlined,
  'Icons.gite': Icons.gite,
  'Icons.gite_sharp': Icons.gite_sharp,
  'Icons.gite_rounded': Icons.gite_rounded,
  'Icons.gite_outlined': Icons.gite_outlined,
  'Icons.golf_course': Icons.golf_course,
  'Icons.golf_course_sharp': Icons.golf_course_sharp,
  'Icons.golf_course_rounded': Icons.golf_course_rounded,
  'Icons.golf_course_outlined': Icons.golf_course_outlined,
  'Icons.gpp_bad': Icons.gpp_bad,
  'Icons.gpp_bad_sharp': Icons.gpp_bad_sharp,
  'Icons.gpp_bad_rounded': Icons.gpp_bad_rounded,
  'Icons.gpp_bad_outlined': Icons.gpp_bad_outlined,
  'Icons.gpp_good': Icons.gpp_good,
  'Icons.gpp_good_sharp': Icons.gpp_good_sharp,
  'Icons.gpp_good_rounded': Icons.gpp_good_rounded,
  'Icons.gpp_good_outlined': Icons.gpp_good_outlined,
  'Icons.gpp_maybe': Icons.gpp_maybe,
  'Icons.gpp_maybe_sharp': Icons.gpp_maybe_sharp,
  'Icons.gpp_maybe_rounded': Icons.gpp_maybe_rounded,
  'Icons.gpp_maybe_outlined': Icons.gpp_maybe_outlined,
  'Icons.gps_fixed': Icons.gps_fixed,
  'Icons.gps_fixed_sharp': Icons.gps_fixed_sharp,
  'Icons.gps_fixed_rounded': Icons.gps_fixed_rounded,
  'Icons.gps_fixed_outlined': Icons.gps_fixed_outlined,
  'Icons.gps_not_fixed': Icons.gps_not_fixed,
  'Icons.gps_not_fixed_sharp': Icons.gps_not_fixed_sharp,
  'Icons.gps_not_fixed_rounded': Icons.gps_not_fixed_rounded,
  'Icons.gps_not_fixed_outlined': Icons.gps_not_fixed_outlined,
  'Icons.gps_off': Icons.gps_off,
  'Icons.gps_off_sharp': Icons.gps_off_sharp,
  'Icons.gps_off_rounded': Icons.gps_off_rounded,
  'Icons.gps_off_outlined': Icons.gps_off_outlined,
  'Icons.grade': Icons.grade,
  'Icons.grade_sharp': Icons.grade_sharp,
  'Icons.grade_rounded': Icons.grade_rounded,
  'Icons.grade_outlined': Icons.grade_outlined,
  'Icons.gradient': Icons.gradient,
  'Icons.gradient_sharp': Icons.gradient_sharp,
  'Icons.gradient_rounded': Icons.gradient_rounded,
  'Icons.gradient_outlined': Icons.gradient_outlined,
  'Icons.grading': Icons.grading,
  'Icons.grading_sharp': Icons.grading_sharp,
  'Icons.grading_rounded': Icons.grading_rounded,
  'Icons.grading_outlined': Icons.grading_outlined,
  'Icons.grain': Icons.grain,
  'Icons.grain_sharp': Icons.grain_sharp,
  'Icons.grain_rounded': Icons.grain_rounded,
  'Icons.grain_outlined': Icons.grain_outlined,
  'Icons.graphic_eq': Icons.graphic_eq,
  'Icons.graphic_eq_sharp': Icons.graphic_eq_sharp,
  'Icons.graphic_eq_rounded': Icons.graphic_eq_rounded,
  'Icons.graphic_eq_outlined': Icons.graphic_eq_outlined,
  'Icons.grass': Icons.grass,
  'Icons.grass_sharp': Icons.grass_sharp,
  'Icons.grass_rounded': Icons.grass_rounded,
  'Icons.grass_outlined': Icons.grass_outlined,
  'Icons.grid_3x3': Icons.grid_3x3,
  'Icons.grid_3x3_sharp': Icons.grid_3x3_sharp,
  'Icons.grid_3x3_rounded': Icons.grid_3x3_rounded,
  'Icons.grid_3x3_outlined': Icons.grid_3x3_outlined,
  'Icons.grid_4x4': Icons.grid_4x4,
  'Icons.grid_4x4_sharp': Icons.grid_4x4_sharp,
  'Icons.grid_4x4_rounded': Icons.grid_4x4_rounded,
  'Icons.grid_4x4_outlined': Icons.grid_4x4_outlined,
  'Icons.grid_goldenratio': Icons.grid_goldenratio,
  'Icons.grid_goldenratio_sharp': Icons.grid_goldenratio_sharp,
  'Icons.grid_goldenratio_rounded': Icons.grid_goldenratio_rounded,
  'Icons.grid_goldenratio_outlined': Icons.grid_goldenratio_outlined,
  'Icons.grid_off': Icons.grid_off,
  'Icons.grid_off_sharp': Icons.grid_off_sharp,
  'Icons.grid_off_rounded': Icons.grid_off_rounded,
  'Icons.grid_off_outlined': Icons.grid_off_outlined,
  'Icons.grid_on': Icons.grid_on,
  'Icons.grid_on_sharp': Icons.grid_on_sharp,
  'Icons.grid_on_rounded': Icons.grid_on_rounded,
  'Icons.grid_on_outlined': Icons.grid_on_outlined,
  'Icons.grid_view': Icons.grid_view,
  'Icons.grid_view_sharp': Icons.grid_view_sharp,
  'Icons.grid_view_rounded': Icons.grid_view_rounded,
  'Icons.grid_view_outlined': Icons.grid_view_outlined,
  'Icons.group': Icons.group,
  'Icons.group_sharp': Icons.group_sharp,
  'Icons.group_rounded': Icons.group_rounded,
  'Icons.group_outlined': Icons.group_outlined,
  'Icons.group_add': Icons.group_add,
  'Icons.group_add_sharp': Icons.group_add_sharp,
  'Icons.group_add_rounded': Icons.group_add_rounded,
  'Icons.group_add_outlined': Icons.group_add_outlined,
  'Icons.group_off': Icons.group_off,
  'Icons.group_off_sharp': Icons.group_off_sharp,
  'Icons.group_off_rounded': Icons.group_off_rounded,
  'Icons.group_off_outlined': Icons.group_off_outlined,
  'Icons.group_remove': Icons.group_remove,
  'Icons.group_remove_sharp': Icons.group_remove_sharp,
  'Icons.group_remove_rounded': Icons.group_remove_rounded,
  'Icons.group_remove_outlined': Icons.group_remove_outlined,
  'Icons.group_work': Icons.group_work,
  'Icons.group_work_sharp': Icons.group_work_sharp,
  'Icons.group_work_rounded': Icons.group_work_rounded,
  'Icons.group_work_outlined': Icons.group_work_outlined,
  'Icons.groups': Icons.groups,
  'Icons.groups_sharp': Icons.groups_sharp,
  'Icons.groups_rounded': Icons.groups_rounded,
  'Icons.groups_outlined': Icons.groups_outlined,
  'Icons.h_mobiledata': Icons.h_mobiledata,
  'Icons.h_mobiledata_sharp': Icons.h_mobiledata_sharp,
  'Icons.h_mobiledata_rounded': Icons.h_mobiledata_rounded,
  'Icons.h_mobiledata_outlined': Icons.h_mobiledata_outlined,
  'Icons.h_plus_mobiledata': Icons.h_plus_mobiledata,
  'Icons.h_plus_mobiledata_sharp': Icons.h_plus_mobiledata_sharp,
  'Icons.h_plus_mobiledata_rounded': Icons.h_plus_mobiledata_rounded,
  'Icons.h_plus_mobiledata_outlined': Icons.h_plus_mobiledata_outlined,
  'Icons.hail': Icons.hail,
  'Icons.hail_sharp': Icons.hail_sharp,
  'Icons.hail_rounded': Icons.hail_rounded,
  'Icons.hail_outlined': Icons.hail_outlined,
  'Icons.handshake': Icons.handshake,
  'Icons.handshake_sharp': Icons.handshake_sharp,
  'Icons.handshake_rounded': Icons.handshake_rounded,
  'Icons.handshake_outlined': Icons.handshake_outlined,
  'Icons.handyman': Icons.handyman,
  'Icons.handyman_sharp': Icons.handyman_sharp,
  'Icons.handyman_rounded': Icons.handyman_rounded,
  'Icons.handyman_outlined': Icons.handyman_outlined,
  'Icons.hardware': Icons.hardware,
  'Icons.hardware_sharp': Icons.hardware_sharp,
  'Icons.hardware_rounded': Icons.hardware_rounded,
  'Icons.hardware_outlined': Icons.hardware_outlined,
  'Icons.hd': Icons.hd,
  'Icons.hd_sharp': Icons.hd_sharp,
  'Icons.hd_rounded': Icons.hd_rounded,
  'Icons.hd_outlined': Icons.hd_outlined,
  'Icons.hdr_auto': Icons.hdr_auto,
  'Icons.hdr_auto_sharp': Icons.hdr_auto_sharp,
  'Icons.hdr_auto_rounded': Icons.hdr_auto_rounded,
  'Icons.hdr_auto_outlined': Icons.hdr_auto_outlined,
  'Icons.hdr_auto_select': Icons.hdr_auto_select,
  'Icons.hdr_auto_select_sharp': Icons.hdr_auto_select_sharp,
  'Icons.hdr_auto_select_rounded': Icons.hdr_auto_select_rounded,
  'Icons.hdr_auto_select_outlined': Icons.hdr_auto_select_outlined,
  'Icons.hdr_enhanced_select': Icons.hdr_enhanced_select,
  'Icons.hdr_enhanced_select_sharp': Icons.hdr_enhanced_select_sharp,
  'Icons.hdr_enhanced_select_rounded': Icons.hdr_enhanced_select_rounded,
  'Icons.hdr_enhanced_select_outlined': Icons.hdr_enhanced_select_outlined,
  'Icons.hdr_off': Icons.hdr_off,
  'Icons.hdr_off_sharp': Icons.hdr_off_sharp,
  'Icons.hdr_off_rounded': Icons.hdr_off_rounded,
  'Icons.hdr_off_outlined': Icons.hdr_off_outlined,
  'Icons.hdr_off_select': Icons.hdr_off_select,
  'Icons.hdr_off_select_sharp': Icons.hdr_off_select_sharp,
  'Icons.hdr_off_select_rounded': Icons.hdr_off_select_rounded,
  'Icons.hdr_off_select_outlined': Icons.hdr_off_select_outlined,
  'Icons.hdr_on': Icons.hdr_on,
  'Icons.hdr_on_sharp': Icons.hdr_on_sharp,
  'Icons.hdr_on_rounded': Icons.hdr_on_rounded,
  'Icons.hdr_on_outlined': Icons.hdr_on_outlined,
  'Icons.hdr_on_select': Icons.hdr_on_select,
  'Icons.hdr_on_select_sharp': Icons.hdr_on_select_sharp,
  'Icons.hdr_on_select_rounded': Icons.hdr_on_select_rounded,
  'Icons.hdr_on_select_outlined': Icons.hdr_on_select_outlined,
  'Icons.hdr_plus': Icons.hdr_plus,
  'Icons.hdr_plus_sharp': Icons.hdr_plus_sharp,
  'Icons.hdr_plus_rounded': Icons.hdr_plus_rounded,
  'Icons.hdr_plus_outlined': Icons.hdr_plus_outlined,
  'Icons.hdr_strong': Icons.hdr_strong,
  'Icons.hdr_strong_sharp': Icons.hdr_strong_sharp,
  'Icons.hdr_strong_rounded': Icons.hdr_strong_rounded,
  'Icons.hdr_strong_outlined': Icons.hdr_strong_outlined,
  'Icons.hdr_weak': Icons.hdr_weak,
  'Icons.hdr_weak_sharp': Icons.hdr_weak_sharp,
  'Icons.hdr_weak_rounded': Icons.hdr_weak_rounded,
  'Icons.hdr_weak_outlined': Icons.hdr_weak_outlined,
  'Icons.headphones': Icons.headphones,
  'Icons.headphones_sharp': Icons.headphones_sharp,
  'Icons.headphones_rounded': Icons.headphones_rounded,
  'Icons.headphones_outlined': Icons.headphones_outlined,
  'Icons.headphones_battery': Icons.headphones_battery,
  'Icons.headphones_battery_sharp': Icons.headphones_battery_sharp,
  'Icons.headphones_battery_rounded': Icons.headphones_battery_rounded,
  'Icons.headphones_battery_outlined': Icons.headphones_battery_outlined,
  'Icons.headset': Icons.headset,
  'Icons.headset_sharp': Icons.headset_sharp,
  'Icons.headset_rounded': Icons.headset_rounded,
  'Icons.headset_outlined': Icons.headset_outlined,
  'Icons.headset_mic': Icons.headset_mic,
  'Icons.headset_mic_sharp': Icons.headset_mic_sharp,
  'Icons.headset_mic_rounded': Icons.headset_mic_rounded,
  'Icons.headset_mic_outlined': Icons.headset_mic_outlined,
  'Icons.headset_off': Icons.headset_off,
  'Icons.headset_off_sharp': Icons.headset_off_sharp,
  'Icons.headset_off_rounded': Icons.headset_off_rounded,
  'Icons.headset_off_outlined': Icons.headset_off_outlined,
  'Icons.healing': Icons.healing,
  'Icons.healing_sharp': Icons.healing_sharp,
  'Icons.healing_rounded': Icons.healing_rounded,
  'Icons.healing_outlined': Icons.healing_outlined,
  'Icons.health_and_safety': Icons.health_and_safety,
  'Icons.health_and_safety_sharp': Icons.health_and_safety_sharp,
  'Icons.health_and_safety_rounded': Icons.health_and_safety_rounded,
  'Icons.health_and_safety_outlined': Icons.health_and_safety_outlined,
  'Icons.hearing': Icons.hearing,
  'Icons.hearing_sharp': Icons.hearing_sharp,
  'Icons.hearing_rounded': Icons.hearing_rounded,
  'Icons.hearing_outlined': Icons.hearing_outlined,
  'Icons.hearing_disabled': Icons.hearing_disabled,
  'Icons.hearing_disabled_sharp': Icons.hearing_disabled_sharp,
  'Icons.hearing_disabled_rounded': Icons.hearing_disabled_rounded,
  'Icons.hearing_disabled_outlined': Icons.hearing_disabled_outlined,
  'Icons.heart_broken': Icons.heart_broken,
  'Icons.heart_broken_sharp': Icons.heart_broken_sharp,
  'Icons.heart_broken_rounded': Icons.heart_broken_rounded,
  'Icons.heart_broken_outlined': Icons.heart_broken_outlined,
  'Icons.heat_pump': Icons.heat_pump,
  'Icons.heat_pump_sharp': Icons.heat_pump_sharp,
  'Icons.heat_pump_rounded': Icons.heat_pump_rounded,
  'Icons.heat_pump_outlined': Icons.heat_pump_outlined,
  'Icons.height': Icons.height,
  'Icons.height_sharp': Icons.height_sharp,
  'Icons.height_rounded': Icons.height_rounded,
  'Icons.height_outlined': Icons.height_outlined,
  'Icons.help': Icons.help,
  'Icons.help_sharp': Icons.help_sharp,
  'Icons.help_rounded': Icons.help_rounded,
  'Icons.help_outlined': Icons.help_outlined,
  'Icons.help_center': Icons.help_center,
  'Icons.help_center_sharp': Icons.help_center_sharp,
  'Icons.help_center_rounded': Icons.help_center_rounded,
  'Icons.help_center_outlined': Icons.help_center_outlined,
  'Icons.help_outline': Icons.help_outline,
  'Icons.help_outline_sharp': Icons.help_outline_sharp,
  'Icons.help_outline_rounded': Icons.help_outline_rounded,
  'Icons.help_outline_outlined': Icons.help_outline_outlined,
  'Icons.hevc': Icons.hevc,
  'Icons.hevc_sharp': Icons.hevc_sharp,
  'Icons.hevc_rounded': Icons.hevc_rounded,
  'Icons.hevc_outlined': Icons.hevc_outlined,
  'Icons.hexagon': Icons.hexagon,
  'Icons.hexagon_sharp': Icons.hexagon_sharp,
  'Icons.hexagon_rounded': Icons.hexagon_rounded,
  'Icons.hexagon_outlined': Icons.hexagon_outlined,
  'Icons.hide_image': Icons.hide_image,
  'Icons.hide_image_sharp': Icons.hide_image_sharp,
  'Icons.hide_image_rounded': Icons.hide_image_rounded,
  'Icons.hide_image_outlined': Icons.hide_image_outlined,
  'Icons.hide_source': Icons.hide_source,
  'Icons.hide_source_sharp': Icons.hide_source_sharp,
  'Icons.hide_source_rounded': Icons.hide_source_rounded,
  'Icons.hide_source_outlined': Icons.hide_source_outlined,
  'Icons.high_quality': Icons.high_quality,
  'Icons.high_quality_sharp': Icons.high_quality_sharp,
  'Icons.high_quality_rounded': Icons.high_quality_rounded,
  'Icons.high_quality_outlined': Icons.high_quality_outlined,
  'Icons.highlight': Icons.highlight,
  'Icons.highlight_sharp': Icons.highlight_sharp,
  'Icons.highlight_rounded': Icons.highlight_rounded,
  'Icons.highlight_outlined': Icons.highlight_outlined,
  'Icons.highlight_alt': Icons.highlight_alt,
  'Icons.highlight_alt_sharp': Icons.highlight_alt_sharp,
  'Icons.highlight_alt_rounded': Icons.highlight_alt_rounded,
  'Icons.highlight_alt_outlined': Icons.highlight_alt_outlined,
  'Icons.highlight_off': Icons.highlight_off,
  'Icons.highlight_off_sharp': Icons.highlight_off_sharp,
  'Icons.highlight_off_rounded': Icons.highlight_off_rounded,
  'Icons.highlight_off_outlined': Icons.highlight_off_outlined,
  'Icons.highlight_remove': Icons.highlight_remove,
  'Icons.highlight_remove_sharp': Icons.highlight_remove_sharp,
  'Icons.highlight_remove_rounded': Icons.highlight_remove_rounded,
  'Icons.highlight_remove_outlined': Icons.highlight_remove_outlined,
  'Icons.hiking': Icons.hiking,
  'Icons.hiking_sharp': Icons.hiking_sharp,
  'Icons.hiking_rounded': Icons.hiking_rounded,
  'Icons.hiking_outlined': Icons.hiking_outlined,
  'Icons.history': Icons.history,
  'Icons.history_sharp': Icons.history_sharp,
  'Icons.history_rounded': Icons.history_rounded,
  'Icons.history_outlined': Icons.history_outlined,
  'Icons.history_edu': Icons.history_edu,
  'Icons.history_edu_sharp': Icons.history_edu_sharp,
  'Icons.history_edu_rounded': Icons.history_edu_rounded,
  'Icons.history_edu_outlined': Icons.history_edu_outlined,
  'Icons.history_toggle_off': Icons.history_toggle_off,
  'Icons.history_toggle_off_sharp': Icons.history_toggle_off_sharp,
  'Icons.history_toggle_off_rounded': Icons.history_toggle_off_rounded,
  'Icons.history_toggle_off_outlined': Icons.history_toggle_off_outlined,
  'Icons.hive': Icons.hive,
  'Icons.hive_sharp': Icons.hive_sharp,
  'Icons.hive_rounded': Icons.hive_rounded,
  'Icons.hive_outlined': Icons.hive_outlined,
  'Icons.hls': Icons.hls,
  'Icons.hls_sharp': Icons.hls_sharp,
  'Icons.hls_rounded': Icons.hls_rounded,
  'Icons.hls_outlined': Icons.hls_outlined,
  'Icons.hls_off': Icons.hls_off,
  'Icons.hls_off_sharp': Icons.hls_off_sharp,
  'Icons.hls_off_rounded': Icons.hls_off_rounded,
  'Icons.hls_off_outlined': Icons.hls_off_outlined,
  'Icons.holiday_village': Icons.holiday_village,
  'Icons.holiday_village_sharp': Icons.holiday_village_sharp,
  'Icons.holiday_village_rounded': Icons.holiday_village_rounded,
  'Icons.holiday_village_outlined': Icons.holiday_village_outlined,
  'Icons.home': Icons.home,
  'Icons.home_sharp': Icons.home_sharp,
  'Icons.home_rounded': Icons.home_rounded,
  'Icons.home_outlined': Icons.home_outlined,
  'Icons.home_filled': Icons.home_filled,
  'Icons.home_max': Icons.home_max,
  'Icons.home_max_sharp': Icons.home_max_sharp,
  'Icons.home_max_rounded': Icons.home_max_rounded,
  'Icons.home_max_outlined': Icons.home_max_outlined,
  'Icons.home_mini': Icons.home_mini,
  'Icons.home_mini_sharp': Icons.home_mini_sharp,
  'Icons.home_mini_rounded': Icons.home_mini_rounded,
  'Icons.home_mini_outlined': Icons.home_mini_outlined,
  'Icons.home_repair_service': Icons.home_repair_service,
  'Icons.home_repair_service_sharp': Icons.home_repair_service_sharp,
  'Icons.home_repair_service_rounded': Icons.home_repair_service_rounded,
  'Icons.home_repair_service_outlined': Icons.home_repair_service_outlined,
  'Icons.home_work': Icons.home_work,
  'Icons.home_work_sharp': Icons.home_work_sharp,
  'Icons.home_work_rounded': Icons.home_work_rounded,
  'Icons.home_work_outlined': Icons.home_work_outlined,
  'Icons.horizontal_distribute': Icons.horizontal_distribute,
  'Icons.horizontal_distribute_sharp': Icons.horizontal_distribute_sharp,
  'Icons.horizontal_distribute_rounded': Icons.horizontal_distribute_rounded,
  'Icons.horizontal_distribute_outlined': Icons.horizontal_distribute_outlined,
  'Icons.horizontal_rule': Icons.horizontal_rule,
  'Icons.horizontal_rule_sharp': Icons.horizontal_rule_sharp,
  'Icons.horizontal_rule_rounded': Icons.horizontal_rule_rounded,
  'Icons.horizontal_rule_outlined': Icons.horizontal_rule_outlined,
  'Icons.horizontal_split': Icons.horizontal_split,
  'Icons.horizontal_split_sharp': Icons.horizontal_split_sharp,
  'Icons.horizontal_split_rounded': Icons.horizontal_split_rounded,
  'Icons.horizontal_split_outlined': Icons.horizontal_split_outlined,
  'Icons.hot_tub': Icons.hot_tub,
  'Icons.hot_tub_sharp': Icons.hot_tub_sharp,
  'Icons.hot_tub_rounded': Icons.hot_tub_rounded,
  'Icons.hot_tub_outlined': Icons.hot_tub_outlined,
  'Icons.hotel': Icons.hotel,
  'Icons.hotel_sharp': Icons.hotel_sharp,
  'Icons.hotel_rounded': Icons.hotel_rounded,
  'Icons.hotel_outlined': Icons.hotel_outlined,
  'Icons.hotel_class': Icons.hotel_class,
  'Icons.hotel_class_sharp': Icons.hotel_class_sharp,
  'Icons.hotel_class_rounded': Icons.hotel_class_rounded,
  'Icons.hotel_class_outlined': Icons.hotel_class_outlined,
  'Icons.hourglass_bottom': Icons.hourglass_bottom,
  'Icons.hourglass_bottom_sharp': Icons.hourglass_bottom_sharp,
  'Icons.hourglass_bottom_rounded': Icons.hourglass_bottom_rounded,
  'Icons.hourglass_bottom_outlined': Icons.hourglass_bottom_outlined,
  'Icons.hourglass_disabled': Icons.hourglass_disabled,
  'Icons.hourglass_disabled_sharp': Icons.hourglass_disabled_sharp,
  'Icons.hourglass_disabled_rounded': Icons.hourglass_disabled_rounded,
  'Icons.hourglass_disabled_outlined': Icons.hourglass_disabled_outlined,
  'Icons.hourglass_empty': Icons.hourglass_empty,
  'Icons.hourglass_empty_sharp': Icons.hourglass_empty_sharp,
  'Icons.hourglass_empty_rounded': Icons.hourglass_empty_rounded,
  'Icons.hourglass_empty_outlined': Icons.hourglass_empty_outlined,
  'Icons.hourglass_full': Icons.hourglass_full,
  'Icons.hourglass_full_sharp': Icons.hourglass_full_sharp,
  'Icons.hourglass_full_rounded': Icons.hourglass_full_rounded,
  'Icons.hourglass_full_outlined': Icons.hourglass_full_outlined,
  'Icons.hourglass_top': Icons.hourglass_top,
  'Icons.hourglass_top_sharp': Icons.hourglass_top_sharp,
  'Icons.hourglass_top_rounded': Icons.hourglass_top_rounded,
  'Icons.hourglass_top_outlined': Icons.hourglass_top_outlined,
  'Icons.house': Icons.house,
  'Icons.house_sharp': Icons.house_sharp,
  'Icons.house_rounded': Icons.house_rounded,
  'Icons.house_outlined': Icons.house_outlined,
  'Icons.house_siding': Icons.house_siding,
  'Icons.house_siding_sharp': Icons.house_siding_sharp,
  'Icons.house_siding_rounded': Icons.house_siding_rounded,
  'Icons.house_siding_outlined': Icons.house_siding_outlined,
  'Icons.houseboat': Icons.houseboat,
  'Icons.houseboat_sharp': Icons.houseboat_sharp,
  'Icons.houseboat_rounded': Icons.houseboat_rounded,
  'Icons.houseboat_outlined': Icons.houseboat_outlined,
  'Icons.how_to_reg': Icons.how_to_reg,
  'Icons.how_to_reg_sharp': Icons.how_to_reg_sharp,
  'Icons.how_to_reg_rounded': Icons.how_to_reg_rounded,
  'Icons.how_to_reg_outlined': Icons.how_to_reg_outlined,
  'Icons.how_to_vote': Icons.how_to_vote,
  'Icons.how_to_vote_sharp': Icons.how_to_vote_sharp,
  'Icons.how_to_vote_rounded': Icons.how_to_vote_rounded,
  'Icons.how_to_vote_outlined': Icons.how_to_vote_outlined,
  'Icons.html': Icons.html,
  'Icons.html_sharp': Icons.html_sharp,
  'Icons.html_rounded': Icons.html_rounded,
  'Icons.html_outlined': Icons.html_outlined,
  'Icons.http': Icons.http,
  'Icons.http_sharp': Icons.http_sharp,
  'Icons.http_rounded': Icons.http_rounded,
  'Icons.http_outlined': Icons.http_outlined,
  'Icons.https': Icons.https,
  'Icons.https_sharp': Icons.https_sharp,
  'Icons.https_rounded': Icons.https_rounded,
  'Icons.https_outlined': Icons.https_outlined,
  'Icons.hub': Icons.hub,
  'Icons.hub_sharp': Icons.hub_sharp,
  'Icons.hub_rounded': Icons.hub_rounded,
  'Icons.hub_outlined': Icons.hub_outlined,
  'Icons.hvac': Icons.hvac,
  'Icons.hvac_sharp': Icons.hvac_sharp,
  'Icons.hvac_rounded': Icons.hvac_rounded,
  'Icons.hvac_outlined': Icons.hvac_outlined,
  'Icons.ice_skating': Icons.ice_skating,
  'Icons.ice_skating_sharp': Icons.ice_skating_sharp,
  'Icons.ice_skating_rounded': Icons.ice_skating_rounded,
  'Icons.ice_skating_outlined': Icons.ice_skating_outlined,
  'Icons.icecream': Icons.icecream,
  'Icons.icecream_sharp': Icons.icecream_sharp,
  'Icons.icecream_rounded': Icons.icecream_rounded,
  'Icons.icecream_outlined': Icons.icecream_outlined,
  'Icons.image': Icons.image,
  'Icons.image_sharp': Icons.image_sharp,
  'Icons.image_rounded': Icons.image_rounded,
  'Icons.image_outlined': Icons.image_outlined,
  'Icons.image_aspect_ratio': Icons.image_aspect_ratio,
  'Icons.image_aspect_ratio_sharp': Icons.image_aspect_ratio_sharp,
  'Icons.image_aspect_ratio_rounded': Icons.image_aspect_ratio_rounded,
  'Icons.image_aspect_ratio_outlined': Icons.image_aspect_ratio_outlined,
  'Icons.image_not_supported': Icons.image_not_supported,
  'Icons.image_not_supported_sharp': Icons.image_not_supported_sharp,
  'Icons.image_not_supported_rounded': Icons.image_not_supported_rounded,
  'Icons.image_not_supported_outlined': Icons.image_not_supported_outlined,
  'Icons.image_search': Icons.image_search,
  'Icons.image_search_sharp': Icons.image_search_sharp,
  'Icons.image_search_rounded': Icons.image_search_rounded,
  'Icons.image_search_outlined': Icons.image_search_outlined,
  'Icons.imagesearch_roller': Icons.imagesearch_roller,
  'Icons.imagesearch_roller_sharp': Icons.imagesearch_roller_sharp,
  'Icons.imagesearch_roller_rounded': Icons.imagesearch_roller_rounded,
  'Icons.imagesearch_roller_outlined': Icons.imagesearch_roller_outlined,
  'Icons.import_contacts': Icons.import_contacts,
  'Icons.import_contacts_sharp': Icons.import_contacts_sharp,
  'Icons.import_contacts_rounded': Icons.import_contacts_rounded,
  'Icons.import_contacts_outlined': Icons.import_contacts_outlined,
  'Icons.import_export': Icons.import_export,
  'Icons.import_export_sharp': Icons.import_export_sharp,
  'Icons.import_export_rounded': Icons.import_export_rounded,
  'Icons.import_export_outlined': Icons.import_export_outlined,
  'Icons.important_devices': Icons.important_devices,
  'Icons.important_devices_sharp': Icons.important_devices_sharp,
  'Icons.important_devices_rounded': Icons.important_devices_rounded,
  'Icons.important_devices_outlined': Icons.important_devices_outlined,
  'Icons.inbox': Icons.inbox,
  'Icons.inbox_sharp': Icons.inbox_sharp,
  'Icons.inbox_rounded': Icons.inbox_rounded,
  'Icons.inbox_outlined': Icons.inbox_outlined,
  'Icons.incomplete_circle': Icons.incomplete_circle,
  'Icons.incomplete_circle_sharp': Icons.incomplete_circle_sharp,
  'Icons.incomplete_circle_rounded': Icons.incomplete_circle_rounded,
  'Icons.incomplete_circle_outlined': Icons.incomplete_circle_outlined,
  'Icons.indeterminate_check_box': Icons.indeterminate_check_box,
  'Icons.indeterminate_check_box_sharp': Icons.indeterminate_check_box_sharp,
  'Icons.indeterminate_check_box_rounded':
      Icons.indeterminate_check_box_rounded,
  'Icons.indeterminate_check_box_outlined':
      Icons.indeterminate_check_box_outlined,
  'Icons.info': Icons.info,
  'Icons.info_sharp': Icons.info_sharp,
  'Icons.info_rounded': Icons.info_rounded,
  'Icons.info_outlined': Icons.info_outlined,
  'Icons.info_outline': Icons.info_outline,
  'Icons.info_outline_sharp': Icons.info_outline_sharp,
  'Icons.info_outline_rounded': Icons.info_outline_rounded,
  'Icons.input': Icons.input,
  'Icons.input_sharp': Icons.input_sharp,
  'Icons.input_rounded': Icons.input_rounded,
  'Icons.input_outlined': Icons.input_outlined,
  'Icons.insert_chart': Icons.insert_chart,
  'Icons.insert_chart_sharp': Icons.insert_chart_sharp,
  'Icons.insert_chart_rounded': Icons.insert_chart_rounded,
  'Icons.insert_chart_outlined': Icons.insert_chart_outlined,
  'Icons.insert_chart_outlined_sharp': Icons.insert_chart_outlined_sharp,
  'Icons.insert_chart_outlined_rounded': Icons.insert_chart_outlined_rounded,
  'Icons.insert_chart_outlined_outlined': Icons.insert_chart_outlined_outlined,
  'Icons.insert_comment': Icons.insert_comment,
  'Icons.insert_comment_sharp': Icons.insert_comment_sharp,
  'Icons.insert_comment_rounded': Icons.insert_comment_rounded,
  'Icons.insert_comment_outlined': Icons.insert_comment_outlined,
  'Icons.insert_drive_file': Icons.insert_drive_file,
  'Icons.insert_drive_file_sharp': Icons.insert_drive_file_sharp,
  'Icons.insert_drive_file_rounded': Icons.insert_drive_file_rounded,
  'Icons.insert_drive_file_outlined': Icons.insert_drive_file_outlined,
  'Icons.insert_emoticon': Icons.insert_emoticon,
  'Icons.insert_emoticon_sharp': Icons.insert_emoticon_sharp,
  'Icons.insert_emoticon_rounded': Icons.insert_emoticon_rounded,
  'Icons.insert_emoticon_outlined': Icons.insert_emoticon_outlined,
  'Icons.insert_invitation': Icons.insert_invitation,
  'Icons.insert_invitation_sharp': Icons.insert_invitation_sharp,
  'Icons.insert_invitation_rounded': Icons.insert_invitation_rounded,
  'Icons.insert_invitation_outlined': Icons.insert_invitation_outlined,
  'Icons.insert_link': Icons.insert_link,
  'Icons.insert_link_sharp': Icons.insert_link_sharp,
  'Icons.insert_link_rounded': Icons.insert_link_rounded,
  'Icons.insert_link_outlined': Icons.insert_link_outlined,
  'Icons.insert_page_break': Icons.insert_page_break,
  'Icons.insert_page_break_sharp': Icons.insert_page_break_sharp,
  'Icons.insert_page_break_rounded': Icons.insert_page_break_rounded,
  'Icons.insert_page_break_outlined': Icons.insert_page_break_outlined,
  'Icons.insert_photo': Icons.insert_photo,
  'Icons.insert_photo_sharp': Icons.insert_photo_sharp,
  'Icons.insert_photo_rounded': Icons.insert_photo_rounded,
  'Icons.insert_photo_outlined': Icons.insert_photo_outlined,
  'Icons.insights': Icons.insights,
  'Icons.insights_sharp': Icons.insights_sharp,
  'Icons.insights_rounded': Icons.insights_rounded,
  'Icons.insights_outlined': Icons.insights_outlined,
  'Icons.install_desktop': Icons.install_desktop,
  'Icons.install_desktop_sharp': Icons.install_desktop_sharp,
  'Icons.install_desktop_rounded': Icons.install_desktop_rounded,
  'Icons.install_desktop_outlined': Icons.install_desktop_outlined,
  'Icons.install_mobile': Icons.install_mobile,
  'Icons.install_mobile_sharp': Icons.install_mobile_sharp,
  'Icons.install_mobile_rounded': Icons.install_mobile_rounded,
  'Icons.install_mobile_outlined': Icons.install_mobile_outlined,
  'Icons.integration_instructions': Icons.integration_instructions,
  'Icons.integration_instructions_sharp': Icons.integration_instructions_sharp,
  'Icons.integration_instructions_rounded':
      Icons.integration_instructions_rounded,
  'Icons.integration_instructions_outlined':
      Icons.integration_instructions_outlined,
  'Icons.interests': Icons.interests,
  'Icons.interests_sharp': Icons.interests_sharp,
  'Icons.interests_rounded': Icons.interests_rounded,
  'Icons.interests_outlined': Icons.interests_outlined,
  'Icons.interpreter_mode': Icons.interpreter_mode,
  'Icons.interpreter_mode_sharp': Icons.interpreter_mode_sharp,
  'Icons.interpreter_mode_rounded': Icons.interpreter_mode_rounded,
  'Icons.interpreter_mode_outlined': Icons.interpreter_mode_outlined,
  'Icons.inventory': Icons.inventory,
  'Icons.inventory_sharp': Icons.inventory_sharp,
  'Icons.inventory_rounded': Icons.inventory_rounded,
  'Icons.inventory_outlined': Icons.inventory_outlined,
  'Icons.inventory_2': Icons.inventory_2,
  'Icons.inventory_2_sharp': Icons.inventory_2_sharp,
  'Icons.inventory_2_rounded': Icons.inventory_2_rounded,
  'Icons.inventory_2_outlined': Icons.inventory_2_outlined,
  'Icons.invert_colors': Icons.invert_colors,
  'Icons.invert_colors_sharp': Icons.invert_colors_sharp,
  'Icons.invert_colors_rounded': Icons.invert_colors_rounded,
  'Icons.invert_colors_outlined': Icons.invert_colors_outlined,
  'Icons.invert_colors_off': Icons.invert_colors_off,
  'Icons.invert_colors_off_sharp': Icons.invert_colors_off_sharp,
  'Icons.invert_colors_off_rounded': Icons.invert_colors_off_rounded,
  'Icons.invert_colors_off_outlined': Icons.invert_colors_off_outlined,
  'Icons.invert_colors_on': Icons.invert_colors_on,
  'Icons.invert_colors_on_sharp': Icons.invert_colors_on_sharp,
  'Icons.invert_colors_on_rounded': Icons.invert_colors_on_rounded,
  'Icons.invert_colors_on_outlined': Icons.invert_colors_on_outlined,
  'Icons.ios_share': Icons.ios_share,
  'Icons.ios_share_sharp': Icons.ios_share_sharp,
  'Icons.ios_share_rounded': Icons.ios_share_rounded,
  'Icons.ios_share_outlined': Icons.ios_share_outlined,
  'Icons.iron': Icons.iron,
  'Icons.iron_sharp': Icons.iron_sharp,
  'Icons.iron_rounded': Icons.iron_rounded,
  'Icons.iron_outlined': Icons.iron_outlined,
  'Icons.iso': Icons.iso,
  'Icons.iso_sharp': Icons.iso_sharp,
  'Icons.iso_rounded': Icons.iso_rounded,
  'Icons.iso_outlined': Icons.iso_outlined,
  'Icons.javascript': Icons.javascript,
  'Icons.javascript_sharp': Icons.javascript_sharp,
  'Icons.javascript_rounded': Icons.javascript_rounded,
  'Icons.javascript_outlined': Icons.javascript_outlined,
  'Icons.join_full': Icons.join_full,
  'Icons.join_full_sharp': Icons.join_full_sharp,
  'Icons.join_full_rounded': Icons.join_full_rounded,
  'Icons.join_full_outlined': Icons.join_full_outlined,
  'Icons.join_inner': Icons.join_inner,
  'Icons.join_inner_sharp': Icons.join_inner_sharp,
  'Icons.join_inner_rounded': Icons.join_inner_rounded,
  'Icons.join_inner_outlined': Icons.join_inner_outlined,
  'Icons.join_left': Icons.join_left,
  'Icons.join_left_sharp': Icons.join_left_sharp,
  'Icons.join_left_rounded': Icons.join_left_rounded,
  'Icons.join_left_outlined': Icons.join_left_outlined,
  'Icons.join_right': Icons.join_right,
  'Icons.join_right_sharp': Icons.join_right_sharp,
  'Icons.join_right_rounded': Icons.join_right_rounded,
  'Icons.join_right_outlined': Icons.join_right_outlined,
  'Icons.kayaking': Icons.kayaking,
  'Icons.kayaking_sharp': Icons.kayaking_sharp,
  'Icons.kayaking_rounded': Icons.kayaking_rounded,
  'Icons.kayaking_outlined': Icons.kayaking_outlined,
  'Icons.kebab_dining': Icons.kebab_dining,
  'Icons.kebab_dining_sharp': Icons.kebab_dining_sharp,
  'Icons.kebab_dining_rounded': Icons.kebab_dining_rounded,
  'Icons.kebab_dining_outlined': Icons.kebab_dining_outlined,
  'Icons.key': Icons.key,
  'Icons.key_sharp': Icons.key_sharp,
  'Icons.key_rounded': Icons.key_rounded,
  'Icons.key_outlined': Icons.key_outlined,
  'Icons.key_off': Icons.key_off,
  'Icons.key_off_sharp': Icons.key_off_sharp,
  'Icons.key_off_rounded': Icons.key_off_rounded,
  'Icons.key_off_outlined': Icons.key_off_outlined,
  'Icons.keyboard': Icons.keyboard,
  'Icons.keyboard_sharp': Icons.keyboard_sharp,
  'Icons.keyboard_rounded': Icons.keyboard_rounded,
  'Icons.keyboard_outlined': Icons.keyboard_outlined,
  'Icons.keyboard_alt': Icons.keyboard_alt,
  'Icons.keyboard_alt_sharp': Icons.keyboard_alt_sharp,
  'Icons.keyboard_alt_rounded': Icons.keyboard_alt_rounded,
  'Icons.keyboard_alt_outlined': Icons.keyboard_alt_outlined,
  'Icons.keyboard_arrow_down': Icons.keyboard_arrow_down,
  'Icons.keyboard_arrow_down_sharp': Icons.keyboard_arrow_down_sharp,
  'Icons.keyboard_arrow_down_rounded': Icons.keyboard_arrow_down_rounded,
  'Icons.keyboard_arrow_down_outlined': Icons.keyboard_arrow_down_outlined,
  'Icons.keyboard_arrow_left': Icons.keyboard_arrow_left,
  'Icons.keyboard_arrow_left_sharp': Icons.keyboard_arrow_left_sharp,
  'Icons.keyboard_arrow_left_rounded': Icons.keyboard_arrow_left_rounded,
  'Icons.keyboard_arrow_left_outlined': Icons.keyboard_arrow_left_outlined,
  'Icons.keyboard_arrow_right': Icons.keyboard_arrow_right,
  'Icons.keyboard_arrow_right_sharp': Icons.keyboard_arrow_right_sharp,
  'Icons.keyboard_arrow_right_rounded': Icons.keyboard_arrow_right_rounded,
  'Icons.keyboard_arrow_right_outlined': Icons.keyboard_arrow_right_outlined,
  'Icons.keyboard_arrow_up': Icons.keyboard_arrow_up,
  'Icons.keyboard_arrow_up_sharp': Icons.keyboard_arrow_up_sharp,
  'Icons.keyboard_arrow_up_rounded': Icons.keyboard_arrow_up_rounded,
  'Icons.keyboard_arrow_up_outlined': Icons.keyboard_arrow_up_outlined,
  'Icons.keyboard_backspace': Icons.keyboard_backspace,
  'Icons.keyboard_backspace_sharp': Icons.keyboard_backspace_sharp,
  'Icons.keyboard_backspace_rounded': Icons.keyboard_backspace_rounded,
  'Icons.keyboard_backspace_outlined': Icons.keyboard_backspace_outlined,
  'Icons.keyboard_capslock': Icons.keyboard_capslock,
  'Icons.keyboard_capslock_sharp': Icons.keyboard_capslock_sharp,
  'Icons.keyboard_capslock_rounded': Icons.keyboard_capslock_rounded,
  'Icons.keyboard_capslock_outlined': Icons.keyboard_capslock_outlined,
  'Icons.keyboard_command_key': Icons.keyboard_command_key,
  'Icons.keyboard_command_key_sharp': Icons.keyboard_command_key_sharp,
  'Icons.keyboard_command_key_rounded': Icons.keyboard_command_key_rounded,
  'Icons.keyboard_command_key_outlined': Icons.keyboard_command_key_outlined,
  'Icons.keyboard_control': Icons.keyboard_control,
  'Icons.keyboard_control_sharp': Icons.keyboard_control_sharp,
  'Icons.keyboard_control_rounded': Icons.keyboard_control_rounded,
  'Icons.keyboard_control_outlined': Icons.keyboard_control_outlined,
  'Icons.keyboard_control_key': Icons.keyboard_control_key,
  'Icons.keyboard_control_key_sharp': Icons.keyboard_control_key_sharp,
  'Icons.keyboard_control_key_rounded': Icons.keyboard_control_key_rounded,
  'Icons.keyboard_control_key_outlined': Icons.keyboard_control_key_outlined,
  'Icons.keyboard_double_arrow_down': Icons.keyboard_double_arrow_down,
  'Icons.keyboard_double_arrow_down_sharp':
      Icons.keyboard_double_arrow_down_sharp,
  'Icons.keyboard_double_arrow_down_rounded':
      Icons.keyboard_double_arrow_down_rounded,
  'Icons.keyboard_double_arrow_down_outlined':
      Icons.keyboard_double_arrow_down_outlined,
  'Icons.keyboard_double_arrow_left': Icons.keyboard_double_arrow_left,
  'Icons.keyboard_double_arrow_left_sharp':
      Icons.keyboard_double_arrow_left_sharp,
  'Icons.keyboard_double_arrow_left_rounded':
      Icons.keyboard_double_arrow_left_rounded,
  'Icons.keyboard_double_arrow_left_outlined':
      Icons.keyboard_double_arrow_left_outlined,
  'Icons.keyboard_double_arrow_right': Icons.keyboard_double_arrow_right,
  'Icons.keyboard_double_arrow_right_sharp':
      Icons.keyboard_double_arrow_right_sharp,
  'Icons.keyboard_double_arrow_right_rounded':
      Icons.keyboard_double_arrow_right_rounded,
  'Icons.keyboard_double_arrow_right_outlined':
      Icons.keyboard_double_arrow_right_outlined,
  'Icons.keyboard_double_arrow_up': Icons.keyboard_double_arrow_up,
  'Icons.keyboard_double_arrow_up_sharp': Icons.keyboard_double_arrow_up_sharp,
  'Icons.keyboard_double_arrow_up_rounded':
      Icons.keyboard_double_arrow_up_rounded,
  'Icons.keyboard_double_arrow_up_outlined':
      Icons.keyboard_double_arrow_up_outlined,
  'Icons.keyboard_hide': Icons.keyboard_hide,
  'Icons.keyboard_hide_sharp': Icons.keyboard_hide_sharp,
  'Icons.keyboard_hide_rounded': Icons.keyboard_hide_rounded,
  'Icons.keyboard_hide_outlined': Icons.keyboard_hide_outlined,
  'Icons.keyboard_option_key': Icons.keyboard_option_key,
  'Icons.keyboard_option_key_sharp': Icons.keyboard_option_key_sharp,
  'Icons.keyboard_option_key_rounded': Icons.keyboard_option_key_rounded,
  'Icons.keyboard_option_key_outlined': Icons.keyboard_option_key_outlined,
  'Icons.keyboard_return': Icons.keyboard_return,
  'Icons.keyboard_return_sharp': Icons.keyboard_return_sharp,
  'Icons.keyboard_return_rounded': Icons.keyboard_return_rounded,
  'Icons.keyboard_return_outlined': Icons.keyboard_return_outlined,
  'Icons.keyboard_tab': Icons.keyboard_tab,
  'Icons.keyboard_tab_sharp': Icons.keyboard_tab_sharp,
  'Icons.keyboard_tab_rounded': Icons.keyboard_tab_rounded,
  'Icons.keyboard_tab_outlined': Icons.keyboard_tab_outlined,
  'Icons.keyboard_voice': Icons.keyboard_voice,
  'Icons.keyboard_voice_sharp': Icons.keyboard_voice_sharp,
  'Icons.keyboard_voice_rounded': Icons.keyboard_voice_rounded,
  'Icons.keyboard_voice_outlined': Icons.keyboard_voice_outlined,
  'Icons.king_bed': Icons.king_bed,
  'Icons.king_bed_sharp': Icons.king_bed_sharp,
  'Icons.king_bed_rounded': Icons.king_bed_rounded,
  'Icons.king_bed_outlined': Icons.king_bed_outlined,
  'Icons.kitchen': Icons.kitchen,
  'Icons.kitchen_sharp': Icons.kitchen_sharp,
  'Icons.kitchen_rounded': Icons.kitchen_rounded,
  'Icons.kitchen_outlined': Icons.kitchen_outlined,
  'Icons.kitesurfing': Icons.kitesurfing,
  'Icons.kitesurfing_sharp': Icons.kitesurfing_sharp,
  'Icons.kitesurfing_rounded': Icons.kitesurfing_rounded,
  'Icons.kitesurfing_outlined': Icons.kitesurfing_outlined,
  'Icons.label': Icons.label,
  'Icons.label_sharp': Icons.label_sharp,
  'Icons.label_rounded': Icons.label_rounded,
  'Icons.label_outlined': Icons.label_outlined,
  'Icons.label_important': Icons.label_important,
  'Icons.label_important_sharp': Icons.label_important_sharp,
  'Icons.label_important_rounded': Icons.label_important_rounded,
  'Icons.label_important_outlined': Icons.label_important_outlined,
  'Icons.label_important_outline': Icons.label_important_outline,
  'Icons.label_important_outline_sharp': Icons.label_important_outline_sharp,
  'Icons.label_important_outline_rounded':
      Icons.label_important_outline_rounded,
  'Icons.label_off': Icons.label_off,
  'Icons.label_off_sharp': Icons.label_off_sharp,
  'Icons.label_off_rounded': Icons.label_off_rounded,
  'Icons.label_off_outlined': Icons.label_off_outlined,
  'Icons.label_outline': Icons.label_outline,
  'Icons.label_outline_sharp': Icons.label_outline_sharp,
  'Icons.label_outline_rounded': Icons.label_outline_rounded,
  'Icons.lan': Icons.lan,
  'Icons.lan_sharp': Icons.lan_sharp,
  'Icons.lan_rounded': Icons.lan_rounded,
  'Icons.lan_outlined': Icons.lan_outlined,
  'Icons.landscape': Icons.landscape,
  'Icons.landscape_sharp': Icons.landscape_sharp,
  'Icons.landscape_rounded': Icons.landscape_rounded,
  'Icons.landscape_outlined': Icons.landscape_outlined,
  'Icons.landslide': Icons.landslide,
  'Icons.landslide_sharp': Icons.landslide_sharp,
  'Icons.landslide_rounded': Icons.landslide_rounded,
  'Icons.landslide_outlined': Icons.landslide_outlined,
  'Icons.language': Icons.language,
  'Icons.language_sharp': Icons.language_sharp,
  'Icons.language_rounded': Icons.language_rounded,
  'Icons.language_outlined': Icons.language_outlined,
  'Icons.laptop': Icons.laptop,
  'Icons.laptop_sharp': Icons.laptop_sharp,
  'Icons.laptop_rounded': Icons.laptop_rounded,
  'Icons.laptop_outlined': Icons.laptop_outlined,
  'Icons.laptop_chromebook': Icons.laptop_chromebook,
  'Icons.laptop_chromebook_sharp': Icons.laptop_chromebook_sharp,
  'Icons.laptop_chromebook_rounded': Icons.laptop_chromebook_rounded,
  'Icons.laptop_chromebook_outlined': Icons.laptop_chromebook_outlined,
  'Icons.laptop_mac': Icons.laptop_mac,
  'Icons.laptop_mac_sharp': Icons.laptop_mac_sharp,
  'Icons.laptop_mac_rounded': Icons.laptop_mac_rounded,
  'Icons.laptop_mac_outlined': Icons.laptop_mac_outlined,
  'Icons.laptop_windows': Icons.laptop_windows,
  'Icons.laptop_windows_sharp': Icons.laptop_windows_sharp,
  'Icons.laptop_windows_rounded': Icons.laptop_windows_rounded,
  'Icons.laptop_windows_outlined': Icons.laptop_windows_outlined,
  'Icons.last_page': Icons.last_page,
  'Icons.last_page_sharp': Icons.last_page_sharp,
  'Icons.last_page_rounded': Icons.last_page_rounded,
  'Icons.last_page_outlined': Icons.last_page_outlined,
  'Icons.launch': Icons.launch,
  'Icons.launch_sharp': Icons.launch_sharp,
  'Icons.launch_rounded': Icons.launch_rounded,
  'Icons.launch_outlined': Icons.launch_outlined,
  'Icons.layers': Icons.layers,
  'Icons.layers_sharp': Icons.layers_sharp,
  'Icons.layers_rounded': Icons.layers_rounded,
  'Icons.layers_outlined': Icons.layers_outlined,
  'Icons.layers_clear': Icons.layers_clear,
  'Icons.layers_clear_sharp': Icons.layers_clear_sharp,
  'Icons.layers_clear_rounded': Icons.layers_clear_rounded,
  'Icons.layers_clear_outlined': Icons.layers_clear_outlined,
  'Icons.leaderboard': Icons.leaderboard,
  'Icons.leaderboard_sharp': Icons.leaderboard_sharp,
  'Icons.leaderboard_rounded': Icons.leaderboard_rounded,
  'Icons.leaderboard_outlined': Icons.leaderboard_outlined,
  'Icons.leak_add': Icons.leak_add,
  'Icons.leak_add_sharp': Icons.leak_add_sharp,
  'Icons.leak_add_rounded': Icons.leak_add_rounded,
  'Icons.leak_add_outlined': Icons.leak_add_outlined,
  'Icons.leak_remove': Icons.leak_remove,
  'Icons.leak_remove_sharp': Icons.leak_remove_sharp,
  'Icons.leak_remove_rounded': Icons.leak_remove_rounded,
  'Icons.leak_remove_outlined': Icons.leak_remove_outlined,
  'Icons.leave_bags_at_home': Icons.leave_bags_at_home,
  'Icons.leave_bags_at_home_sharp': Icons.leave_bags_at_home_sharp,
  'Icons.leave_bags_at_home_rounded': Icons.leave_bags_at_home_rounded,
  'Icons.leave_bags_at_home_outlined': Icons.leave_bags_at_home_outlined,
  'Icons.legend_toggle': Icons.legend_toggle,
  'Icons.legend_toggle_sharp': Icons.legend_toggle_sharp,
  'Icons.legend_toggle_rounded': Icons.legend_toggle_rounded,
  'Icons.legend_toggle_outlined': Icons.legend_toggle_outlined,
  'Icons.lens': Icons.lens,
  'Icons.lens_sharp': Icons.lens_sharp,
  'Icons.lens_rounded': Icons.lens_rounded,
  'Icons.lens_outlined': Icons.lens_outlined,
  'Icons.lens_blur': Icons.lens_blur,
  'Icons.lens_blur_sharp': Icons.lens_blur_sharp,
  'Icons.lens_blur_rounded': Icons.lens_blur_rounded,
  'Icons.lens_blur_outlined': Icons.lens_blur_outlined,
  'Icons.library_add': Icons.library_add,
  'Icons.library_add_sharp': Icons.library_add_sharp,
  'Icons.library_add_rounded': Icons.library_add_rounded,
  'Icons.library_add_outlined': Icons.library_add_outlined,
  'Icons.library_add_check': Icons.library_add_check,
  'Icons.library_add_check_sharp': Icons.library_add_check_sharp,
  'Icons.library_add_check_rounded': Icons.library_add_check_rounded,
  'Icons.library_add_check_outlined': Icons.library_add_check_outlined,
  'Icons.library_books': Icons.library_books,
  'Icons.library_books_sharp': Icons.library_books_sharp,
  'Icons.library_books_rounded': Icons.library_books_rounded,
  'Icons.library_books_outlined': Icons.library_books_outlined,
  'Icons.library_music': Icons.library_music,
  'Icons.library_music_sharp': Icons.library_music_sharp,
  'Icons.library_music_rounded': Icons.library_music_rounded,
  'Icons.library_music_outlined': Icons.library_music_outlined,
  'Icons.light': Icons.light,
  'Icons.light_sharp': Icons.light_sharp,
  'Icons.light_rounded': Icons.light_rounded,
  'Icons.light_outlined': Icons.light_outlined,
  'Icons.light_mode': Icons.light_mode,
  'Icons.light_mode_sharp': Icons.light_mode_sharp,
  'Icons.light_mode_rounded': Icons.light_mode_rounded,
  'Icons.light_mode_outlined': Icons.light_mode_outlined,
  'Icons.lightbulb': Icons.lightbulb,
  'Icons.lightbulb_sharp': Icons.lightbulb_sharp,
  'Icons.lightbulb_rounded': Icons.lightbulb_rounded,
  'Icons.lightbulb_outlined': Icons.lightbulb_outlined,
  'Icons.lightbulb_circle': Icons.lightbulb_circle,
  'Icons.lightbulb_circle_sharp': Icons.lightbulb_circle_sharp,
  'Icons.lightbulb_circle_rounded': Icons.lightbulb_circle_rounded,
  'Icons.lightbulb_circle_outlined': Icons.lightbulb_circle_outlined,
  'Icons.lightbulb_outline': Icons.lightbulb_outline,
  'Icons.lightbulb_outline_sharp': Icons.lightbulb_outline_sharp,
  'Icons.lightbulb_outline_rounded': Icons.lightbulb_outline_rounded,
  'Icons.line_axis': Icons.line_axis,
  'Icons.line_axis_sharp': Icons.line_axis_sharp,
  'Icons.line_axis_rounded': Icons.line_axis_rounded,
  'Icons.line_axis_outlined': Icons.line_axis_outlined,
  'Icons.line_style': Icons.line_style,
  'Icons.line_style_sharp': Icons.line_style_sharp,
  'Icons.line_style_rounded': Icons.line_style_rounded,
  'Icons.line_style_outlined': Icons.line_style_outlined,
  'Icons.line_weight': Icons.line_weight,
  'Icons.line_weight_sharp': Icons.line_weight_sharp,
  'Icons.line_weight_rounded': Icons.line_weight_rounded,
  'Icons.line_weight_outlined': Icons.line_weight_outlined,
  'Icons.linear_scale': Icons.linear_scale,
  'Icons.linear_scale_sharp': Icons.linear_scale_sharp,
  'Icons.linear_scale_rounded': Icons.linear_scale_rounded,
  'Icons.linear_scale_outlined': Icons.linear_scale_outlined,
  'Icons.link': Icons.link,
  'Icons.link_sharp': Icons.link_sharp,
  'Icons.link_rounded': Icons.link_rounded,
  'Icons.link_outlined': Icons.link_outlined,
  'Icons.link_off': Icons.link_off,
  'Icons.link_off_sharp': Icons.link_off_sharp,
  'Icons.link_off_rounded': Icons.link_off_rounded,
  'Icons.link_off_outlined': Icons.link_off_outlined,
  'Icons.linked_camera': Icons.linked_camera,
  'Icons.linked_camera_sharp': Icons.linked_camera_sharp,
  'Icons.linked_camera_rounded': Icons.linked_camera_rounded,
  'Icons.linked_camera_outlined': Icons.linked_camera_outlined,
  'Icons.liquor': Icons.liquor,
  'Icons.liquor_sharp': Icons.liquor_sharp,
  'Icons.liquor_rounded': Icons.liquor_rounded,
  'Icons.liquor_outlined': Icons.liquor_outlined,
  'Icons.list': Icons.list,
  'Icons.list_sharp': Icons.list_sharp,
  'Icons.list_rounded': Icons.list_rounded,
  'Icons.list_outlined': Icons.list_outlined,
  'Icons.list_alt': Icons.list_alt,
  'Icons.list_alt_sharp': Icons.list_alt_sharp,
  'Icons.list_alt_rounded': Icons.list_alt_rounded,
  'Icons.list_alt_outlined': Icons.list_alt_outlined,
  'Icons.live_help': Icons.live_help,
  'Icons.live_help_sharp': Icons.live_help_sharp,
  'Icons.live_help_rounded': Icons.live_help_rounded,
  'Icons.live_help_outlined': Icons.live_help_outlined,
  'Icons.live_tv': Icons.live_tv,
  'Icons.live_tv_sharp': Icons.live_tv_sharp,
  'Icons.live_tv_rounded': Icons.live_tv_rounded,
  'Icons.live_tv_outlined': Icons.live_tv_outlined,
  'Icons.living': Icons.living,
  'Icons.living_sharp': Icons.living_sharp,
  'Icons.living_rounded': Icons.living_rounded,
  'Icons.living_outlined': Icons.living_outlined,
  'Icons.local_activity': Icons.local_activity,
  'Icons.local_activity_sharp': Icons.local_activity_sharp,
  'Icons.local_activity_rounded': Icons.local_activity_rounded,
  'Icons.local_activity_outlined': Icons.local_activity_outlined,
  'Icons.local_airport': Icons.local_airport,
  'Icons.local_airport_sharp': Icons.local_airport_sharp,
  'Icons.local_airport_rounded': Icons.local_airport_rounded,
  'Icons.local_airport_outlined': Icons.local_airport_outlined,
  'Icons.local_atm': Icons.local_atm,
  'Icons.local_atm_sharp': Icons.local_atm_sharp,
  'Icons.local_atm_rounded': Icons.local_atm_rounded,
  'Icons.local_atm_outlined': Icons.local_atm_outlined,
  'Icons.local_attraction': Icons.local_attraction,
  'Icons.local_attraction_sharp': Icons.local_attraction_sharp,
  'Icons.local_attraction_rounded': Icons.local_attraction_rounded,
  'Icons.local_attraction_outlined': Icons.local_attraction_outlined,
  'Icons.local_bar': Icons.local_bar,
  'Icons.local_bar_sharp': Icons.local_bar_sharp,
  'Icons.local_bar_rounded': Icons.local_bar_rounded,
  'Icons.local_bar_outlined': Icons.local_bar_outlined,
  'Icons.local_cafe': Icons.local_cafe,
  'Icons.local_cafe_sharp': Icons.local_cafe_sharp,
  'Icons.local_cafe_rounded': Icons.local_cafe_rounded,
  'Icons.local_cafe_outlined': Icons.local_cafe_outlined,
  'Icons.local_car_wash': Icons.local_car_wash,
  'Icons.local_car_wash_sharp': Icons.local_car_wash_sharp,
  'Icons.local_car_wash_rounded': Icons.local_car_wash_rounded,
  'Icons.local_car_wash_outlined': Icons.local_car_wash_outlined,
  'Icons.local_convenience_store': Icons.local_convenience_store,
  'Icons.local_convenience_store_sharp': Icons.local_convenience_store_sharp,
  'Icons.local_convenience_store_rounded':
      Icons.local_convenience_store_rounded,
  'Icons.local_convenience_store_outlined':
      Icons.local_convenience_store_outlined,
  'Icons.local_dining': Icons.local_dining,
  'Icons.local_dining_sharp': Icons.local_dining_sharp,
  'Icons.local_dining_rounded': Icons.local_dining_rounded,
  'Icons.local_dining_outlined': Icons.local_dining_outlined,
  'Icons.local_drink': Icons.local_drink,
  'Icons.local_drink_sharp': Icons.local_drink_sharp,
  'Icons.local_drink_rounded': Icons.local_drink_rounded,
  'Icons.local_drink_outlined': Icons.local_drink_outlined,
  'Icons.local_fire_department': Icons.local_fire_department,
  'Icons.local_fire_department_sharp': Icons.local_fire_department_sharp,
  'Icons.local_fire_department_rounded': Icons.local_fire_department_rounded,
  'Icons.local_fire_department_outlined': Icons.local_fire_department_outlined,
  'Icons.local_florist': Icons.local_florist,
  'Icons.local_florist_sharp': Icons.local_florist_sharp,
  'Icons.local_florist_rounded': Icons.local_florist_rounded,
  'Icons.local_florist_outlined': Icons.local_florist_outlined,
  'Icons.local_gas_station': Icons.local_gas_station,
  'Icons.local_gas_station_sharp': Icons.local_gas_station_sharp,
  'Icons.local_gas_station_rounded': Icons.local_gas_station_rounded,
  'Icons.local_gas_station_outlined': Icons.local_gas_station_outlined,
  'Icons.local_grocery_store': Icons.local_grocery_store,
  'Icons.local_grocery_store_sharp': Icons.local_grocery_store_sharp,
  'Icons.local_grocery_store_rounded': Icons.local_grocery_store_rounded,
  'Icons.local_grocery_store_outlined': Icons.local_grocery_store_outlined,
  'Icons.local_hospital': Icons.local_hospital,
  'Icons.local_hospital_sharp': Icons.local_hospital_sharp,
  'Icons.local_hospital_rounded': Icons.local_hospital_rounded,
  'Icons.local_hospital_outlined': Icons.local_hospital_outlined,
  'Icons.local_hotel': Icons.local_hotel,
  'Icons.local_hotel_sharp': Icons.local_hotel_sharp,
  'Icons.local_hotel_rounded': Icons.local_hotel_rounded,
  'Icons.local_hotel_outlined': Icons.local_hotel_outlined,
  'Icons.local_laundry_service': Icons.local_laundry_service,
  'Icons.local_laundry_service_sharp': Icons.local_laundry_service_sharp,
  'Icons.local_laundry_service_rounded': Icons.local_laundry_service_rounded,
  'Icons.local_laundry_service_outlined': Icons.local_laundry_service_outlined,
  'Icons.local_library': Icons.local_library,
  'Icons.local_library_sharp': Icons.local_library_sharp,
  'Icons.local_library_rounded': Icons.local_library_rounded,
  'Icons.local_library_outlined': Icons.local_library_outlined,
  'Icons.local_mall': Icons.local_mall,
  'Icons.local_mall_sharp': Icons.local_mall_sharp,
  'Icons.local_mall_rounded': Icons.local_mall_rounded,
  'Icons.local_mall_outlined': Icons.local_mall_outlined,
  'Icons.local_movies': Icons.local_movies,
  'Icons.local_movies_sharp': Icons.local_movies_sharp,
  'Icons.local_movies_rounded': Icons.local_movies_rounded,
  'Icons.local_movies_outlined': Icons.local_movies_outlined,
  'Icons.local_offer': Icons.local_offer,
  'Icons.local_offer_sharp': Icons.local_offer_sharp,
  'Icons.local_offer_rounded': Icons.local_offer_rounded,
  'Icons.local_offer_outlined': Icons.local_offer_outlined,
  'Icons.local_parking': Icons.local_parking,
  'Icons.local_parking_sharp': Icons.local_parking_sharp,
  'Icons.local_parking_rounded': Icons.local_parking_rounded,
  'Icons.local_parking_outlined': Icons.local_parking_outlined,
  'Icons.local_pharmacy': Icons.local_pharmacy,
  'Icons.local_pharmacy_sharp': Icons.local_pharmacy_sharp,
  'Icons.local_pharmacy_rounded': Icons.local_pharmacy_rounded,
  'Icons.local_pharmacy_outlined': Icons.local_pharmacy_outlined,
  'Icons.local_phone': Icons.local_phone,
  'Icons.local_phone_sharp': Icons.local_phone_sharp,
  'Icons.local_phone_rounded': Icons.local_phone_rounded,
  'Icons.local_phone_outlined': Icons.local_phone_outlined,
  'Icons.local_pizza': Icons.local_pizza,
  'Icons.local_pizza_sharp': Icons.local_pizza_sharp,
  'Icons.local_pizza_rounded': Icons.local_pizza_rounded,
  'Icons.local_pizza_outlined': Icons.local_pizza_outlined,
  'Icons.local_play': Icons.local_play,
  'Icons.local_play_sharp': Icons.local_play_sharp,
  'Icons.local_play_rounded': Icons.local_play_rounded,
  'Icons.local_play_outlined': Icons.local_play_outlined,
  'Icons.local_police': Icons.local_police,
  'Icons.local_police_sharp': Icons.local_police_sharp,
  'Icons.local_police_rounded': Icons.local_police_rounded,
  'Icons.local_police_outlined': Icons.local_police_outlined,
  'Icons.local_post_office': Icons.local_post_office,
  'Icons.local_post_office_sharp': Icons.local_post_office_sharp,
  'Icons.local_post_office_rounded': Icons.local_post_office_rounded,
  'Icons.local_post_office_outlined': Icons.local_post_office_outlined,
  'Icons.local_print_shop': Icons.local_print_shop,
  'Icons.local_print_shop_sharp': Icons.local_print_shop_sharp,
  'Icons.local_print_shop_rounded': Icons.local_print_shop_rounded,
  'Icons.local_print_shop_outlined': Icons.local_print_shop_outlined,
  'Icons.local_printshop': Icons.local_printshop,
  'Icons.local_printshop_sharp': Icons.local_printshop_sharp,
  'Icons.local_printshop_rounded': Icons.local_printshop_rounded,
  'Icons.local_printshop_outlined': Icons.local_printshop_outlined,
  'Icons.local_restaurant': Icons.local_restaurant,
  'Icons.local_restaurant_sharp': Icons.local_restaurant_sharp,
  'Icons.local_restaurant_rounded': Icons.local_restaurant_rounded,
  'Icons.local_restaurant_outlined': Icons.local_restaurant_outlined,
  'Icons.local_see': Icons.local_see,
  'Icons.local_see_sharp': Icons.local_see_sharp,
  'Icons.local_see_rounded': Icons.local_see_rounded,
  'Icons.local_see_outlined': Icons.local_see_outlined,
  'Icons.local_shipping': Icons.local_shipping,
  'Icons.local_shipping_sharp': Icons.local_shipping_sharp,
  'Icons.local_shipping_rounded': Icons.local_shipping_rounded,
  'Icons.local_shipping_outlined': Icons.local_shipping_outlined,
  'Icons.local_taxi': Icons.local_taxi,
  'Icons.local_taxi_sharp': Icons.local_taxi_sharp,
  'Icons.local_taxi_rounded': Icons.local_taxi_rounded,
  'Icons.local_taxi_outlined': Icons.local_taxi_outlined,
  'Icons.location_city': Icons.location_city,
  'Icons.location_city_sharp': Icons.location_city_sharp,
  'Icons.location_city_rounded': Icons.location_city_rounded,
  'Icons.location_city_outlined': Icons.location_city_outlined,
  'Icons.location_disabled': Icons.location_disabled,
  'Icons.location_disabled_sharp': Icons.location_disabled_sharp,
  'Icons.location_disabled_rounded': Icons.location_disabled_rounded,
  'Icons.location_disabled_outlined': Icons.location_disabled_outlined,
  'Icons.location_history': Icons.location_history,
  'Icons.location_history_sharp': Icons.location_history_sharp,
  'Icons.location_history_rounded': Icons.location_history_rounded,
  'Icons.location_history_outlined': Icons.location_history_outlined,
  'Icons.location_off': Icons.location_off,
  'Icons.location_off_sharp': Icons.location_off_sharp,
  'Icons.location_off_rounded': Icons.location_off_rounded,
  'Icons.location_off_outlined': Icons.location_off_outlined,
  'Icons.location_on': Icons.location_on,
  'Icons.location_on_sharp': Icons.location_on_sharp,
  'Icons.location_on_rounded': Icons.location_on_rounded,
  'Icons.location_on_outlined': Icons.location_on_outlined,
  'Icons.location_pin': Icons.location_pin,
  'Icons.location_searching': Icons.location_searching,
  'Icons.location_searching_sharp': Icons.location_searching_sharp,
  'Icons.location_searching_rounded': Icons.location_searching_rounded,
  'Icons.location_searching_outlined': Icons.location_searching_outlined,
  'Icons.lock': Icons.lock,
  'Icons.lock_sharp': Icons.lock_sharp,
  'Icons.lock_rounded': Icons.lock_rounded,
  'Icons.lock_outlined': Icons.lock_outlined,
  'Icons.lock_clock': Icons.lock_clock,
  'Icons.lock_clock_sharp': Icons.lock_clock_sharp,
  'Icons.lock_clock_rounded': Icons.lock_clock_rounded,
  'Icons.lock_clock_outlined': Icons.lock_clock_outlined,
  'Icons.lock_open': Icons.lock_open,
  'Icons.lock_open_sharp': Icons.lock_open_sharp,
  'Icons.lock_open_rounded': Icons.lock_open_rounded,
  'Icons.lock_open_outlined': Icons.lock_open_outlined,
  'Icons.lock_outline': Icons.lock_outline,
  'Icons.lock_outline_sharp': Icons.lock_outline_sharp,
  'Icons.lock_outline_rounded': Icons.lock_outline_rounded,
  'Icons.lock_person': Icons.lock_person,
  'Icons.lock_person_sharp': Icons.lock_person_sharp,
  'Icons.lock_person_rounded': Icons.lock_person_rounded,
  'Icons.lock_person_outlined': Icons.lock_person_outlined,
  'Icons.lock_reset': Icons.lock_reset,
  'Icons.lock_reset_sharp': Icons.lock_reset_sharp,
  'Icons.lock_reset_rounded': Icons.lock_reset_rounded,
  'Icons.lock_reset_outlined': Icons.lock_reset_outlined,
  'Icons.login': Icons.login,
  'Icons.login_sharp': Icons.login_sharp,
  'Icons.login_rounded': Icons.login_rounded,
  'Icons.login_outlined': Icons.login_outlined,
  'Icons.logo_dev': Icons.logo_dev,
  'Icons.logo_dev_sharp': Icons.logo_dev_sharp,
  'Icons.logo_dev_rounded': Icons.logo_dev_rounded,
  'Icons.logo_dev_outlined': Icons.logo_dev_outlined,
  'Icons.logout': Icons.logout,
  'Icons.logout_sharp': Icons.logout_sharp,
  'Icons.logout_rounded': Icons.logout_rounded,
  'Icons.logout_outlined': Icons.logout_outlined,
  'Icons.looks': Icons.looks,
  'Icons.looks_sharp': Icons.looks_sharp,
  'Icons.looks_rounded': Icons.looks_rounded,
  'Icons.looks_outlined': Icons.looks_outlined,
  'Icons.looks_3': Icons.looks_3,
  'Icons.looks_3_sharp': Icons.looks_3_sharp,
  'Icons.looks_3_rounded': Icons.looks_3_rounded,
  'Icons.looks_3_outlined': Icons.looks_3_outlined,
  'Icons.looks_4': Icons.looks_4,
  'Icons.looks_4_sharp': Icons.looks_4_sharp,
  'Icons.looks_4_rounded': Icons.looks_4_rounded,
  'Icons.looks_4_outlined': Icons.looks_4_outlined,
  'Icons.looks_5': Icons.looks_5,
  'Icons.looks_5_sharp': Icons.looks_5_sharp,
  'Icons.looks_5_rounded': Icons.looks_5_rounded,
  'Icons.looks_5_outlined': Icons.looks_5_outlined,
  'Icons.looks_6': Icons.looks_6,
  'Icons.looks_6_sharp': Icons.looks_6_sharp,
  'Icons.looks_6_rounded': Icons.looks_6_rounded,
  'Icons.looks_6_outlined': Icons.looks_6_outlined,
  'Icons.looks_one': Icons.looks_one,
  'Icons.looks_one_sharp': Icons.looks_one_sharp,
  'Icons.looks_one_rounded': Icons.looks_one_rounded,
  'Icons.looks_one_outlined': Icons.looks_one_outlined,
  'Icons.looks_two': Icons.looks_two,
  'Icons.looks_two_sharp': Icons.looks_two_sharp,
  'Icons.looks_two_rounded': Icons.looks_two_rounded,
  'Icons.looks_two_outlined': Icons.looks_two_outlined,
  'Icons.loop': Icons.loop,
  'Icons.loop_sharp': Icons.loop_sharp,
  'Icons.loop_rounded': Icons.loop_rounded,
  'Icons.loop_outlined': Icons.loop_outlined,
  'Icons.loupe': Icons.loupe,
  'Icons.loupe_sharp': Icons.loupe_sharp,
  'Icons.loupe_rounded': Icons.loupe_rounded,
  'Icons.loupe_outlined': Icons.loupe_outlined,
  'Icons.low_priority': Icons.low_priority,
  'Icons.low_priority_sharp': Icons.low_priority_sharp,
  'Icons.low_priority_rounded': Icons.low_priority_rounded,
  'Icons.low_priority_outlined': Icons.low_priority_outlined,
  'Icons.loyalty': Icons.loyalty,
  'Icons.loyalty_sharp': Icons.loyalty_sharp,
  'Icons.loyalty_rounded': Icons.loyalty_rounded,
  'Icons.loyalty_outlined': Icons.loyalty_outlined,
  'Icons.lte_mobiledata': Icons.lte_mobiledata,
  'Icons.lte_mobiledata_sharp': Icons.lte_mobiledata_sharp,
  'Icons.lte_mobiledata_rounded': Icons.lte_mobiledata_rounded,
  'Icons.lte_mobiledata_outlined': Icons.lte_mobiledata_outlined,
  'Icons.lte_plus_mobiledata': Icons.lte_plus_mobiledata,
  'Icons.lte_plus_mobiledata_sharp': Icons.lte_plus_mobiledata_sharp,
  'Icons.lte_plus_mobiledata_rounded': Icons.lte_plus_mobiledata_rounded,
  'Icons.lte_plus_mobiledata_outlined': Icons.lte_plus_mobiledata_outlined,
  'Icons.luggage': Icons.luggage,
  'Icons.luggage_sharp': Icons.luggage_sharp,
  'Icons.luggage_rounded': Icons.luggage_rounded,
  'Icons.luggage_outlined': Icons.luggage_outlined,
  'Icons.lunch_dining': Icons.lunch_dining,
  'Icons.lunch_dining_sharp': Icons.lunch_dining_sharp,
  'Icons.lunch_dining_rounded': Icons.lunch_dining_rounded,
  'Icons.lunch_dining_outlined': Icons.lunch_dining_outlined,
  'Icons.lyrics': Icons.lyrics,
  'Icons.lyrics_sharp': Icons.lyrics_sharp,
  'Icons.lyrics_rounded': Icons.lyrics_rounded,
  'Icons.lyrics_outlined': Icons.lyrics_outlined,
  'Icons.mail': Icons.mail,
  'Icons.mail_sharp': Icons.mail_sharp,
  'Icons.mail_rounded': Icons.mail_rounded,
  'Icons.mail_outlined': Icons.mail_outlined,
  'Icons.mail_lock': Icons.mail_lock,
  'Icons.mail_lock_sharp': Icons.mail_lock_sharp,
  'Icons.mail_lock_rounded': Icons.mail_lock_rounded,
  'Icons.mail_lock_outlined': Icons.mail_lock_outlined,
  'Icons.mail_outline': Icons.mail_outline,
  'Icons.mail_outline_sharp': Icons.mail_outline_sharp,
  'Icons.mail_outline_rounded': Icons.mail_outline_rounded,
  'Icons.mail_outline_outlined': Icons.mail_outline_outlined,
  'Icons.male': Icons.male,
  'Icons.male_sharp': Icons.male_sharp,
  'Icons.male_rounded': Icons.male_rounded,
  'Icons.male_outlined': Icons.male_outlined,
  'Icons.man': Icons.man,
  'Icons.man_sharp': Icons.man_sharp,
  'Icons.man_rounded': Icons.man_rounded,
  'Icons.man_outlined': Icons.man_outlined,
  'Icons.manage_accounts': Icons.manage_accounts,
  'Icons.manage_accounts_sharp': Icons.manage_accounts_sharp,
  'Icons.manage_accounts_rounded': Icons.manage_accounts_rounded,
  'Icons.manage_accounts_outlined': Icons.manage_accounts_outlined,
  'Icons.manage_history': Icons.manage_history,
  'Icons.manage_history_sharp': Icons.manage_history_sharp,
  'Icons.manage_history_rounded': Icons.manage_history_rounded,
  'Icons.manage_history_outlined': Icons.manage_history_outlined,
  'Icons.manage_search': Icons.manage_search,
  'Icons.manage_search_sharp': Icons.manage_search_sharp,
  'Icons.manage_search_rounded': Icons.manage_search_rounded,
  'Icons.manage_search_outlined': Icons.manage_search_outlined,
  'Icons.map': Icons.map,
  'Icons.map_sharp': Icons.map_sharp,
  'Icons.map_rounded': Icons.map_rounded,
  'Icons.map_outlined': Icons.map_outlined,
  'Icons.maps_home_work': Icons.maps_home_work,
  'Icons.maps_home_work_sharp': Icons.maps_home_work_sharp,
  'Icons.maps_home_work_rounded': Icons.maps_home_work_rounded,
  'Icons.maps_home_work_outlined': Icons.maps_home_work_outlined,
  'Icons.maps_ugc': Icons.maps_ugc,
  'Icons.maps_ugc_sharp': Icons.maps_ugc_sharp,
  'Icons.maps_ugc_rounded': Icons.maps_ugc_rounded,
  'Icons.maps_ugc_outlined': Icons.maps_ugc_outlined,
  'Icons.margin': Icons.margin,
  'Icons.margin_sharp': Icons.margin_sharp,
  'Icons.margin_rounded': Icons.margin_rounded,
  'Icons.margin_outlined': Icons.margin_outlined,
  'Icons.mark_as_unread': Icons.mark_as_unread,
  'Icons.mark_as_unread_sharp': Icons.mark_as_unread_sharp,
  'Icons.mark_as_unread_rounded': Icons.mark_as_unread_rounded,
  'Icons.mark_as_unread_outlined': Icons.mark_as_unread_outlined,
  'Icons.mark_chat_read': Icons.mark_chat_read,
  'Icons.mark_chat_read_sharp': Icons.mark_chat_read_sharp,
  'Icons.mark_chat_read_rounded': Icons.mark_chat_read_rounded,
  'Icons.mark_chat_read_outlined': Icons.mark_chat_read_outlined,
  'Icons.mark_chat_unread': Icons.mark_chat_unread,
  'Icons.mark_chat_unread_sharp': Icons.mark_chat_unread_sharp,
  'Icons.mark_chat_unread_rounded': Icons.mark_chat_unread_rounded,
  'Icons.mark_chat_unread_outlined': Icons.mark_chat_unread_outlined,
  'Icons.mark_email_read': Icons.mark_email_read,
  'Icons.mark_email_read_sharp': Icons.mark_email_read_sharp,
  'Icons.mark_email_read_rounded': Icons.mark_email_read_rounded,
  'Icons.mark_email_read_outlined': Icons.mark_email_read_outlined,
  'Icons.mark_email_unread': Icons.mark_email_unread,
  'Icons.mark_email_unread_sharp': Icons.mark_email_unread_sharp,
  'Icons.mark_email_unread_rounded': Icons.mark_email_unread_rounded,
  'Icons.mark_email_unread_outlined': Icons.mark_email_unread_outlined,
  'Icons.mark_unread_chat_alt': Icons.mark_unread_chat_alt,
  'Icons.mark_unread_chat_alt_sharp': Icons.mark_unread_chat_alt_sharp,
  'Icons.mark_unread_chat_alt_rounded': Icons.mark_unread_chat_alt_rounded,
  'Icons.mark_unread_chat_alt_outlined': Icons.mark_unread_chat_alt_outlined,
  'Icons.markunread': Icons.markunread,
  'Icons.markunread_sharp': Icons.markunread_sharp,
  'Icons.markunread_rounded': Icons.markunread_rounded,
  'Icons.markunread_outlined': Icons.markunread_outlined,
  'Icons.markunread_mailbox': Icons.markunread_mailbox,
  'Icons.markunread_mailbox_sharp': Icons.markunread_mailbox_sharp,
  'Icons.markunread_mailbox_rounded': Icons.markunread_mailbox_rounded,
  'Icons.markunread_mailbox_outlined': Icons.markunread_mailbox_outlined,
  'Icons.masks': Icons.masks,
  'Icons.masks_sharp': Icons.masks_sharp,
  'Icons.masks_rounded': Icons.masks_rounded,
  'Icons.masks_outlined': Icons.masks_outlined,
  'Icons.maximize': Icons.maximize,
  'Icons.maximize_sharp': Icons.maximize_sharp,
  'Icons.maximize_rounded': Icons.maximize_rounded,
  'Icons.maximize_outlined': Icons.maximize_outlined,
  'Icons.media_bluetooth_off': Icons.media_bluetooth_off,
  'Icons.media_bluetooth_off_sharp': Icons.media_bluetooth_off_sharp,
  'Icons.media_bluetooth_off_rounded': Icons.media_bluetooth_off_rounded,
  'Icons.media_bluetooth_off_outlined': Icons.media_bluetooth_off_outlined,
  'Icons.media_bluetooth_on': Icons.media_bluetooth_on,
  'Icons.media_bluetooth_on_sharp': Icons.media_bluetooth_on_sharp,
  'Icons.media_bluetooth_on_rounded': Icons.media_bluetooth_on_rounded,
  'Icons.media_bluetooth_on_outlined': Icons.media_bluetooth_on_outlined,
  'Icons.mediation': Icons.mediation,
  'Icons.mediation_sharp': Icons.mediation_sharp,
  'Icons.mediation_rounded': Icons.mediation_rounded,
  'Icons.mediation_outlined': Icons.mediation_outlined,
  'Icons.medical_information': Icons.medical_information,
  'Icons.medical_information_sharp': Icons.medical_information_sharp,
  'Icons.medical_information_rounded': Icons.medical_information_rounded,
  'Icons.medical_information_outlined': Icons.medical_information_outlined,
  'Icons.medical_services': Icons.medical_services,
  'Icons.medical_services_sharp': Icons.medical_services_sharp,
  'Icons.medical_services_rounded': Icons.medical_services_rounded,
  'Icons.medical_services_outlined': Icons.medical_services_outlined,
  'Icons.medication': Icons.medication,
  'Icons.medication_sharp': Icons.medication_sharp,
  'Icons.medication_rounded': Icons.medication_rounded,
  'Icons.medication_outlined': Icons.medication_outlined,
  'Icons.medication_liquid': Icons.medication_liquid,
  'Icons.medication_liquid_sharp': Icons.medication_liquid_sharp,
  'Icons.medication_liquid_rounded': Icons.medication_liquid_rounded,
  'Icons.medication_liquid_outlined': Icons.medication_liquid_outlined,
  'Icons.meeting_room': Icons.meeting_room,
  'Icons.meeting_room_sharp': Icons.meeting_room_sharp,
  'Icons.meeting_room_rounded': Icons.meeting_room_rounded,
  'Icons.meeting_room_outlined': Icons.meeting_room_outlined,
  'Icons.memory': Icons.memory,
  'Icons.memory_sharp': Icons.memory_sharp,
  'Icons.memory_rounded': Icons.memory_rounded,
  'Icons.memory_outlined': Icons.memory_outlined,
  'Icons.menu': Icons.menu,
  'Icons.menu_sharp': Icons.menu_sharp,
  'Icons.menu_rounded': Icons.menu_rounded,
  'Icons.menu_outlined': Icons.menu_outlined,
  'Icons.menu_book': Icons.menu_book,
  'Icons.menu_book_sharp': Icons.menu_book_sharp,
  'Icons.menu_book_rounded': Icons.menu_book_rounded,
  'Icons.menu_book_outlined': Icons.menu_book_outlined,
  'Icons.menu_open': Icons.menu_open,
  'Icons.menu_open_sharp': Icons.menu_open_sharp,
  'Icons.menu_open_rounded': Icons.menu_open_rounded,
  'Icons.menu_open_outlined': Icons.menu_open_outlined,
  'Icons.merge': Icons.merge,
  'Icons.merge_sharp': Icons.merge_sharp,
  'Icons.merge_rounded': Icons.merge_rounded,
  'Icons.merge_outlined': Icons.merge_outlined,
  'Icons.merge_type': Icons.merge_type,
  'Icons.merge_type_sharp': Icons.merge_type_sharp,
  'Icons.merge_type_rounded': Icons.merge_type_rounded,
  'Icons.merge_type_outlined': Icons.merge_type_outlined,
  'Icons.message': Icons.message,
  'Icons.message_sharp': Icons.message_sharp,
  'Icons.message_rounded': Icons.message_rounded,
  'Icons.message_outlined': Icons.message_outlined,
  'Icons.messenger': Icons.messenger,
  'Icons.messenger_sharp': Icons.messenger_sharp,
  'Icons.messenger_rounded': Icons.messenger_rounded,
  'Icons.messenger_outlined': Icons.messenger_outlined,
  'Icons.messenger_outline': Icons.messenger_outline,
  'Icons.messenger_outline_sharp': Icons.messenger_outline_sharp,
  'Icons.messenger_outline_rounded': Icons.messenger_outline_rounded,
  'Icons.messenger_outline_outlined': Icons.messenger_outline_outlined,
  'Icons.mic': Icons.mic,
  'Icons.mic_sharp': Icons.mic_sharp,
  'Icons.mic_rounded': Icons.mic_rounded,
  'Icons.mic_outlined': Icons.mic_outlined,
  'Icons.mic_external_off': Icons.mic_external_off,
  'Icons.mic_external_off_sharp': Icons.mic_external_off_sharp,
  'Icons.mic_external_off_rounded': Icons.mic_external_off_rounded,
  'Icons.mic_external_off_outlined': Icons.mic_external_off_outlined,
  'Icons.mic_external_on': Icons.mic_external_on,
  'Icons.mic_external_on_sharp': Icons.mic_external_on_sharp,
  'Icons.mic_external_on_rounded': Icons.mic_external_on_rounded,
  'Icons.mic_external_on_outlined': Icons.mic_external_on_outlined,
  'Icons.mic_none': Icons.mic_none,
  'Icons.mic_none_sharp': Icons.mic_none_sharp,
  'Icons.mic_none_rounded': Icons.mic_none_rounded,
  'Icons.mic_none_outlined': Icons.mic_none_outlined,
  'Icons.mic_off': Icons.mic_off,
  'Icons.mic_off_sharp': Icons.mic_off_sharp,
  'Icons.mic_off_rounded': Icons.mic_off_rounded,
  'Icons.mic_off_outlined': Icons.mic_off_outlined,
  'Icons.microwave': Icons.microwave,
  'Icons.microwave_sharp': Icons.microwave_sharp,
  'Icons.microwave_rounded': Icons.microwave_rounded,
  'Icons.microwave_outlined': Icons.microwave_outlined,
  'Icons.military_tech': Icons.military_tech,
  'Icons.military_tech_sharp': Icons.military_tech_sharp,
  'Icons.military_tech_rounded': Icons.military_tech_rounded,
  'Icons.military_tech_outlined': Icons.military_tech_outlined,
  'Icons.minimize': Icons.minimize,
  'Icons.minimize_sharp': Icons.minimize_sharp,
  'Icons.minimize_rounded': Icons.minimize_rounded,
  'Icons.minimize_outlined': Icons.minimize_outlined,
  'Icons.minor_crash': Icons.minor_crash,
  'Icons.minor_crash_sharp': Icons.minor_crash_sharp,
  'Icons.minor_crash_rounded': Icons.minor_crash_rounded,
  'Icons.minor_crash_outlined': Icons.minor_crash_outlined,
  'Icons.miscellaneous_services': Icons.miscellaneous_services,
  'Icons.miscellaneous_services_sharp': Icons.miscellaneous_services_sharp,
  'Icons.miscellaneous_services_rounded': Icons.miscellaneous_services_rounded,
  'Icons.miscellaneous_services_outlined':
      Icons.miscellaneous_services_outlined,
  'Icons.missed_video_call': Icons.missed_video_call,
  'Icons.missed_video_call_sharp': Icons.missed_video_call_sharp,
  'Icons.missed_video_call_rounded': Icons.missed_video_call_rounded,
  'Icons.missed_video_call_outlined': Icons.missed_video_call_outlined,
  'Icons.mms': Icons.mms,
  'Icons.mms_sharp': Icons.mms_sharp,
  'Icons.mms_rounded': Icons.mms_rounded,
  'Icons.mms_outlined': Icons.mms_outlined,
  'Icons.mobile_friendly': Icons.mobile_friendly,
  'Icons.mobile_friendly_sharp': Icons.mobile_friendly_sharp,
  'Icons.mobile_friendly_rounded': Icons.mobile_friendly_rounded,
  'Icons.mobile_friendly_outlined': Icons.mobile_friendly_outlined,
  'Icons.mobile_off': Icons.mobile_off,
  'Icons.mobile_off_sharp': Icons.mobile_off_sharp,
  'Icons.mobile_off_rounded': Icons.mobile_off_rounded,
  'Icons.mobile_off_outlined': Icons.mobile_off_outlined,
  'Icons.mobile_screen_share': Icons.mobile_screen_share,
  'Icons.mobile_screen_share_sharp': Icons.mobile_screen_share_sharp,
  'Icons.mobile_screen_share_rounded': Icons.mobile_screen_share_rounded,
  'Icons.mobile_screen_share_outlined': Icons.mobile_screen_share_outlined,
  'Icons.mobiledata_off': Icons.mobiledata_off,
  'Icons.mobiledata_off_sharp': Icons.mobiledata_off_sharp,
  'Icons.mobiledata_off_rounded': Icons.mobiledata_off_rounded,
  'Icons.mobiledata_off_outlined': Icons.mobiledata_off_outlined,
  'Icons.mode': Icons.mode,
  'Icons.mode_sharp': Icons.mode_sharp,
  'Icons.mode_rounded': Icons.mode_rounded,
  'Icons.mode_outlined': Icons.mode_outlined,
  'Icons.mode_comment': Icons.mode_comment,
  'Icons.mode_comment_sharp': Icons.mode_comment_sharp,
  'Icons.mode_comment_rounded': Icons.mode_comment_rounded,
  'Icons.mode_comment_outlined': Icons.mode_comment_outlined,
  'Icons.mode_edit': Icons.mode_edit,
  'Icons.mode_edit_sharp': Icons.mode_edit_sharp,
  'Icons.mode_edit_rounded': Icons.mode_edit_rounded,
  'Icons.mode_edit_outlined': Icons.mode_edit_outlined,
  'Icons.mode_edit_outline': Icons.mode_edit_outline,
  'Icons.mode_edit_outline_sharp': Icons.mode_edit_outline_sharp,
  'Icons.mode_edit_outline_rounded': Icons.mode_edit_outline_rounded,
  'Icons.mode_edit_outline_outlined': Icons.mode_edit_outline_outlined,
  'Icons.mode_fan_off': Icons.mode_fan_off,
  'Icons.mode_fan_off_sharp': Icons.mode_fan_off_sharp,
  'Icons.mode_fan_off_rounded': Icons.mode_fan_off_rounded,
  'Icons.mode_fan_off_outlined': Icons.mode_fan_off_outlined,
  'Icons.mode_night': Icons.mode_night,
  'Icons.mode_night_sharp': Icons.mode_night_sharp,
  'Icons.mode_night_rounded': Icons.mode_night_rounded,
  'Icons.mode_night_outlined': Icons.mode_night_outlined,
  'Icons.mode_of_travel': Icons.mode_of_travel,
  'Icons.mode_of_travel_sharp': Icons.mode_of_travel_sharp,
  'Icons.mode_of_travel_rounded': Icons.mode_of_travel_rounded,
  'Icons.mode_of_travel_outlined': Icons.mode_of_travel_outlined,
  'Icons.mode_standby': Icons.mode_standby,
  'Icons.mode_standby_sharp': Icons.mode_standby_sharp,
  'Icons.mode_standby_rounded': Icons.mode_standby_rounded,
  'Icons.mode_standby_outlined': Icons.mode_standby_outlined,
  'Icons.model_training': Icons.model_training,
  'Icons.model_training_sharp': Icons.model_training_sharp,
  'Icons.model_training_rounded': Icons.model_training_rounded,
  'Icons.model_training_outlined': Icons.model_training_outlined,
  'Icons.monetization_on': Icons.monetization_on,
  'Icons.monetization_on_sharp': Icons.monetization_on_sharp,
  'Icons.monetization_on_rounded': Icons.monetization_on_rounded,
  'Icons.monetization_on_outlined': Icons.monetization_on_outlined,
  'Icons.money': Icons.money,
  'Icons.money_sharp': Icons.money_sharp,
  'Icons.money_rounded': Icons.money_rounded,
  'Icons.money_outlined': Icons.money_outlined,
  'Icons.money_off': Icons.money_off,
  'Icons.money_off_sharp': Icons.money_off_sharp,
  'Icons.money_off_rounded': Icons.money_off_rounded,
  'Icons.money_off_outlined': Icons.money_off_outlined,
  'Icons.money_off_csred': Icons.money_off_csred,
  'Icons.money_off_csred_sharp': Icons.money_off_csred_sharp,
  'Icons.money_off_csred_rounded': Icons.money_off_csred_rounded,
  'Icons.money_off_csred_outlined': Icons.money_off_csred_outlined,
  'Icons.monitor': Icons.monitor,
  'Icons.monitor_sharp': Icons.monitor_sharp,
  'Icons.monitor_rounded': Icons.monitor_rounded,
  'Icons.monitor_outlined': Icons.monitor_outlined,
  'Icons.monitor_heart': Icons.monitor_heart,
  'Icons.monitor_heart_sharp': Icons.monitor_heart_sharp,
  'Icons.monitor_heart_rounded': Icons.monitor_heart_rounded,
  'Icons.monitor_heart_outlined': Icons.monitor_heart_outlined,
  'Icons.monitor_weight': Icons.monitor_weight,
  'Icons.monitor_weight_sharp': Icons.monitor_weight_sharp,
  'Icons.monitor_weight_rounded': Icons.monitor_weight_rounded,
  'Icons.monitor_weight_outlined': Icons.monitor_weight_outlined,
  'Icons.monochrome_photos': Icons.monochrome_photos,
  'Icons.monochrome_photos_sharp': Icons.monochrome_photos_sharp,
  'Icons.monochrome_photos_rounded': Icons.monochrome_photos_rounded,
  'Icons.monochrome_photos_outlined': Icons.monochrome_photos_outlined,
  'Icons.mood': Icons.mood,
  'Icons.mood_sharp': Icons.mood_sharp,
  'Icons.mood_rounded': Icons.mood_rounded,
  'Icons.mood_outlined': Icons.mood_outlined,
  'Icons.mood_bad': Icons.mood_bad,
  'Icons.mood_bad_sharp': Icons.mood_bad_sharp,
  'Icons.mood_bad_rounded': Icons.mood_bad_rounded,
  'Icons.mood_bad_outlined': Icons.mood_bad_outlined,
  'Icons.moped': Icons.moped,
  'Icons.moped_sharp': Icons.moped_sharp,
  'Icons.moped_rounded': Icons.moped_rounded,
  'Icons.moped_outlined': Icons.moped_outlined,
  'Icons.more': Icons.more,
  'Icons.more_sharp': Icons.more_sharp,
  'Icons.more_rounded': Icons.more_rounded,
  'Icons.more_outlined': Icons.more_outlined,
  'Icons.more_horiz': Icons.more_horiz,
  'Icons.more_horiz_sharp': Icons.more_horiz_sharp,
  'Icons.more_horiz_rounded': Icons.more_horiz_rounded,
  'Icons.more_horiz_outlined': Icons.more_horiz_outlined,
  'Icons.more_time': Icons.more_time,
  'Icons.more_time_sharp': Icons.more_time_sharp,
  'Icons.more_time_rounded': Icons.more_time_rounded,
  'Icons.more_time_outlined': Icons.more_time_outlined,
  'Icons.more_vert': Icons.more_vert,
  'Icons.more_vert_sharp': Icons.more_vert_sharp,
  'Icons.more_vert_rounded': Icons.more_vert_rounded,
  'Icons.more_vert_outlined': Icons.more_vert_outlined,
  'Icons.mosque': Icons.mosque,
  'Icons.mosque_sharp': Icons.mosque_sharp,
  'Icons.mosque_rounded': Icons.mosque_rounded,
  'Icons.mosque_outlined': Icons.mosque_outlined,
  'Icons.motion_photos_auto': Icons.motion_photos_auto,
  'Icons.motion_photos_auto_sharp': Icons.motion_photos_auto_sharp,
  'Icons.motion_photos_auto_rounded': Icons.motion_photos_auto_rounded,
  'Icons.motion_photos_auto_outlined': Icons.motion_photos_auto_outlined,
  'Icons.motion_photos_off': Icons.motion_photos_off,
  'Icons.motion_photos_off_sharp': Icons.motion_photos_off_sharp,
  'Icons.motion_photos_off_rounded': Icons.motion_photos_off_rounded,
  'Icons.motion_photos_off_outlined': Icons.motion_photos_off_outlined,
  'Icons.motion_photos_on': Icons.motion_photos_on,
  'Icons.motion_photos_on_sharp': Icons.motion_photos_on_sharp,
  'Icons.motion_photos_on_rounded': Icons.motion_photos_on_rounded,
  'Icons.motion_photos_on_outlined': Icons.motion_photos_on_outlined,
  'Icons.motion_photos_pause': Icons.motion_photos_pause,
  'Icons.motion_photos_pause_sharp': Icons.motion_photos_pause_sharp,
  'Icons.motion_photos_pause_rounded': Icons.motion_photos_pause_rounded,
  'Icons.motion_photos_pause_outlined': Icons.motion_photos_pause_outlined,
  'Icons.motion_photos_paused': Icons.motion_photos_paused,
  'Icons.motion_photos_paused_sharp': Icons.motion_photos_paused_sharp,
  'Icons.motion_photos_paused_rounded': Icons.motion_photos_paused_rounded,
  'Icons.motion_photos_paused_outlined': Icons.motion_photos_paused_outlined,
  'Icons.motorcycle': Icons.motorcycle,
  'Icons.motorcycle_sharp': Icons.motorcycle_sharp,
  'Icons.motorcycle_rounded': Icons.motorcycle_rounded,
  'Icons.motorcycle_outlined': Icons.motorcycle_outlined,
  'Icons.mouse': Icons.mouse,
  'Icons.mouse_sharp': Icons.mouse_sharp,
  'Icons.mouse_rounded': Icons.mouse_rounded,
  'Icons.mouse_outlined': Icons.mouse_outlined,
  'Icons.move_down': Icons.move_down,
  'Icons.move_down_sharp': Icons.move_down_sharp,
  'Icons.move_down_rounded': Icons.move_down_rounded,
  'Icons.move_down_outlined': Icons.move_down_outlined,
  'Icons.move_to_inbox': Icons.move_to_inbox,
  'Icons.move_to_inbox_sharp': Icons.move_to_inbox_sharp,
  'Icons.move_to_inbox_rounded': Icons.move_to_inbox_rounded,
  'Icons.move_to_inbox_outlined': Icons.move_to_inbox_outlined,
  'Icons.move_up': Icons.move_up,
  'Icons.move_up_sharp': Icons.move_up_sharp,
  'Icons.move_up_rounded': Icons.move_up_rounded,
  'Icons.move_up_outlined': Icons.move_up_outlined,
  'Icons.movie': Icons.movie,
  'Icons.movie_sharp': Icons.movie_sharp,
  'Icons.movie_rounded': Icons.movie_rounded,
  'Icons.movie_outlined': Icons.movie_outlined,
  'Icons.movie_creation': Icons.movie_creation,
  'Icons.movie_creation_sharp': Icons.movie_creation_sharp,
  'Icons.movie_creation_rounded': Icons.movie_creation_rounded,
  'Icons.movie_creation_outlined': Icons.movie_creation_outlined,
  'Icons.movie_filter': Icons.movie_filter,
  'Icons.movie_filter_sharp': Icons.movie_filter_sharp,
  'Icons.movie_filter_rounded': Icons.movie_filter_rounded,
  'Icons.movie_filter_outlined': Icons.movie_filter_outlined,
  'Icons.moving': Icons.moving,
  'Icons.moving_sharp': Icons.moving_sharp,
  'Icons.moving_rounded': Icons.moving_rounded,
  'Icons.moving_outlined': Icons.moving_outlined,
  'Icons.mp': Icons.mp,
  'Icons.mp_sharp': Icons.mp_sharp,
  'Icons.mp_rounded': Icons.mp_rounded,
  'Icons.mp_outlined': Icons.mp_outlined,
  'Icons.multiline_chart': Icons.multiline_chart,
  'Icons.multiline_chart_sharp': Icons.multiline_chart_sharp,
  'Icons.multiline_chart_rounded': Icons.multiline_chart_rounded,
  'Icons.multiline_chart_outlined': Icons.multiline_chart_outlined,
  'Icons.multiple_stop': Icons.multiple_stop,
  'Icons.multiple_stop_sharp': Icons.multiple_stop_sharp,
  'Icons.multiple_stop_rounded': Icons.multiple_stop_rounded,
  'Icons.multiple_stop_outlined': Icons.multiple_stop_outlined,
  'Icons.multitrack_audio': Icons.multitrack_audio,
  'Icons.multitrack_audio_sharp': Icons.multitrack_audio_sharp,
  'Icons.multitrack_audio_rounded': Icons.multitrack_audio_rounded,
  'Icons.multitrack_audio_outlined': Icons.multitrack_audio_outlined,
  'Icons.museum': Icons.museum,
  'Icons.museum_sharp': Icons.museum_sharp,
  'Icons.museum_rounded': Icons.museum_rounded,
  'Icons.museum_outlined': Icons.museum_outlined,
  'Icons.music_note': Icons.music_note,
  'Icons.music_note_sharp': Icons.music_note_sharp,
  'Icons.music_note_rounded': Icons.music_note_rounded,
  'Icons.music_note_outlined': Icons.music_note_outlined,
  'Icons.music_off': Icons.music_off,
  'Icons.music_off_sharp': Icons.music_off_sharp,
  'Icons.music_off_rounded': Icons.music_off_rounded,
  'Icons.music_off_outlined': Icons.music_off_outlined,
  'Icons.music_video': Icons.music_video,
  'Icons.music_video_sharp': Icons.music_video_sharp,
  'Icons.music_video_rounded': Icons.music_video_rounded,
  'Icons.music_video_outlined': Icons.music_video_outlined,
  'Icons.my_library_add': Icons.my_library_add,
  'Icons.my_library_add_sharp': Icons.my_library_add_sharp,
  'Icons.my_library_add_rounded': Icons.my_library_add_rounded,
  'Icons.my_library_add_outlined': Icons.my_library_add_outlined,
  'Icons.my_library_books': Icons.my_library_books,
  'Icons.my_library_books_sharp': Icons.my_library_books_sharp,
  'Icons.my_library_books_rounded': Icons.my_library_books_rounded,
  'Icons.my_library_books_outlined': Icons.my_library_books_outlined,
  'Icons.my_library_music': Icons.my_library_music,
  'Icons.my_library_music_sharp': Icons.my_library_music_sharp,
  'Icons.my_library_music_rounded': Icons.my_library_music_rounded,
  'Icons.my_library_music_outlined': Icons.my_library_music_outlined,
  'Icons.my_location': Icons.my_location,
  'Icons.my_location_sharp': Icons.my_location_sharp,
  'Icons.my_location_rounded': Icons.my_location_rounded,
  'Icons.my_location_outlined': Icons.my_location_outlined,
  'Icons.nat': Icons.nat,
  'Icons.nat_sharp': Icons.nat_sharp,
  'Icons.nat_rounded': Icons.nat_rounded,
  'Icons.nat_outlined': Icons.nat_outlined,
  'Icons.nature': Icons.nature,
  'Icons.nature_sharp': Icons.nature_sharp,
  'Icons.nature_rounded': Icons.nature_rounded,
  'Icons.nature_outlined': Icons.nature_outlined,
  'Icons.nature_people': Icons.nature_people,
  'Icons.nature_people_sharp': Icons.nature_people_sharp,
  'Icons.nature_people_rounded': Icons.nature_people_rounded,
  'Icons.nature_people_outlined': Icons.nature_people_outlined,
  'Icons.navigate_before': Icons.navigate_before,
  'Icons.navigate_before_sharp': Icons.navigate_before_sharp,
  'Icons.navigate_before_rounded': Icons.navigate_before_rounded,
  'Icons.navigate_before_outlined': Icons.navigate_before_outlined,
  'Icons.navigate_next': Icons.navigate_next,
  'Icons.navigate_next_sharp': Icons.navigate_next_sharp,
  'Icons.navigate_next_rounded': Icons.navigate_next_rounded,
  'Icons.navigate_next_outlined': Icons.navigate_next_outlined,
  'Icons.navigation': Icons.navigation,
  'Icons.navigation_sharp': Icons.navigation_sharp,
  'Icons.navigation_rounded': Icons.navigation_rounded,
  'Icons.navigation_outlined': Icons.navigation_outlined,
  'Icons.near_me': Icons.near_me,
  'Icons.near_me_sharp': Icons.near_me_sharp,
  'Icons.near_me_rounded': Icons.near_me_rounded,
  'Icons.near_me_outlined': Icons.near_me_outlined,
  'Icons.near_me_disabled': Icons.near_me_disabled,
  'Icons.near_me_disabled_sharp': Icons.near_me_disabled_sharp,
  'Icons.near_me_disabled_rounded': Icons.near_me_disabled_rounded,
  'Icons.near_me_disabled_outlined': Icons.near_me_disabled_outlined,
  'Icons.nearby_error': Icons.nearby_error,
  'Icons.nearby_error_sharp': Icons.nearby_error_sharp,
  'Icons.nearby_error_rounded': Icons.nearby_error_rounded,
  'Icons.nearby_error_outlined': Icons.nearby_error_outlined,
  'Icons.nearby_off': Icons.nearby_off,
  'Icons.nearby_off_sharp': Icons.nearby_off_sharp,
  'Icons.nearby_off_rounded': Icons.nearby_off_rounded,
  'Icons.nearby_off_outlined': Icons.nearby_off_outlined,
  'Icons.nest_cam_wired_stand': Icons.nest_cam_wired_stand,
  'Icons.nest_cam_wired_stand_sharp': Icons.nest_cam_wired_stand_sharp,
  'Icons.nest_cam_wired_stand_rounded': Icons.nest_cam_wired_stand_rounded,
  'Icons.nest_cam_wired_stand_outlined': Icons.nest_cam_wired_stand_outlined,
  'Icons.network_cell': Icons.network_cell,
  'Icons.network_cell_sharp': Icons.network_cell_sharp,
  'Icons.network_cell_rounded': Icons.network_cell_rounded,
  'Icons.network_cell_outlined': Icons.network_cell_outlined,
  'Icons.network_check': Icons.network_check,
  'Icons.network_check_sharp': Icons.network_check_sharp,
  'Icons.network_check_rounded': Icons.network_check_rounded,
  'Icons.network_check_outlined': Icons.network_check_outlined,
  'Icons.network_locked': Icons.network_locked,
  'Icons.network_locked_sharp': Icons.network_locked_sharp,
  'Icons.network_locked_rounded': Icons.network_locked_rounded,
  'Icons.network_locked_outlined': Icons.network_locked_outlined,
  'Icons.network_ping': Icons.network_ping,
  'Icons.network_ping_sharp': Icons.network_ping_sharp,
  'Icons.network_ping_rounded': Icons.network_ping_rounded,
  'Icons.network_ping_outlined': Icons.network_ping_outlined,
  'Icons.network_wifi': Icons.network_wifi,
  'Icons.network_wifi_sharp': Icons.network_wifi_sharp,
  'Icons.network_wifi_rounded': Icons.network_wifi_rounded,
  'Icons.network_wifi_outlined': Icons.network_wifi_outlined,
  'Icons.network_wifi_1_bar': Icons.network_wifi_1_bar,
  'Icons.network_wifi_1_bar_sharp': Icons.network_wifi_1_bar_sharp,
  'Icons.network_wifi_1_bar_rounded': Icons.network_wifi_1_bar_rounded,
  'Icons.network_wifi_1_bar_outlined': Icons.network_wifi_1_bar_outlined,
  'Icons.network_wifi_2_bar': Icons.network_wifi_2_bar,
  'Icons.network_wifi_2_bar_sharp': Icons.network_wifi_2_bar_sharp,
  'Icons.network_wifi_2_bar_rounded': Icons.network_wifi_2_bar_rounded,
  'Icons.network_wifi_2_bar_outlined': Icons.network_wifi_2_bar_outlined,
  'Icons.network_wifi_3_bar': Icons.network_wifi_3_bar,
  'Icons.network_wifi_3_bar_sharp': Icons.network_wifi_3_bar_sharp,
  'Icons.network_wifi_3_bar_rounded': Icons.network_wifi_3_bar_rounded,
  'Icons.network_wifi_3_bar_outlined': Icons.network_wifi_3_bar_outlined,
  'Icons.new_label': Icons.new_label,
  'Icons.new_label_sharp': Icons.new_label_sharp,
  'Icons.new_label_rounded': Icons.new_label_rounded,
  'Icons.new_label_outlined': Icons.new_label_outlined,
  'Icons.new_releases': Icons.new_releases,
  'Icons.new_releases_sharp': Icons.new_releases_sharp,
  'Icons.new_releases_rounded': Icons.new_releases_rounded,
  'Icons.new_releases_outlined': Icons.new_releases_outlined,
  'Icons.newspaper': Icons.newspaper,
  'Icons.newspaper_sharp': Icons.newspaper_sharp,
  'Icons.newspaper_rounded': Icons.newspaper_rounded,
  'Icons.newspaper_outlined': Icons.newspaper_outlined,
  'Icons.next_plan': Icons.next_plan,
  'Icons.next_plan_sharp': Icons.next_plan_sharp,
  'Icons.next_plan_rounded': Icons.next_plan_rounded,
  'Icons.next_plan_outlined': Icons.next_plan_outlined,
  'Icons.next_week': Icons.next_week,
  'Icons.next_week_sharp': Icons.next_week_sharp,
  'Icons.next_week_rounded': Icons.next_week_rounded,
  'Icons.next_week_outlined': Icons.next_week_outlined,
  'Icons.nfc': Icons.nfc,
  'Icons.nfc_sharp': Icons.nfc_sharp,
  'Icons.nfc_rounded': Icons.nfc_rounded,
  'Icons.nfc_outlined': Icons.nfc_outlined,
  'Icons.night_shelter': Icons.night_shelter,
  'Icons.night_shelter_sharp': Icons.night_shelter_sharp,
  'Icons.night_shelter_rounded': Icons.night_shelter_rounded,
  'Icons.night_shelter_outlined': Icons.night_shelter_outlined,
  'Icons.nightlife': Icons.nightlife,
  'Icons.nightlife_sharp': Icons.nightlife_sharp,
  'Icons.nightlife_rounded': Icons.nightlife_rounded,
  'Icons.nightlife_outlined': Icons.nightlife_outlined,
  'Icons.nightlight': Icons.nightlight,
  'Icons.nightlight_sharp': Icons.nightlight_sharp,
  'Icons.nightlight_rounded': Icons.nightlight_rounded,
  'Icons.nightlight_outlined': Icons.nightlight_outlined,
  'Icons.nightlight_round': Icons.nightlight_round,
  'Icons.nightlight_round_sharp': Icons.nightlight_round_sharp,
  'Icons.nightlight_round_rounded': Icons.nightlight_round_rounded,
  'Icons.nightlight_round_outlined': Icons.nightlight_round_outlined,
  'Icons.nights_stay': Icons.nights_stay,
  'Icons.nights_stay_sharp': Icons.nights_stay_sharp,
  'Icons.nights_stay_rounded': Icons.nights_stay_rounded,
  'Icons.nights_stay_outlined': Icons.nights_stay_outlined,
  'Icons.no_accounts': Icons.no_accounts,
  'Icons.no_accounts_sharp': Icons.no_accounts_sharp,
  'Icons.no_accounts_rounded': Icons.no_accounts_rounded,
  'Icons.no_accounts_outlined': Icons.no_accounts_outlined,
  'Icons.no_adult_content': Icons.no_adult_content,
  'Icons.no_adult_content_sharp': Icons.no_adult_content_sharp,
  'Icons.no_adult_content_rounded': Icons.no_adult_content_rounded,
  'Icons.no_adult_content_outlined': Icons.no_adult_content_outlined,
  'Icons.no_backpack': Icons.no_backpack,
  'Icons.no_backpack_sharp': Icons.no_backpack_sharp,
  'Icons.no_backpack_rounded': Icons.no_backpack_rounded,
  'Icons.no_backpack_outlined': Icons.no_backpack_outlined,
  'Icons.no_cell': Icons.no_cell,
  'Icons.no_cell_sharp': Icons.no_cell_sharp,
  'Icons.no_cell_rounded': Icons.no_cell_rounded,
  'Icons.no_cell_outlined': Icons.no_cell_outlined,
  'Icons.no_crash': Icons.no_crash,
  'Icons.no_crash_sharp': Icons.no_crash_sharp,
  'Icons.no_crash_rounded': Icons.no_crash_rounded,
  'Icons.no_crash_outlined': Icons.no_crash_outlined,
  'Icons.no_drinks': Icons.no_drinks,
  'Icons.no_drinks_sharp': Icons.no_drinks_sharp,
  'Icons.no_drinks_rounded': Icons.no_drinks_rounded,
  'Icons.no_drinks_outlined': Icons.no_drinks_outlined,
  'Icons.no_encryption': Icons.no_encryption,
  'Icons.no_encryption_sharp': Icons.no_encryption_sharp,
  'Icons.no_encryption_rounded': Icons.no_encryption_rounded,
  'Icons.no_encryption_outlined': Icons.no_encryption_outlined,
  'Icons.no_encryption_gmailerrorred': Icons.no_encryption_gmailerrorred,
  'Icons.no_encryption_gmailerrorred_sharp':
      Icons.no_encryption_gmailerrorred_sharp,
  'Icons.no_encryption_gmailerrorred_rounded':
      Icons.no_encryption_gmailerrorred_rounded,
  'Icons.no_encryption_gmailerrorred_outlined':
      Icons.no_encryption_gmailerrorred_outlined,
  'Icons.no_flash': Icons.no_flash,
  'Icons.no_flash_sharp': Icons.no_flash_sharp,
  'Icons.no_flash_rounded': Icons.no_flash_rounded,
  'Icons.no_flash_outlined': Icons.no_flash_outlined,
  'Icons.no_food': Icons.no_food,
  'Icons.no_food_sharp': Icons.no_food_sharp,
  'Icons.no_food_rounded': Icons.no_food_rounded,
  'Icons.no_food_outlined': Icons.no_food_outlined,
  'Icons.no_luggage': Icons.no_luggage,
  'Icons.no_luggage_sharp': Icons.no_luggage_sharp,
  'Icons.no_luggage_rounded': Icons.no_luggage_rounded,
  'Icons.no_luggage_outlined': Icons.no_luggage_outlined,
  'Icons.no_meals': Icons.no_meals,
  'Icons.no_meals_sharp': Icons.no_meals_sharp,
  'Icons.no_meals_rounded': Icons.no_meals_rounded,
  'Icons.no_meals_outlined': Icons.no_meals_outlined,
  'Icons.no_meals_ouline': Icons.no_meals_ouline,
  'Icons.no_meeting_room': Icons.no_meeting_room,
  'Icons.no_meeting_room_sharp': Icons.no_meeting_room_sharp,
  'Icons.no_meeting_room_rounded': Icons.no_meeting_room_rounded,
  'Icons.no_meeting_room_outlined': Icons.no_meeting_room_outlined,
  'Icons.no_photography': Icons.no_photography,
  'Icons.no_photography_sharp': Icons.no_photography_sharp,
  'Icons.no_photography_rounded': Icons.no_photography_rounded,
  'Icons.no_photography_outlined': Icons.no_photography_outlined,
  'Icons.no_sim': Icons.no_sim,
  'Icons.no_sim_sharp': Icons.no_sim_sharp,
  'Icons.no_sim_rounded': Icons.no_sim_rounded,
  'Icons.no_sim_outlined': Icons.no_sim_outlined,
  'Icons.no_stroller': Icons.no_stroller,
  'Icons.no_stroller_sharp': Icons.no_stroller_sharp,
  'Icons.no_stroller_rounded': Icons.no_stroller_rounded,
  'Icons.no_stroller_outlined': Icons.no_stroller_outlined,
  'Icons.no_transfer': Icons.no_transfer,
  'Icons.no_transfer_sharp': Icons.no_transfer_sharp,
  'Icons.no_transfer_rounded': Icons.no_transfer_rounded,
  'Icons.no_transfer_outlined': Icons.no_transfer_outlined,
  'Icons.noise_aware': Icons.noise_aware,
  'Icons.noise_aware_sharp': Icons.noise_aware_sharp,
  'Icons.noise_aware_rounded': Icons.noise_aware_rounded,
  'Icons.noise_aware_outlined': Icons.noise_aware_outlined,
  'Icons.noise_control_off': Icons.noise_control_off,
  'Icons.noise_control_off_sharp': Icons.noise_control_off_sharp,
  'Icons.noise_control_off_rounded': Icons.noise_control_off_rounded,
  'Icons.noise_control_off_outlined': Icons.noise_control_off_outlined,
  'Icons.nordic_walking': Icons.nordic_walking,
  'Icons.nordic_walking_sharp': Icons.nordic_walking_sharp,
  'Icons.nordic_walking_rounded': Icons.nordic_walking_rounded,
  'Icons.nordic_walking_outlined': Icons.nordic_walking_outlined,
  'Icons.north': Icons.north,
  'Icons.north_sharp': Icons.north_sharp,
  'Icons.north_rounded': Icons.north_rounded,
  'Icons.north_outlined': Icons.north_outlined,
  'Icons.north_east': Icons.north_east,
  'Icons.north_east_sharp': Icons.north_east_sharp,
  'Icons.north_east_rounded': Icons.north_east_rounded,
  'Icons.north_east_outlined': Icons.north_east_outlined,
  'Icons.north_west': Icons.north_west,
  'Icons.north_west_sharp': Icons.north_west_sharp,
  'Icons.north_west_rounded': Icons.north_west_rounded,
  'Icons.north_west_outlined': Icons.north_west_outlined,
  'Icons.not_accessible': Icons.not_accessible,
  'Icons.not_accessible_sharp': Icons.not_accessible_sharp,
  'Icons.not_accessible_rounded': Icons.not_accessible_rounded,
  'Icons.not_accessible_outlined': Icons.not_accessible_outlined,
  'Icons.not_interested': Icons.not_interested,
  'Icons.not_interested_sharp': Icons.not_interested_sharp,
  'Icons.not_interested_rounded': Icons.not_interested_rounded,
  'Icons.not_interested_outlined': Icons.not_interested_outlined,
  'Icons.not_listed_location': Icons.not_listed_location,
  'Icons.not_listed_location_sharp': Icons.not_listed_location_sharp,
  'Icons.not_listed_location_rounded': Icons.not_listed_location_rounded,
  'Icons.not_listed_location_outlined': Icons.not_listed_location_outlined,
  'Icons.not_started': Icons.not_started,
  'Icons.not_started_sharp': Icons.not_started_sharp,
  'Icons.not_started_rounded': Icons.not_started_rounded,
  'Icons.not_started_outlined': Icons.not_started_outlined,
  'Icons.note': Icons.note,
  'Icons.note_sharp': Icons.note_sharp,
  'Icons.note_rounded': Icons.note_rounded,
  'Icons.note_outlined': Icons.note_outlined,
  'Icons.note_add': Icons.note_add,
  'Icons.note_add_sharp': Icons.note_add_sharp,
  'Icons.note_add_rounded': Icons.note_add_rounded,
  'Icons.note_add_outlined': Icons.note_add_outlined,
  'Icons.note_alt': Icons.note_alt,
  'Icons.note_alt_sharp': Icons.note_alt_sharp,
  'Icons.note_alt_rounded': Icons.note_alt_rounded,
  'Icons.note_alt_outlined': Icons.note_alt_outlined,
  'Icons.notes': Icons.notes,
  'Icons.notes_sharp': Icons.notes_sharp,
  'Icons.notes_rounded': Icons.notes_rounded,
  'Icons.notes_outlined': Icons.notes_outlined,
  'Icons.notification_add': Icons.notification_add,
  'Icons.notification_add_sharp': Icons.notification_add_sharp,
  'Icons.notification_add_rounded': Icons.notification_add_rounded,
  'Icons.notification_add_outlined': Icons.notification_add_outlined,
  'Icons.notification_important': Icons.notification_important,
  'Icons.notification_important_sharp': Icons.notification_important_sharp,
  'Icons.notification_important_rounded': Icons.notification_important_rounded,
  'Icons.notification_important_outlined':
      Icons.notification_important_outlined,
  'Icons.notifications': Icons.notifications,
  'Icons.notifications_sharp': Icons.notifications_sharp,
  'Icons.notifications_rounded': Icons.notifications_rounded,
  'Icons.notifications_outlined': Icons.notifications_outlined,
  'Icons.notifications_active': Icons.notifications_active,
  'Icons.notifications_active_sharp': Icons.notifications_active_sharp,
  'Icons.notifications_active_rounded': Icons.notifications_active_rounded,
  'Icons.notifications_active_outlined': Icons.notifications_active_outlined,
  'Icons.notifications_none': Icons.notifications_none,
  'Icons.notifications_none_sharp': Icons.notifications_none_sharp,
  'Icons.notifications_none_rounded': Icons.notifications_none_rounded,
  'Icons.notifications_none_outlined': Icons.notifications_none_outlined,
  'Icons.notifications_off': Icons.notifications_off,
  'Icons.notifications_off_sharp': Icons.notifications_off_sharp,
  'Icons.notifications_off_rounded': Icons.notifications_off_rounded,
  'Icons.notifications_off_outlined': Icons.notifications_off_outlined,
  'Icons.notifications_on': Icons.notifications_on,
  'Icons.notifications_on_sharp': Icons.notifications_on_sharp,
  'Icons.notifications_on_rounded': Icons.notifications_on_rounded,
  'Icons.notifications_on_outlined': Icons.notifications_on_outlined,
  'Icons.notifications_paused': Icons.notifications_paused,
  'Icons.notifications_paused_sharp': Icons.notifications_paused_sharp,
  'Icons.notifications_paused_rounded': Icons.notifications_paused_rounded,
  'Icons.notifications_paused_outlined': Icons.notifications_paused_outlined,
  'Icons.now_wallpaper': Icons.now_wallpaper,
  'Icons.now_wallpaper_sharp': Icons.now_wallpaper_sharp,
  'Icons.now_wallpaper_rounded': Icons.now_wallpaper_rounded,
  'Icons.now_wallpaper_outlined': Icons.now_wallpaper_outlined,
  'Icons.now_widgets': Icons.now_widgets,
  'Icons.now_widgets_sharp': Icons.now_widgets_sharp,
  'Icons.now_widgets_rounded': Icons.now_widgets_rounded,
  'Icons.now_widgets_outlined': Icons.now_widgets_outlined,
  'Icons.numbers': Icons.numbers,
  'Icons.numbers_sharp': Icons.numbers_sharp,
  'Icons.numbers_rounded': Icons.numbers_rounded,
  'Icons.numbers_outlined': Icons.numbers_outlined,
  'Icons.offline_bolt': Icons.offline_bolt,
  'Icons.offline_bolt_sharp': Icons.offline_bolt_sharp,
  'Icons.offline_bolt_rounded': Icons.offline_bolt_rounded,
  'Icons.offline_bolt_outlined': Icons.offline_bolt_outlined,
  'Icons.offline_pin': Icons.offline_pin,
  'Icons.offline_pin_sharp': Icons.offline_pin_sharp,
  'Icons.offline_pin_rounded': Icons.offline_pin_rounded,
  'Icons.offline_pin_outlined': Icons.offline_pin_outlined,
  'Icons.offline_share': Icons.offline_share,
  'Icons.offline_share_sharp': Icons.offline_share_sharp,
  'Icons.offline_share_rounded': Icons.offline_share_rounded,
  'Icons.offline_share_outlined': Icons.offline_share_outlined,
  'Icons.oil_barrel': Icons.oil_barrel,
  'Icons.oil_barrel_sharp': Icons.oil_barrel_sharp,
  'Icons.oil_barrel_rounded': Icons.oil_barrel_rounded,
  'Icons.oil_barrel_outlined': Icons.oil_barrel_outlined,
  'Icons.on_device_training': Icons.on_device_training,
  'Icons.on_device_training_sharp': Icons.on_device_training_sharp,
  'Icons.on_device_training_rounded': Icons.on_device_training_rounded,
  'Icons.on_device_training_outlined': Icons.on_device_training_outlined,
  'Icons.ondemand_video': Icons.ondemand_video,
  'Icons.ondemand_video_sharp': Icons.ondemand_video_sharp,
  'Icons.ondemand_video_rounded': Icons.ondemand_video_rounded,
  'Icons.ondemand_video_outlined': Icons.ondemand_video_outlined,
  'Icons.online_prediction': Icons.online_prediction,
  'Icons.online_prediction_sharp': Icons.online_prediction_sharp,
  'Icons.online_prediction_rounded': Icons.online_prediction_rounded,
  'Icons.online_prediction_outlined': Icons.online_prediction_outlined,
  'Icons.opacity': Icons.opacity,
  'Icons.opacity_sharp': Icons.opacity_sharp,
  'Icons.opacity_rounded': Icons.opacity_rounded,
  'Icons.opacity_outlined': Icons.opacity_outlined,
  'Icons.open_in_browser': Icons.open_in_browser,
  'Icons.open_in_browser_sharp': Icons.open_in_browser_sharp,
  'Icons.open_in_browser_rounded': Icons.open_in_browser_rounded,
  'Icons.open_in_browser_outlined': Icons.open_in_browser_outlined,
  'Icons.open_in_full': Icons.open_in_full,
  'Icons.open_in_full_sharp': Icons.open_in_full_sharp,
  'Icons.open_in_full_rounded': Icons.open_in_full_rounded,
  'Icons.open_in_full_outlined': Icons.open_in_full_outlined,
  'Icons.open_in_new': Icons.open_in_new,
  'Icons.open_in_new_sharp': Icons.open_in_new_sharp,
  'Icons.open_in_new_rounded': Icons.open_in_new_rounded,
  'Icons.open_in_new_outlined': Icons.open_in_new_outlined,
  'Icons.open_in_new_off': Icons.open_in_new_off,
  'Icons.open_in_new_off_sharp': Icons.open_in_new_off_sharp,
  'Icons.open_in_new_off_rounded': Icons.open_in_new_off_rounded,
  'Icons.open_in_new_off_outlined': Icons.open_in_new_off_outlined,
  'Icons.open_with': Icons.open_with,
  'Icons.open_with_sharp': Icons.open_with_sharp,
  'Icons.open_with_rounded': Icons.open_with_rounded,
  'Icons.open_with_outlined': Icons.open_with_outlined,
  'Icons.other_houses': Icons.other_houses,
  'Icons.other_houses_sharp': Icons.other_houses_sharp,
  'Icons.other_houses_rounded': Icons.other_houses_rounded,
  'Icons.other_houses_outlined': Icons.other_houses_outlined,
  'Icons.outbond': Icons.outbond,
  'Icons.outbond_sharp': Icons.outbond_sharp,
  'Icons.outbond_rounded': Icons.outbond_rounded,
  'Icons.outbond_outlined': Icons.outbond_outlined,
  'Icons.outbound': Icons.outbound,
  'Icons.outbound_sharp': Icons.outbound_sharp,
  'Icons.outbound_rounded': Icons.outbound_rounded,
  'Icons.outbound_outlined': Icons.outbound_outlined,
  'Icons.outbox': Icons.outbox,
  'Icons.outbox_sharp': Icons.outbox_sharp,
  'Icons.outbox_rounded': Icons.outbox_rounded,
  'Icons.outbox_outlined': Icons.outbox_outlined,
  'Icons.outdoor_grill': Icons.outdoor_grill,
  'Icons.outdoor_grill_sharp': Icons.outdoor_grill_sharp,
  'Icons.outdoor_grill_rounded': Icons.outdoor_grill_rounded,
  'Icons.outdoor_grill_outlined': Icons.outdoor_grill_outlined,
  'Icons.outgoing_mail': Icons.outgoing_mail,
  'Icons.outlet': Icons.outlet,
  'Icons.outlet_sharp': Icons.outlet_sharp,
  'Icons.outlet_rounded': Icons.outlet_rounded,
  'Icons.outlet_outlined': Icons.outlet_outlined,
  'Icons.outlined_flag': Icons.outlined_flag,
  'Icons.outlined_flag_sharp': Icons.outlined_flag_sharp,
  'Icons.outlined_flag_rounded': Icons.outlined_flag_rounded,
  'Icons.outlined_flag_outlined': Icons.outlined_flag_outlined,
  'Icons.output': Icons.output,
  'Icons.output_sharp': Icons.output_sharp,
  'Icons.output_rounded': Icons.output_rounded,
  'Icons.output_outlined': Icons.output_outlined,
  'Icons.padding': Icons.padding,
  'Icons.padding_sharp': Icons.padding_sharp,
  'Icons.padding_rounded': Icons.padding_rounded,
  'Icons.padding_outlined': Icons.padding_outlined,
  'Icons.pages': Icons.pages,
  'Icons.pages_sharp': Icons.pages_sharp,
  'Icons.pages_rounded': Icons.pages_rounded,
  'Icons.pages_outlined': Icons.pages_outlined,
  'Icons.pageview': Icons.pageview,
  'Icons.pageview_sharp': Icons.pageview_sharp,
  'Icons.pageview_rounded': Icons.pageview_rounded,
  'Icons.pageview_outlined': Icons.pageview_outlined,
  'Icons.paid': Icons.paid,
  'Icons.paid_sharp': Icons.paid_sharp,
  'Icons.paid_rounded': Icons.paid_rounded,
  'Icons.paid_outlined': Icons.paid_outlined,
  'Icons.palette': Icons.palette,
  'Icons.palette_sharp': Icons.palette_sharp,
  'Icons.palette_rounded': Icons.palette_rounded,
  'Icons.palette_outlined': Icons.palette_outlined,
  'Icons.pan_tool': Icons.pan_tool,
  'Icons.pan_tool_sharp': Icons.pan_tool_sharp,
  'Icons.pan_tool_rounded': Icons.pan_tool_rounded,
  'Icons.pan_tool_outlined': Icons.pan_tool_outlined,
  'Icons.pan_tool_alt': Icons.pan_tool_alt,
  'Icons.pan_tool_alt_sharp': Icons.pan_tool_alt_sharp,
  'Icons.pan_tool_alt_rounded': Icons.pan_tool_alt_rounded,
  'Icons.pan_tool_alt_outlined': Icons.pan_tool_alt_outlined,
  'Icons.panorama': Icons.panorama,
  'Icons.panorama_sharp': Icons.panorama_sharp,
  'Icons.panorama_rounded': Icons.panorama_rounded,
  'Icons.panorama_outlined': Icons.panorama_outlined,
  'Icons.panorama_fish_eye': Icons.panorama_fish_eye,
  'Icons.panorama_fish_eye_sharp': Icons.panorama_fish_eye_sharp,
  'Icons.panorama_fish_eye_rounded': Icons.panorama_fish_eye_rounded,
  'Icons.panorama_fish_eye_outlined': Icons.panorama_fish_eye_outlined,
  'Icons.panorama_fisheye': Icons.panorama_fisheye,
  'Icons.panorama_fisheye_sharp': Icons.panorama_fisheye_sharp,
  'Icons.panorama_fisheye_rounded': Icons.panorama_fisheye_rounded,
  'Icons.panorama_fisheye_outlined': Icons.panorama_fisheye_outlined,
  'Icons.panorama_horizontal': Icons.panorama_horizontal,
  'Icons.panorama_horizontal_sharp': Icons.panorama_horizontal_sharp,
  'Icons.panorama_horizontal_rounded': Icons.panorama_horizontal_rounded,
  'Icons.panorama_horizontal_outlined': Icons.panorama_horizontal_outlined,
  'Icons.panorama_horizontal_select': Icons.panorama_horizontal_select,
  'Icons.panorama_horizontal_select_sharp':
      Icons.panorama_horizontal_select_sharp,
  'Icons.panorama_horizontal_select_rounded':
      Icons.panorama_horizontal_select_rounded,
  'Icons.panorama_horizontal_select_outlined':
      Icons.panorama_horizontal_select_outlined,
  'Icons.panorama_photosphere': Icons.panorama_photosphere,
  'Icons.panorama_photosphere_sharp': Icons.panorama_photosphere_sharp,
  'Icons.panorama_photosphere_rounded': Icons.panorama_photosphere_rounded,
  'Icons.panorama_photosphere_outlined': Icons.panorama_photosphere_outlined,
  'Icons.panorama_photosphere_select': Icons.panorama_photosphere_select,
  'Icons.panorama_photosphere_select_sharp':
      Icons.panorama_photosphere_select_sharp,
  'Icons.panorama_photosphere_select_rounded':
      Icons.panorama_photosphere_select_rounded,
  'Icons.panorama_photosphere_select_outlined':
      Icons.panorama_photosphere_select_outlined,
  'Icons.panorama_vertical': Icons.panorama_vertical,
  'Icons.panorama_vertical_sharp': Icons.panorama_vertical_sharp,
  'Icons.panorama_vertical_rounded': Icons.panorama_vertical_rounded,
  'Icons.panorama_vertical_outlined': Icons.panorama_vertical_outlined,
  'Icons.panorama_vertical_select': Icons.panorama_vertical_select,
  'Icons.panorama_vertical_select_sharp': Icons.panorama_vertical_select_sharp,
  'Icons.panorama_vertical_select_rounded':
      Icons.panorama_vertical_select_rounded,
  'Icons.panorama_vertical_select_outlined':
      Icons.panorama_vertical_select_outlined,
  'Icons.panorama_wide_angle': Icons.panorama_wide_angle,
  'Icons.panorama_wide_angle_sharp': Icons.panorama_wide_angle_sharp,
  'Icons.panorama_wide_angle_rounded': Icons.panorama_wide_angle_rounded,
  'Icons.panorama_wide_angle_outlined': Icons.panorama_wide_angle_outlined,
  'Icons.panorama_wide_angle_select': Icons.panorama_wide_angle_select,
  'Icons.panorama_wide_angle_select_sharp':
      Icons.panorama_wide_angle_select_sharp,
  'Icons.panorama_wide_angle_select_rounded':
      Icons.panorama_wide_angle_select_rounded,
  'Icons.panorama_wide_angle_select_outlined':
      Icons.panorama_wide_angle_select_outlined,
  'Icons.paragliding': Icons.paragliding,
  'Icons.paragliding_sharp': Icons.paragliding_sharp,
  'Icons.paragliding_rounded': Icons.paragliding_rounded,
  'Icons.paragliding_outlined': Icons.paragliding_outlined,
  'Icons.park': Icons.park,
  'Icons.park_sharp': Icons.park_sharp,
  'Icons.park_rounded': Icons.park_rounded,
  'Icons.park_outlined': Icons.park_outlined,
  'Icons.party_mode': Icons.party_mode,
  'Icons.party_mode_sharp': Icons.party_mode_sharp,
  'Icons.party_mode_rounded': Icons.party_mode_rounded,
  'Icons.party_mode_outlined': Icons.party_mode_outlined,
  'Icons.password': Icons.password,
  'Icons.password_sharp': Icons.password_sharp,
  'Icons.password_rounded': Icons.password_rounded,
  'Icons.password_outlined': Icons.password_outlined,
  'Icons.paste': Icons.paste,
  'Icons.paste_sharp': Icons.paste_sharp,
  'Icons.paste_rounded': Icons.paste_rounded,
  'Icons.paste_outlined': Icons.paste_outlined,
  'Icons.pattern': Icons.pattern,
  'Icons.pattern_sharp': Icons.pattern_sharp,
  'Icons.pattern_rounded': Icons.pattern_rounded,
  'Icons.pattern_outlined': Icons.pattern_outlined,
  'Icons.pause': Icons.pause,
  'Icons.pause_sharp': Icons.pause_sharp,
  'Icons.pause_rounded': Icons.pause_rounded,
  'Icons.pause_outlined': Icons.pause_outlined,
  'Icons.pause_circle': Icons.pause_circle,
  'Icons.pause_circle_sharp': Icons.pause_circle_sharp,
  'Icons.pause_circle_rounded': Icons.pause_circle_rounded,
  'Icons.pause_circle_outlined': Icons.pause_circle_outlined,
  'Icons.pause_circle_filled': Icons.pause_circle_filled,
  'Icons.pause_circle_filled_sharp': Icons.pause_circle_filled_sharp,
  'Icons.pause_circle_filled_rounded': Icons.pause_circle_filled_rounded,
  'Icons.pause_circle_filled_outlined': Icons.pause_circle_filled_outlined,
  'Icons.pause_circle_outline': Icons.pause_circle_outline,
  'Icons.pause_circle_outline_sharp': Icons.pause_circle_outline_sharp,
  'Icons.pause_circle_outline_rounded': Icons.pause_circle_outline_rounded,
  'Icons.pause_circle_outline_outlined': Icons.pause_circle_outline_outlined,
  'Icons.pause_presentation': Icons.pause_presentation,
  'Icons.pause_presentation_sharp': Icons.pause_presentation_sharp,
  'Icons.pause_presentation_rounded': Icons.pause_presentation_rounded,
  'Icons.pause_presentation_outlined': Icons.pause_presentation_outlined,
  'Icons.payment': Icons.payment,
  'Icons.payment_sharp': Icons.payment_sharp,
  'Icons.payment_rounded': Icons.payment_rounded,
  'Icons.payment_outlined': Icons.payment_outlined,
  'Icons.payments': Icons.payments,
  'Icons.payments_sharp': Icons.payments_sharp,
  'Icons.payments_rounded': Icons.payments_rounded,
  'Icons.payments_outlined': Icons.payments_outlined,
  'Icons.paypal': Icons.paypal,
  'Icons.paypal_sharp': Icons.paypal_sharp,
  'Icons.paypal_rounded': Icons.paypal_rounded,
  'Icons.paypal_outlined': Icons.paypal_outlined,
  'Icons.pedal_bike': Icons.pedal_bike,
  'Icons.pedal_bike_sharp': Icons.pedal_bike_sharp,
  'Icons.pedal_bike_rounded': Icons.pedal_bike_rounded,
  'Icons.pedal_bike_outlined': Icons.pedal_bike_outlined,
  'Icons.pending': Icons.pending,
  'Icons.pending_sharp': Icons.pending_sharp,
  'Icons.pending_rounded': Icons.pending_rounded,
  'Icons.pending_outlined': Icons.pending_outlined,
  'Icons.pending_actions': Icons.pending_actions,
  'Icons.pending_actions_sharp': Icons.pending_actions_sharp,
  'Icons.pending_actions_rounded': Icons.pending_actions_rounded,
  'Icons.pending_actions_outlined': Icons.pending_actions_outlined,
  'Icons.pentagon': Icons.pentagon,
  'Icons.pentagon_sharp': Icons.pentagon_sharp,
  'Icons.pentagon_rounded': Icons.pentagon_rounded,
  'Icons.pentagon_outlined': Icons.pentagon_outlined,
  'Icons.people': Icons.people,
  'Icons.people_sharp': Icons.people_sharp,
  'Icons.people_rounded': Icons.people_rounded,
  'Icons.people_outlined': Icons.people_outlined,
  'Icons.people_alt': Icons.people_alt,
  'Icons.people_alt_sharp': Icons.people_alt_sharp,
  'Icons.people_alt_rounded': Icons.people_alt_rounded,
  'Icons.people_alt_outlined': Icons.people_alt_outlined,
  'Icons.people_outline': Icons.people_outline,
  'Icons.people_outline_sharp': Icons.people_outline_sharp,
  'Icons.people_outline_rounded': Icons.people_outline_rounded,
  'Icons.people_outline_outlined': Icons.people_outline_outlined,
  'Icons.percent': Icons.percent,
  'Icons.percent_sharp': Icons.percent_sharp,
  'Icons.percent_rounded': Icons.percent_rounded,
  'Icons.percent_outlined': Icons.percent_outlined,
  'Icons.perm_camera_mic': Icons.perm_camera_mic,
  'Icons.perm_camera_mic_sharp': Icons.perm_camera_mic_sharp,
  'Icons.perm_camera_mic_rounded': Icons.perm_camera_mic_rounded,
  'Icons.perm_camera_mic_outlined': Icons.perm_camera_mic_outlined,
  'Icons.perm_contact_cal': Icons.perm_contact_cal,
  'Icons.perm_contact_cal_sharp': Icons.perm_contact_cal_sharp,
  'Icons.perm_contact_cal_rounded': Icons.perm_contact_cal_rounded,
  'Icons.perm_contact_cal_outlined': Icons.perm_contact_cal_outlined,
  'Icons.perm_contact_calendar': Icons.perm_contact_calendar,
  'Icons.perm_contact_calendar_sharp': Icons.perm_contact_calendar_sharp,
  'Icons.perm_contact_calendar_rounded': Icons.perm_contact_calendar_rounded,
  'Icons.perm_contact_calendar_outlined': Icons.perm_contact_calendar_outlined,
  'Icons.perm_data_setting': Icons.perm_data_setting,
  'Icons.perm_data_setting_sharp': Icons.perm_data_setting_sharp,
  'Icons.perm_data_setting_rounded': Icons.perm_data_setting_rounded,
  'Icons.perm_data_setting_outlined': Icons.perm_data_setting_outlined,
  'Icons.perm_device_info': Icons.perm_device_info,
  'Icons.perm_device_info_sharp': Icons.perm_device_info_sharp,
  'Icons.perm_device_info_rounded': Icons.perm_device_info_rounded,
  'Icons.perm_device_info_outlined': Icons.perm_device_info_outlined,
  'Icons.perm_device_information': Icons.perm_device_information,
  'Icons.perm_device_information_sharp': Icons.perm_device_information_sharp,
  'Icons.perm_device_information_rounded':
      Icons.perm_device_information_rounded,
  'Icons.perm_device_information_outlined':
      Icons.perm_device_information_outlined,
  'Icons.perm_identity': Icons.perm_identity,
  'Icons.perm_identity_sharp': Icons.perm_identity_sharp,
  'Icons.perm_identity_rounded': Icons.perm_identity_rounded,
  'Icons.perm_identity_outlined': Icons.perm_identity_outlined,
  'Icons.perm_media': Icons.perm_media,
  'Icons.perm_media_sharp': Icons.perm_media_sharp,
  'Icons.perm_media_rounded': Icons.perm_media_rounded,
  'Icons.perm_media_outlined': Icons.perm_media_outlined,
  'Icons.perm_phone_msg': Icons.perm_phone_msg,
  'Icons.perm_phone_msg_sharp': Icons.perm_phone_msg_sharp,
  'Icons.perm_phone_msg_rounded': Icons.perm_phone_msg_rounded,
  'Icons.perm_phone_msg_outlined': Icons.perm_phone_msg_outlined,
  'Icons.perm_scan_wifi': Icons.perm_scan_wifi,
  'Icons.perm_scan_wifi_sharp': Icons.perm_scan_wifi_sharp,
  'Icons.perm_scan_wifi_rounded': Icons.perm_scan_wifi_rounded,
  'Icons.perm_scan_wifi_outlined': Icons.perm_scan_wifi_outlined,
  'Icons.person': Icons.person,
  'Icons.person_sharp': Icons.person_sharp,
  'Icons.person_rounded': Icons.person_rounded,
  'Icons.person_outlined': Icons.person_outlined,
  'Icons.person_add': Icons.person_add,
  'Icons.person_add_sharp': Icons.person_add_sharp,
  'Icons.person_add_rounded': Icons.person_add_rounded,
  'Icons.person_add_outlined': Icons.person_add_outlined,
  'Icons.person_add_alt': Icons.person_add_alt,
  'Icons.person_add_alt_sharp': Icons.person_add_alt_sharp,
  'Icons.person_add_alt_rounded': Icons.person_add_alt_rounded,
  'Icons.person_add_alt_outlined': Icons.person_add_alt_outlined,
  'Icons.person_add_alt_1': Icons.person_add_alt_1,
  'Icons.person_add_alt_1_sharp': Icons.person_add_alt_1_sharp,
  'Icons.person_add_alt_1_rounded': Icons.person_add_alt_1_rounded,
  'Icons.person_add_alt_1_outlined': Icons.person_add_alt_1_outlined,
  'Icons.person_add_disabled': Icons.person_add_disabled,
  'Icons.person_add_disabled_sharp': Icons.person_add_disabled_sharp,
  'Icons.person_add_disabled_rounded': Icons.person_add_disabled_rounded,
  'Icons.person_add_disabled_outlined': Icons.person_add_disabled_outlined,
  'Icons.person_off': Icons.person_off,
  'Icons.person_off_sharp': Icons.person_off_sharp,
  'Icons.person_off_rounded': Icons.person_off_rounded,
  'Icons.person_off_outlined': Icons.person_off_outlined,
  'Icons.person_outline': Icons.person_outline,
  'Icons.person_outline_sharp': Icons.person_outline_sharp,
  'Icons.person_outline_rounded': Icons.person_outline_rounded,
  'Icons.person_outline_outlined': Icons.person_outline_outlined,
  'Icons.person_pin': Icons.person_pin,
  'Icons.person_pin_sharp': Icons.person_pin_sharp,
  'Icons.person_pin_rounded': Icons.person_pin_rounded,
  'Icons.person_pin_outlined': Icons.person_pin_outlined,
  'Icons.person_pin_circle': Icons.person_pin_circle,
  'Icons.person_pin_circle_sharp': Icons.person_pin_circle_sharp,
  'Icons.person_pin_circle_rounded': Icons.person_pin_circle_rounded,
  'Icons.person_pin_circle_outlined': Icons.person_pin_circle_outlined,
  'Icons.person_remove': Icons.person_remove,
  'Icons.person_remove_sharp': Icons.person_remove_sharp,
  'Icons.person_remove_rounded': Icons.person_remove_rounded,
  'Icons.person_remove_outlined': Icons.person_remove_outlined,
  'Icons.person_remove_alt_1': Icons.person_remove_alt_1,
  'Icons.person_remove_alt_1_sharp': Icons.person_remove_alt_1_sharp,
  'Icons.person_remove_alt_1_rounded': Icons.person_remove_alt_1_rounded,
  'Icons.person_remove_alt_1_outlined': Icons.person_remove_alt_1_outlined,
  'Icons.person_search': Icons.person_search,
  'Icons.person_search_sharp': Icons.person_search_sharp,
  'Icons.person_search_rounded': Icons.person_search_rounded,
  'Icons.person_search_outlined': Icons.person_search_outlined,
  'Icons.personal_injury': Icons.personal_injury,
  'Icons.personal_injury_sharp': Icons.personal_injury_sharp,
  'Icons.personal_injury_rounded': Icons.personal_injury_rounded,
  'Icons.personal_injury_outlined': Icons.personal_injury_outlined,
  'Icons.personal_video': Icons.personal_video,
  'Icons.personal_video_sharp': Icons.personal_video_sharp,
  'Icons.personal_video_rounded': Icons.personal_video_rounded,
  'Icons.personal_video_outlined': Icons.personal_video_outlined,
  'Icons.pest_control': Icons.pest_control,
  'Icons.pest_control_sharp': Icons.pest_control_sharp,
  'Icons.pest_control_rounded': Icons.pest_control_rounded,
  'Icons.pest_control_outlined': Icons.pest_control_outlined,
  'Icons.pest_control_rodent': Icons.pest_control_rodent,
  'Icons.pest_control_rodent_sharp': Icons.pest_control_rodent_sharp,
  'Icons.pest_control_rodent_rounded': Icons.pest_control_rodent_rounded,
  'Icons.pest_control_rodent_outlined': Icons.pest_control_rodent_outlined,
  'Icons.pets': Icons.pets,
  'Icons.pets_sharp': Icons.pets_sharp,
  'Icons.pets_rounded': Icons.pets_rounded,
  'Icons.pets_outlined': Icons.pets_outlined,
  'Icons.phishing': Icons.phishing,
  'Icons.phishing_sharp': Icons.phishing_sharp,
  'Icons.phishing_rounded': Icons.phishing_rounded,
  'Icons.phishing_outlined': Icons.phishing_outlined,
  'Icons.phone': Icons.phone,
  'Icons.phone_sharp': Icons.phone_sharp,
  'Icons.phone_rounded': Icons.phone_rounded,
  'Icons.phone_outlined': Icons.phone_outlined,
  'Icons.phone_android': Icons.phone_android,
  'Icons.phone_android_sharp': Icons.phone_android_sharp,
  'Icons.phone_android_rounded': Icons.phone_android_rounded,
  'Icons.phone_android_outlined': Icons.phone_android_outlined,
  'Icons.phone_bluetooth_speaker': Icons.phone_bluetooth_speaker,
  'Icons.phone_bluetooth_speaker_sharp': Icons.phone_bluetooth_speaker_sharp,
  'Icons.phone_bluetooth_speaker_rounded':
      Icons.phone_bluetooth_speaker_rounded,
  'Icons.phone_bluetooth_speaker_outlined':
      Icons.phone_bluetooth_speaker_outlined,
  'Icons.phone_callback': Icons.phone_callback,
  'Icons.phone_callback_sharp': Icons.phone_callback_sharp,
  'Icons.phone_callback_rounded': Icons.phone_callback_rounded,
  'Icons.phone_callback_outlined': Icons.phone_callback_outlined,
  'Icons.phone_disabled': Icons.phone_disabled,
  'Icons.phone_disabled_sharp': Icons.phone_disabled_sharp,
  'Icons.phone_disabled_rounded': Icons.phone_disabled_rounded,
  'Icons.phone_disabled_outlined': Icons.phone_disabled_outlined,
  'Icons.phone_enabled': Icons.phone_enabled,
  'Icons.phone_enabled_sharp': Icons.phone_enabled_sharp,
  'Icons.phone_enabled_rounded': Icons.phone_enabled_rounded,
  'Icons.phone_enabled_outlined': Icons.phone_enabled_outlined,
  'Icons.phone_forwarded': Icons.phone_forwarded,
  'Icons.phone_forwarded_sharp': Icons.phone_forwarded_sharp,
  'Icons.phone_forwarded_rounded': Icons.phone_forwarded_rounded,
  'Icons.phone_forwarded_outlined': Icons.phone_forwarded_outlined,
  'Icons.phone_in_talk': Icons.phone_in_talk,
  'Icons.phone_in_talk_sharp': Icons.phone_in_talk_sharp,
  'Icons.phone_in_talk_rounded': Icons.phone_in_talk_rounded,
  'Icons.phone_in_talk_outlined': Icons.phone_in_talk_outlined,
  'Icons.phone_iphone': Icons.phone_iphone,
  'Icons.phone_iphone_sharp': Icons.phone_iphone_sharp,
  'Icons.phone_iphone_rounded': Icons.phone_iphone_rounded,
  'Icons.phone_iphone_outlined': Icons.phone_iphone_outlined,
  'Icons.phone_locked': Icons.phone_locked,
  'Icons.phone_locked_sharp': Icons.phone_locked_sharp,
  'Icons.phone_locked_rounded': Icons.phone_locked_rounded,
  'Icons.phone_locked_outlined': Icons.phone_locked_outlined,
  'Icons.phone_missed': Icons.phone_missed,
  'Icons.phone_missed_sharp': Icons.phone_missed_sharp,
  'Icons.phone_missed_rounded': Icons.phone_missed_rounded,
  'Icons.phone_missed_outlined': Icons.phone_missed_outlined,
  'Icons.phone_paused': Icons.phone_paused,
  'Icons.phone_paused_sharp': Icons.phone_paused_sharp,
  'Icons.phone_paused_rounded': Icons.phone_paused_rounded,
  'Icons.phone_paused_outlined': Icons.phone_paused_outlined,
  'Icons.phonelink': Icons.phonelink,
  'Icons.phonelink_sharp': Icons.phonelink_sharp,
  'Icons.phonelink_rounded': Icons.phonelink_rounded,
  'Icons.phonelink_outlined': Icons.phonelink_outlined,
  'Icons.phonelink_erase': Icons.phonelink_erase,
  'Icons.phonelink_erase_sharp': Icons.phonelink_erase_sharp,
  'Icons.phonelink_erase_rounded': Icons.phonelink_erase_rounded,
  'Icons.phonelink_erase_outlined': Icons.phonelink_erase_outlined,
  'Icons.phonelink_lock': Icons.phonelink_lock,
  'Icons.phonelink_lock_sharp': Icons.phonelink_lock_sharp,
  'Icons.phonelink_lock_rounded': Icons.phonelink_lock_rounded,
  'Icons.phonelink_lock_outlined': Icons.phonelink_lock_outlined,
  'Icons.phonelink_off': Icons.phonelink_off,
  'Icons.phonelink_off_sharp': Icons.phonelink_off_sharp,
  'Icons.phonelink_off_rounded': Icons.phonelink_off_rounded,
  'Icons.phonelink_off_outlined': Icons.phonelink_off_outlined,
  'Icons.phonelink_ring': Icons.phonelink_ring,
  'Icons.phonelink_ring_sharp': Icons.phonelink_ring_sharp,
  'Icons.phonelink_ring_rounded': Icons.phonelink_ring_rounded,
  'Icons.phonelink_ring_outlined': Icons.phonelink_ring_outlined,
  'Icons.phonelink_setup': Icons.phonelink_setup,
  'Icons.phonelink_setup_sharp': Icons.phonelink_setup_sharp,
  'Icons.phonelink_setup_rounded': Icons.phonelink_setup_rounded,
  'Icons.phonelink_setup_outlined': Icons.phonelink_setup_outlined,
  'Icons.photo': Icons.photo,
  'Icons.photo_sharp': Icons.photo_sharp,
  'Icons.photo_rounded': Icons.photo_rounded,
  'Icons.photo_outlined': Icons.photo_outlined,
  'Icons.photo_album': Icons.photo_album,
  'Icons.photo_album_sharp': Icons.photo_album_sharp,
  'Icons.photo_album_rounded': Icons.photo_album_rounded,
  'Icons.photo_album_outlined': Icons.photo_album_outlined,
  'Icons.photo_camera': Icons.photo_camera,
  'Icons.photo_camera_sharp': Icons.photo_camera_sharp,
  'Icons.photo_camera_rounded': Icons.photo_camera_rounded,
  'Icons.photo_camera_outlined': Icons.photo_camera_outlined,
  'Icons.photo_camera_back': Icons.photo_camera_back,
  'Icons.photo_camera_back_sharp': Icons.photo_camera_back_sharp,
  'Icons.photo_camera_back_rounded': Icons.photo_camera_back_rounded,
  'Icons.photo_camera_back_outlined': Icons.photo_camera_back_outlined,
  'Icons.photo_camera_front': Icons.photo_camera_front,
  'Icons.photo_camera_front_sharp': Icons.photo_camera_front_sharp,
  'Icons.photo_camera_front_rounded': Icons.photo_camera_front_rounded,
  'Icons.photo_camera_front_outlined': Icons.photo_camera_front_outlined,
  'Icons.photo_filter': Icons.photo_filter,
  'Icons.photo_filter_sharp': Icons.photo_filter_sharp,
  'Icons.photo_filter_rounded': Icons.photo_filter_rounded,
  'Icons.photo_filter_outlined': Icons.photo_filter_outlined,
  'Icons.photo_library': Icons.photo_library,
  'Icons.photo_library_sharp': Icons.photo_library_sharp,
  'Icons.photo_library_rounded': Icons.photo_library_rounded,
  'Icons.photo_library_outlined': Icons.photo_library_outlined,
  'Icons.photo_size_select_actual': Icons.photo_size_select_actual,
  'Icons.photo_size_select_actual_sharp': Icons.photo_size_select_actual_sharp,
  'Icons.photo_size_select_actual_rounded':
      Icons.photo_size_select_actual_rounded,
  'Icons.photo_size_select_actual_outlined':
      Icons.photo_size_select_actual_outlined,
  'Icons.photo_size_select_large': Icons.photo_size_select_large,
  'Icons.photo_size_select_large_sharp': Icons.photo_size_select_large_sharp,
  'Icons.photo_size_select_large_rounded':
      Icons.photo_size_select_large_rounded,
  'Icons.photo_size_select_large_outlined':
      Icons.photo_size_select_large_outlined,
  'Icons.photo_size_select_small': Icons.photo_size_select_small,
  'Icons.photo_size_select_small_sharp': Icons.photo_size_select_small_sharp,
  'Icons.photo_size_select_small_rounded':
      Icons.photo_size_select_small_rounded,
  'Icons.photo_size_select_small_outlined':
      Icons.photo_size_select_small_outlined,
  'Icons.php': Icons.php,
  'Icons.php_sharp': Icons.php_sharp,
  'Icons.php_rounded': Icons.php_rounded,
  'Icons.php_outlined': Icons.php_outlined,
  'Icons.piano': Icons.piano,
  'Icons.piano_sharp': Icons.piano_sharp,
  'Icons.piano_rounded': Icons.piano_rounded,
  'Icons.piano_outlined': Icons.piano_outlined,
  'Icons.piano_off': Icons.piano_off,
  'Icons.piano_off_sharp': Icons.piano_off_sharp,
  'Icons.piano_off_rounded': Icons.piano_off_rounded,
  'Icons.piano_off_outlined': Icons.piano_off_outlined,
  'Icons.picture_as_pdf': Icons.picture_as_pdf,
  'Icons.picture_as_pdf_sharp': Icons.picture_as_pdf_sharp,
  'Icons.picture_as_pdf_rounded': Icons.picture_as_pdf_rounded,
  'Icons.picture_as_pdf_outlined': Icons.picture_as_pdf_outlined,
  'Icons.picture_in_picture': Icons.picture_in_picture,
  'Icons.picture_in_picture_sharp': Icons.picture_in_picture_sharp,
  'Icons.picture_in_picture_rounded': Icons.picture_in_picture_rounded,
  'Icons.picture_in_picture_outlined': Icons.picture_in_picture_outlined,
  'Icons.picture_in_picture_alt': Icons.picture_in_picture_alt,
  'Icons.picture_in_picture_alt_sharp': Icons.picture_in_picture_alt_sharp,
  'Icons.picture_in_picture_alt_rounded': Icons.picture_in_picture_alt_rounded,
  'Icons.picture_in_picture_alt_outlined':
      Icons.picture_in_picture_alt_outlined,
  'Icons.pie_chart': Icons.pie_chart,
  'Icons.pie_chart_sharp': Icons.pie_chart_sharp,
  'Icons.pie_chart_rounded': Icons.pie_chart_rounded,
  'Icons.pie_chart_outline': Icons.pie_chart_outline,
  'Icons.pie_chart_outline_sharp': Icons.pie_chart_outline_sharp,
  'Icons.pie_chart_outline_rounded': Icons.pie_chart_outline_rounded,
  'Icons.pie_chart_outline_outlined': Icons.pie_chart_outline_outlined,
  'Icons.pin': Icons.pin,
  'Icons.pin_sharp': Icons.pin_sharp,
  'Icons.pin_rounded': Icons.pin_rounded,
  'Icons.pin_outlined': Icons.pin_outlined,
  'Icons.pin_drop': Icons.pin_drop,
  'Icons.pin_drop_sharp': Icons.pin_drop_sharp,
  'Icons.pin_drop_rounded': Icons.pin_drop_rounded,
  'Icons.pin_drop_outlined': Icons.pin_drop_outlined,
  'Icons.pin_end': Icons.pin_end,
  'Icons.pin_end_sharp': Icons.pin_end_sharp,
  'Icons.pin_end_rounded': Icons.pin_end_rounded,
  'Icons.pin_end_outlined': Icons.pin_end_outlined,
  'Icons.pin_invoke': Icons.pin_invoke,
  'Icons.pin_invoke_sharp': Icons.pin_invoke_sharp,
  'Icons.pin_invoke_rounded': Icons.pin_invoke_rounded,
  'Icons.pin_invoke_outlined': Icons.pin_invoke_outlined,
  'Icons.pinch': Icons.pinch,
  'Icons.pinch_sharp': Icons.pinch_sharp,
  'Icons.pinch_rounded': Icons.pinch_rounded,
  'Icons.pinch_outlined': Icons.pinch_outlined,
  'Icons.pivot_table_chart': Icons.pivot_table_chart,
  'Icons.pivot_table_chart_sharp': Icons.pivot_table_chart_sharp,
  'Icons.pivot_table_chart_rounded': Icons.pivot_table_chart_rounded,
  'Icons.pivot_table_chart_outlined': Icons.pivot_table_chart_outlined,
  'Icons.pix': Icons.pix,
  'Icons.pix_sharp': Icons.pix_sharp,
  'Icons.pix_rounded': Icons.pix_rounded,
  'Icons.pix_outlined': Icons.pix_outlined,
  'Icons.place': Icons.place,
  'Icons.place_sharp': Icons.place_sharp,
  'Icons.place_rounded': Icons.place_rounded,
  'Icons.place_outlined': Icons.place_outlined,
  'Icons.plagiarism': Icons.plagiarism,
  'Icons.plagiarism_sharp': Icons.plagiarism_sharp,
  'Icons.plagiarism_rounded': Icons.plagiarism_rounded,
  'Icons.plagiarism_outlined': Icons.plagiarism_outlined,
  'Icons.play_arrow': Icons.play_arrow,
  'Icons.play_arrow_sharp': Icons.play_arrow_sharp,
  'Icons.play_arrow_rounded': Icons.play_arrow_rounded,
  'Icons.play_arrow_outlined': Icons.play_arrow_outlined,
  'Icons.play_circle': Icons.play_circle,
  'Icons.play_circle_sharp': Icons.play_circle_sharp,
  'Icons.play_circle_rounded': Icons.play_circle_rounded,
  'Icons.play_circle_outlined': Icons.play_circle_outlined,
  'Icons.play_circle_fill': Icons.play_circle_fill,
  'Icons.play_circle_fill_sharp': Icons.play_circle_fill_sharp,
  'Icons.play_circle_fill_rounded': Icons.play_circle_fill_rounded,
  'Icons.play_circle_fill_outlined': Icons.play_circle_fill_outlined,
  'Icons.play_circle_filled': Icons.play_circle_filled,
  'Icons.play_circle_filled_sharp': Icons.play_circle_filled_sharp,
  'Icons.play_circle_filled_rounded': Icons.play_circle_filled_rounded,
  'Icons.play_circle_filled_outlined': Icons.play_circle_filled_outlined,
  'Icons.play_circle_outline': Icons.play_circle_outline,
  'Icons.play_circle_outline_sharp': Icons.play_circle_outline_sharp,
  'Icons.play_circle_outline_rounded': Icons.play_circle_outline_rounded,
  'Icons.play_circle_outline_outlined': Icons.play_circle_outline_outlined,
  'Icons.play_disabled': Icons.play_disabled,
  'Icons.play_disabled_sharp': Icons.play_disabled_sharp,
  'Icons.play_disabled_rounded': Icons.play_disabled_rounded,
  'Icons.play_disabled_outlined': Icons.play_disabled_outlined,
  'Icons.play_for_work': Icons.play_for_work,
  'Icons.play_for_work_sharp': Icons.play_for_work_sharp,
  'Icons.play_for_work_rounded': Icons.play_for_work_rounded,
  'Icons.play_for_work_outlined': Icons.play_for_work_outlined,
  'Icons.play_lesson': Icons.play_lesson,
  'Icons.play_lesson_sharp': Icons.play_lesson_sharp,
  'Icons.play_lesson_rounded': Icons.play_lesson_rounded,
  'Icons.play_lesson_outlined': Icons.play_lesson_outlined,
  'Icons.playlist_add': Icons.playlist_add,
  'Icons.playlist_add_sharp': Icons.playlist_add_sharp,
  'Icons.playlist_add_rounded': Icons.playlist_add_rounded,
  'Icons.playlist_add_outlined': Icons.playlist_add_outlined,
  'Icons.playlist_add_check': Icons.playlist_add_check,
  'Icons.playlist_add_check_sharp': Icons.playlist_add_check_sharp,
  'Icons.playlist_add_check_rounded': Icons.playlist_add_check_rounded,
  'Icons.playlist_add_check_outlined': Icons.playlist_add_check_outlined,
  'Icons.playlist_add_check_circle': Icons.playlist_add_check_circle,
  'Icons.playlist_add_check_circle_sharp':
      Icons.playlist_add_check_circle_sharp,
  'Icons.playlist_add_check_circle_rounded':
      Icons.playlist_add_check_circle_rounded,
  'Icons.playlist_add_check_circle_outlined':
      Icons.playlist_add_check_circle_outlined,
  'Icons.playlist_add_circle': Icons.playlist_add_circle,
  'Icons.playlist_add_circle_sharp': Icons.playlist_add_circle_sharp,
  'Icons.playlist_add_circle_rounded': Icons.playlist_add_circle_rounded,
  'Icons.playlist_add_circle_outlined': Icons.playlist_add_circle_outlined,
  'Icons.playlist_play': Icons.playlist_play,
  'Icons.playlist_play_sharp': Icons.playlist_play_sharp,
  'Icons.playlist_play_rounded': Icons.playlist_play_rounded,
  'Icons.playlist_play_outlined': Icons.playlist_play_outlined,
  'Icons.playlist_remove': Icons.playlist_remove,
  'Icons.playlist_remove_sharp': Icons.playlist_remove_sharp,
  'Icons.playlist_remove_rounded': Icons.playlist_remove_rounded,
  'Icons.playlist_remove_outlined': Icons.playlist_remove_outlined,
  'Icons.plumbing': Icons.plumbing,
  'Icons.plumbing_sharp': Icons.plumbing_sharp,
  'Icons.plumbing_rounded': Icons.plumbing_rounded,
  'Icons.plumbing_outlined': Icons.plumbing_outlined,
  'Icons.plus_one': Icons.plus_one,
  'Icons.plus_one_sharp': Icons.plus_one_sharp,
  'Icons.plus_one_rounded': Icons.plus_one_rounded,
  'Icons.plus_one_outlined': Icons.plus_one_outlined,
  'Icons.podcasts': Icons.podcasts,
  'Icons.podcasts_sharp': Icons.podcasts_sharp,
  'Icons.podcasts_rounded': Icons.podcasts_rounded,
  'Icons.podcasts_outlined': Icons.podcasts_outlined,
  'Icons.point_of_sale': Icons.point_of_sale,
  'Icons.point_of_sale_sharp': Icons.point_of_sale_sharp,
  'Icons.point_of_sale_rounded': Icons.point_of_sale_rounded,
  'Icons.point_of_sale_outlined': Icons.point_of_sale_outlined,
  'Icons.policy': Icons.policy,
  'Icons.policy_sharp': Icons.policy_sharp,
  'Icons.policy_rounded': Icons.policy_rounded,
  'Icons.policy_outlined': Icons.policy_outlined,
  'Icons.poll': Icons.poll,
  'Icons.poll_sharp': Icons.poll_sharp,
  'Icons.poll_rounded': Icons.poll_rounded,
  'Icons.poll_outlined': Icons.poll_outlined,
  'Icons.polyline': Icons.polyline,
  'Icons.polyline_sharp': Icons.polyline_sharp,
  'Icons.polyline_rounded': Icons.polyline_rounded,
  'Icons.polyline_outlined': Icons.polyline_outlined,
  'Icons.polymer': Icons.polymer,
  'Icons.polymer_sharp': Icons.polymer_sharp,
  'Icons.polymer_rounded': Icons.polymer_rounded,
  'Icons.polymer_outlined': Icons.polymer_outlined,
  'Icons.pool': Icons.pool,
  'Icons.pool_sharp': Icons.pool_sharp,
  'Icons.pool_rounded': Icons.pool_rounded,
  'Icons.pool_outlined': Icons.pool_outlined,
  'Icons.portable_wifi_off': Icons.portable_wifi_off,
  'Icons.portable_wifi_off_sharp': Icons.portable_wifi_off_sharp,
  'Icons.portable_wifi_off_rounded': Icons.portable_wifi_off_rounded,
  'Icons.portable_wifi_off_outlined': Icons.portable_wifi_off_outlined,
  'Icons.portrait': Icons.portrait,
  'Icons.portrait_sharp': Icons.portrait_sharp,
  'Icons.portrait_rounded': Icons.portrait_rounded,
  'Icons.portrait_outlined': Icons.portrait_outlined,
  'Icons.post_add': Icons.post_add,
  'Icons.post_add_sharp': Icons.post_add_sharp,
  'Icons.post_add_rounded': Icons.post_add_rounded,
  'Icons.post_add_outlined': Icons.post_add_outlined,
  'Icons.power': Icons.power,
  'Icons.power_sharp': Icons.power_sharp,
  'Icons.power_rounded': Icons.power_rounded,
  'Icons.power_outlined': Icons.power_outlined,
  'Icons.power_input': Icons.power_input,
  'Icons.power_input_sharp': Icons.power_input_sharp,
  'Icons.power_input_rounded': Icons.power_input_rounded,
  'Icons.power_input_outlined': Icons.power_input_outlined,
  'Icons.power_off': Icons.power_off,
  'Icons.power_off_sharp': Icons.power_off_sharp,
  'Icons.power_off_rounded': Icons.power_off_rounded,
  'Icons.power_off_outlined': Icons.power_off_outlined,
  'Icons.power_settings_new': Icons.power_settings_new,
  'Icons.power_settings_new_sharp': Icons.power_settings_new_sharp,
  'Icons.power_settings_new_rounded': Icons.power_settings_new_rounded,
  'Icons.power_settings_new_outlined': Icons.power_settings_new_outlined,
  'Icons.precision_manufacturing': Icons.precision_manufacturing,
  'Icons.precision_manufacturing_sharp': Icons.precision_manufacturing_sharp,
  'Icons.precision_manufacturing_rounded':
      Icons.precision_manufacturing_rounded,
  'Icons.precision_manufacturing_outlined':
      Icons.precision_manufacturing_outlined,
  'Icons.pregnant_woman': Icons.pregnant_woman,
  'Icons.pregnant_woman_sharp': Icons.pregnant_woman_sharp,
  'Icons.pregnant_woman_rounded': Icons.pregnant_woman_rounded,
  'Icons.pregnant_woman_outlined': Icons.pregnant_woman_outlined,
  'Icons.present_to_all': Icons.present_to_all,
  'Icons.present_to_all_sharp': Icons.present_to_all_sharp,
  'Icons.present_to_all_rounded': Icons.present_to_all_rounded,
  'Icons.present_to_all_outlined': Icons.present_to_all_outlined,
  'Icons.preview': Icons.preview,
  'Icons.preview_sharp': Icons.preview_sharp,
  'Icons.preview_rounded': Icons.preview_rounded,
  'Icons.preview_outlined': Icons.preview_outlined,
  'Icons.price_change': Icons.price_change,
  'Icons.price_change_sharp': Icons.price_change_sharp,
  'Icons.price_change_rounded': Icons.price_change_rounded,
  'Icons.price_change_outlined': Icons.price_change_outlined,
  'Icons.price_check': Icons.price_check,
  'Icons.price_check_sharp': Icons.price_check_sharp,
  'Icons.price_check_rounded': Icons.price_check_rounded,
  'Icons.price_check_outlined': Icons.price_check_outlined,
  'Icons.print': Icons.print,
  'Icons.print_sharp': Icons.print_sharp,
  'Icons.print_rounded': Icons.print_rounded,
  'Icons.print_outlined': Icons.print_outlined,
  'Icons.print_disabled': Icons.print_disabled,
  'Icons.print_disabled_sharp': Icons.print_disabled_sharp,
  'Icons.print_disabled_rounded': Icons.print_disabled_rounded,
  'Icons.print_disabled_outlined': Icons.print_disabled_outlined,
  'Icons.priority_high': Icons.priority_high,
  'Icons.priority_high_sharp': Icons.priority_high_sharp,
  'Icons.priority_high_rounded': Icons.priority_high_rounded,
  'Icons.priority_high_outlined': Icons.priority_high_outlined,
  'Icons.privacy_tip': Icons.privacy_tip,
  'Icons.privacy_tip_sharp': Icons.privacy_tip_sharp,
  'Icons.privacy_tip_rounded': Icons.privacy_tip_rounded,
  'Icons.privacy_tip_outlined': Icons.privacy_tip_outlined,
  'Icons.private_connectivity': Icons.private_connectivity,
  'Icons.private_connectivity_sharp': Icons.private_connectivity_sharp,
  'Icons.private_connectivity_rounded': Icons.private_connectivity_rounded,
  'Icons.private_connectivity_outlined': Icons.private_connectivity_outlined,
  'Icons.production_quantity_limits': Icons.production_quantity_limits,
  'Icons.production_quantity_limits_sharp':
      Icons.production_quantity_limits_sharp,
  'Icons.production_quantity_limits_rounded':
      Icons.production_quantity_limits_rounded,
  'Icons.production_quantity_limits_outlined':
      Icons.production_quantity_limits_outlined,
  'Icons.propane': Icons.propane,
  'Icons.propane_sharp': Icons.propane_sharp,
  'Icons.propane_rounded': Icons.propane_rounded,
  'Icons.propane_outlined': Icons.propane_outlined,
  'Icons.propane_tank': Icons.propane_tank,
  'Icons.propane_tank_sharp': Icons.propane_tank_sharp,
  'Icons.propane_tank_rounded': Icons.propane_tank_rounded,
  'Icons.propane_tank_outlined': Icons.propane_tank_outlined,
  'Icons.psychology': Icons.psychology,
  'Icons.psychology_sharp': Icons.psychology_sharp,
  'Icons.psychology_rounded': Icons.psychology_rounded,
  'Icons.psychology_outlined': Icons.psychology_outlined,
  'Icons.public': Icons.public,
  'Icons.public_sharp': Icons.public_sharp,
  'Icons.public_rounded': Icons.public_rounded,
  'Icons.public_outlined': Icons.public_outlined,
  'Icons.public_off': Icons.public_off,
  'Icons.public_off_sharp': Icons.public_off_sharp,
  'Icons.public_off_rounded': Icons.public_off_rounded,
  'Icons.public_off_outlined': Icons.public_off_outlined,
  'Icons.publish': Icons.publish,
  'Icons.publish_sharp': Icons.publish_sharp,
  'Icons.publish_rounded': Icons.publish_rounded,
  'Icons.publish_outlined': Icons.publish_outlined,
  'Icons.published_with_changes': Icons.published_with_changes,
  'Icons.published_with_changes_sharp': Icons.published_with_changes_sharp,
  'Icons.published_with_changes_rounded': Icons.published_with_changes_rounded,
  'Icons.published_with_changes_outlined':
      Icons.published_with_changes_outlined,
  'Icons.punch_clock': Icons.punch_clock,
  'Icons.punch_clock_sharp': Icons.punch_clock_sharp,
  'Icons.punch_clock_rounded': Icons.punch_clock_rounded,
  'Icons.punch_clock_outlined': Icons.punch_clock_outlined,
  'Icons.push_pin': Icons.push_pin,
  'Icons.push_pin_sharp': Icons.push_pin_sharp,
  'Icons.push_pin_rounded': Icons.push_pin_rounded,
  'Icons.push_pin_outlined': Icons.push_pin_outlined,
  'Icons.qr_code': Icons.qr_code,
  'Icons.qr_code_sharp': Icons.qr_code_sharp,
  'Icons.qr_code_rounded': Icons.qr_code_rounded,
  'Icons.qr_code_outlined': Icons.qr_code_outlined,
  'Icons.qr_code_2': Icons.qr_code_2,
  'Icons.qr_code_2_sharp': Icons.qr_code_2_sharp,
  'Icons.qr_code_2_rounded': Icons.qr_code_2_rounded,
  'Icons.qr_code_2_outlined': Icons.qr_code_2_outlined,
  'Icons.qr_code_scanner': Icons.qr_code_scanner,
  'Icons.qr_code_scanner_sharp': Icons.qr_code_scanner_sharp,
  'Icons.qr_code_scanner_rounded': Icons.qr_code_scanner_rounded,
  'Icons.qr_code_scanner_outlined': Icons.qr_code_scanner_outlined,
  'Icons.query_builder': Icons.query_builder,
  'Icons.query_builder_sharp': Icons.query_builder_sharp,
  'Icons.query_builder_rounded': Icons.query_builder_rounded,
  'Icons.query_builder_outlined': Icons.query_builder_outlined,
  'Icons.query_stats': Icons.query_stats,
  'Icons.query_stats_sharp': Icons.query_stats_sharp,
  'Icons.query_stats_rounded': Icons.query_stats_rounded,
  'Icons.query_stats_outlined': Icons.query_stats_outlined,
  'Icons.question_answer': Icons.question_answer,
  'Icons.question_answer_sharp': Icons.question_answer_sharp,
  'Icons.question_answer_rounded': Icons.question_answer_rounded,
  'Icons.question_answer_outlined': Icons.question_answer_outlined,
  'Icons.question_mark': Icons.question_mark,
  'Icons.question_mark_sharp': Icons.question_mark_sharp,
  'Icons.question_mark_rounded': Icons.question_mark_rounded,
  'Icons.question_mark_outlined': Icons.question_mark_outlined,
  'Icons.queue': Icons.queue,
  'Icons.queue_sharp': Icons.queue_sharp,
  'Icons.queue_rounded': Icons.queue_rounded,
  'Icons.queue_outlined': Icons.queue_outlined,
  'Icons.queue_music': Icons.queue_music,
  'Icons.queue_music_sharp': Icons.queue_music_sharp,
  'Icons.queue_music_rounded': Icons.queue_music_rounded,
  'Icons.queue_music_outlined': Icons.queue_music_outlined,
  'Icons.queue_play_next': Icons.queue_play_next,
  'Icons.queue_play_next_sharp': Icons.queue_play_next_sharp,
  'Icons.queue_play_next_rounded': Icons.queue_play_next_rounded,
  'Icons.queue_play_next_outlined': Icons.queue_play_next_outlined,
  'Icons.quick_contacts_dialer': Icons.quick_contacts_dialer,
  'Icons.quick_contacts_dialer_sharp': Icons.quick_contacts_dialer_sharp,
  'Icons.quick_contacts_dialer_rounded': Icons.quick_contacts_dialer_rounded,
  'Icons.quick_contacts_dialer_outlined': Icons.quick_contacts_dialer_outlined,
  'Icons.quick_contacts_mail': Icons.quick_contacts_mail,
  'Icons.quick_contacts_mail_sharp': Icons.quick_contacts_mail_sharp,
  'Icons.quick_contacts_mail_rounded': Icons.quick_contacts_mail_rounded,
  'Icons.quick_contacts_mail_outlined': Icons.quick_contacts_mail_outlined,
  'Icons.quickreply': Icons.quickreply,
  'Icons.quickreply_sharp': Icons.quickreply_sharp,
  'Icons.quickreply_rounded': Icons.quickreply_rounded,
  'Icons.quickreply_outlined': Icons.quickreply_outlined,
  'Icons.quiz': Icons.quiz,
  'Icons.quiz_sharp': Icons.quiz_sharp,
  'Icons.quiz_rounded': Icons.quiz_rounded,
  'Icons.quiz_outlined': Icons.quiz_outlined,
  'Icons.quora': Icons.quora,
  'Icons.quora_sharp': Icons.quora_sharp,
  'Icons.quora_rounded': Icons.quora_rounded,
  'Icons.quora_outlined': Icons.quora_outlined,
  'Icons.r_mobiledata': Icons.r_mobiledata,
  'Icons.r_mobiledata_sharp': Icons.r_mobiledata_sharp,
  'Icons.r_mobiledata_rounded': Icons.r_mobiledata_rounded,
  'Icons.r_mobiledata_outlined': Icons.r_mobiledata_outlined,
  'Icons.radar': Icons.radar,
  'Icons.radar_sharp': Icons.radar_sharp,
  'Icons.radar_rounded': Icons.radar_rounded,
  'Icons.radar_outlined': Icons.radar_outlined,
  'Icons.radio': Icons.radio,
  'Icons.radio_sharp': Icons.radio_sharp,
  'Icons.radio_rounded': Icons.radio_rounded,
  'Icons.radio_outlined': Icons.radio_outlined,
  'Icons.radio_button_checked': Icons.radio_button_checked,
  'Icons.radio_button_checked_sharp': Icons.radio_button_checked_sharp,
  'Icons.radio_button_checked_rounded': Icons.radio_button_checked_rounded,
  'Icons.radio_button_checked_outlined': Icons.radio_button_checked_outlined,
  'Icons.radio_button_off': Icons.radio_button_off,
  'Icons.radio_button_off_sharp': Icons.radio_button_off_sharp,
  'Icons.radio_button_off_rounded': Icons.radio_button_off_rounded,
  'Icons.radio_button_off_outlined': Icons.radio_button_off_outlined,
  'Icons.radio_button_on': Icons.radio_button_on,
  'Icons.radio_button_on_sharp': Icons.radio_button_on_sharp,
  'Icons.radio_button_on_rounded': Icons.radio_button_on_rounded,
  'Icons.radio_button_on_outlined': Icons.radio_button_on_outlined,
  'Icons.radio_button_unchecked': Icons.radio_button_unchecked,
  'Icons.radio_button_unchecked_sharp': Icons.radio_button_unchecked_sharp,
  'Icons.radio_button_unchecked_rounded': Icons.radio_button_unchecked_rounded,
  'Icons.radio_button_unchecked_outlined':
      Icons.radio_button_unchecked_outlined,
  'Icons.railway_alert': Icons.railway_alert,
  'Icons.railway_alert_sharp': Icons.railway_alert_sharp,
  'Icons.railway_alert_rounded': Icons.railway_alert_rounded,
  'Icons.railway_alert_outlined': Icons.railway_alert_outlined,
  'Icons.ramen_dining': Icons.ramen_dining,
  'Icons.ramen_dining_sharp': Icons.ramen_dining_sharp,
  'Icons.ramen_dining_rounded': Icons.ramen_dining_rounded,
  'Icons.ramen_dining_outlined': Icons.ramen_dining_outlined,
  'Icons.ramp_left': Icons.ramp_left,
  'Icons.ramp_left_sharp': Icons.ramp_left_sharp,
  'Icons.ramp_left_rounded': Icons.ramp_left_rounded,
  'Icons.ramp_left_outlined': Icons.ramp_left_outlined,
  'Icons.ramp_right': Icons.ramp_right,
  'Icons.ramp_right_sharp': Icons.ramp_right_sharp,
  'Icons.ramp_right_rounded': Icons.ramp_right_rounded,
  'Icons.ramp_right_outlined': Icons.ramp_right_outlined,
  'Icons.rate_review': Icons.rate_review,
  'Icons.rate_review_sharp': Icons.rate_review_sharp,
  'Icons.rate_review_rounded': Icons.rate_review_rounded,
  'Icons.rate_review_outlined': Icons.rate_review_outlined,
  'Icons.raw_off': Icons.raw_off,
  'Icons.raw_off_sharp': Icons.raw_off_sharp,
  'Icons.raw_off_rounded': Icons.raw_off_rounded,
  'Icons.raw_off_outlined': Icons.raw_off_outlined,
  'Icons.raw_on': Icons.raw_on,
  'Icons.raw_on_sharp': Icons.raw_on_sharp,
  'Icons.raw_on_rounded': Icons.raw_on_rounded,
  'Icons.raw_on_outlined': Icons.raw_on_outlined,
  'Icons.read_more': Icons.read_more,
  'Icons.read_more_sharp': Icons.read_more_sharp,
  'Icons.read_more_rounded': Icons.read_more_rounded,
  'Icons.read_more_outlined': Icons.read_more_outlined,
  'Icons.real_estate_agent': Icons.real_estate_agent,
  'Icons.real_estate_agent_sharp': Icons.real_estate_agent_sharp,
  'Icons.real_estate_agent_rounded': Icons.real_estate_agent_rounded,
  'Icons.real_estate_agent_outlined': Icons.real_estate_agent_outlined,
  'Icons.receipt': Icons.receipt,
  'Icons.receipt_sharp': Icons.receipt_sharp,
  'Icons.receipt_rounded': Icons.receipt_rounded,
  'Icons.receipt_outlined': Icons.receipt_outlined,
  'Icons.receipt_long': Icons.receipt_long,
  'Icons.receipt_long_sharp': Icons.receipt_long_sharp,
  'Icons.receipt_long_rounded': Icons.receipt_long_rounded,
  'Icons.receipt_long_outlined': Icons.receipt_long_outlined,
  'Icons.recent_actors': Icons.recent_actors,
  'Icons.recent_actors_sharp': Icons.recent_actors_sharp,
  'Icons.recent_actors_rounded': Icons.recent_actors_rounded,
  'Icons.recent_actors_outlined': Icons.recent_actors_outlined,
  'Icons.recommend': Icons.recommend,
  'Icons.recommend_sharp': Icons.recommend_sharp,
  'Icons.recommend_rounded': Icons.recommend_rounded,
  'Icons.recommend_outlined': Icons.recommend_outlined,
  'Icons.record_voice_over': Icons.record_voice_over,
  'Icons.record_voice_over_sharp': Icons.record_voice_over_sharp,
  'Icons.record_voice_over_rounded': Icons.record_voice_over_rounded,
  'Icons.record_voice_over_outlined': Icons.record_voice_over_outlined,
  'Icons.rectangle': Icons.rectangle,
  'Icons.rectangle_sharp': Icons.rectangle_sharp,
  'Icons.rectangle_rounded': Icons.rectangle_rounded,
  'Icons.rectangle_outlined': Icons.rectangle_outlined,
  'Icons.recycling': Icons.recycling,
  'Icons.recycling_sharp': Icons.recycling_sharp,
  'Icons.recycling_rounded': Icons.recycling_rounded,
  'Icons.recycling_outlined': Icons.recycling_outlined,
  'Icons.reddit': Icons.reddit,
  'Icons.reddit_sharp': Icons.reddit_sharp,
  'Icons.reddit_rounded': Icons.reddit_rounded,
  'Icons.reddit_outlined': Icons.reddit_outlined,
  'Icons.redeem': Icons.redeem,
  'Icons.redeem_sharp': Icons.redeem_sharp,
  'Icons.redeem_rounded': Icons.redeem_rounded,
  'Icons.redeem_outlined': Icons.redeem_outlined,
  'Icons.redo': Icons.redo,
  'Icons.redo_sharp': Icons.redo_sharp,
  'Icons.redo_rounded': Icons.redo_rounded,
  'Icons.redo_outlined': Icons.redo_outlined,
  'Icons.reduce_capacity': Icons.reduce_capacity,
  'Icons.reduce_capacity_sharp': Icons.reduce_capacity_sharp,
  'Icons.reduce_capacity_rounded': Icons.reduce_capacity_rounded,
  'Icons.reduce_capacity_outlined': Icons.reduce_capacity_outlined,
  'Icons.refresh': Icons.refresh,
  'Icons.refresh_sharp': Icons.refresh_sharp,
  'Icons.refresh_rounded': Icons.refresh_rounded,
  'Icons.refresh_outlined': Icons.refresh_outlined,
  'Icons.remember_me': Icons.remember_me,
  'Icons.remember_me_sharp': Icons.remember_me_sharp,
  'Icons.remember_me_rounded': Icons.remember_me_rounded,
  'Icons.remember_me_outlined': Icons.remember_me_outlined,
  'Icons.remove': Icons.remove,
  'Icons.remove_sharp': Icons.remove_sharp,
  'Icons.remove_rounded': Icons.remove_rounded,
  'Icons.remove_outlined': Icons.remove_outlined,
  'Icons.remove_circle': Icons.remove_circle,
  'Icons.remove_circle_sharp': Icons.remove_circle_sharp,
  'Icons.remove_circle_rounded': Icons.remove_circle_rounded,
  'Icons.remove_circle_outlined': Icons.remove_circle_outlined,
  'Icons.remove_circle_outline': Icons.remove_circle_outline,
  'Icons.remove_circle_outline_sharp': Icons.remove_circle_outline_sharp,
  'Icons.remove_circle_outline_rounded': Icons.remove_circle_outline_rounded,
  'Icons.remove_circle_outline_outlined': Icons.remove_circle_outline_outlined,
  'Icons.remove_done': Icons.remove_done,
  'Icons.remove_done_sharp': Icons.remove_done_sharp,
  'Icons.remove_done_rounded': Icons.remove_done_rounded,
  'Icons.remove_done_outlined': Icons.remove_done_outlined,
  'Icons.remove_from_queue': Icons.remove_from_queue,
  'Icons.remove_from_queue_sharp': Icons.remove_from_queue_sharp,
  'Icons.remove_from_queue_rounded': Icons.remove_from_queue_rounded,
  'Icons.remove_from_queue_outlined': Icons.remove_from_queue_outlined,
  'Icons.remove_moderator': Icons.remove_moderator,
  'Icons.remove_moderator_sharp': Icons.remove_moderator_sharp,
  'Icons.remove_moderator_rounded': Icons.remove_moderator_rounded,
  'Icons.remove_moderator_outlined': Icons.remove_moderator_outlined,
  'Icons.remove_red_eye': Icons.remove_red_eye,
  'Icons.remove_red_eye_sharp': Icons.remove_red_eye_sharp,
  'Icons.remove_red_eye_rounded': Icons.remove_red_eye_rounded,
  'Icons.remove_red_eye_outlined': Icons.remove_red_eye_outlined,
  'Icons.remove_road': Icons.remove_road,
  'Icons.remove_road_sharp': Icons.remove_road_sharp,
  'Icons.remove_road_rounded': Icons.remove_road_rounded,
  'Icons.remove_road_outlined': Icons.remove_road_outlined,
  'Icons.remove_shopping_cart': Icons.remove_shopping_cart,
  'Icons.remove_shopping_cart_sharp': Icons.remove_shopping_cart_sharp,
  'Icons.remove_shopping_cart_rounded': Icons.remove_shopping_cart_rounded,
  'Icons.remove_shopping_cart_outlined': Icons.remove_shopping_cart_outlined,
  'Icons.reorder': Icons.reorder,
  'Icons.reorder_sharp': Icons.reorder_sharp,
  'Icons.reorder_rounded': Icons.reorder_rounded,
  'Icons.reorder_outlined': Icons.reorder_outlined,
  'Icons.repeat': Icons.repeat,
  'Icons.repeat_sharp': Icons.repeat_sharp,
  'Icons.repeat_rounded': Icons.repeat_rounded,
  'Icons.repeat_outlined': Icons.repeat_outlined,
  'Icons.repeat_on': Icons.repeat_on,
  'Icons.repeat_on_sharp': Icons.repeat_on_sharp,
  'Icons.repeat_on_rounded': Icons.repeat_on_rounded,
  'Icons.repeat_on_outlined': Icons.repeat_on_outlined,
  'Icons.repeat_one': Icons.repeat_one,
  'Icons.repeat_one_sharp': Icons.repeat_one_sharp,
  'Icons.repeat_one_rounded': Icons.repeat_one_rounded,
  'Icons.repeat_one_outlined': Icons.repeat_one_outlined,
  'Icons.repeat_one_on': Icons.repeat_one_on,
  'Icons.repeat_one_on_sharp': Icons.repeat_one_on_sharp,
  'Icons.repeat_one_on_rounded': Icons.repeat_one_on_rounded,
  'Icons.repeat_one_on_outlined': Icons.repeat_one_on_outlined,
  'Icons.replay': Icons.replay,
  'Icons.replay_sharp': Icons.replay_sharp,
  'Icons.replay_rounded': Icons.replay_rounded,
  'Icons.replay_outlined': Icons.replay_outlined,
  'Icons.replay_10': Icons.replay_10,
  'Icons.replay_10_sharp': Icons.replay_10_sharp,
  'Icons.replay_10_rounded': Icons.replay_10_rounded,
  'Icons.replay_10_outlined': Icons.replay_10_outlined,
  'Icons.replay_30': Icons.replay_30,
  'Icons.replay_30_sharp': Icons.replay_30_sharp,
  'Icons.replay_30_rounded': Icons.replay_30_rounded,
  'Icons.replay_30_outlined': Icons.replay_30_outlined,
  'Icons.replay_5': Icons.replay_5,
  'Icons.replay_5_sharp': Icons.replay_5_sharp,
  'Icons.replay_5_rounded': Icons.replay_5_rounded,
  'Icons.replay_5_outlined': Icons.replay_5_outlined,
  'Icons.replay_circle_filled': Icons.replay_circle_filled,
  'Icons.replay_circle_filled_sharp': Icons.replay_circle_filled_sharp,
  'Icons.replay_circle_filled_rounded': Icons.replay_circle_filled_rounded,
  'Icons.replay_circle_filled_outlined': Icons.replay_circle_filled_outlined,
  'Icons.reply': Icons.reply,
  'Icons.reply_sharp': Icons.reply_sharp,
  'Icons.reply_rounded': Icons.reply_rounded,
  'Icons.reply_outlined': Icons.reply_outlined,
  'Icons.reply_all': Icons.reply_all,
  'Icons.reply_all_sharp': Icons.reply_all_sharp,
  'Icons.reply_all_rounded': Icons.reply_all_rounded,
  'Icons.reply_all_outlined': Icons.reply_all_outlined,
  'Icons.report': Icons.report,
  'Icons.report_sharp': Icons.report_sharp,
  'Icons.report_rounded': Icons.report_rounded,
  'Icons.report_outlined': Icons.report_outlined,
  'Icons.report_gmailerrorred': Icons.report_gmailerrorred,
  'Icons.report_gmailerrorred_sharp': Icons.report_gmailerrorred_sharp,
  'Icons.report_gmailerrorred_rounded': Icons.report_gmailerrorred_rounded,
  'Icons.report_gmailerrorred_outlined': Icons.report_gmailerrorred_outlined,
  'Icons.report_off': Icons.report_off,
  'Icons.report_off_sharp': Icons.report_off_sharp,
  'Icons.report_off_rounded': Icons.report_off_rounded,
  'Icons.report_off_outlined': Icons.report_off_outlined,
  'Icons.report_problem': Icons.report_problem,
  'Icons.report_problem_sharp': Icons.report_problem_sharp,
  'Icons.report_problem_rounded': Icons.report_problem_rounded,
  'Icons.report_problem_outlined': Icons.report_problem_outlined,
  'Icons.request_page': Icons.request_page,
  'Icons.request_page_sharp': Icons.request_page_sharp,
  'Icons.request_page_rounded': Icons.request_page_rounded,
  'Icons.request_page_outlined': Icons.request_page_outlined,
  'Icons.request_quote': Icons.request_quote,
  'Icons.request_quote_sharp': Icons.request_quote_sharp,
  'Icons.request_quote_rounded': Icons.request_quote_rounded,
  'Icons.request_quote_outlined': Icons.request_quote_outlined,
  'Icons.reset_tv': Icons.reset_tv,
  'Icons.reset_tv_sharp': Icons.reset_tv_sharp,
  'Icons.reset_tv_rounded': Icons.reset_tv_rounded,
  'Icons.reset_tv_outlined': Icons.reset_tv_outlined,
  'Icons.restart_alt': Icons.restart_alt,
  'Icons.restart_alt_sharp': Icons.restart_alt_sharp,
  'Icons.restart_alt_rounded': Icons.restart_alt_rounded,
  'Icons.restart_alt_outlined': Icons.restart_alt_outlined,
  'Icons.restaurant': Icons.restaurant,
  'Icons.restaurant_sharp': Icons.restaurant_sharp,
  'Icons.restaurant_rounded': Icons.restaurant_rounded,
  'Icons.restaurant_outlined': Icons.restaurant_outlined,
  'Icons.restaurant_menu': Icons.restaurant_menu,
  'Icons.restaurant_menu_sharp': Icons.restaurant_menu_sharp,
  'Icons.restaurant_menu_rounded': Icons.restaurant_menu_rounded,
  'Icons.restaurant_menu_outlined': Icons.restaurant_menu_outlined,
  'Icons.restore': Icons.restore,
  'Icons.restore_sharp': Icons.restore_sharp,
  'Icons.restore_rounded': Icons.restore_rounded,
  'Icons.restore_outlined': Icons.restore_outlined,
  'Icons.restore_from_trash': Icons.restore_from_trash,
  'Icons.restore_from_trash_sharp': Icons.restore_from_trash_sharp,
  'Icons.restore_from_trash_rounded': Icons.restore_from_trash_rounded,
  'Icons.restore_from_trash_outlined': Icons.restore_from_trash_outlined,
  'Icons.restore_page': Icons.restore_page,
  'Icons.restore_page_sharp': Icons.restore_page_sharp,
  'Icons.restore_page_rounded': Icons.restore_page_rounded,
  'Icons.restore_page_outlined': Icons.restore_page_outlined,
  'Icons.reviews': Icons.reviews,
  'Icons.reviews_sharp': Icons.reviews_sharp,
  'Icons.reviews_rounded': Icons.reviews_rounded,
  'Icons.reviews_outlined': Icons.reviews_outlined,
  'Icons.rice_bowl': Icons.rice_bowl,
  'Icons.rice_bowl_sharp': Icons.rice_bowl_sharp,
  'Icons.rice_bowl_rounded': Icons.rice_bowl_rounded,
  'Icons.rice_bowl_outlined': Icons.rice_bowl_outlined,
  'Icons.ring_volume': Icons.ring_volume,
  'Icons.ring_volume_sharp': Icons.ring_volume_sharp,
  'Icons.ring_volume_rounded': Icons.ring_volume_rounded,
  'Icons.ring_volume_outlined': Icons.ring_volume_outlined,
  'Icons.rocket': Icons.rocket,
  'Icons.rocket_sharp': Icons.rocket_sharp,
  'Icons.rocket_rounded': Icons.rocket_rounded,
  'Icons.rocket_outlined': Icons.rocket_outlined,
  'Icons.rocket_launch': Icons.rocket_launch,
  'Icons.rocket_launch_sharp': Icons.rocket_launch_sharp,
  'Icons.rocket_launch_rounded': Icons.rocket_launch_rounded,
  'Icons.rocket_launch_outlined': Icons.rocket_launch_outlined,
  'Icons.roller_shades': Icons.roller_shades,
  'Icons.roller_shades_sharp': Icons.roller_shades_sharp,
  'Icons.roller_shades_rounded': Icons.roller_shades_rounded,
  'Icons.roller_shades_outlined': Icons.roller_shades_outlined,
  'Icons.roller_shades_closed': Icons.roller_shades_closed,
  'Icons.roller_shades_closed_sharp': Icons.roller_shades_closed_sharp,
  'Icons.roller_shades_closed_rounded': Icons.roller_shades_closed_rounded,
  'Icons.roller_shades_closed_outlined': Icons.roller_shades_closed_outlined,
  'Icons.roller_skating': Icons.roller_skating,
  'Icons.roller_skating_sharp': Icons.roller_skating_sharp,
  'Icons.roller_skating_rounded': Icons.roller_skating_rounded,
  'Icons.roller_skating_outlined': Icons.roller_skating_outlined,
  'Icons.roofing': Icons.roofing,
  'Icons.roofing_sharp': Icons.roofing_sharp,
  'Icons.roofing_rounded': Icons.roofing_rounded,
  'Icons.roofing_outlined': Icons.roofing_outlined,
  'Icons.room': Icons.room,
  'Icons.room_sharp': Icons.room_sharp,
  'Icons.room_rounded': Icons.room_rounded,
  'Icons.room_outlined': Icons.room_outlined,
  'Icons.room_preferences': Icons.room_preferences,
  'Icons.room_preferences_sharp': Icons.room_preferences_sharp,
  'Icons.room_preferences_rounded': Icons.room_preferences_rounded,
  'Icons.room_preferences_outlined': Icons.room_preferences_outlined,
  'Icons.room_service': Icons.room_service,
  'Icons.room_service_sharp': Icons.room_service_sharp,
  'Icons.room_service_rounded': Icons.room_service_rounded,
  'Icons.room_service_outlined': Icons.room_service_outlined,
  'Icons.rotate_90_degrees_ccw': Icons.rotate_90_degrees_ccw,
  'Icons.rotate_90_degrees_ccw_sharp': Icons.rotate_90_degrees_ccw_sharp,
  'Icons.rotate_90_degrees_ccw_rounded': Icons.rotate_90_degrees_ccw_rounded,
  'Icons.rotate_90_degrees_ccw_outlined': Icons.rotate_90_degrees_ccw_outlined,
  'Icons.rotate_90_degrees_cw': Icons.rotate_90_degrees_cw,
  'Icons.rotate_90_degrees_cw_sharp': Icons.rotate_90_degrees_cw_sharp,
  'Icons.rotate_90_degrees_cw_rounded': Icons.rotate_90_degrees_cw_rounded,
  'Icons.rotate_90_degrees_cw_outlined': Icons.rotate_90_degrees_cw_outlined,
  'Icons.rotate_left': Icons.rotate_left,
  'Icons.rotate_left_sharp': Icons.rotate_left_sharp,
  'Icons.rotate_left_rounded': Icons.rotate_left_rounded,
  'Icons.rotate_left_outlined': Icons.rotate_left_outlined,
  'Icons.rotate_right': Icons.rotate_right,
  'Icons.rotate_right_sharp': Icons.rotate_right_sharp,
  'Icons.rotate_right_rounded': Icons.rotate_right_rounded,
  'Icons.rotate_right_outlined': Icons.rotate_right_outlined,
  'Icons.roundabout_left': Icons.roundabout_left,
  'Icons.roundabout_left_sharp': Icons.roundabout_left_sharp,
  'Icons.roundabout_left_rounded': Icons.roundabout_left_rounded,
  'Icons.roundabout_left_outlined': Icons.roundabout_left_outlined,
  'Icons.roundabout_right': Icons.roundabout_right,
  'Icons.roundabout_right_sharp': Icons.roundabout_right_sharp,
  'Icons.roundabout_right_rounded': Icons.roundabout_right_rounded,
  'Icons.roundabout_right_outlined': Icons.roundabout_right_outlined,
  'Icons.rounded_corner': Icons.rounded_corner,
  'Icons.rounded_corner_sharp': Icons.rounded_corner_sharp,
  'Icons.rounded_corner_rounded': Icons.rounded_corner_rounded,
  'Icons.rounded_corner_outlined': Icons.rounded_corner_outlined,
  'Icons.route': Icons.route,
  'Icons.route_sharp': Icons.route_sharp,
  'Icons.route_rounded': Icons.route_rounded,
  'Icons.route_outlined': Icons.route_outlined,
  'Icons.router': Icons.router,
  'Icons.router_sharp': Icons.router_sharp,
  'Icons.router_rounded': Icons.router_rounded,
  'Icons.router_outlined': Icons.router_outlined,
  'Icons.rowing': Icons.rowing,
  'Icons.rowing_sharp': Icons.rowing_sharp,
  'Icons.rowing_rounded': Icons.rowing_rounded,
  'Icons.rowing_outlined': Icons.rowing_outlined,
  'Icons.rss_feed': Icons.rss_feed,
  'Icons.rss_feed_sharp': Icons.rss_feed_sharp,
  'Icons.rss_feed_rounded': Icons.rss_feed_rounded,
  'Icons.rss_feed_outlined': Icons.rss_feed_outlined,
  'Icons.rsvp': Icons.rsvp,
  'Icons.rsvp_sharp': Icons.rsvp_sharp,
  'Icons.rsvp_rounded': Icons.rsvp_rounded,
  'Icons.rsvp_outlined': Icons.rsvp_outlined,
  'Icons.rtt': Icons.rtt,
  'Icons.rtt_sharp': Icons.rtt_sharp,
  'Icons.rtt_rounded': Icons.rtt_rounded,
  'Icons.rtt_outlined': Icons.rtt_outlined,
  'Icons.rule': Icons.rule,
  'Icons.rule_sharp': Icons.rule_sharp,
  'Icons.rule_rounded': Icons.rule_rounded,
  'Icons.rule_outlined': Icons.rule_outlined,
  'Icons.rule_folder': Icons.rule_folder,
  'Icons.rule_folder_sharp': Icons.rule_folder_sharp,
  'Icons.rule_folder_rounded': Icons.rule_folder_rounded,
  'Icons.rule_folder_outlined': Icons.rule_folder_outlined,
  'Icons.run_circle': Icons.run_circle,
  'Icons.run_circle_sharp': Icons.run_circle_sharp,
  'Icons.run_circle_rounded': Icons.run_circle_rounded,
  'Icons.run_circle_outlined': Icons.run_circle_outlined,
  'Icons.running_with_errors': Icons.running_with_errors,
  'Icons.running_with_errors_sharp': Icons.running_with_errors_sharp,
  'Icons.running_with_errors_rounded': Icons.running_with_errors_rounded,
  'Icons.running_with_errors_outlined': Icons.running_with_errors_outlined,
  'Icons.rv_hookup': Icons.rv_hookup,
  'Icons.rv_hookup_sharp': Icons.rv_hookup_sharp,
  'Icons.rv_hookup_rounded': Icons.rv_hookup_rounded,
  'Icons.rv_hookup_outlined': Icons.rv_hookup_outlined,
  'Icons.safety_check': Icons.safety_check,
  'Icons.safety_check_sharp': Icons.safety_check_sharp,
  'Icons.safety_check_rounded': Icons.safety_check_rounded,
  'Icons.safety_check_outlined': Icons.safety_check_outlined,
  'Icons.safety_divider': Icons.safety_divider,
  'Icons.safety_divider_sharp': Icons.safety_divider_sharp,
  'Icons.safety_divider_rounded': Icons.safety_divider_rounded,
  'Icons.safety_divider_outlined': Icons.safety_divider_outlined,
  'Icons.sailing': Icons.sailing,
  'Icons.sailing_sharp': Icons.sailing_sharp,
  'Icons.sailing_rounded': Icons.sailing_rounded,
  'Icons.sailing_outlined': Icons.sailing_outlined,
  'Icons.sanitizer': Icons.sanitizer,
  'Icons.sanitizer_sharp': Icons.sanitizer_sharp,
  'Icons.sanitizer_rounded': Icons.sanitizer_rounded,
  'Icons.sanitizer_outlined': Icons.sanitizer_outlined,
  'Icons.satellite': Icons.satellite,
  'Icons.satellite_sharp': Icons.satellite_sharp,
  'Icons.satellite_rounded': Icons.satellite_rounded,
  'Icons.satellite_outlined': Icons.satellite_outlined,
  'Icons.satellite_alt': Icons.satellite_alt,
  'Icons.satellite_alt_sharp': Icons.satellite_alt_sharp,
  'Icons.satellite_alt_rounded': Icons.satellite_alt_rounded,
  'Icons.satellite_alt_outlined': Icons.satellite_alt_outlined,
  'Icons.save': Icons.save,
  'Icons.save_sharp': Icons.save_sharp,
  'Icons.save_rounded': Icons.save_rounded,
  'Icons.save_outlined': Icons.save_outlined,
  'Icons.save_alt': Icons.save_alt,
  'Icons.save_alt_sharp': Icons.save_alt_sharp,
  'Icons.save_alt_rounded': Icons.save_alt_rounded,
  'Icons.save_alt_outlined': Icons.save_alt_outlined,
  'Icons.save_as': Icons.save_as,
  'Icons.save_as_sharp': Icons.save_as_sharp,
  'Icons.save_as_rounded': Icons.save_as_rounded,
  'Icons.save_as_outlined': Icons.save_as_outlined,
  'Icons.saved_search': Icons.saved_search,
  'Icons.saved_search_sharp': Icons.saved_search_sharp,
  'Icons.saved_search_rounded': Icons.saved_search_rounded,
  'Icons.saved_search_outlined': Icons.saved_search_outlined,
  'Icons.savings': Icons.savings,
  'Icons.savings_sharp': Icons.savings_sharp,
  'Icons.savings_rounded': Icons.savings_rounded,
  'Icons.savings_outlined': Icons.savings_outlined,
  'Icons.scale': Icons.scale,
  'Icons.scale_sharp': Icons.scale_sharp,
  'Icons.scale_rounded': Icons.scale_rounded,
  'Icons.scale_outlined': Icons.scale_outlined,
  'Icons.scanner': Icons.scanner,
  'Icons.scanner_sharp': Icons.scanner_sharp,
  'Icons.scanner_rounded': Icons.scanner_rounded,
  'Icons.scanner_outlined': Icons.scanner_outlined,
  'Icons.scatter_plot': Icons.scatter_plot,
  'Icons.scatter_plot_sharp': Icons.scatter_plot_sharp,
  'Icons.scatter_plot_rounded': Icons.scatter_plot_rounded,
  'Icons.scatter_plot_outlined': Icons.scatter_plot_outlined,
  'Icons.schedule': Icons.schedule,
  'Icons.schedule_sharp': Icons.schedule_sharp,
  'Icons.schedule_rounded': Icons.schedule_rounded,
  'Icons.schedule_outlined': Icons.schedule_outlined,
  'Icons.schedule_send': Icons.schedule_send,
  'Icons.schedule_send_sharp': Icons.schedule_send_sharp,
  'Icons.schedule_send_rounded': Icons.schedule_send_rounded,
  'Icons.schedule_send_outlined': Icons.schedule_send_outlined,
  'Icons.schema': Icons.schema,
  'Icons.schema_sharp': Icons.schema_sharp,
  'Icons.schema_rounded': Icons.schema_rounded,
  'Icons.schema_outlined': Icons.schema_outlined,
  'Icons.school': Icons.school,
  'Icons.school_sharp': Icons.school_sharp,
  'Icons.school_rounded': Icons.school_rounded,
  'Icons.school_outlined': Icons.school_outlined,
  'Icons.science': Icons.science,
  'Icons.science_sharp': Icons.science_sharp,
  'Icons.science_rounded': Icons.science_rounded,
  'Icons.science_outlined': Icons.science_outlined,
  'Icons.score': Icons.score,
  'Icons.score_sharp': Icons.score_sharp,
  'Icons.score_rounded': Icons.score_rounded,
  'Icons.score_outlined': Icons.score_outlined,
  'Icons.scoreboard': Icons.scoreboard,
  'Icons.scoreboard_sharp': Icons.scoreboard_sharp,
  'Icons.scoreboard_rounded': Icons.scoreboard_rounded,
  'Icons.scoreboard_outlined': Icons.scoreboard_outlined,
  'Icons.screen_lock_landscape': Icons.screen_lock_landscape,
  'Icons.screen_lock_landscape_sharp': Icons.screen_lock_landscape_sharp,
  'Icons.screen_lock_landscape_rounded': Icons.screen_lock_landscape_rounded,
  'Icons.screen_lock_landscape_outlined': Icons.screen_lock_landscape_outlined,
  'Icons.screen_lock_portrait': Icons.screen_lock_portrait,
  'Icons.screen_lock_portrait_sharp': Icons.screen_lock_portrait_sharp,
  'Icons.screen_lock_portrait_rounded': Icons.screen_lock_portrait_rounded,
  'Icons.screen_lock_portrait_outlined': Icons.screen_lock_portrait_outlined,
  'Icons.screen_lock_rotation': Icons.screen_lock_rotation,
  'Icons.screen_lock_rotation_sharp': Icons.screen_lock_rotation_sharp,
  'Icons.screen_lock_rotation_rounded': Icons.screen_lock_rotation_rounded,
  'Icons.screen_lock_rotation_outlined': Icons.screen_lock_rotation_outlined,
  'Icons.screen_rotation': Icons.screen_rotation,
  'Icons.screen_rotation_sharp': Icons.screen_rotation_sharp,
  'Icons.screen_rotation_rounded': Icons.screen_rotation_rounded,
  'Icons.screen_rotation_outlined': Icons.screen_rotation_outlined,
  'Icons.screen_rotation_alt': Icons.screen_rotation_alt,
  'Icons.screen_rotation_alt_sharp': Icons.screen_rotation_alt_sharp,
  'Icons.screen_rotation_alt_rounded': Icons.screen_rotation_alt_rounded,
  'Icons.screen_rotation_alt_outlined': Icons.screen_rotation_alt_outlined,
  'Icons.screen_search_desktop': Icons.screen_search_desktop,
  'Icons.screen_search_desktop_sharp': Icons.screen_search_desktop_sharp,
  'Icons.screen_search_desktop_rounded': Icons.screen_search_desktop_rounded,
  'Icons.screen_search_desktop_outlined': Icons.screen_search_desktop_outlined,
  'Icons.screen_share': Icons.screen_share,
  'Icons.screen_share_sharp': Icons.screen_share_sharp,
  'Icons.screen_share_rounded': Icons.screen_share_rounded,
  'Icons.screen_share_outlined': Icons.screen_share_outlined,
  'Icons.screenshot': Icons.screenshot,
  'Icons.screenshot_sharp': Icons.screenshot_sharp,
  'Icons.screenshot_rounded': Icons.screenshot_rounded,
  'Icons.screenshot_outlined': Icons.screenshot_outlined,
  'Icons.screenshot_monitor': Icons.screenshot_monitor,
  'Icons.screenshot_monitor_sharp': Icons.screenshot_monitor_sharp,
  'Icons.screenshot_monitor_rounded': Icons.screenshot_monitor_rounded,
  'Icons.screenshot_monitor_outlined': Icons.screenshot_monitor_outlined,
  'Icons.scuba_diving': Icons.scuba_diving,
  'Icons.scuba_diving_sharp': Icons.scuba_diving_sharp,
  'Icons.scuba_diving_rounded': Icons.scuba_diving_rounded,
  'Icons.scuba_diving_outlined': Icons.scuba_diving_outlined,
  'Icons.sd': Icons.sd,
  'Icons.sd_sharp': Icons.sd_sharp,
  'Icons.sd_rounded': Icons.sd_rounded,
  'Icons.sd_outlined': Icons.sd_outlined,
  'Icons.sd_card': Icons.sd_card,
  'Icons.sd_card_sharp': Icons.sd_card_sharp,
  'Icons.sd_card_rounded': Icons.sd_card_rounded,
  'Icons.sd_card_outlined': Icons.sd_card_outlined,
  'Icons.sd_card_alert': Icons.sd_card_alert,
  'Icons.sd_card_alert_sharp': Icons.sd_card_alert_sharp,
  'Icons.sd_card_alert_rounded': Icons.sd_card_alert_rounded,
  'Icons.sd_card_alert_outlined': Icons.sd_card_alert_outlined,
  'Icons.sd_storage': Icons.sd_storage,
  'Icons.sd_storage_sharp': Icons.sd_storage_sharp,
  'Icons.sd_storage_rounded': Icons.sd_storage_rounded,
  'Icons.sd_storage_outlined': Icons.sd_storage_outlined,
  'Icons.search': Icons.search,
  'Icons.search_sharp': Icons.search_sharp,
  'Icons.search_rounded': Icons.search_rounded,
  'Icons.search_outlined': Icons.search_outlined,
  'Icons.search_off': Icons.search_off,
  'Icons.search_off_sharp': Icons.search_off_sharp,
  'Icons.search_off_rounded': Icons.search_off_rounded,
  'Icons.search_off_outlined': Icons.search_off_outlined,
  'Icons.security': Icons.security,
  'Icons.security_sharp': Icons.security_sharp,
  'Icons.security_rounded': Icons.security_rounded,
  'Icons.security_outlined': Icons.security_outlined,
  'Icons.security_update': Icons.security_update,
  'Icons.security_update_sharp': Icons.security_update_sharp,
  'Icons.security_update_rounded': Icons.security_update_rounded,
  'Icons.security_update_outlined': Icons.security_update_outlined,
  'Icons.security_update_good': Icons.security_update_good,
  'Icons.security_update_good_sharp': Icons.security_update_good_sharp,
  'Icons.security_update_good_rounded': Icons.security_update_good_rounded,
  'Icons.security_update_good_outlined': Icons.security_update_good_outlined,
  'Icons.security_update_warning': Icons.security_update_warning,
  'Icons.security_update_warning_sharp': Icons.security_update_warning_sharp,
  'Icons.security_update_warning_rounded':
      Icons.security_update_warning_rounded,
  'Icons.security_update_warning_outlined':
      Icons.security_update_warning_outlined,
  'Icons.segment': Icons.segment,
  'Icons.segment_sharp': Icons.segment_sharp,
  'Icons.segment_rounded': Icons.segment_rounded,
  'Icons.segment_outlined': Icons.segment_outlined,
  'Icons.select_all': Icons.select_all,
  'Icons.select_all_sharp': Icons.select_all_sharp,
  'Icons.select_all_rounded': Icons.select_all_rounded,
  'Icons.select_all_outlined': Icons.select_all_outlined,
  'Icons.self_improvement': Icons.self_improvement,
  'Icons.self_improvement_sharp': Icons.self_improvement_sharp,
  'Icons.self_improvement_rounded': Icons.self_improvement_rounded,
  'Icons.self_improvement_outlined': Icons.self_improvement_outlined,
  'Icons.sell': Icons.sell,
  'Icons.sell_sharp': Icons.sell_sharp,
  'Icons.sell_rounded': Icons.sell_rounded,
  'Icons.sell_outlined': Icons.sell_outlined,
  'Icons.send': Icons.send,
  'Icons.send_sharp': Icons.send_sharp,
  'Icons.send_rounded': Icons.send_rounded,
  'Icons.send_outlined': Icons.send_outlined,
  'Icons.send_and_archive': Icons.send_and_archive,
  'Icons.send_and_archive_sharp': Icons.send_and_archive_sharp,
  'Icons.send_and_archive_rounded': Icons.send_and_archive_rounded,
  'Icons.send_and_archive_outlined': Icons.send_and_archive_outlined,
  'Icons.send_time_extension': Icons.send_time_extension,
  'Icons.send_time_extension_sharp': Icons.send_time_extension_sharp,
  'Icons.send_time_extension_rounded': Icons.send_time_extension_rounded,
  'Icons.send_time_extension_outlined': Icons.send_time_extension_outlined,
  'Icons.send_to_mobile': Icons.send_to_mobile,
  'Icons.send_to_mobile_sharp': Icons.send_to_mobile_sharp,
  'Icons.send_to_mobile_rounded': Icons.send_to_mobile_rounded,
  'Icons.send_to_mobile_outlined': Icons.send_to_mobile_outlined,
  'Icons.sensor_door': Icons.sensor_door,
  'Icons.sensor_door_sharp': Icons.sensor_door_sharp,
  'Icons.sensor_door_rounded': Icons.sensor_door_rounded,
  'Icons.sensor_door_outlined': Icons.sensor_door_outlined,
  'Icons.sensor_occupied': Icons.sensor_occupied,
  'Icons.sensor_occupied_sharp': Icons.sensor_occupied_sharp,
  'Icons.sensor_occupied_rounded': Icons.sensor_occupied_rounded,
  'Icons.sensor_occupied_outlined': Icons.sensor_occupied_outlined,
  'Icons.sensor_window': Icons.sensor_window,
  'Icons.sensor_window_sharp': Icons.sensor_window_sharp,
  'Icons.sensor_window_rounded': Icons.sensor_window_rounded,
  'Icons.sensor_window_outlined': Icons.sensor_window_outlined,
  'Icons.sensors': Icons.sensors,
  'Icons.sensors_sharp': Icons.sensors_sharp,
  'Icons.sensors_rounded': Icons.sensors_rounded,
  'Icons.sensors_outlined': Icons.sensors_outlined,
  'Icons.sensors_off': Icons.sensors_off,
  'Icons.sensors_off_sharp': Icons.sensors_off_sharp,
  'Icons.sensors_off_rounded': Icons.sensors_off_rounded,
  'Icons.sensors_off_outlined': Icons.sensors_off_outlined,
  'Icons.sentiment_dissatisfied': Icons.sentiment_dissatisfied,
  'Icons.sentiment_dissatisfied_sharp': Icons.sentiment_dissatisfied_sharp,
  'Icons.sentiment_dissatisfied_rounded': Icons.sentiment_dissatisfied_rounded,
  'Icons.sentiment_dissatisfied_outlined':
      Icons.sentiment_dissatisfied_outlined,
  'Icons.sentiment_neutral': Icons.sentiment_neutral,
  'Icons.sentiment_neutral_sharp': Icons.sentiment_neutral_sharp,
  'Icons.sentiment_neutral_rounded': Icons.sentiment_neutral_rounded,
  'Icons.sentiment_neutral_outlined': Icons.sentiment_neutral_outlined,
  'Icons.sentiment_satisfied': Icons.sentiment_satisfied,
  'Icons.sentiment_satisfied_sharp': Icons.sentiment_satisfied_sharp,
  'Icons.sentiment_satisfied_rounded': Icons.sentiment_satisfied_rounded,
  'Icons.sentiment_satisfied_outlined': Icons.sentiment_satisfied_outlined,
  'Icons.sentiment_satisfied_alt': Icons.sentiment_satisfied_alt,
  'Icons.sentiment_satisfied_alt_sharp': Icons.sentiment_satisfied_alt_sharp,
  'Icons.sentiment_satisfied_alt_rounded':
      Icons.sentiment_satisfied_alt_rounded,
  'Icons.sentiment_satisfied_alt_outlined':
      Icons.sentiment_satisfied_alt_outlined,
  'Icons.sentiment_very_dissatisfied': Icons.sentiment_very_dissatisfied,
  'Icons.sentiment_very_dissatisfied_sharp':
      Icons.sentiment_very_dissatisfied_sharp,
  'Icons.sentiment_very_dissatisfied_rounded':
      Icons.sentiment_very_dissatisfied_rounded,
  'Icons.sentiment_very_dissatisfied_outlined':
      Icons.sentiment_very_dissatisfied_outlined,
  'Icons.sentiment_very_satisfied': Icons.sentiment_very_satisfied,
  'Icons.sentiment_very_satisfied_sharp': Icons.sentiment_very_satisfied_sharp,
  'Icons.sentiment_very_satisfied_rounded':
      Icons.sentiment_very_satisfied_rounded,
  'Icons.sentiment_very_satisfied_outlined':
      Icons.sentiment_very_satisfied_outlined,
  'Icons.set_meal': Icons.set_meal,
  'Icons.set_meal_sharp': Icons.set_meal_sharp,
  'Icons.set_meal_rounded': Icons.set_meal_rounded,
  'Icons.set_meal_outlined': Icons.set_meal_outlined,
  'Icons.settings': Icons.settings,
  'Icons.settings_sharp': Icons.settings_sharp,
  'Icons.settings_rounded': Icons.settings_rounded,
  'Icons.settings_outlined': Icons.settings_outlined,
  'Icons.settings_accessibility': Icons.settings_accessibility,
  'Icons.settings_accessibility_sharp': Icons.settings_accessibility_sharp,
  'Icons.settings_accessibility_rounded': Icons.settings_accessibility_rounded,
  'Icons.settings_accessibility_outlined':
      Icons.settings_accessibility_outlined,
  'Icons.settings_applications': Icons.settings_applications,
  'Icons.settings_applications_sharp': Icons.settings_applications_sharp,
  'Icons.settings_applications_rounded': Icons.settings_applications_rounded,
  'Icons.settings_applications_outlined': Icons.settings_applications_outlined,
  'Icons.settings_backup_restore': Icons.settings_backup_restore,
  'Icons.settings_backup_restore_sharp': Icons.settings_backup_restore_sharp,
  'Icons.settings_backup_restore_rounded':
      Icons.settings_backup_restore_rounded,
  'Icons.settings_backup_restore_outlined':
      Icons.settings_backup_restore_outlined,
  'Icons.settings_bluetooth': Icons.settings_bluetooth,
  'Icons.settings_bluetooth_sharp': Icons.settings_bluetooth_sharp,
  'Icons.settings_bluetooth_rounded': Icons.settings_bluetooth_rounded,
  'Icons.settings_bluetooth_outlined': Icons.settings_bluetooth_outlined,
  'Icons.settings_brightness': Icons.settings_brightness,
  'Icons.settings_brightness_sharp': Icons.settings_brightness_sharp,
  'Icons.settings_brightness_rounded': Icons.settings_brightness_rounded,
  'Icons.settings_brightness_outlined': Icons.settings_brightness_outlined,
  'Icons.settings_cell': Icons.settings_cell,
  'Icons.settings_cell_sharp': Icons.settings_cell_sharp,
  'Icons.settings_cell_rounded': Icons.settings_cell_rounded,
  'Icons.settings_cell_outlined': Icons.settings_cell_outlined,
  'Icons.settings_display': Icons.settings_display,
  'Icons.settings_display_sharp': Icons.settings_display_sharp,
  'Icons.settings_display_rounded': Icons.settings_display_rounded,
  'Icons.settings_display_outlined': Icons.settings_display_outlined,
  'Icons.settings_ethernet': Icons.settings_ethernet,
  'Icons.settings_ethernet_sharp': Icons.settings_ethernet_sharp,
  'Icons.settings_ethernet_rounded': Icons.settings_ethernet_rounded,
  'Icons.settings_ethernet_outlined': Icons.settings_ethernet_outlined,
  'Icons.settings_input_antenna': Icons.settings_input_antenna,
  'Icons.settings_input_antenna_sharp': Icons.settings_input_antenna_sharp,
  'Icons.settings_input_antenna_rounded': Icons.settings_input_antenna_rounded,
  'Icons.settings_input_antenna_outlined':
      Icons.settings_input_antenna_outlined,
  'Icons.settings_input_component': Icons.settings_input_component,
  'Icons.settings_input_component_sharp': Icons.settings_input_component_sharp,
  'Icons.settings_input_component_rounded':
      Icons.settings_input_component_rounded,
  'Icons.settings_input_component_outlined':
      Icons.settings_input_component_outlined,
  'Icons.settings_input_composite': Icons.settings_input_composite,
  'Icons.settings_input_composite_sharp': Icons.settings_input_composite_sharp,
  'Icons.settings_input_composite_rounded':
      Icons.settings_input_composite_rounded,
  'Icons.settings_input_composite_outlined':
      Icons.settings_input_composite_outlined,
  'Icons.settings_input_hdmi': Icons.settings_input_hdmi,
  'Icons.settings_input_hdmi_sharp': Icons.settings_input_hdmi_sharp,
  'Icons.settings_input_hdmi_rounded': Icons.settings_input_hdmi_rounded,
  'Icons.settings_input_hdmi_outlined': Icons.settings_input_hdmi_outlined,
  'Icons.settings_input_svideo': Icons.settings_input_svideo,
  'Icons.settings_input_svideo_sharp': Icons.settings_input_svideo_sharp,
  'Icons.settings_input_svideo_rounded': Icons.settings_input_svideo_rounded,
  'Icons.settings_input_svideo_outlined': Icons.settings_input_svideo_outlined,
  'Icons.settings_overscan': Icons.settings_overscan,
  'Icons.settings_overscan_sharp': Icons.settings_overscan_sharp,
  'Icons.settings_overscan_rounded': Icons.settings_overscan_rounded,
  'Icons.settings_overscan_outlined': Icons.settings_overscan_outlined,
  'Icons.settings_phone': Icons.settings_phone,
  'Icons.settings_phone_sharp': Icons.settings_phone_sharp,
  'Icons.settings_phone_rounded': Icons.settings_phone_rounded,
  'Icons.settings_phone_outlined': Icons.settings_phone_outlined,
  'Icons.settings_power': Icons.settings_power,
  'Icons.settings_power_sharp': Icons.settings_power_sharp,
  'Icons.settings_power_rounded': Icons.settings_power_rounded,
  'Icons.settings_power_outlined': Icons.settings_power_outlined,
  'Icons.settings_remote': Icons.settings_remote,
  'Icons.settings_remote_sharp': Icons.settings_remote_sharp,
  'Icons.settings_remote_rounded': Icons.settings_remote_rounded,
  'Icons.settings_remote_outlined': Icons.settings_remote_outlined,
  'Icons.settings_suggest': Icons.settings_suggest,
  'Icons.settings_suggest_sharp': Icons.settings_suggest_sharp,
  'Icons.settings_suggest_rounded': Icons.settings_suggest_rounded,
  'Icons.settings_suggest_outlined': Icons.settings_suggest_outlined,
  'Icons.settings_system_daydream': Icons.settings_system_daydream,
  'Icons.settings_system_daydream_sharp': Icons.settings_system_daydream_sharp,
  'Icons.settings_system_daydream_rounded':
      Icons.settings_system_daydream_rounded,
  'Icons.settings_system_daydream_outlined':
      Icons.settings_system_daydream_outlined,
  'Icons.settings_voice': Icons.settings_voice,
  'Icons.settings_voice_sharp': Icons.settings_voice_sharp,
  'Icons.settings_voice_rounded': Icons.settings_voice_rounded,
  'Icons.settings_voice_outlined': Icons.settings_voice_outlined,
  'Icons.severe_cold': Icons.severe_cold,
  'Icons.severe_cold_sharp': Icons.severe_cold_sharp,
  'Icons.severe_cold_rounded': Icons.severe_cold_rounded,
  'Icons.severe_cold_outlined': Icons.severe_cold_outlined,
  'Icons.share': Icons.share,
  'Icons.share_sharp': Icons.share_sharp,
  'Icons.share_rounded': Icons.share_rounded,
  'Icons.share_outlined': Icons.share_outlined,
  'Icons.share_arrival_time': Icons.share_arrival_time,
  'Icons.share_arrival_time_sharp': Icons.share_arrival_time_sharp,
  'Icons.share_arrival_time_rounded': Icons.share_arrival_time_rounded,
  'Icons.share_arrival_time_outlined': Icons.share_arrival_time_outlined,
  'Icons.share_location': Icons.share_location,
  'Icons.share_location_sharp': Icons.share_location_sharp,
  'Icons.share_location_rounded': Icons.share_location_rounded,
  'Icons.share_location_outlined': Icons.share_location_outlined,
  'Icons.shield': Icons.shield,
  'Icons.shield_sharp': Icons.shield_sharp,
  'Icons.shield_rounded': Icons.shield_rounded,
  'Icons.shield_outlined': Icons.shield_outlined,
  'Icons.shield_moon': Icons.shield_moon,
  'Icons.shield_moon_sharp': Icons.shield_moon_sharp,
  'Icons.shield_moon_rounded': Icons.shield_moon_rounded,
  'Icons.shield_moon_outlined': Icons.shield_moon_outlined,
  'Icons.shop': Icons.shop,
  'Icons.shop_sharp': Icons.shop_sharp,
  'Icons.shop_rounded': Icons.shop_rounded,
  'Icons.shop_outlined': Icons.shop_outlined,
  'Icons.shop_2': Icons.shop_2,
  'Icons.shop_2_sharp': Icons.shop_2_sharp,
  'Icons.shop_2_rounded': Icons.shop_2_rounded,
  'Icons.shop_2_outlined': Icons.shop_2_outlined,
  'Icons.shop_two': Icons.shop_two,
  'Icons.shop_two_sharp': Icons.shop_two_sharp,
  'Icons.shop_two_rounded': Icons.shop_two_rounded,
  'Icons.shop_two_outlined': Icons.shop_two_outlined,
  'Icons.shopify': Icons.shopify,
  'Icons.shopify_sharp': Icons.shopify_sharp,
  'Icons.shopify_rounded': Icons.shopify_rounded,
  'Icons.shopify_outlined': Icons.shopify_outlined,
  'Icons.shopping_bag': Icons.shopping_bag,
  'Icons.shopping_bag_sharp': Icons.shopping_bag_sharp,
  'Icons.shopping_bag_rounded': Icons.shopping_bag_rounded,
  'Icons.shopping_bag_outlined': Icons.shopping_bag_outlined,
  'Icons.shopping_basket': Icons.shopping_basket,
  'Icons.shopping_basket_sharp': Icons.shopping_basket_sharp,
  'Icons.shopping_basket_rounded': Icons.shopping_basket_rounded,
  'Icons.shopping_basket_outlined': Icons.shopping_basket_outlined,
  'Icons.shopping_cart': Icons.shopping_cart,
  'Icons.shopping_cart_sharp': Icons.shopping_cart_sharp,
  'Icons.shopping_cart_rounded': Icons.shopping_cart_rounded,
  'Icons.shopping_cart_outlined': Icons.shopping_cart_outlined,
  'Icons.shopping_cart_checkout': Icons.shopping_cart_checkout,
  'Icons.shopping_cart_checkout_sharp': Icons.shopping_cart_checkout_sharp,
  'Icons.shopping_cart_checkout_rounded': Icons.shopping_cart_checkout_rounded,
  'Icons.shopping_cart_checkout_outlined':
      Icons.shopping_cart_checkout_outlined,
  'Icons.short_text': Icons.short_text,
  'Icons.short_text_sharp': Icons.short_text_sharp,
  'Icons.short_text_rounded': Icons.short_text_rounded,
  'Icons.short_text_outlined': Icons.short_text_outlined,
  'Icons.shortcut': Icons.shortcut,
  'Icons.shortcut_sharp': Icons.shortcut_sharp,
  'Icons.shortcut_rounded': Icons.shortcut_rounded,
  'Icons.shortcut_outlined': Icons.shortcut_outlined,
  'Icons.show_chart': Icons.show_chart,
  'Icons.show_chart_sharp': Icons.show_chart_sharp,
  'Icons.show_chart_rounded': Icons.show_chart_rounded,
  'Icons.show_chart_outlined': Icons.show_chart_outlined,
  'Icons.shower': Icons.shower,
  'Icons.shower_sharp': Icons.shower_sharp,
  'Icons.shower_rounded': Icons.shower_rounded,
  'Icons.shower_outlined': Icons.shower_outlined,
  'Icons.shuffle': Icons.shuffle,
  'Icons.shuffle_sharp': Icons.shuffle_sharp,
  'Icons.shuffle_rounded': Icons.shuffle_rounded,
  'Icons.shuffle_outlined': Icons.shuffle_outlined,
  'Icons.shuffle_on': Icons.shuffle_on,
  'Icons.shuffle_on_sharp': Icons.shuffle_on_sharp,
  'Icons.shuffle_on_rounded': Icons.shuffle_on_rounded,
  'Icons.shuffle_on_outlined': Icons.shuffle_on_outlined,
  'Icons.shutter_speed': Icons.shutter_speed,
  'Icons.shutter_speed_sharp': Icons.shutter_speed_sharp,
  'Icons.shutter_speed_rounded': Icons.shutter_speed_rounded,
  'Icons.shutter_speed_outlined': Icons.shutter_speed_outlined,
  'Icons.sick': Icons.sick,
  'Icons.sick_sharp': Icons.sick_sharp,
  'Icons.sick_rounded': Icons.sick_rounded,
  'Icons.sick_outlined': Icons.sick_outlined,
  'Icons.sign_language': Icons.sign_language,
  'Icons.sign_language_sharp': Icons.sign_language_sharp,
  'Icons.sign_language_rounded': Icons.sign_language_rounded,
  'Icons.sign_language_outlined': Icons.sign_language_outlined,
  'Icons.signal_cellular_0_bar': Icons.signal_cellular_0_bar,
  'Icons.signal_cellular_0_bar_sharp': Icons.signal_cellular_0_bar_sharp,
  'Icons.signal_cellular_0_bar_rounded': Icons.signal_cellular_0_bar_rounded,
  'Icons.signal_cellular_0_bar_outlined': Icons.signal_cellular_0_bar_outlined,
  'Icons.signal_cellular_4_bar': Icons.signal_cellular_4_bar,
  'Icons.signal_cellular_4_bar_sharp': Icons.signal_cellular_4_bar_sharp,
  'Icons.signal_cellular_4_bar_rounded': Icons.signal_cellular_4_bar_rounded,
  'Icons.signal_cellular_4_bar_outlined': Icons.signal_cellular_4_bar_outlined,
  'Icons.signal_cellular_alt': Icons.signal_cellular_alt,
  'Icons.signal_cellular_alt_sharp': Icons.signal_cellular_alt_sharp,
  'Icons.signal_cellular_alt_rounded': Icons.signal_cellular_alt_rounded,
  'Icons.signal_cellular_alt_outlined': Icons.signal_cellular_alt_outlined,
  'Icons.signal_cellular_alt_1_bar': Icons.signal_cellular_alt_1_bar,
  'Icons.signal_cellular_alt_1_bar_sharp':
      Icons.signal_cellular_alt_1_bar_sharp,
  'Icons.signal_cellular_alt_1_bar_rounded':
      Icons.signal_cellular_alt_1_bar_rounded,
  'Icons.signal_cellular_alt_1_bar_outlined':
      Icons.signal_cellular_alt_1_bar_outlined,
  'Icons.signal_cellular_alt_2_bar': Icons.signal_cellular_alt_2_bar,
  'Icons.signal_cellular_alt_2_bar_sharp':
      Icons.signal_cellular_alt_2_bar_sharp,
  'Icons.signal_cellular_alt_2_bar_rounded':
      Icons.signal_cellular_alt_2_bar_rounded,
  'Icons.signal_cellular_alt_2_bar_outlined':
      Icons.signal_cellular_alt_2_bar_outlined,
  'Icons.signal_cellular_connected_no_internet_0_bar':
      Icons.signal_cellular_connected_no_internet_0_bar,
  'Icons.signal_cellular_connected_no_internet_0_bar_sharp':
      Icons.signal_cellular_connected_no_internet_0_bar_sharp,
  'Icons.signal_cellular_connected_no_internet_0_bar_rounded':
      Icons.signal_cellular_connected_no_internet_0_bar_rounded,
  'Icons.signal_cellular_connected_no_internet_0_bar_outlined':
      Icons.signal_cellular_connected_no_internet_0_bar_outlined,
  'Icons.signal_cellular_connected_no_internet_4_bar':
      Icons.signal_cellular_connected_no_internet_4_bar,
  'Icons.signal_cellular_connected_no_internet_4_bar_sharp':
      Icons.signal_cellular_connected_no_internet_4_bar_sharp,
  'Icons.signal_cellular_connected_no_internet_4_bar_rounded':
      Icons.signal_cellular_connected_no_internet_4_bar_rounded,
  'Icons.signal_cellular_connected_no_internet_4_bar_outlined':
      Icons.signal_cellular_connected_no_internet_4_bar_outlined,
  'Icons.signal_cellular_no_sim': Icons.signal_cellular_no_sim,
  'Icons.signal_cellular_no_sim_sharp': Icons.signal_cellular_no_sim_sharp,
  'Icons.signal_cellular_no_sim_rounded': Icons.signal_cellular_no_sim_rounded,
  'Icons.signal_cellular_no_sim_outlined':
      Icons.signal_cellular_no_sim_outlined,
  'Icons.signal_cellular_nodata': Icons.signal_cellular_nodata,
  'Icons.signal_cellular_nodata_sharp': Icons.signal_cellular_nodata_sharp,
  'Icons.signal_cellular_nodata_rounded': Icons.signal_cellular_nodata_rounded,
  'Icons.signal_cellular_nodata_outlined':
      Icons.signal_cellular_nodata_outlined,
  'Icons.signal_cellular_null': Icons.signal_cellular_null,
  'Icons.signal_cellular_null_sharp': Icons.signal_cellular_null_sharp,
  'Icons.signal_cellular_null_rounded': Icons.signal_cellular_null_rounded,
  'Icons.signal_cellular_null_outlined': Icons.signal_cellular_null_outlined,
  'Icons.signal_cellular_off': Icons.signal_cellular_off,
  'Icons.signal_cellular_off_sharp': Icons.signal_cellular_off_sharp,
  'Icons.signal_cellular_off_rounded': Icons.signal_cellular_off_rounded,
  'Icons.signal_cellular_off_outlined': Icons.signal_cellular_off_outlined,
  'Icons.signal_wifi_0_bar': Icons.signal_wifi_0_bar,
  'Icons.signal_wifi_0_bar_sharp': Icons.signal_wifi_0_bar_sharp,
  'Icons.signal_wifi_0_bar_rounded': Icons.signal_wifi_0_bar_rounded,
  'Icons.signal_wifi_0_bar_outlined': Icons.signal_wifi_0_bar_outlined,
  'Icons.signal_wifi_4_bar': Icons.signal_wifi_4_bar,
  'Icons.signal_wifi_4_bar_sharp': Icons.signal_wifi_4_bar_sharp,
  'Icons.signal_wifi_4_bar_rounded': Icons.signal_wifi_4_bar_rounded,
  'Icons.signal_wifi_4_bar_outlined': Icons.signal_wifi_4_bar_outlined,
  'Icons.signal_wifi_4_bar_lock': Icons.signal_wifi_4_bar_lock,
  'Icons.signal_wifi_4_bar_lock_sharp': Icons.signal_wifi_4_bar_lock_sharp,
  'Icons.signal_wifi_4_bar_lock_rounded': Icons.signal_wifi_4_bar_lock_rounded,
  'Icons.signal_wifi_4_bar_lock_outlined':
      Icons.signal_wifi_4_bar_lock_outlined,
  'Icons.signal_wifi_bad': Icons.signal_wifi_bad,
  'Icons.signal_wifi_bad_sharp': Icons.signal_wifi_bad_sharp,
  'Icons.signal_wifi_bad_rounded': Icons.signal_wifi_bad_rounded,
  'Icons.signal_wifi_bad_outlined': Icons.signal_wifi_bad_outlined,
  'Icons.signal_wifi_connected_no_internet_4':
      Icons.signal_wifi_connected_no_internet_4,
  'Icons.signal_wifi_connected_no_internet_4_sharp':
      Icons.signal_wifi_connected_no_internet_4_sharp,
  'Icons.signal_wifi_connected_no_internet_4_rounded':
      Icons.signal_wifi_connected_no_internet_4_rounded,
  'Icons.signal_wifi_connected_no_internet_4_outlined':
      Icons.signal_wifi_connected_no_internet_4_outlined,
  'Icons.signal_wifi_off': Icons.signal_wifi_off,
  'Icons.signal_wifi_off_sharp': Icons.signal_wifi_off_sharp,
  'Icons.signal_wifi_off_rounded': Icons.signal_wifi_off_rounded,
  'Icons.signal_wifi_off_outlined': Icons.signal_wifi_off_outlined,
  'Icons.signal_wifi_statusbar_4_bar': Icons.signal_wifi_statusbar_4_bar,
  'Icons.signal_wifi_statusbar_4_bar_sharp':
      Icons.signal_wifi_statusbar_4_bar_sharp,
  'Icons.signal_wifi_statusbar_4_bar_rounded':
      Icons.signal_wifi_statusbar_4_bar_rounded,
  'Icons.signal_wifi_statusbar_4_bar_outlined':
      Icons.signal_wifi_statusbar_4_bar_outlined,
  'Icons.signal_wifi_statusbar_connected_no_internet_4':
      Icons.signal_wifi_statusbar_connected_no_internet_4,
  'Icons.signal_wifi_statusbar_connected_no_internet_4_sharp':
      Icons.signal_wifi_statusbar_connected_no_internet_4_sharp,
  'Icons.signal_wifi_statusbar_connected_no_internet_4_rounded':
      Icons.signal_wifi_statusbar_connected_no_internet_4_rounded,
  'Icons.signal_wifi_statusbar_connected_no_internet_4_outlined':
      Icons.signal_wifi_statusbar_connected_no_internet_4_outlined,
  'Icons.signal_wifi_statusbar_null': Icons.signal_wifi_statusbar_null,
  'Icons.signal_wifi_statusbar_null_sharp':
      Icons.signal_wifi_statusbar_null_sharp,
  'Icons.signal_wifi_statusbar_null_rounded':
      Icons.signal_wifi_statusbar_null_rounded,
  'Icons.signal_wifi_statusbar_null_outlined':
      Icons.signal_wifi_statusbar_null_outlined,
  'Icons.signpost': Icons.signpost,
  'Icons.signpost_sharp': Icons.signpost_sharp,
  'Icons.signpost_rounded': Icons.signpost_rounded,
  'Icons.signpost_outlined': Icons.signpost_outlined,
  'Icons.sim_card': Icons.sim_card,
  'Icons.sim_card_sharp': Icons.sim_card_sharp,
  'Icons.sim_card_rounded': Icons.sim_card_rounded,
  'Icons.sim_card_outlined': Icons.sim_card_outlined,
  'Icons.sim_card_alert': Icons.sim_card_alert,
  'Icons.sim_card_alert_sharp': Icons.sim_card_alert_sharp,
  'Icons.sim_card_alert_rounded': Icons.sim_card_alert_rounded,
  'Icons.sim_card_alert_outlined': Icons.sim_card_alert_outlined,
  'Icons.sim_card_download': Icons.sim_card_download,
  'Icons.sim_card_download_sharp': Icons.sim_card_download_sharp,
  'Icons.sim_card_download_rounded': Icons.sim_card_download_rounded,
  'Icons.sim_card_download_outlined': Icons.sim_card_download_outlined,
  'Icons.single_bed': Icons.single_bed,
  'Icons.single_bed_sharp': Icons.single_bed_sharp,
  'Icons.single_bed_rounded': Icons.single_bed_rounded,
  'Icons.single_bed_outlined': Icons.single_bed_outlined,
  'Icons.sip': Icons.sip,
  'Icons.sip_sharp': Icons.sip_sharp,
  'Icons.sip_rounded': Icons.sip_rounded,
  'Icons.sip_outlined': Icons.sip_outlined,
  'Icons.skateboarding': Icons.skateboarding,
  'Icons.skateboarding_sharp': Icons.skateboarding_sharp,
  'Icons.skateboarding_rounded': Icons.skateboarding_rounded,
  'Icons.skateboarding_outlined': Icons.skateboarding_outlined,
  'Icons.skip_next': Icons.skip_next,
  'Icons.skip_next_sharp': Icons.skip_next_sharp,
  'Icons.skip_next_rounded': Icons.skip_next_rounded,
  'Icons.skip_next_outlined': Icons.skip_next_outlined,
  'Icons.skip_previous': Icons.skip_previous,
  'Icons.skip_previous_sharp': Icons.skip_previous_sharp,
  'Icons.skip_previous_rounded': Icons.skip_previous_rounded,
  'Icons.skip_previous_outlined': Icons.skip_previous_outlined,
  'Icons.sledding': Icons.sledding,
  'Icons.sledding_sharp': Icons.sledding_sharp,
  'Icons.sledding_rounded': Icons.sledding_rounded,
  'Icons.sledding_outlined': Icons.sledding_outlined,
  'Icons.slideshow': Icons.slideshow,
  'Icons.slideshow_sharp': Icons.slideshow_sharp,
  'Icons.slideshow_rounded': Icons.slideshow_rounded,
  'Icons.slideshow_outlined': Icons.slideshow_outlined,
  'Icons.slow_motion_video': Icons.slow_motion_video,
  'Icons.slow_motion_video_sharp': Icons.slow_motion_video_sharp,
  'Icons.slow_motion_video_rounded': Icons.slow_motion_video_rounded,
  'Icons.slow_motion_video_outlined': Icons.slow_motion_video_outlined,
  'Icons.smart_button': Icons.smart_button,
  'Icons.smart_button_sharp': Icons.smart_button_sharp,
  'Icons.smart_button_rounded': Icons.smart_button_rounded,
  'Icons.smart_button_outlined': Icons.smart_button_outlined,
  'Icons.smart_display': Icons.smart_display,
  'Icons.smart_display_sharp': Icons.smart_display_sharp,
  'Icons.smart_display_rounded': Icons.smart_display_rounded,
  'Icons.smart_display_outlined': Icons.smart_display_outlined,
  'Icons.smart_screen': Icons.smart_screen,
  'Icons.smart_screen_sharp': Icons.smart_screen_sharp,
  'Icons.smart_screen_rounded': Icons.smart_screen_rounded,
  'Icons.smart_screen_outlined': Icons.smart_screen_outlined,
  'Icons.smart_toy': Icons.smart_toy,
  'Icons.smart_toy_sharp': Icons.smart_toy_sharp,
  'Icons.smart_toy_rounded': Icons.smart_toy_rounded,
  'Icons.smart_toy_outlined': Icons.smart_toy_outlined,
  'Icons.smartphone': Icons.smartphone,
  'Icons.smartphone_sharp': Icons.smartphone_sharp,
  'Icons.smartphone_rounded': Icons.smartphone_rounded,
  'Icons.smartphone_outlined': Icons.smartphone_outlined,
  'Icons.smoke_free': Icons.smoke_free,
  'Icons.smoke_free_sharp': Icons.smoke_free_sharp,
  'Icons.smoke_free_rounded': Icons.smoke_free_rounded,
  'Icons.smoke_free_outlined': Icons.smoke_free_outlined,
  'Icons.smoking_rooms': Icons.smoking_rooms,
  'Icons.smoking_rooms_sharp': Icons.smoking_rooms_sharp,
  'Icons.smoking_rooms_rounded': Icons.smoking_rooms_rounded,
  'Icons.smoking_rooms_outlined': Icons.smoking_rooms_outlined,
  'Icons.sms': Icons.sms,
  'Icons.sms_sharp': Icons.sms_sharp,
  'Icons.sms_rounded': Icons.sms_rounded,
  'Icons.sms_outlined': Icons.sms_outlined,
  'Icons.sms_failed': Icons.sms_failed,
  'Icons.sms_failed_sharp': Icons.sms_failed_sharp,
  'Icons.sms_failed_rounded': Icons.sms_failed_rounded,
  'Icons.sms_failed_outlined': Icons.sms_failed_outlined,
  'Icons.snapchat': Icons.snapchat,
  'Icons.snapchat_sharp': Icons.snapchat_sharp,
  'Icons.snapchat_rounded': Icons.snapchat_rounded,
  'Icons.snapchat_outlined': Icons.snapchat_outlined,
  'Icons.snippet_folder': Icons.snippet_folder,
  'Icons.snippet_folder_sharp': Icons.snippet_folder_sharp,
  'Icons.snippet_folder_rounded': Icons.snippet_folder_rounded,
  'Icons.snippet_folder_outlined': Icons.snippet_folder_outlined,
  'Icons.snooze': Icons.snooze,
  'Icons.snooze_sharp': Icons.snooze_sharp,
  'Icons.snooze_rounded': Icons.snooze_rounded,
  'Icons.snooze_outlined': Icons.snooze_outlined,
  'Icons.snowboarding': Icons.snowboarding,
  'Icons.snowboarding_sharp': Icons.snowboarding_sharp,
  'Icons.snowboarding_rounded': Icons.snowboarding_rounded,
  'Icons.snowboarding_outlined': Icons.snowboarding_outlined,
  'Icons.snowing': Icons.snowing,
  'Icons.snowmobile': Icons.snowmobile,
  'Icons.snowmobile_sharp': Icons.snowmobile_sharp,
  'Icons.snowmobile_rounded': Icons.snowmobile_rounded,
  'Icons.snowmobile_outlined': Icons.snowmobile_outlined,
  'Icons.snowshoeing': Icons.snowshoeing,
  'Icons.snowshoeing_sharp': Icons.snowshoeing_sharp,
  'Icons.snowshoeing_rounded': Icons.snowshoeing_rounded,
  'Icons.snowshoeing_outlined': Icons.snowshoeing_outlined,
  'Icons.soap': Icons.soap,
  'Icons.soap_sharp': Icons.soap_sharp,
  'Icons.soap_rounded': Icons.soap_rounded,
  'Icons.soap_outlined': Icons.soap_outlined,
  'Icons.social_distance': Icons.social_distance,
  'Icons.social_distance_sharp': Icons.social_distance_sharp,
  'Icons.social_distance_rounded': Icons.social_distance_rounded,
  'Icons.social_distance_outlined': Icons.social_distance_outlined,
  'Icons.solar_power': Icons.solar_power,
  'Icons.solar_power_sharp': Icons.solar_power_sharp,
  'Icons.solar_power_rounded': Icons.solar_power_rounded,
  'Icons.solar_power_outlined': Icons.solar_power_outlined,
  'Icons.sort': Icons.sort,
  'Icons.sort_sharp': Icons.sort_sharp,
  'Icons.sort_rounded': Icons.sort_rounded,
  'Icons.sort_outlined': Icons.sort_outlined,
  'Icons.sort_by_alpha': Icons.sort_by_alpha,
  'Icons.sort_by_alpha_sharp': Icons.sort_by_alpha_sharp,
  'Icons.sort_by_alpha_rounded': Icons.sort_by_alpha_rounded,
  'Icons.sort_by_alpha_outlined': Icons.sort_by_alpha_outlined,
  'Icons.sos': Icons.sos,
  'Icons.sos_sharp': Icons.sos_sharp,
  'Icons.sos_rounded': Icons.sos_rounded,
  'Icons.sos_outlined': Icons.sos_outlined,
  'Icons.soup_kitchen': Icons.soup_kitchen,
  'Icons.soup_kitchen_sharp': Icons.soup_kitchen_sharp,
  'Icons.soup_kitchen_rounded': Icons.soup_kitchen_rounded,
  'Icons.soup_kitchen_outlined': Icons.soup_kitchen_outlined,
  'Icons.source': Icons.source,
  'Icons.source_sharp': Icons.source_sharp,
  'Icons.source_rounded': Icons.source_rounded,
  'Icons.source_outlined': Icons.source_outlined,
  'Icons.south': Icons.south,
  'Icons.south_sharp': Icons.south_sharp,
  'Icons.south_rounded': Icons.south_rounded,
  'Icons.south_outlined': Icons.south_outlined,
  'Icons.south_america': Icons.south_america,
  'Icons.south_america_sharp': Icons.south_america_sharp,
  'Icons.south_america_rounded': Icons.south_america_rounded,
  'Icons.south_america_outlined': Icons.south_america_outlined,
  'Icons.south_east': Icons.south_east,
  'Icons.south_east_sharp': Icons.south_east_sharp,
  'Icons.south_east_rounded': Icons.south_east_rounded,
  'Icons.south_east_outlined': Icons.south_east_outlined,
  'Icons.south_west': Icons.south_west,
  'Icons.south_west_sharp': Icons.south_west_sharp,
  'Icons.south_west_rounded': Icons.south_west_rounded,
  'Icons.south_west_outlined': Icons.south_west_outlined,
  'Icons.spa': Icons.spa,
  'Icons.spa_sharp': Icons.spa_sharp,
  'Icons.spa_rounded': Icons.spa_rounded,
  'Icons.spa_outlined': Icons.spa_outlined,
  'Icons.space_bar': Icons.space_bar,
  'Icons.space_bar_sharp': Icons.space_bar_sharp,
  'Icons.space_bar_rounded': Icons.space_bar_rounded,
  'Icons.space_bar_outlined': Icons.space_bar_outlined,
  'Icons.space_dashboard': Icons.space_dashboard,
  'Icons.space_dashboard_sharp': Icons.space_dashboard_sharp,
  'Icons.space_dashboard_rounded': Icons.space_dashboard_rounded,
  'Icons.space_dashboard_outlined': Icons.space_dashboard_outlined,
  'Icons.spatial_audio': Icons.spatial_audio,
  'Icons.spatial_audio_sharp': Icons.spatial_audio_sharp,
  'Icons.spatial_audio_rounded': Icons.spatial_audio_rounded,
  'Icons.spatial_audio_outlined': Icons.spatial_audio_outlined,
  'Icons.spatial_audio_off': Icons.spatial_audio_off,
  'Icons.spatial_audio_off_sharp': Icons.spatial_audio_off_sharp,
  'Icons.spatial_audio_off_rounded': Icons.spatial_audio_off_rounded,
  'Icons.spatial_audio_off_outlined': Icons.spatial_audio_off_outlined,
  'Icons.spatial_tracking': Icons.spatial_tracking,
  'Icons.spatial_tracking_sharp': Icons.spatial_tracking_sharp,
  'Icons.spatial_tracking_rounded': Icons.spatial_tracking_rounded,
  'Icons.spatial_tracking_outlined': Icons.spatial_tracking_outlined,
  'Icons.speaker': Icons.speaker,
  'Icons.speaker_sharp': Icons.speaker_sharp,
  'Icons.speaker_rounded': Icons.speaker_rounded,
  'Icons.speaker_outlined': Icons.speaker_outlined,
  'Icons.speaker_group': Icons.speaker_group,
  'Icons.speaker_group_sharp': Icons.speaker_group_sharp,
  'Icons.speaker_group_rounded': Icons.speaker_group_rounded,
  'Icons.speaker_group_outlined': Icons.speaker_group_outlined,
  'Icons.speaker_notes': Icons.speaker_notes,
  'Icons.speaker_notes_sharp': Icons.speaker_notes_sharp,
  'Icons.speaker_notes_rounded': Icons.speaker_notes_rounded,
  'Icons.speaker_notes_outlined': Icons.speaker_notes_outlined,
  'Icons.speaker_notes_off': Icons.speaker_notes_off,
  'Icons.speaker_notes_off_sharp': Icons.speaker_notes_off_sharp,
  'Icons.speaker_notes_off_rounded': Icons.speaker_notes_off_rounded,
  'Icons.speaker_notes_off_outlined': Icons.speaker_notes_off_outlined,
  'Icons.speaker_phone': Icons.speaker_phone,
  'Icons.speaker_phone_sharp': Icons.speaker_phone_sharp,
  'Icons.speaker_phone_rounded': Icons.speaker_phone_rounded,
  'Icons.speaker_phone_outlined': Icons.speaker_phone_outlined,
  'Icons.speed': Icons.speed,
  'Icons.speed_sharp': Icons.speed_sharp,
  'Icons.speed_rounded': Icons.speed_rounded,
  'Icons.speed_outlined': Icons.speed_outlined,
  'Icons.spellcheck': Icons.spellcheck,
  'Icons.spellcheck_sharp': Icons.spellcheck_sharp,
  'Icons.spellcheck_rounded': Icons.spellcheck_rounded,
  'Icons.spellcheck_outlined': Icons.spellcheck_outlined,
  'Icons.splitscreen': Icons.splitscreen,
  'Icons.splitscreen_sharp': Icons.splitscreen_sharp,
  'Icons.splitscreen_rounded': Icons.splitscreen_rounded,
  'Icons.splitscreen_outlined': Icons.splitscreen_outlined,
  'Icons.spoke': Icons.spoke,
  'Icons.spoke_sharp': Icons.spoke_sharp,
  'Icons.spoke_rounded': Icons.spoke_rounded,
  'Icons.spoke_outlined': Icons.spoke_outlined,
  'Icons.sports': Icons.sports,
  'Icons.sports_sharp': Icons.sports_sharp,
  'Icons.sports_rounded': Icons.sports_rounded,
  'Icons.sports_outlined': Icons.sports_outlined,
  'Icons.sports_bar': Icons.sports_bar,
  'Icons.sports_bar_sharp': Icons.sports_bar_sharp,
  'Icons.sports_bar_rounded': Icons.sports_bar_rounded,
  'Icons.sports_bar_outlined': Icons.sports_bar_outlined,
  'Icons.sports_baseball': Icons.sports_baseball,
  'Icons.sports_baseball_sharp': Icons.sports_baseball_sharp,
  'Icons.sports_baseball_rounded': Icons.sports_baseball_rounded,
  'Icons.sports_baseball_outlined': Icons.sports_baseball_outlined,
  'Icons.sports_basketball': Icons.sports_basketball,
  'Icons.sports_basketball_sharp': Icons.sports_basketball_sharp,
  'Icons.sports_basketball_rounded': Icons.sports_basketball_rounded,
  'Icons.sports_basketball_outlined': Icons.sports_basketball_outlined,
  'Icons.sports_cricket': Icons.sports_cricket,
  'Icons.sports_cricket_sharp': Icons.sports_cricket_sharp,
  'Icons.sports_cricket_rounded': Icons.sports_cricket_rounded,
  'Icons.sports_cricket_outlined': Icons.sports_cricket_outlined,
  'Icons.sports_esports': Icons.sports_esports,
  'Icons.sports_esports_sharp': Icons.sports_esports_sharp,
  'Icons.sports_esports_rounded': Icons.sports_esports_rounded,
  'Icons.sports_esports_outlined': Icons.sports_esports_outlined,
  'Icons.sports_football': Icons.sports_football,
  'Icons.sports_football_sharp': Icons.sports_football_sharp,
  'Icons.sports_football_rounded': Icons.sports_football_rounded,
  'Icons.sports_football_outlined': Icons.sports_football_outlined,
  'Icons.sports_golf': Icons.sports_golf,
  'Icons.sports_golf_sharp': Icons.sports_golf_sharp,
  'Icons.sports_golf_rounded': Icons.sports_golf_rounded,
  'Icons.sports_golf_outlined': Icons.sports_golf_outlined,
  'Icons.sports_gymnastics': Icons.sports_gymnastics,
  'Icons.sports_gymnastics_sharp': Icons.sports_gymnastics_sharp,
  'Icons.sports_gymnastics_rounded': Icons.sports_gymnastics_rounded,
  'Icons.sports_gymnastics_outlined': Icons.sports_gymnastics_outlined,
  'Icons.sports_handball': Icons.sports_handball,
  'Icons.sports_handball_sharp': Icons.sports_handball_sharp,
  'Icons.sports_handball_rounded': Icons.sports_handball_rounded,
  'Icons.sports_handball_outlined': Icons.sports_handball_outlined,
  'Icons.sports_hockey': Icons.sports_hockey,
  'Icons.sports_hockey_sharp': Icons.sports_hockey_sharp,
  'Icons.sports_hockey_rounded': Icons.sports_hockey_rounded,
  'Icons.sports_hockey_outlined': Icons.sports_hockey_outlined,
  'Icons.sports_kabaddi': Icons.sports_kabaddi,
  'Icons.sports_kabaddi_sharp': Icons.sports_kabaddi_sharp,
  'Icons.sports_kabaddi_rounded': Icons.sports_kabaddi_rounded,
  'Icons.sports_kabaddi_outlined': Icons.sports_kabaddi_outlined,
  'Icons.sports_martial_arts': Icons.sports_martial_arts,
  'Icons.sports_martial_arts_sharp': Icons.sports_martial_arts_sharp,
  'Icons.sports_martial_arts_rounded': Icons.sports_martial_arts_rounded,
  'Icons.sports_martial_arts_outlined': Icons.sports_martial_arts_outlined,
  'Icons.sports_mma': Icons.sports_mma,
  'Icons.sports_mma_sharp': Icons.sports_mma_sharp,
  'Icons.sports_mma_rounded': Icons.sports_mma_rounded,
  'Icons.sports_mma_outlined': Icons.sports_mma_outlined,
  'Icons.sports_motorsports': Icons.sports_motorsports,
  'Icons.sports_motorsports_sharp': Icons.sports_motorsports_sharp,
  'Icons.sports_motorsports_rounded': Icons.sports_motorsports_rounded,
  'Icons.sports_motorsports_outlined': Icons.sports_motorsports_outlined,
  'Icons.sports_rugby': Icons.sports_rugby,
  'Icons.sports_rugby_sharp': Icons.sports_rugby_sharp,
  'Icons.sports_rugby_rounded': Icons.sports_rugby_rounded,
  'Icons.sports_rugby_outlined': Icons.sports_rugby_outlined,
  'Icons.sports_score': Icons.sports_score,
  'Icons.sports_score_sharp': Icons.sports_score_sharp,
  'Icons.sports_score_rounded': Icons.sports_score_rounded,
  'Icons.sports_score_outlined': Icons.sports_score_outlined,
  'Icons.sports_soccer': Icons.sports_soccer,
  'Icons.sports_soccer_sharp': Icons.sports_soccer_sharp,
  'Icons.sports_soccer_rounded': Icons.sports_soccer_rounded,
  'Icons.sports_soccer_outlined': Icons.sports_soccer_outlined,
  'Icons.sports_tennis': Icons.sports_tennis,
  'Icons.sports_tennis_sharp': Icons.sports_tennis_sharp,
  'Icons.sports_tennis_rounded': Icons.sports_tennis_rounded,
  'Icons.sports_tennis_outlined': Icons.sports_tennis_outlined,
  'Icons.sports_volleyball': Icons.sports_volleyball,
  'Icons.sports_volleyball_sharp': Icons.sports_volleyball_sharp,
  'Icons.sports_volleyball_rounded': Icons.sports_volleyball_rounded,
  'Icons.sports_volleyball_outlined': Icons.sports_volleyball_outlined,
  'Icons.square': Icons.square,
  'Icons.square_sharp': Icons.square_sharp,
  'Icons.square_rounded': Icons.square_rounded,
  'Icons.square_outlined': Icons.square_outlined,
  'Icons.square_foot': Icons.square_foot,
  'Icons.square_foot_sharp': Icons.square_foot_sharp,
  'Icons.square_foot_rounded': Icons.square_foot_rounded,
  'Icons.square_foot_outlined': Icons.square_foot_outlined,
  'Icons.ssid_chart': Icons.ssid_chart,
  'Icons.ssid_chart_sharp': Icons.ssid_chart_sharp,
  'Icons.ssid_chart_rounded': Icons.ssid_chart_rounded,
  'Icons.ssid_chart_outlined': Icons.ssid_chart_outlined,
  'Icons.stacked_bar_chart': Icons.stacked_bar_chart,
  'Icons.stacked_bar_chart_sharp': Icons.stacked_bar_chart_sharp,
  'Icons.stacked_bar_chart_rounded': Icons.stacked_bar_chart_rounded,
  'Icons.stacked_bar_chart_outlined': Icons.stacked_bar_chart_outlined,
  'Icons.stacked_line_chart': Icons.stacked_line_chart,
  'Icons.stacked_line_chart_sharp': Icons.stacked_line_chart_sharp,
  'Icons.stacked_line_chart_rounded': Icons.stacked_line_chart_rounded,
  'Icons.stacked_line_chart_outlined': Icons.stacked_line_chart_outlined,
  'Icons.stadium': Icons.stadium,
  'Icons.stadium_sharp': Icons.stadium_sharp,
  'Icons.stadium_rounded': Icons.stadium_rounded,
  'Icons.stadium_outlined': Icons.stadium_outlined,
  'Icons.stairs': Icons.stairs,
  'Icons.stairs_sharp': Icons.stairs_sharp,
  'Icons.stairs_rounded': Icons.stairs_rounded,
  'Icons.stairs_outlined': Icons.stairs_outlined,
  'Icons.star': Icons.star,
  'Icons.star_sharp': Icons.star_sharp,
  'Icons.star_rounded': Icons.star_rounded,
  'Icons.star_outlined': Icons.star_outlined,
  'Icons.star_border': Icons.star_border,
  'Icons.star_border_sharp': Icons.star_border_sharp,
  'Icons.star_border_rounded': Icons.star_border_rounded,
  'Icons.star_border_outlined': Icons.star_border_outlined,
  'Icons.star_border_purple500': Icons.star_border_purple500,
  'Icons.star_border_purple500_sharp': Icons.star_border_purple500_sharp,
  'Icons.star_border_purple500_rounded': Icons.star_border_purple500_rounded,
  'Icons.star_border_purple500_outlined': Icons.star_border_purple500_outlined,
  'Icons.star_half': Icons.star_half,
  'Icons.star_half_sharp': Icons.star_half_sharp,
  'Icons.star_half_rounded': Icons.star_half_rounded,
  'Icons.star_half_outlined': Icons.star_half_outlined,
  'Icons.star_outline': Icons.star_outline,
  'Icons.star_outline_sharp': Icons.star_outline_sharp,
  'Icons.star_outline_rounded': Icons.star_outline_rounded,
  'Icons.star_outline_outlined': Icons.star_outline_outlined,
  'Icons.star_purple500': Icons.star_purple500,
  'Icons.star_purple500_sharp': Icons.star_purple500_sharp,
  'Icons.star_purple500_rounded': Icons.star_purple500_rounded,
  'Icons.star_purple500_outlined': Icons.star_purple500_outlined,
  'Icons.star_rate': Icons.star_rate,
  'Icons.star_rate_sharp': Icons.star_rate_sharp,
  'Icons.star_rate_rounded': Icons.star_rate_rounded,
  'Icons.star_rate_outlined': Icons.star_rate_outlined,
  'Icons.stars': Icons.stars,
  'Icons.stars_sharp': Icons.stars_sharp,
  'Icons.stars_rounded': Icons.stars_rounded,
  'Icons.stars_outlined': Icons.stars_outlined,
  'Icons.start': Icons.start,
  'Icons.start_sharp': Icons.start_sharp,
  'Icons.start_rounded': Icons.start_rounded,
  'Icons.start_outlined': Icons.start_outlined,
  'Icons.stay_current_landscape': Icons.stay_current_landscape,
  'Icons.stay_current_landscape_sharp': Icons.stay_current_landscape_sharp,
  'Icons.stay_current_landscape_rounded': Icons.stay_current_landscape_rounded,
  'Icons.stay_current_landscape_outlined':
      Icons.stay_current_landscape_outlined,
  'Icons.stay_current_portrait': Icons.stay_current_portrait,
  'Icons.stay_current_portrait_sharp': Icons.stay_current_portrait_sharp,
  'Icons.stay_current_portrait_rounded': Icons.stay_current_portrait_rounded,
  'Icons.stay_current_portrait_outlined': Icons.stay_current_portrait_outlined,
  'Icons.stay_primary_landscape': Icons.stay_primary_landscape,
  'Icons.stay_primary_landscape_sharp': Icons.stay_primary_landscape_sharp,
  'Icons.stay_primary_landscape_rounded': Icons.stay_primary_landscape_rounded,
  'Icons.stay_primary_landscape_outlined':
      Icons.stay_primary_landscape_outlined,
  'Icons.stay_primary_portrait': Icons.stay_primary_portrait,
  'Icons.stay_primary_portrait_sharp': Icons.stay_primary_portrait_sharp,
  'Icons.stay_primary_portrait_rounded': Icons.stay_primary_portrait_rounded,
  'Icons.stay_primary_portrait_outlined': Icons.stay_primary_portrait_outlined,
  'Icons.sticky_note_2': Icons.sticky_note_2,
  'Icons.sticky_note_2_sharp': Icons.sticky_note_2_sharp,
  'Icons.sticky_note_2_rounded': Icons.sticky_note_2_rounded,
  'Icons.sticky_note_2_outlined': Icons.sticky_note_2_outlined,
  'Icons.stop': Icons.stop,
  'Icons.stop_sharp': Icons.stop_sharp,
  'Icons.stop_rounded': Icons.stop_rounded,
  'Icons.stop_outlined': Icons.stop_outlined,
  'Icons.stop_circle': Icons.stop_circle,
  'Icons.stop_circle_sharp': Icons.stop_circle_sharp,
  'Icons.stop_circle_rounded': Icons.stop_circle_rounded,
  'Icons.stop_circle_outlined': Icons.stop_circle_outlined,
  'Icons.stop_screen_share': Icons.stop_screen_share,
  'Icons.stop_screen_share_sharp': Icons.stop_screen_share_sharp,
  'Icons.stop_screen_share_rounded': Icons.stop_screen_share_rounded,
  'Icons.stop_screen_share_outlined': Icons.stop_screen_share_outlined,
  'Icons.storage': Icons.storage,
  'Icons.storage_sharp': Icons.storage_sharp,
  'Icons.storage_rounded': Icons.storage_rounded,
  'Icons.storage_outlined': Icons.storage_outlined,
  'Icons.store': Icons.store,
  'Icons.store_sharp': Icons.store_sharp,
  'Icons.store_rounded': Icons.store_rounded,
  'Icons.store_outlined': Icons.store_outlined,
  'Icons.store_mall_directory': Icons.store_mall_directory,
  'Icons.store_mall_directory_sharp': Icons.store_mall_directory_sharp,
  'Icons.store_mall_directory_rounded': Icons.store_mall_directory_rounded,
  'Icons.store_mall_directory_outlined': Icons.store_mall_directory_outlined,
  'Icons.storefront': Icons.storefront,
  'Icons.storefront_sharp': Icons.storefront_sharp,
  'Icons.storefront_rounded': Icons.storefront_rounded,
  'Icons.storefront_outlined': Icons.storefront_outlined,
  'Icons.storm': Icons.storm,
  'Icons.storm_sharp': Icons.storm_sharp,
  'Icons.storm_rounded': Icons.storm_rounded,
  'Icons.storm_outlined': Icons.storm_outlined,
  'Icons.straight': Icons.straight,
  'Icons.straight_sharp': Icons.straight_sharp,
  'Icons.straight_rounded': Icons.straight_rounded,
  'Icons.straight_outlined': Icons.straight_outlined,
  'Icons.straighten': Icons.straighten,
  'Icons.straighten_sharp': Icons.straighten_sharp,
  'Icons.straighten_rounded': Icons.straighten_rounded,
  'Icons.straighten_outlined': Icons.straighten_outlined,
  'Icons.stream': Icons.stream,
  'Icons.stream_sharp': Icons.stream_sharp,
  'Icons.stream_rounded': Icons.stream_rounded,
  'Icons.stream_outlined': Icons.stream_outlined,
  'Icons.streetview': Icons.streetview,
  'Icons.streetview_sharp': Icons.streetview_sharp,
  'Icons.streetview_rounded': Icons.streetview_rounded,
  'Icons.streetview_outlined': Icons.streetview_outlined,
  'Icons.strikethrough_s': Icons.strikethrough_s,
  'Icons.strikethrough_s_sharp': Icons.strikethrough_s_sharp,
  'Icons.strikethrough_s_rounded': Icons.strikethrough_s_rounded,
  'Icons.strikethrough_s_outlined': Icons.strikethrough_s_outlined,
  'Icons.stroller': Icons.stroller,
  'Icons.stroller_sharp': Icons.stroller_sharp,
  'Icons.stroller_rounded': Icons.stroller_rounded,
  'Icons.stroller_outlined': Icons.stroller_outlined,
  'Icons.style': Icons.style,
  'Icons.style_sharp': Icons.style_sharp,
  'Icons.style_rounded': Icons.style_rounded,
  'Icons.style_outlined': Icons.style_outlined,
  'Icons.subdirectory_arrow_left': Icons.subdirectory_arrow_left,
  'Icons.subdirectory_arrow_left_sharp': Icons.subdirectory_arrow_left_sharp,
  'Icons.subdirectory_arrow_left_rounded':
      Icons.subdirectory_arrow_left_rounded,
  'Icons.subdirectory_arrow_left_outlined':
      Icons.subdirectory_arrow_left_outlined,
  'Icons.subdirectory_arrow_right': Icons.subdirectory_arrow_right,
  'Icons.subdirectory_arrow_right_sharp': Icons.subdirectory_arrow_right_sharp,
  'Icons.subdirectory_arrow_right_rounded':
      Icons.subdirectory_arrow_right_rounded,
  'Icons.subdirectory_arrow_right_outlined':
      Icons.subdirectory_arrow_right_outlined,
  'Icons.subject': Icons.subject,
  'Icons.subject_sharp': Icons.subject_sharp,
  'Icons.subject_rounded': Icons.subject_rounded,
  'Icons.subject_outlined': Icons.subject_outlined,
  'Icons.subscript': Icons.subscript,
  'Icons.subscript_sharp': Icons.subscript_sharp,
  'Icons.subscript_rounded': Icons.subscript_rounded,
  'Icons.subscript_outlined': Icons.subscript_outlined,
  'Icons.subscriptions': Icons.subscriptions,
  'Icons.subscriptions_sharp': Icons.subscriptions_sharp,
  'Icons.subscriptions_rounded': Icons.subscriptions_rounded,
  'Icons.subscriptions_outlined': Icons.subscriptions_outlined,
  'Icons.subtitles': Icons.subtitles,
  'Icons.subtitles_sharp': Icons.subtitles_sharp,
  'Icons.subtitles_rounded': Icons.subtitles_rounded,
  'Icons.subtitles_outlined': Icons.subtitles_outlined,
  'Icons.subtitles_off': Icons.subtitles_off,
  'Icons.subtitles_off_sharp': Icons.subtitles_off_sharp,
  'Icons.subtitles_off_rounded': Icons.subtitles_off_rounded,
  'Icons.subtitles_off_outlined': Icons.subtitles_off_outlined,
  'Icons.subway': Icons.subway,
  'Icons.subway_sharp': Icons.subway_sharp,
  'Icons.subway_rounded': Icons.subway_rounded,
  'Icons.subway_outlined': Icons.subway_outlined,
  'Icons.summarize': Icons.summarize,
  'Icons.summarize_sharp': Icons.summarize_sharp,
  'Icons.summarize_rounded': Icons.summarize_rounded,
  'Icons.summarize_outlined': Icons.summarize_outlined,
  'Icons.sunny': Icons.sunny,
  'Icons.sunny_snowing': Icons.sunny_snowing,
  'Icons.superscript': Icons.superscript,
  'Icons.superscript_sharp': Icons.superscript_sharp,
  'Icons.superscript_rounded': Icons.superscript_rounded,
  'Icons.superscript_outlined': Icons.superscript_outlined,
  'Icons.supervised_user_circle': Icons.supervised_user_circle,
  'Icons.supervised_user_circle_sharp': Icons.supervised_user_circle_sharp,
  'Icons.supervised_user_circle_rounded': Icons.supervised_user_circle_rounded,
  'Icons.supervised_user_circle_outlined':
      Icons.supervised_user_circle_outlined,
  'Icons.supervisor_account': Icons.supervisor_account,
  'Icons.supervisor_account_sharp': Icons.supervisor_account_sharp,
  'Icons.supervisor_account_rounded': Icons.supervisor_account_rounded,
  'Icons.supervisor_account_outlined': Icons.supervisor_account_outlined,
  'Icons.support': Icons.support,
  'Icons.support_sharp': Icons.support_sharp,
  'Icons.support_rounded': Icons.support_rounded,
  'Icons.support_outlined': Icons.support_outlined,
  'Icons.support_agent': Icons.support_agent,
  'Icons.support_agent_sharp': Icons.support_agent_sharp,
  'Icons.support_agent_rounded': Icons.support_agent_rounded,
  'Icons.support_agent_outlined': Icons.support_agent_outlined,
  'Icons.surfing': Icons.surfing,
  'Icons.surfing_sharp': Icons.surfing_sharp,
  'Icons.surfing_rounded': Icons.surfing_rounded,
  'Icons.surfing_outlined': Icons.surfing_outlined,
  'Icons.surround_sound': Icons.surround_sound,
  'Icons.surround_sound_sharp': Icons.surround_sound_sharp,
  'Icons.surround_sound_rounded': Icons.surround_sound_rounded,
  'Icons.surround_sound_outlined': Icons.surround_sound_outlined,
  'Icons.swap_calls': Icons.swap_calls,
  'Icons.swap_calls_sharp': Icons.swap_calls_sharp,
  'Icons.swap_calls_rounded': Icons.swap_calls_rounded,
  'Icons.swap_calls_outlined': Icons.swap_calls_outlined,
  'Icons.swap_horiz': Icons.swap_horiz,
  'Icons.swap_horiz_sharp': Icons.swap_horiz_sharp,
  'Icons.swap_horiz_rounded': Icons.swap_horiz_rounded,
  'Icons.swap_horiz_outlined': Icons.swap_horiz_outlined,
  'Icons.swap_horizontal_circle': Icons.swap_horizontal_circle,
  'Icons.swap_horizontal_circle_sharp': Icons.swap_horizontal_circle_sharp,
  'Icons.swap_horizontal_circle_rounded': Icons.swap_horizontal_circle_rounded,
  'Icons.swap_horizontal_circle_outlined':
      Icons.swap_horizontal_circle_outlined,
  'Icons.swap_vert': Icons.swap_vert,
  'Icons.swap_vert_sharp': Icons.swap_vert_sharp,
  'Icons.swap_vert_rounded': Icons.swap_vert_rounded,
  'Icons.swap_vert_outlined': Icons.swap_vert_outlined,
  'Icons.swap_vert_circle': Icons.swap_vert_circle,
  'Icons.swap_vert_circle_sharp': Icons.swap_vert_circle_sharp,
  'Icons.swap_vert_circle_rounded': Icons.swap_vert_circle_rounded,
  'Icons.swap_vert_circle_outlined': Icons.swap_vert_circle_outlined,
  'Icons.swap_vertical_circle': Icons.swap_vertical_circle,
  'Icons.swap_vertical_circle_sharp': Icons.swap_vertical_circle_sharp,
  'Icons.swap_vertical_circle_rounded': Icons.swap_vertical_circle_rounded,
  'Icons.swap_vertical_circle_outlined': Icons.swap_vertical_circle_outlined,
  'Icons.swipe': Icons.swipe,
  'Icons.swipe_sharp': Icons.swipe_sharp,
  'Icons.swipe_rounded': Icons.swipe_rounded,
  'Icons.swipe_outlined': Icons.swipe_outlined,
  'Icons.swipe_down': Icons.swipe_down,
  'Icons.swipe_down_sharp': Icons.swipe_down_sharp,
  'Icons.swipe_down_rounded': Icons.swipe_down_rounded,
  'Icons.swipe_down_outlined': Icons.swipe_down_outlined,
  'Icons.swipe_down_alt': Icons.swipe_down_alt,
  'Icons.swipe_down_alt_sharp': Icons.swipe_down_alt_sharp,
  'Icons.swipe_down_alt_rounded': Icons.swipe_down_alt_rounded,
  'Icons.swipe_down_alt_outlined': Icons.swipe_down_alt_outlined,
  'Icons.swipe_left': Icons.swipe_left,
  'Icons.swipe_left_sharp': Icons.swipe_left_sharp,
  'Icons.swipe_left_rounded': Icons.swipe_left_rounded,
  'Icons.swipe_left_outlined': Icons.swipe_left_outlined,
  'Icons.swipe_left_alt': Icons.swipe_left_alt,
  'Icons.swipe_left_alt_sharp': Icons.swipe_left_alt_sharp,
  'Icons.swipe_left_alt_rounded': Icons.swipe_left_alt_rounded,
  'Icons.swipe_left_alt_outlined': Icons.swipe_left_alt_outlined,
  'Icons.swipe_right': Icons.swipe_right,
  'Icons.swipe_right_sharp': Icons.swipe_right_sharp,
  'Icons.swipe_right_rounded': Icons.swipe_right_rounded,
  'Icons.swipe_right_outlined': Icons.swipe_right_outlined,
  'Icons.swipe_right_alt': Icons.swipe_right_alt,
  'Icons.swipe_right_alt_sharp': Icons.swipe_right_alt_sharp,
  'Icons.swipe_right_alt_rounded': Icons.swipe_right_alt_rounded,
  'Icons.swipe_right_alt_outlined': Icons.swipe_right_alt_outlined,
  'Icons.swipe_up': Icons.swipe_up,
  'Icons.swipe_up_sharp': Icons.swipe_up_sharp,
  'Icons.swipe_up_rounded': Icons.swipe_up_rounded,
  'Icons.swipe_up_outlined': Icons.swipe_up_outlined,
  'Icons.swipe_up_alt': Icons.swipe_up_alt,
  'Icons.swipe_up_alt_sharp': Icons.swipe_up_alt_sharp,
  'Icons.swipe_up_alt_rounded': Icons.swipe_up_alt_rounded,
  'Icons.swipe_up_alt_outlined': Icons.swipe_up_alt_outlined,
  'Icons.swipe_vertical': Icons.swipe_vertical,
  'Icons.swipe_vertical_sharp': Icons.swipe_vertical_sharp,
  'Icons.swipe_vertical_rounded': Icons.swipe_vertical_rounded,
  'Icons.swipe_vertical_outlined': Icons.swipe_vertical_outlined,
  'Icons.switch_access_shortcut': Icons.switch_access_shortcut,
  'Icons.switch_access_shortcut_sharp': Icons.switch_access_shortcut_sharp,
  'Icons.switch_access_shortcut_rounded': Icons.switch_access_shortcut_rounded,
  'Icons.switch_access_shortcut_outlined':
      Icons.switch_access_shortcut_outlined,
  'Icons.switch_access_shortcut_add': Icons.switch_access_shortcut_add,
  'Icons.switch_access_shortcut_add_sharp':
      Icons.switch_access_shortcut_add_sharp,
  'Icons.switch_access_shortcut_add_rounded':
      Icons.switch_access_shortcut_add_rounded,
  'Icons.switch_access_shortcut_add_outlined':
      Icons.switch_access_shortcut_add_outlined,
  'Icons.switch_account': Icons.switch_account,
  'Icons.switch_account_sharp': Icons.switch_account_sharp,
  'Icons.switch_account_rounded': Icons.switch_account_rounded,
  'Icons.switch_account_outlined': Icons.switch_account_outlined,
  'Icons.switch_camera': Icons.switch_camera,
  'Icons.switch_camera_sharp': Icons.switch_camera_sharp,
  'Icons.switch_camera_rounded': Icons.switch_camera_rounded,
  'Icons.switch_camera_outlined': Icons.switch_camera_outlined,
  'Icons.switch_left': Icons.switch_left,
  'Icons.switch_left_sharp': Icons.switch_left_sharp,
  'Icons.switch_left_rounded': Icons.switch_left_rounded,
  'Icons.switch_left_outlined': Icons.switch_left_outlined,
  'Icons.switch_right': Icons.switch_right,
  'Icons.switch_right_sharp': Icons.switch_right_sharp,
  'Icons.switch_right_rounded': Icons.switch_right_rounded,
  'Icons.switch_right_outlined': Icons.switch_right_outlined,
  'Icons.switch_video': Icons.switch_video,
  'Icons.switch_video_sharp': Icons.switch_video_sharp,
  'Icons.switch_video_rounded': Icons.switch_video_rounded,
  'Icons.switch_video_outlined': Icons.switch_video_outlined,
  'Icons.synagogue': Icons.synagogue,
  'Icons.synagogue_sharp': Icons.synagogue_sharp,
  'Icons.synagogue_rounded': Icons.synagogue_rounded,
  'Icons.synagogue_outlined': Icons.synagogue_outlined,
  'Icons.sync': Icons.sync,
  'Icons.sync_sharp': Icons.sync_sharp,
  'Icons.sync_rounded': Icons.sync_rounded,
  'Icons.sync_outlined': Icons.sync_outlined,
  'Icons.sync_alt': Icons.sync_alt,
  'Icons.sync_alt_sharp': Icons.sync_alt_sharp,
  'Icons.sync_alt_rounded': Icons.sync_alt_rounded,
  'Icons.sync_alt_outlined': Icons.sync_alt_outlined,
  'Icons.sync_disabled': Icons.sync_disabled,
  'Icons.sync_disabled_sharp': Icons.sync_disabled_sharp,
  'Icons.sync_disabled_rounded': Icons.sync_disabled_rounded,
  'Icons.sync_disabled_outlined': Icons.sync_disabled_outlined,
  'Icons.sync_lock': Icons.sync_lock,
  'Icons.sync_lock_sharp': Icons.sync_lock_sharp,
  'Icons.sync_lock_rounded': Icons.sync_lock_rounded,
  'Icons.sync_lock_outlined': Icons.sync_lock_outlined,
  'Icons.sync_problem': Icons.sync_problem,
  'Icons.sync_problem_sharp': Icons.sync_problem_sharp,
  'Icons.sync_problem_rounded': Icons.sync_problem_rounded,
  'Icons.sync_problem_outlined': Icons.sync_problem_outlined,
  'Icons.system_security_update': Icons.system_security_update,
  'Icons.system_security_update_sharp': Icons.system_security_update_sharp,
  'Icons.system_security_update_rounded': Icons.system_security_update_rounded,
  'Icons.system_security_update_outlined':
      Icons.system_security_update_outlined,
  'Icons.system_security_update_good': Icons.system_security_update_good,
  'Icons.system_security_update_good_sharp':
      Icons.system_security_update_good_sharp,
  'Icons.system_security_update_good_rounded':
      Icons.system_security_update_good_rounded,
  'Icons.system_security_update_good_outlined':
      Icons.system_security_update_good_outlined,
  'Icons.system_security_update_warning': Icons.system_security_update_warning,
  'Icons.system_security_update_warning_sharp':
      Icons.system_security_update_warning_sharp,
  'Icons.system_security_update_warning_rounded':
      Icons.system_security_update_warning_rounded,
  'Icons.system_security_update_warning_outlined':
      Icons.system_security_update_warning_outlined,
  'Icons.system_update': Icons.system_update,
  'Icons.system_update_sharp': Icons.system_update_sharp,
  'Icons.system_update_rounded': Icons.system_update_rounded,
  'Icons.system_update_outlined': Icons.system_update_outlined,
  'Icons.system_update_alt': Icons.system_update_alt,
  'Icons.system_update_alt_sharp': Icons.system_update_alt_sharp,
  'Icons.system_update_alt_rounded': Icons.system_update_alt_rounded,
  'Icons.system_update_alt_outlined': Icons.system_update_alt_outlined,
  'Icons.system_update_tv': Icons.system_update_tv,
  'Icons.system_update_tv_sharp': Icons.system_update_tv_sharp,
  'Icons.system_update_tv_rounded': Icons.system_update_tv_rounded,
  'Icons.system_update_tv_outlined': Icons.system_update_tv_outlined,
  'Icons.tab': Icons.tab,
  'Icons.tab_sharp': Icons.tab_sharp,
  'Icons.tab_rounded': Icons.tab_rounded,
  'Icons.tab_outlined': Icons.tab_outlined,
  'Icons.tab_unselected': Icons.tab_unselected,
  'Icons.tab_unselected_sharp': Icons.tab_unselected_sharp,
  'Icons.tab_unselected_rounded': Icons.tab_unselected_rounded,
  'Icons.tab_unselected_outlined': Icons.tab_unselected_outlined,
  'Icons.table_bar': Icons.table_bar,
  'Icons.table_bar_sharp': Icons.table_bar_sharp,
  'Icons.table_bar_rounded': Icons.table_bar_rounded,
  'Icons.table_bar_outlined': Icons.table_bar_outlined,
  'Icons.table_chart': Icons.table_chart,
  'Icons.table_chart_sharp': Icons.table_chart_sharp,
  'Icons.table_chart_rounded': Icons.table_chart_rounded,
  'Icons.table_chart_outlined': Icons.table_chart_outlined,
  'Icons.table_restaurant': Icons.table_restaurant,
  'Icons.table_restaurant_sharp': Icons.table_restaurant_sharp,
  'Icons.table_restaurant_rounded': Icons.table_restaurant_rounded,
  'Icons.table_restaurant_outlined': Icons.table_restaurant_outlined,
  'Icons.table_rows': Icons.table_rows,
  'Icons.table_rows_sharp': Icons.table_rows_sharp,
  'Icons.table_rows_rounded': Icons.table_rows_rounded,
  'Icons.table_rows_outlined': Icons.table_rows_outlined,
  'Icons.table_view': Icons.table_view,
  'Icons.table_view_sharp': Icons.table_view_sharp,
  'Icons.table_view_rounded': Icons.table_view_rounded,
  'Icons.table_view_outlined': Icons.table_view_outlined,
  'Icons.tablet': Icons.tablet,
  'Icons.tablet_sharp': Icons.tablet_sharp,
  'Icons.tablet_rounded': Icons.tablet_rounded,
  'Icons.tablet_outlined': Icons.tablet_outlined,
  'Icons.tablet_android': Icons.tablet_android,
  'Icons.tablet_android_sharp': Icons.tablet_android_sharp,
  'Icons.tablet_android_rounded': Icons.tablet_android_rounded,
  'Icons.tablet_android_outlined': Icons.tablet_android_outlined,
  'Icons.tablet_mac': Icons.tablet_mac,
  'Icons.tablet_mac_sharp': Icons.tablet_mac_sharp,
  'Icons.tablet_mac_rounded': Icons.tablet_mac_rounded,
  'Icons.tablet_mac_outlined': Icons.tablet_mac_outlined,
  'Icons.tag': Icons.tag,
  'Icons.tag_sharp': Icons.tag_sharp,
  'Icons.tag_rounded': Icons.tag_rounded,
  'Icons.tag_outlined': Icons.tag_outlined,
  'Icons.tag_faces': Icons.tag_faces,
  'Icons.tag_faces_sharp': Icons.tag_faces_sharp,
  'Icons.tag_faces_rounded': Icons.tag_faces_rounded,
  'Icons.tag_faces_outlined': Icons.tag_faces_outlined,
  'Icons.takeout_dining': Icons.takeout_dining,
  'Icons.takeout_dining_sharp': Icons.takeout_dining_sharp,
  'Icons.takeout_dining_rounded': Icons.takeout_dining_rounded,
  'Icons.takeout_dining_outlined': Icons.takeout_dining_outlined,
  'Icons.tap_and_play': Icons.tap_and_play,
  'Icons.tap_and_play_sharp': Icons.tap_and_play_sharp,
  'Icons.tap_and_play_rounded': Icons.tap_and_play_rounded,
  'Icons.tap_and_play_outlined': Icons.tap_and_play_outlined,
  'Icons.tapas': Icons.tapas,
  'Icons.tapas_sharp': Icons.tapas_sharp,
  'Icons.tapas_rounded': Icons.tapas_rounded,
  'Icons.tapas_outlined': Icons.tapas_outlined,
  'Icons.task': Icons.task,
  'Icons.task_sharp': Icons.task_sharp,
  'Icons.task_rounded': Icons.task_rounded,
  'Icons.task_outlined': Icons.task_outlined,
  'Icons.task_alt': Icons.task_alt,
  'Icons.task_alt_sharp': Icons.task_alt_sharp,
  'Icons.task_alt_rounded': Icons.task_alt_rounded,
  'Icons.task_alt_outlined': Icons.task_alt_outlined,
  'Icons.taxi_alert': Icons.taxi_alert,
  'Icons.taxi_alert_sharp': Icons.taxi_alert_sharp,
  'Icons.taxi_alert_rounded': Icons.taxi_alert_rounded,
  'Icons.taxi_alert_outlined': Icons.taxi_alert_outlined,
  'Icons.telegram': Icons.telegram,
  'Icons.telegram_sharp': Icons.telegram_sharp,
  'Icons.telegram_rounded': Icons.telegram_rounded,
  'Icons.telegram_outlined': Icons.telegram_outlined,
  'Icons.temple_buddhist': Icons.temple_buddhist,
  'Icons.temple_buddhist_sharp': Icons.temple_buddhist_sharp,
  'Icons.temple_buddhist_rounded': Icons.temple_buddhist_rounded,
  'Icons.temple_buddhist_outlined': Icons.temple_buddhist_outlined,
  'Icons.temple_hindu': Icons.temple_hindu,
  'Icons.temple_hindu_sharp': Icons.temple_hindu_sharp,
  'Icons.temple_hindu_rounded': Icons.temple_hindu_rounded,
  'Icons.temple_hindu_outlined': Icons.temple_hindu_outlined,
  'Icons.terminal': Icons.terminal,
  'Icons.terminal_sharp': Icons.terminal_sharp,
  'Icons.terminal_rounded': Icons.terminal_rounded,
  'Icons.terminal_outlined': Icons.terminal_outlined,
  'Icons.terrain': Icons.terrain,
  'Icons.terrain_sharp': Icons.terrain_sharp,
  'Icons.terrain_rounded': Icons.terrain_rounded,
  'Icons.terrain_outlined': Icons.terrain_outlined,
  'Icons.text_decrease': Icons.text_decrease,
  'Icons.text_decrease_sharp': Icons.text_decrease_sharp,
  'Icons.text_decrease_rounded': Icons.text_decrease_rounded,
  'Icons.text_decrease_outlined': Icons.text_decrease_outlined,
  'Icons.text_fields': Icons.text_fields,
  'Icons.text_fields_sharp': Icons.text_fields_sharp,
  'Icons.text_fields_rounded': Icons.text_fields_rounded,
  'Icons.text_fields_outlined': Icons.text_fields_outlined,
  'Icons.text_format': Icons.text_format,
  'Icons.text_format_sharp': Icons.text_format_sharp,
  'Icons.text_format_rounded': Icons.text_format_rounded,
  'Icons.text_format_outlined': Icons.text_format_outlined,
  'Icons.text_increase': Icons.text_increase,
  'Icons.text_increase_sharp': Icons.text_increase_sharp,
  'Icons.text_increase_rounded': Icons.text_increase_rounded,
  'Icons.text_increase_outlined': Icons.text_increase_outlined,
  'Icons.text_rotate_up': Icons.text_rotate_up,
  'Icons.text_rotate_up_sharp': Icons.text_rotate_up_sharp,
  'Icons.text_rotate_up_rounded': Icons.text_rotate_up_rounded,
  'Icons.text_rotate_up_outlined': Icons.text_rotate_up_outlined,
  'Icons.text_rotate_vertical': Icons.text_rotate_vertical,
  'Icons.text_rotate_vertical_sharp': Icons.text_rotate_vertical_sharp,
  'Icons.text_rotate_vertical_rounded': Icons.text_rotate_vertical_rounded,
  'Icons.text_rotate_vertical_outlined': Icons.text_rotate_vertical_outlined,
  'Icons.text_rotation_angledown': Icons.text_rotation_angledown,
  'Icons.text_rotation_angledown_sharp': Icons.text_rotation_angledown_sharp,
  'Icons.text_rotation_angledown_rounded':
      Icons.text_rotation_angledown_rounded,
  'Icons.text_rotation_angledown_outlined':
      Icons.text_rotation_angledown_outlined,
  'Icons.text_rotation_angleup': Icons.text_rotation_angleup,
  'Icons.text_rotation_angleup_sharp': Icons.text_rotation_angleup_sharp,
  'Icons.text_rotation_angleup_rounded': Icons.text_rotation_angleup_rounded,
  'Icons.text_rotation_angleup_outlined': Icons.text_rotation_angleup_outlined,
  'Icons.text_rotation_down': Icons.text_rotation_down,
  'Icons.text_rotation_down_sharp': Icons.text_rotation_down_sharp,
  'Icons.text_rotation_down_rounded': Icons.text_rotation_down_rounded,
  'Icons.text_rotation_down_outlined': Icons.text_rotation_down_outlined,
  'Icons.text_rotation_none': Icons.text_rotation_none,
  'Icons.text_rotation_none_sharp': Icons.text_rotation_none_sharp,
  'Icons.text_rotation_none_rounded': Icons.text_rotation_none_rounded,
  'Icons.text_rotation_none_outlined': Icons.text_rotation_none_outlined,
  'Icons.text_snippet': Icons.text_snippet,
  'Icons.text_snippet_sharp': Icons.text_snippet_sharp,
  'Icons.text_snippet_rounded': Icons.text_snippet_rounded,
  'Icons.text_snippet_outlined': Icons.text_snippet_outlined,
  'Icons.textsms': Icons.textsms,
  'Icons.textsms_sharp': Icons.textsms_sharp,
  'Icons.textsms_rounded': Icons.textsms_rounded,
  'Icons.textsms_outlined': Icons.textsms_outlined,
  'Icons.texture': Icons.texture,
  'Icons.texture_sharp': Icons.texture_sharp,
  'Icons.texture_rounded': Icons.texture_rounded,
  'Icons.texture_outlined': Icons.texture_outlined,
  'Icons.theater_comedy': Icons.theater_comedy,
  'Icons.theater_comedy_sharp': Icons.theater_comedy_sharp,
  'Icons.theater_comedy_rounded': Icons.theater_comedy_rounded,
  'Icons.theater_comedy_outlined': Icons.theater_comedy_outlined,
  'Icons.theaters': Icons.theaters,
  'Icons.theaters_sharp': Icons.theaters_sharp,
  'Icons.theaters_rounded': Icons.theaters_rounded,
  'Icons.theaters_outlined': Icons.theaters_outlined,
  'Icons.thermostat': Icons.thermostat,
  'Icons.thermostat_sharp': Icons.thermostat_sharp,
  'Icons.thermostat_rounded': Icons.thermostat_rounded,
  'Icons.thermostat_outlined': Icons.thermostat_outlined,
  'Icons.thermostat_auto': Icons.thermostat_auto,
  'Icons.thermostat_auto_sharp': Icons.thermostat_auto_sharp,
  'Icons.thermostat_auto_rounded': Icons.thermostat_auto_rounded,
  'Icons.thermostat_auto_outlined': Icons.thermostat_auto_outlined,
  'Icons.thumb_down': Icons.thumb_down,
  'Icons.thumb_down_sharp': Icons.thumb_down_sharp,
  'Icons.thumb_down_rounded': Icons.thumb_down_rounded,
  'Icons.thumb_down_outlined': Icons.thumb_down_outlined,
  'Icons.thumb_down_alt': Icons.thumb_down_alt,
  'Icons.thumb_down_alt_sharp': Icons.thumb_down_alt_sharp,
  'Icons.thumb_down_alt_rounded': Icons.thumb_down_alt_rounded,
  'Icons.thumb_down_alt_outlined': Icons.thumb_down_alt_outlined,
  'Icons.thumb_down_off_alt': Icons.thumb_down_off_alt,
  'Icons.thumb_down_off_alt_sharp': Icons.thumb_down_off_alt_sharp,
  'Icons.thumb_down_off_alt_rounded': Icons.thumb_down_off_alt_rounded,
  'Icons.thumb_down_off_alt_outlined': Icons.thumb_down_off_alt_outlined,
  'Icons.thumb_up': Icons.thumb_up,
  'Icons.thumb_up_sharp': Icons.thumb_up_sharp,
  'Icons.thumb_up_rounded': Icons.thumb_up_rounded,
  'Icons.thumb_up_outlined': Icons.thumb_up_outlined,
  'Icons.thumb_up_alt': Icons.thumb_up_alt,
  'Icons.thumb_up_alt_sharp': Icons.thumb_up_alt_sharp,
  'Icons.thumb_up_alt_rounded': Icons.thumb_up_alt_rounded,
  'Icons.thumb_up_alt_outlined': Icons.thumb_up_alt_outlined,
  'Icons.thumb_up_off_alt': Icons.thumb_up_off_alt,
  'Icons.thumb_up_off_alt_sharp': Icons.thumb_up_off_alt_sharp,
  'Icons.thumb_up_off_alt_rounded': Icons.thumb_up_off_alt_rounded,
  'Icons.thumb_up_off_alt_outlined': Icons.thumb_up_off_alt_outlined,
  'Icons.thumbs_up_down': Icons.thumbs_up_down,
  'Icons.thumbs_up_down_sharp': Icons.thumbs_up_down_sharp,
  'Icons.thumbs_up_down_rounded': Icons.thumbs_up_down_rounded,
  'Icons.thumbs_up_down_outlined': Icons.thumbs_up_down_outlined,
  'Icons.thunderstorm': Icons.thunderstorm,
  'Icons.thunderstorm_sharp': Icons.thunderstorm_sharp,
  'Icons.thunderstorm_rounded': Icons.thunderstorm_rounded,
  'Icons.thunderstorm_outlined': Icons.thunderstorm_outlined,
  'Icons.tiktok': Icons.tiktok,
  'Icons.tiktok_sharp': Icons.tiktok_sharp,
  'Icons.tiktok_rounded': Icons.tiktok_rounded,
  'Icons.tiktok_outlined': Icons.tiktok_outlined,
  'Icons.time_to_leave': Icons.time_to_leave,
  'Icons.time_to_leave_sharp': Icons.time_to_leave_sharp,
  'Icons.time_to_leave_rounded': Icons.time_to_leave_rounded,
  'Icons.time_to_leave_outlined': Icons.time_to_leave_outlined,
  'Icons.timelapse': Icons.timelapse,
  'Icons.timelapse_sharp': Icons.timelapse_sharp,
  'Icons.timelapse_rounded': Icons.timelapse_rounded,
  'Icons.timelapse_outlined': Icons.timelapse_outlined,
  'Icons.timeline': Icons.timeline,
  'Icons.timeline_sharp': Icons.timeline_sharp,
  'Icons.timeline_rounded': Icons.timeline_rounded,
  'Icons.timeline_outlined': Icons.timeline_outlined,
  'Icons.timer': Icons.timer,
  'Icons.timer_sharp': Icons.timer_sharp,
  'Icons.timer_rounded': Icons.timer_rounded,
  'Icons.timer_outlined': Icons.timer_outlined,
  'Icons.timer_10': Icons.timer_10,
  'Icons.timer_10_sharp': Icons.timer_10_sharp,
  'Icons.timer_10_rounded': Icons.timer_10_rounded,
  'Icons.timer_10_outlined': Icons.timer_10_outlined,
  'Icons.timer_10_select': Icons.timer_10_select,
  'Icons.timer_10_select_sharp': Icons.timer_10_select_sharp,
  'Icons.timer_10_select_rounded': Icons.timer_10_select_rounded,
  'Icons.timer_10_select_outlined': Icons.timer_10_select_outlined,
  'Icons.timer_3': Icons.timer_3,
  'Icons.timer_3_sharp': Icons.timer_3_sharp,
  'Icons.timer_3_rounded': Icons.timer_3_rounded,
  'Icons.timer_3_outlined': Icons.timer_3_outlined,
  'Icons.timer_3_select': Icons.timer_3_select,
  'Icons.timer_3_select_sharp': Icons.timer_3_select_sharp,
  'Icons.timer_3_select_rounded': Icons.timer_3_select_rounded,
  'Icons.timer_3_select_outlined': Icons.timer_3_select_outlined,
  'Icons.timer_off': Icons.timer_off,
  'Icons.timer_off_sharp': Icons.timer_off_sharp,
  'Icons.timer_off_rounded': Icons.timer_off_rounded,
  'Icons.timer_off_outlined': Icons.timer_off_outlined,
  'Icons.tips_and_updates': Icons.tips_and_updates,
  'Icons.tips_and_updates_sharp': Icons.tips_and_updates_sharp,
  'Icons.tips_and_updates_rounded': Icons.tips_and_updates_rounded,
  'Icons.tips_and_updates_outlined': Icons.tips_and_updates_outlined,
  'Icons.tire_repair': Icons.tire_repair,
  'Icons.tire_repair_sharp': Icons.tire_repair_sharp,
  'Icons.tire_repair_rounded': Icons.tire_repair_rounded,
  'Icons.tire_repair_outlined': Icons.tire_repair_outlined,
  'Icons.title': Icons.title,
  'Icons.title_sharp': Icons.title_sharp,
  'Icons.title_rounded': Icons.title_rounded,
  'Icons.title_outlined': Icons.title_outlined,
  'Icons.toc': Icons.toc,
  'Icons.toc_sharp': Icons.toc_sharp,
  'Icons.toc_rounded': Icons.toc_rounded,
  'Icons.toc_outlined': Icons.toc_outlined,
  'Icons.today': Icons.today,
  'Icons.today_sharp': Icons.today_sharp,
  'Icons.today_rounded': Icons.today_rounded,
  'Icons.today_outlined': Icons.today_outlined,
  'Icons.toggle_off': Icons.toggle_off,
  'Icons.toggle_off_sharp': Icons.toggle_off_sharp,
  'Icons.toggle_off_rounded': Icons.toggle_off_rounded,
  'Icons.toggle_off_outlined': Icons.toggle_off_outlined,
  'Icons.toggle_on': Icons.toggle_on,
  'Icons.toggle_on_sharp': Icons.toggle_on_sharp,
  'Icons.toggle_on_rounded': Icons.toggle_on_rounded,
  'Icons.toggle_on_outlined': Icons.toggle_on_outlined,
  'Icons.token': Icons.token,
  'Icons.token_sharp': Icons.token_sharp,
  'Icons.token_rounded': Icons.token_rounded,
  'Icons.token_outlined': Icons.token_outlined,
  'Icons.toll': Icons.toll,
  'Icons.toll_sharp': Icons.toll_sharp,
  'Icons.toll_rounded': Icons.toll_rounded,
  'Icons.toll_outlined': Icons.toll_outlined,
  'Icons.tonality': Icons.tonality,
  'Icons.tonality_sharp': Icons.tonality_sharp,
  'Icons.tonality_rounded': Icons.tonality_rounded,
  'Icons.tonality_outlined': Icons.tonality_outlined,
  'Icons.topic': Icons.topic,
  'Icons.topic_sharp': Icons.topic_sharp,
  'Icons.topic_rounded': Icons.topic_rounded,
  'Icons.topic_outlined': Icons.topic_outlined,
  'Icons.tornado': Icons.tornado,
  'Icons.tornado_sharp': Icons.tornado_sharp,
  'Icons.tornado_rounded': Icons.tornado_rounded,
  'Icons.tornado_outlined': Icons.tornado_outlined,
  'Icons.touch_app': Icons.touch_app,
  'Icons.touch_app_sharp': Icons.touch_app_sharp,
  'Icons.touch_app_rounded': Icons.touch_app_rounded,
  'Icons.touch_app_outlined': Icons.touch_app_outlined,
  'Icons.tour': Icons.tour,
  'Icons.tour_sharp': Icons.tour_sharp,
  'Icons.tour_rounded': Icons.tour_rounded,
  'Icons.tour_outlined': Icons.tour_outlined,
  'Icons.toys': Icons.toys,
  'Icons.toys_sharp': Icons.toys_sharp,
  'Icons.toys_rounded': Icons.toys_rounded,
  'Icons.toys_outlined': Icons.toys_outlined,
  'Icons.track_changes': Icons.track_changes,
  'Icons.track_changes_sharp': Icons.track_changes_sharp,
  'Icons.track_changes_rounded': Icons.track_changes_rounded,
  'Icons.track_changes_outlined': Icons.track_changes_outlined,
  'Icons.traffic': Icons.traffic,
  'Icons.traffic_sharp': Icons.traffic_sharp,
  'Icons.traffic_rounded': Icons.traffic_rounded,
  'Icons.traffic_outlined': Icons.traffic_outlined,
  'Icons.train': Icons.train,
  'Icons.train_sharp': Icons.train_sharp,
  'Icons.train_rounded': Icons.train_rounded,
  'Icons.train_outlined': Icons.train_outlined,
  'Icons.tram': Icons.tram,
  'Icons.tram_sharp': Icons.tram_sharp,
  'Icons.tram_rounded': Icons.tram_rounded,
  'Icons.tram_outlined': Icons.tram_outlined,
  'Icons.transcribe': Icons.transcribe,
  'Icons.transcribe_sharp': Icons.transcribe_sharp,
  'Icons.transcribe_rounded': Icons.transcribe_rounded,
  'Icons.transcribe_outlined': Icons.transcribe_outlined,
  'Icons.transfer_within_a_station': Icons.transfer_within_a_station,
  'Icons.transfer_within_a_station_sharp':
      Icons.transfer_within_a_station_sharp,
  'Icons.transfer_within_a_station_rounded':
      Icons.transfer_within_a_station_rounded,
  'Icons.transfer_within_a_station_outlined':
      Icons.transfer_within_a_station_outlined,
  'Icons.transform': Icons.transform,
  'Icons.transform_sharp': Icons.transform_sharp,
  'Icons.transform_rounded': Icons.transform_rounded,
  'Icons.transform_outlined': Icons.transform_outlined,
  'Icons.transgender': Icons.transgender,
  'Icons.transgender_sharp': Icons.transgender_sharp,
  'Icons.transgender_rounded': Icons.transgender_rounded,
  'Icons.transgender_outlined': Icons.transgender_outlined,
  'Icons.transit_enterexit': Icons.transit_enterexit,
  'Icons.transit_enterexit_sharp': Icons.transit_enterexit_sharp,
  'Icons.transit_enterexit_rounded': Icons.transit_enterexit_rounded,
  'Icons.transit_enterexit_outlined': Icons.transit_enterexit_outlined,
  'Icons.translate': Icons.translate,
  'Icons.translate_sharp': Icons.translate_sharp,
  'Icons.translate_rounded': Icons.translate_rounded,
  'Icons.translate_outlined': Icons.translate_outlined,
  'Icons.travel_explore': Icons.travel_explore,
  'Icons.travel_explore_sharp': Icons.travel_explore_sharp,
  'Icons.travel_explore_rounded': Icons.travel_explore_rounded,
  'Icons.travel_explore_outlined': Icons.travel_explore_outlined,
  'Icons.trending_down': Icons.trending_down,
  'Icons.trending_down_sharp': Icons.trending_down_sharp,
  'Icons.trending_down_rounded': Icons.trending_down_rounded,
  'Icons.trending_down_outlined': Icons.trending_down_outlined,
  'Icons.trending_flat': Icons.trending_flat,
  'Icons.trending_flat_sharp': Icons.trending_flat_sharp,
  'Icons.trending_flat_rounded': Icons.trending_flat_rounded,
  'Icons.trending_flat_outlined': Icons.trending_flat_outlined,
  'Icons.trending_neutral': Icons.trending_neutral,
  'Icons.trending_neutral_sharp': Icons.trending_neutral_sharp,
  'Icons.trending_neutral_rounded': Icons.trending_neutral_rounded,
  'Icons.trending_neutral_outlined': Icons.trending_neutral_outlined,
  'Icons.trending_up': Icons.trending_up,
  'Icons.trending_up_sharp': Icons.trending_up_sharp,
  'Icons.trending_up_rounded': Icons.trending_up_rounded,
  'Icons.trending_up_outlined': Icons.trending_up_outlined,
  'Icons.trip_origin': Icons.trip_origin,
  'Icons.trip_origin_sharp': Icons.trip_origin_sharp,
  'Icons.trip_origin_rounded': Icons.trip_origin_rounded,
  'Icons.trip_origin_outlined': Icons.trip_origin_outlined,
  'Icons.troubleshoot': Icons.troubleshoot,
  'Icons.troubleshoot_sharp': Icons.troubleshoot_sharp,
  'Icons.troubleshoot_rounded': Icons.troubleshoot_rounded,
  'Icons.troubleshoot_outlined': Icons.troubleshoot_outlined,
  'Icons.try_sms_star': Icons.try_sms_star,
  'Icons.try_sms_star_sharp': Icons.try_sms_star_sharp,
  'Icons.try_sms_star_rounded': Icons.try_sms_star_rounded,
  'Icons.try_sms_star_outlined': Icons.try_sms_star_outlined,
  'Icons.tsunami': Icons.tsunami,
  'Icons.tsunami_sharp': Icons.tsunami_sharp,
  'Icons.tsunami_rounded': Icons.tsunami_rounded,
  'Icons.tsunami_outlined': Icons.tsunami_outlined,
  'Icons.tty': Icons.tty,
  'Icons.tty_sharp': Icons.tty_sharp,
  'Icons.tty_rounded': Icons.tty_rounded,
  'Icons.tty_outlined': Icons.tty_outlined,
  'Icons.tune': Icons.tune,
  'Icons.tune_sharp': Icons.tune_sharp,
  'Icons.tune_rounded': Icons.tune_rounded,
  'Icons.tune_outlined': Icons.tune_outlined,
  'Icons.tungsten': Icons.tungsten,
  'Icons.tungsten_sharp': Icons.tungsten_sharp,
  'Icons.tungsten_rounded': Icons.tungsten_rounded,
  'Icons.tungsten_outlined': Icons.tungsten_outlined,
  'Icons.turn_left': Icons.turn_left,
  'Icons.turn_left_sharp': Icons.turn_left_sharp,
  'Icons.turn_left_rounded': Icons.turn_left_rounded,
  'Icons.turn_left_outlined': Icons.turn_left_outlined,
  'Icons.turn_right': Icons.turn_right,
  'Icons.turn_right_sharp': Icons.turn_right_sharp,
  'Icons.turn_right_rounded': Icons.turn_right_rounded,
  'Icons.turn_right_outlined': Icons.turn_right_outlined,
  'Icons.turn_sharp_left': Icons.turn_sharp_left,
  'Icons.turn_sharp_left_sharp': Icons.turn_sharp_left_sharp,
  'Icons.turn_sharp_left_rounded': Icons.turn_sharp_left_rounded,
  'Icons.turn_sharp_left_outlined': Icons.turn_sharp_left_outlined,
  'Icons.turn_sharp_right': Icons.turn_sharp_right,
  'Icons.turn_sharp_right_sharp': Icons.turn_sharp_right_sharp,
  'Icons.turn_sharp_right_rounded': Icons.turn_sharp_right_rounded,
  'Icons.turn_sharp_right_outlined': Icons.turn_sharp_right_outlined,
  'Icons.turn_slight_left': Icons.turn_slight_left,
  'Icons.turn_slight_left_sharp': Icons.turn_slight_left_sharp,
  'Icons.turn_slight_left_rounded': Icons.turn_slight_left_rounded,
  'Icons.turn_slight_left_outlined': Icons.turn_slight_left_outlined,
  'Icons.turn_slight_right': Icons.turn_slight_right,
  'Icons.turn_slight_right_sharp': Icons.turn_slight_right_sharp,
  'Icons.turn_slight_right_rounded': Icons.turn_slight_right_rounded,
  'Icons.turn_slight_right_outlined': Icons.turn_slight_right_outlined,
  'Icons.turned_in': Icons.turned_in,
  'Icons.turned_in_sharp': Icons.turned_in_sharp,
  'Icons.turned_in_rounded': Icons.turned_in_rounded,
  'Icons.turned_in_outlined': Icons.turned_in_outlined,
  'Icons.turned_in_not': Icons.turned_in_not,
  'Icons.turned_in_not_sharp': Icons.turned_in_not_sharp,
  'Icons.turned_in_not_rounded': Icons.turned_in_not_rounded,
  'Icons.turned_in_not_outlined': Icons.turned_in_not_outlined,
  'Icons.tv': Icons.tv,
  'Icons.tv_sharp': Icons.tv_sharp,
  'Icons.tv_rounded': Icons.tv_rounded,
  'Icons.tv_outlined': Icons.tv_outlined,
  'Icons.tv_off': Icons.tv_off,
  'Icons.tv_off_sharp': Icons.tv_off_sharp,
  'Icons.tv_off_rounded': Icons.tv_off_rounded,
  'Icons.tv_off_outlined': Icons.tv_off_outlined,
  'Icons.two_wheeler': Icons.two_wheeler,
  'Icons.two_wheeler_sharp': Icons.two_wheeler_sharp,
  'Icons.two_wheeler_rounded': Icons.two_wheeler_rounded,
  'Icons.two_wheeler_outlined': Icons.two_wheeler_outlined,
  'Icons.type_specimen': Icons.type_specimen,
  'Icons.type_specimen_sharp': Icons.type_specimen_sharp,
  'Icons.type_specimen_rounded': Icons.type_specimen_rounded,
  'Icons.type_specimen_outlined': Icons.type_specimen_outlined,
  'Icons.u_turn_left': Icons.u_turn_left,
  'Icons.u_turn_left_sharp': Icons.u_turn_left_sharp,
  'Icons.u_turn_left_rounded': Icons.u_turn_left_rounded,
  'Icons.u_turn_left_outlined': Icons.u_turn_left_outlined,
  'Icons.u_turn_right': Icons.u_turn_right,
  'Icons.u_turn_right_sharp': Icons.u_turn_right_sharp,
  'Icons.u_turn_right_rounded': Icons.u_turn_right_rounded,
  'Icons.u_turn_right_outlined': Icons.u_turn_right_outlined,
  'Icons.umbrella': Icons.umbrella,
  'Icons.umbrella_sharp': Icons.umbrella_sharp,
  'Icons.umbrella_rounded': Icons.umbrella_rounded,
  'Icons.umbrella_outlined': Icons.umbrella_outlined,
  'Icons.unarchive': Icons.unarchive,
  'Icons.unarchive_sharp': Icons.unarchive_sharp,
  'Icons.unarchive_rounded': Icons.unarchive_rounded,
  'Icons.unarchive_outlined': Icons.unarchive_outlined,
  'Icons.undo': Icons.undo,
  'Icons.undo_sharp': Icons.undo_sharp,
  'Icons.undo_rounded': Icons.undo_rounded,
  'Icons.undo_outlined': Icons.undo_outlined,
  'Icons.unfold_less': Icons.unfold_less,
  'Icons.unfold_less_sharp': Icons.unfold_less_sharp,
  'Icons.unfold_less_rounded': Icons.unfold_less_rounded,
  'Icons.unfold_less_outlined': Icons.unfold_less_outlined,
  'Icons.unfold_more': Icons.unfold_more,
  'Icons.unfold_more_sharp': Icons.unfold_more_sharp,
  'Icons.unfold_more_rounded': Icons.unfold_more_rounded,
  'Icons.unfold_more_outlined': Icons.unfold_more_outlined,
  'Icons.unpublished': Icons.unpublished,
  'Icons.unpublished_sharp': Icons.unpublished_sharp,
  'Icons.unpublished_rounded': Icons.unpublished_rounded,
  'Icons.unpublished_outlined': Icons.unpublished_outlined,
  'Icons.unsubscribe': Icons.unsubscribe,
  'Icons.unsubscribe_sharp': Icons.unsubscribe_sharp,
  'Icons.unsubscribe_rounded': Icons.unsubscribe_rounded,
  'Icons.unsubscribe_outlined': Icons.unsubscribe_outlined,
  'Icons.upcoming': Icons.upcoming,
  'Icons.upcoming_sharp': Icons.upcoming_sharp,
  'Icons.upcoming_rounded': Icons.upcoming_rounded,
  'Icons.upcoming_outlined': Icons.upcoming_outlined,
  'Icons.update': Icons.update,
  'Icons.update_sharp': Icons.update_sharp,
  'Icons.update_rounded': Icons.update_rounded,
  'Icons.update_outlined': Icons.update_outlined,
  'Icons.update_disabled': Icons.update_disabled,
  'Icons.update_disabled_sharp': Icons.update_disabled_sharp,
  'Icons.update_disabled_rounded': Icons.update_disabled_rounded,
  'Icons.update_disabled_outlined': Icons.update_disabled_outlined,
  'Icons.upgrade': Icons.upgrade,
  'Icons.upgrade_sharp': Icons.upgrade_sharp,
  'Icons.upgrade_rounded': Icons.upgrade_rounded,
  'Icons.upgrade_outlined': Icons.upgrade_outlined,
  'Icons.upload': Icons.upload,
  'Icons.upload_sharp': Icons.upload_sharp,
  'Icons.upload_rounded': Icons.upload_rounded,
  'Icons.upload_outlined': Icons.upload_outlined,
  'Icons.upload_file': Icons.upload_file,
  'Icons.upload_file_sharp': Icons.upload_file_sharp,
  'Icons.upload_file_rounded': Icons.upload_file_rounded,
  'Icons.upload_file_outlined': Icons.upload_file_outlined,
  'Icons.usb': Icons.usb,
  'Icons.usb_sharp': Icons.usb_sharp,
  'Icons.usb_rounded': Icons.usb_rounded,
  'Icons.usb_outlined': Icons.usb_outlined,
  'Icons.usb_off': Icons.usb_off,
  'Icons.usb_off_sharp': Icons.usb_off_sharp,
  'Icons.usb_off_rounded': Icons.usb_off_rounded,
  'Icons.usb_off_outlined': Icons.usb_off_outlined,
  'Icons.vaccines': Icons.vaccines,
  'Icons.vaccines_sharp': Icons.vaccines_sharp,
  'Icons.vaccines_rounded': Icons.vaccines_rounded,
  'Icons.vaccines_outlined': Icons.vaccines_outlined,
  'Icons.vape_free': Icons.vape_free,
  'Icons.vape_free_sharp': Icons.vape_free_sharp,
  'Icons.vape_free_rounded': Icons.vape_free_rounded,
  'Icons.vape_free_outlined': Icons.vape_free_outlined,
  'Icons.vaping_rooms': Icons.vaping_rooms,
  'Icons.vaping_rooms_sharp': Icons.vaping_rooms_sharp,
  'Icons.vaping_rooms_rounded': Icons.vaping_rooms_rounded,
  'Icons.vaping_rooms_outlined': Icons.vaping_rooms_outlined,
  'Icons.verified': Icons.verified,
  'Icons.verified_sharp': Icons.verified_sharp,
  'Icons.verified_rounded': Icons.verified_rounded,
  'Icons.verified_outlined': Icons.verified_outlined,
  'Icons.verified_user': Icons.verified_user,
  'Icons.verified_user_sharp': Icons.verified_user_sharp,
  'Icons.verified_user_rounded': Icons.verified_user_rounded,
  'Icons.verified_user_outlined': Icons.verified_user_outlined,
  'Icons.vertical_align_bottom': Icons.vertical_align_bottom,
  'Icons.vertical_align_bottom_sharp': Icons.vertical_align_bottom_sharp,
  'Icons.vertical_align_bottom_rounded': Icons.vertical_align_bottom_rounded,
  'Icons.vertical_align_bottom_outlined': Icons.vertical_align_bottom_outlined,
  'Icons.vertical_align_center': Icons.vertical_align_center,
  'Icons.vertical_align_center_sharp': Icons.vertical_align_center_sharp,
  'Icons.vertical_align_center_rounded': Icons.vertical_align_center_rounded,
  'Icons.vertical_align_center_outlined': Icons.vertical_align_center_outlined,
  'Icons.vertical_align_top': Icons.vertical_align_top,
  'Icons.vertical_align_top_sharp': Icons.vertical_align_top_sharp,
  'Icons.vertical_align_top_rounded': Icons.vertical_align_top_rounded,
  'Icons.vertical_align_top_outlined': Icons.vertical_align_top_outlined,
  'Icons.vertical_distribute': Icons.vertical_distribute,
  'Icons.vertical_distribute_sharp': Icons.vertical_distribute_sharp,
  'Icons.vertical_distribute_rounded': Icons.vertical_distribute_rounded,
  'Icons.vertical_distribute_outlined': Icons.vertical_distribute_outlined,
  'Icons.vertical_shades': Icons.vertical_shades,
  'Icons.vertical_shades_sharp': Icons.vertical_shades_sharp,
  'Icons.vertical_shades_rounded': Icons.vertical_shades_rounded,
  'Icons.vertical_shades_outlined': Icons.vertical_shades_outlined,
  'Icons.vertical_shades_closed': Icons.vertical_shades_closed,
  'Icons.vertical_shades_closed_sharp': Icons.vertical_shades_closed_sharp,
  'Icons.vertical_shades_closed_rounded': Icons.vertical_shades_closed_rounded,
  'Icons.vertical_shades_closed_outlined':
      Icons.vertical_shades_closed_outlined,
  'Icons.vertical_split': Icons.vertical_split,
  'Icons.vertical_split_sharp': Icons.vertical_split_sharp,
  'Icons.vertical_split_rounded': Icons.vertical_split_rounded,
  'Icons.vertical_split_outlined': Icons.vertical_split_outlined,
  'Icons.vibration': Icons.vibration,
  'Icons.vibration_sharp': Icons.vibration_sharp,
  'Icons.vibration_rounded': Icons.vibration_rounded,
  'Icons.vibration_outlined': Icons.vibration_outlined,
  'Icons.video_call': Icons.video_call,
  'Icons.video_call_sharp': Icons.video_call_sharp,
  'Icons.video_call_rounded': Icons.video_call_rounded,
  'Icons.video_call_outlined': Icons.video_call_outlined,
  'Icons.video_camera_back': Icons.video_camera_back,
  'Icons.video_camera_back_sharp': Icons.video_camera_back_sharp,
  'Icons.video_camera_back_rounded': Icons.video_camera_back_rounded,
  'Icons.video_camera_back_outlined': Icons.video_camera_back_outlined,
  'Icons.video_camera_front': Icons.video_camera_front,
  'Icons.video_camera_front_sharp': Icons.video_camera_front_sharp,
  'Icons.video_camera_front_rounded': Icons.video_camera_front_rounded,
  'Icons.video_camera_front_outlined': Icons.video_camera_front_outlined,
  'Icons.video_collection': Icons.video_collection,
  'Icons.video_collection_sharp': Icons.video_collection_sharp,
  'Icons.video_collection_rounded': Icons.video_collection_rounded,
  'Icons.video_collection_outlined': Icons.video_collection_outlined,
  'Icons.video_file': Icons.video_file,
  'Icons.video_file_sharp': Icons.video_file_sharp,
  'Icons.video_file_rounded': Icons.video_file_rounded,
  'Icons.video_file_outlined': Icons.video_file_outlined,
  'Icons.video_label': Icons.video_label,
  'Icons.video_label_sharp': Icons.video_label_sharp,
  'Icons.video_label_rounded': Icons.video_label_rounded,
  'Icons.video_label_outlined': Icons.video_label_outlined,
  'Icons.video_library': Icons.video_library,
  'Icons.video_library_sharp': Icons.video_library_sharp,
  'Icons.video_library_rounded': Icons.video_library_rounded,
  'Icons.video_library_outlined': Icons.video_library_outlined,
  'Icons.video_settings': Icons.video_settings,
  'Icons.video_settings_sharp': Icons.video_settings_sharp,
  'Icons.video_settings_rounded': Icons.video_settings_rounded,
  'Icons.video_settings_outlined': Icons.video_settings_outlined,
  'Icons.video_stable': Icons.video_stable,
  'Icons.video_stable_sharp': Icons.video_stable_sharp,
  'Icons.video_stable_rounded': Icons.video_stable_rounded,
  'Icons.video_stable_outlined': Icons.video_stable_outlined,
  'Icons.videocam': Icons.videocam,
  'Icons.videocam_sharp': Icons.videocam_sharp,
  'Icons.videocam_rounded': Icons.videocam_rounded,
  'Icons.videocam_outlined': Icons.videocam_outlined,
  'Icons.videocam_off': Icons.videocam_off,
  'Icons.videocam_off_sharp': Icons.videocam_off_sharp,
  'Icons.videocam_off_rounded': Icons.videocam_off_rounded,
  'Icons.videocam_off_outlined': Icons.videocam_off_outlined,
  'Icons.videogame_asset': Icons.videogame_asset,
  'Icons.videogame_asset_sharp': Icons.videogame_asset_sharp,
  'Icons.videogame_asset_rounded': Icons.videogame_asset_rounded,
  'Icons.videogame_asset_outlined': Icons.videogame_asset_outlined,
  'Icons.videogame_asset_off': Icons.videogame_asset_off,
  'Icons.videogame_asset_off_sharp': Icons.videogame_asset_off_sharp,
  'Icons.videogame_asset_off_rounded': Icons.videogame_asset_off_rounded,
  'Icons.videogame_asset_off_outlined': Icons.videogame_asset_off_outlined,
  'Icons.view_agenda': Icons.view_agenda,
  'Icons.view_agenda_sharp': Icons.view_agenda_sharp,
  'Icons.view_agenda_rounded': Icons.view_agenda_rounded,
  'Icons.view_agenda_outlined': Icons.view_agenda_outlined,
  'Icons.view_array': Icons.view_array,
  'Icons.view_array_sharp': Icons.view_array_sharp,
  'Icons.view_array_rounded': Icons.view_array_rounded,
  'Icons.view_array_outlined': Icons.view_array_outlined,
  'Icons.view_carousel': Icons.view_carousel,
  'Icons.view_carousel_sharp': Icons.view_carousel_sharp,
  'Icons.view_carousel_rounded': Icons.view_carousel_rounded,
  'Icons.view_carousel_outlined': Icons.view_carousel_outlined,
  'Icons.view_column': Icons.view_column,
  'Icons.view_column_sharp': Icons.view_column_sharp,
  'Icons.view_column_rounded': Icons.view_column_rounded,
  'Icons.view_column_outlined': Icons.view_column_outlined,
  'Icons.view_comfortable': Icons.view_comfortable,
  'Icons.view_comfortable_sharp': Icons.view_comfortable_sharp,
  'Icons.view_comfortable_rounded': Icons.view_comfortable_rounded,
  'Icons.view_comfortable_outlined': Icons.view_comfortable_outlined,
  'Icons.view_comfy': Icons.view_comfy,
  'Icons.view_comfy_sharp': Icons.view_comfy_sharp,
  'Icons.view_comfy_rounded': Icons.view_comfy_rounded,
  'Icons.view_comfy_outlined': Icons.view_comfy_outlined,
  'Icons.view_comfy_alt': Icons.view_comfy_alt,
  'Icons.view_comfy_alt_sharp': Icons.view_comfy_alt_sharp,
  'Icons.view_comfy_alt_rounded': Icons.view_comfy_alt_rounded,
  'Icons.view_comfy_alt_outlined': Icons.view_comfy_alt_outlined,
  'Icons.view_compact': Icons.view_compact,
  'Icons.view_compact_sharp': Icons.view_compact_sharp,
  'Icons.view_compact_rounded': Icons.view_compact_rounded,
  'Icons.view_compact_outlined': Icons.view_compact_outlined,
  'Icons.view_compact_alt': Icons.view_compact_alt,
  'Icons.view_compact_alt_sharp': Icons.view_compact_alt_sharp,
  'Icons.view_compact_alt_rounded': Icons.view_compact_alt_rounded,
  'Icons.view_compact_alt_outlined': Icons.view_compact_alt_outlined,
  'Icons.view_cozy': Icons.view_cozy,
  'Icons.view_cozy_sharp': Icons.view_cozy_sharp,
  'Icons.view_cozy_rounded': Icons.view_cozy_rounded,
  'Icons.view_cozy_outlined': Icons.view_cozy_outlined,
  'Icons.view_day': Icons.view_day,
  'Icons.view_day_sharp': Icons.view_day_sharp,
  'Icons.view_day_rounded': Icons.view_day_rounded,
  'Icons.view_day_outlined': Icons.view_day_outlined,
  'Icons.view_headline': Icons.view_headline,
  'Icons.view_headline_sharp': Icons.view_headline_sharp,
  'Icons.view_headline_rounded': Icons.view_headline_rounded,
  'Icons.view_headline_outlined': Icons.view_headline_outlined,
  'Icons.view_in_ar': Icons.view_in_ar,
  'Icons.view_in_ar_sharp': Icons.view_in_ar_sharp,
  'Icons.view_in_ar_rounded': Icons.view_in_ar_rounded,
  'Icons.view_in_ar_outlined': Icons.view_in_ar_outlined,
  'Icons.view_kanban': Icons.view_kanban,
  'Icons.view_kanban_sharp': Icons.view_kanban_sharp,
  'Icons.view_kanban_rounded': Icons.view_kanban_rounded,
  'Icons.view_kanban_outlined': Icons.view_kanban_outlined,
  'Icons.view_list': Icons.view_list,
  'Icons.view_list_sharp': Icons.view_list_sharp,
  'Icons.view_list_rounded': Icons.view_list_rounded,
  'Icons.view_list_outlined': Icons.view_list_outlined,
  'Icons.view_module': Icons.view_module,
  'Icons.view_module_sharp': Icons.view_module_sharp,
  'Icons.view_module_rounded': Icons.view_module_rounded,
  'Icons.view_module_outlined': Icons.view_module_outlined,
  'Icons.view_quilt': Icons.view_quilt,
  'Icons.view_quilt_sharp': Icons.view_quilt_sharp,
  'Icons.view_quilt_rounded': Icons.view_quilt_rounded,
  'Icons.view_quilt_outlined': Icons.view_quilt_outlined,
  'Icons.view_sidebar': Icons.view_sidebar,
  'Icons.view_sidebar_sharp': Icons.view_sidebar_sharp,
  'Icons.view_sidebar_rounded': Icons.view_sidebar_rounded,
  'Icons.view_sidebar_outlined': Icons.view_sidebar_outlined,
  'Icons.view_stream': Icons.view_stream,
  'Icons.view_stream_sharp': Icons.view_stream_sharp,
  'Icons.view_stream_rounded': Icons.view_stream_rounded,
  'Icons.view_stream_outlined': Icons.view_stream_outlined,
  'Icons.view_timeline': Icons.view_timeline,
  'Icons.view_timeline_sharp': Icons.view_timeline_sharp,
  'Icons.view_timeline_rounded': Icons.view_timeline_rounded,
  'Icons.view_timeline_outlined': Icons.view_timeline_outlined,
  'Icons.view_week': Icons.view_week,
  'Icons.view_week_sharp': Icons.view_week_sharp,
  'Icons.view_week_rounded': Icons.view_week_rounded,
  'Icons.view_week_outlined': Icons.view_week_outlined,
  'Icons.vignette': Icons.vignette,
  'Icons.vignette_sharp': Icons.vignette_sharp,
  'Icons.vignette_rounded': Icons.vignette_rounded,
  'Icons.vignette_outlined': Icons.vignette_outlined,
  'Icons.villa': Icons.villa,
  'Icons.villa_sharp': Icons.villa_sharp,
  'Icons.villa_rounded': Icons.villa_rounded,
  'Icons.villa_outlined': Icons.villa_outlined,
  'Icons.visibility': Icons.visibility,
  'Icons.visibility_sharp': Icons.visibility_sharp,
  'Icons.visibility_rounded': Icons.visibility_rounded,
  'Icons.visibility_outlined': Icons.visibility_outlined,
  'Icons.visibility_off': Icons.visibility_off,
  'Icons.visibility_off_sharp': Icons.visibility_off_sharp,
  'Icons.visibility_off_rounded': Icons.visibility_off_rounded,
  'Icons.visibility_off_outlined': Icons.visibility_off_outlined,
  'Icons.voice_chat': Icons.voice_chat,
  'Icons.voice_chat_sharp': Icons.voice_chat_sharp,
  'Icons.voice_chat_rounded': Icons.voice_chat_rounded,
  'Icons.voice_chat_outlined': Icons.voice_chat_outlined,
  'Icons.voice_over_off': Icons.voice_over_off,
  'Icons.voice_over_off_sharp': Icons.voice_over_off_sharp,
  'Icons.voice_over_off_rounded': Icons.voice_over_off_rounded,
  'Icons.voice_over_off_outlined': Icons.voice_over_off_outlined,
  'Icons.voicemail': Icons.voicemail,
  'Icons.voicemail_sharp': Icons.voicemail_sharp,
  'Icons.voicemail_rounded': Icons.voicemail_rounded,
  'Icons.voicemail_outlined': Icons.voicemail_outlined,
  'Icons.volcano': Icons.volcano,
  'Icons.volcano_sharp': Icons.volcano_sharp,
  'Icons.volcano_rounded': Icons.volcano_rounded,
  'Icons.volcano_outlined': Icons.volcano_outlined,
  'Icons.volume_down': Icons.volume_down,
  'Icons.volume_down_sharp': Icons.volume_down_sharp,
  'Icons.volume_down_rounded': Icons.volume_down_rounded,
  'Icons.volume_down_outlined': Icons.volume_down_outlined,
  'Icons.volume_down_alt': Icons.volume_down_alt,
  'Icons.volume_mute': Icons.volume_mute,
  'Icons.volume_mute_sharp': Icons.volume_mute_sharp,
  'Icons.volume_mute_rounded': Icons.volume_mute_rounded,
  'Icons.volume_mute_outlined': Icons.volume_mute_outlined,
  'Icons.volume_off': Icons.volume_off,
  'Icons.volume_off_sharp': Icons.volume_off_sharp,
  'Icons.volume_off_rounded': Icons.volume_off_rounded,
  'Icons.volume_off_outlined': Icons.volume_off_outlined,
  'Icons.volume_up': Icons.volume_up,
  'Icons.volume_up_sharp': Icons.volume_up_sharp,
  'Icons.volume_up_rounded': Icons.volume_up_rounded,
  'Icons.volume_up_outlined': Icons.volume_up_outlined,
  'Icons.volunteer_activism': Icons.volunteer_activism,
  'Icons.volunteer_activism_sharp': Icons.volunteer_activism_sharp,
  'Icons.volunteer_activism_rounded': Icons.volunteer_activism_rounded,
  'Icons.volunteer_activism_outlined': Icons.volunteer_activism_outlined,
  'Icons.vpn_key': Icons.vpn_key,
  'Icons.vpn_key_sharp': Icons.vpn_key_sharp,
  'Icons.vpn_key_rounded': Icons.vpn_key_rounded,
  'Icons.vpn_key_outlined': Icons.vpn_key_outlined,
  'Icons.vpn_key_off': Icons.vpn_key_off,
  'Icons.vpn_key_off_sharp': Icons.vpn_key_off_sharp,
  'Icons.vpn_key_off_rounded': Icons.vpn_key_off_rounded,
  'Icons.vpn_key_off_outlined': Icons.vpn_key_off_outlined,
  'Icons.vpn_lock': Icons.vpn_lock,
  'Icons.vpn_lock_sharp': Icons.vpn_lock_sharp,
  'Icons.vpn_lock_rounded': Icons.vpn_lock_rounded,
  'Icons.vpn_lock_outlined': Icons.vpn_lock_outlined,
  'Icons.vrpano': Icons.vrpano,
  'Icons.vrpano_sharp': Icons.vrpano_sharp,
  'Icons.vrpano_rounded': Icons.vrpano_rounded,
  'Icons.vrpano_outlined': Icons.vrpano_outlined,
  'Icons.wallet': Icons.wallet,
  'Icons.wallet_sharp': Icons.wallet_sharp,
  'Icons.wallet_rounded': Icons.wallet_rounded,
  'Icons.wallet_outlined': Icons.wallet_outlined,
  'Icons.wallet_giftcard': Icons.wallet_giftcard,
  'Icons.wallet_giftcard_sharp': Icons.wallet_giftcard_sharp,
  'Icons.wallet_giftcard_rounded': Icons.wallet_giftcard_rounded,
  'Icons.wallet_giftcard_outlined': Icons.wallet_giftcard_outlined,
  'Icons.wallet_membership': Icons.wallet_membership,
  'Icons.wallet_membership_sharp': Icons.wallet_membership_sharp,
  'Icons.wallet_membership_rounded': Icons.wallet_membership_rounded,
  'Icons.wallet_membership_outlined': Icons.wallet_membership_outlined,
  'Icons.wallet_travel': Icons.wallet_travel,
  'Icons.wallet_travel_sharp': Icons.wallet_travel_sharp,
  'Icons.wallet_travel_rounded': Icons.wallet_travel_rounded,
  'Icons.wallet_travel_outlined': Icons.wallet_travel_outlined,
  'Icons.wallpaper': Icons.wallpaper,
  'Icons.wallpaper_sharp': Icons.wallpaper_sharp,
  'Icons.wallpaper_rounded': Icons.wallpaper_rounded,
  'Icons.wallpaper_outlined': Icons.wallpaper_outlined,
  'Icons.warehouse': Icons.warehouse,
  'Icons.warehouse_sharp': Icons.warehouse_sharp,
  'Icons.warehouse_rounded': Icons.warehouse_rounded,
  'Icons.warehouse_outlined': Icons.warehouse_outlined,
  'Icons.warning': Icons.warning,
  'Icons.warning_sharp': Icons.warning_sharp,
  'Icons.warning_rounded': Icons.warning_rounded,
  'Icons.warning_outlined': Icons.warning_outlined,
  'Icons.warning_amber': Icons.warning_amber,
  'Icons.warning_amber_sharp': Icons.warning_amber_sharp,
  'Icons.warning_amber_rounded': Icons.warning_amber_rounded,
  'Icons.warning_amber_outlined': Icons.warning_amber_outlined,
  'Icons.wash': Icons.wash,
  'Icons.wash_sharp': Icons.wash_sharp,
  'Icons.wash_rounded': Icons.wash_rounded,
  'Icons.wash_outlined': Icons.wash_outlined,
  'Icons.watch': Icons.watch,
  'Icons.watch_sharp': Icons.watch_sharp,
  'Icons.watch_rounded': Icons.watch_rounded,
  'Icons.watch_outlined': Icons.watch_outlined,
  'Icons.watch_later': Icons.watch_later,
  'Icons.watch_later_sharp': Icons.watch_later_sharp,
  'Icons.watch_later_rounded': Icons.watch_later_rounded,
  'Icons.watch_later_outlined': Icons.watch_later_outlined,
  'Icons.watch_off': Icons.watch_off,
  'Icons.watch_off_sharp': Icons.watch_off_sharp,
  'Icons.watch_off_rounded': Icons.watch_off_rounded,
  'Icons.watch_off_outlined': Icons.watch_off_outlined,
  'Icons.water': Icons.water,
  'Icons.water_sharp': Icons.water_sharp,
  'Icons.water_rounded': Icons.water_rounded,
  'Icons.water_outlined': Icons.water_outlined,
  'Icons.water_damage': Icons.water_damage,
  'Icons.water_damage_sharp': Icons.water_damage_sharp,
  'Icons.water_damage_rounded': Icons.water_damage_rounded,
  'Icons.water_damage_outlined': Icons.water_damage_outlined,
  'Icons.water_drop': Icons.water_drop,
  'Icons.water_drop_sharp': Icons.water_drop_sharp,
  'Icons.water_drop_rounded': Icons.water_drop_rounded,
  'Icons.water_drop_outlined': Icons.water_drop_outlined,
  'Icons.waterfall_chart': Icons.waterfall_chart,
  'Icons.waterfall_chart_sharp': Icons.waterfall_chart_sharp,
  'Icons.waterfall_chart_rounded': Icons.waterfall_chart_rounded,
  'Icons.waterfall_chart_outlined': Icons.waterfall_chart_outlined,
  'Icons.waves': Icons.waves,
  'Icons.waves_sharp': Icons.waves_sharp,
  'Icons.waves_rounded': Icons.waves_rounded,
  'Icons.waves_outlined': Icons.waves_outlined,
  'Icons.waving_hand': Icons.waving_hand,
  'Icons.waving_hand_sharp': Icons.waving_hand_sharp,
  'Icons.waving_hand_rounded': Icons.waving_hand_rounded,
  'Icons.waving_hand_outlined': Icons.waving_hand_outlined,
  'Icons.wb_auto': Icons.wb_auto,
  'Icons.wb_auto_sharp': Icons.wb_auto_sharp,
  'Icons.wb_auto_rounded': Icons.wb_auto_rounded,
  'Icons.wb_auto_outlined': Icons.wb_auto_outlined,
  'Icons.wb_cloudy': Icons.wb_cloudy,
  'Icons.wb_cloudy_sharp': Icons.wb_cloudy_sharp,
  'Icons.wb_cloudy_rounded': Icons.wb_cloudy_rounded,
  'Icons.wb_cloudy_outlined': Icons.wb_cloudy_outlined,
  'Icons.wb_incandescent': Icons.wb_incandescent,
  'Icons.wb_incandescent_sharp': Icons.wb_incandescent_sharp,
  'Icons.wb_incandescent_rounded': Icons.wb_incandescent_rounded,
  'Icons.wb_incandescent_outlined': Icons.wb_incandescent_outlined,
  'Icons.wb_iridescent': Icons.wb_iridescent,
  'Icons.wb_iridescent_sharp': Icons.wb_iridescent_sharp,
  'Icons.wb_iridescent_rounded': Icons.wb_iridescent_rounded,
  'Icons.wb_iridescent_outlined': Icons.wb_iridescent_outlined,
  'Icons.wb_shade': Icons.wb_shade,
  'Icons.wb_shade_sharp': Icons.wb_shade_sharp,
  'Icons.wb_shade_rounded': Icons.wb_shade_rounded,
  'Icons.wb_shade_outlined': Icons.wb_shade_outlined,
  'Icons.wb_sunny': Icons.wb_sunny,
  'Icons.wb_sunny_sharp': Icons.wb_sunny_sharp,
  'Icons.wb_sunny_rounded': Icons.wb_sunny_rounded,
  'Icons.wb_sunny_outlined': Icons.wb_sunny_outlined,
  'Icons.wb_twighlight': Icons.wb_twighlight,
  'Icons.wb_twilight': Icons.wb_twilight,
  'Icons.wb_twilight_sharp': Icons.wb_twilight_sharp,
  'Icons.wb_twilight_rounded': Icons.wb_twilight_rounded,
  'Icons.wb_twilight_outlined': Icons.wb_twilight_outlined,
  'Icons.wc': Icons.wc,
  'Icons.wc_sharp': Icons.wc_sharp,
  'Icons.wc_rounded': Icons.wc_rounded,
  'Icons.wc_outlined': Icons.wc_outlined,
  'Icons.web': Icons.web,
  'Icons.web_sharp': Icons.web_sharp,
  'Icons.web_rounded': Icons.web_rounded,
  'Icons.web_outlined': Icons.web_outlined,
  'Icons.web_asset': Icons.web_asset,
  'Icons.web_asset_sharp': Icons.web_asset_sharp,
  'Icons.web_asset_rounded': Icons.web_asset_rounded,
  'Icons.web_asset_outlined': Icons.web_asset_outlined,
  'Icons.web_asset_off': Icons.web_asset_off,
  'Icons.web_asset_off_sharp': Icons.web_asset_off_sharp,
  'Icons.web_asset_off_rounded': Icons.web_asset_off_rounded,
  'Icons.web_asset_off_outlined': Icons.web_asset_off_outlined,
  'Icons.web_stories': Icons.web_stories,
  'Icons.webhook': Icons.webhook,
  'Icons.webhook_sharp': Icons.webhook_sharp,
  'Icons.webhook_rounded': Icons.webhook_rounded,
  'Icons.webhook_outlined': Icons.webhook_outlined,
  'Icons.wechat': Icons.wechat,
  'Icons.wechat_sharp': Icons.wechat_sharp,
  'Icons.wechat_rounded': Icons.wechat_rounded,
  'Icons.wechat_outlined': Icons.wechat_outlined,
  'Icons.weekend': Icons.weekend,
  'Icons.weekend_sharp': Icons.weekend_sharp,
  'Icons.weekend_rounded': Icons.weekend_rounded,
  'Icons.weekend_outlined': Icons.weekend_outlined,
  'Icons.west': Icons.west,
  'Icons.west_sharp': Icons.west_sharp,
  'Icons.west_rounded': Icons.west_rounded,
  'Icons.west_outlined': Icons.west_outlined,
  'Icons.whatsapp': Icons.whatsapp,
  'Icons.whatsapp_sharp': Icons.whatsapp_sharp,
  'Icons.whatsapp_rounded': Icons.whatsapp_rounded,
  'Icons.whatsapp_outlined': Icons.whatsapp_outlined,
  'Icons.whatshot': Icons.whatshot,
  'Icons.whatshot_sharp': Icons.whatshot_sharp,
  'Icons.whatshot_rounded': Icons.whatshot_rounded,
  'Icons.whatshot_outlined': Icons.whatshot_outlined,
  'Icons.wheelchair_pickup': Icons.wheelchair_pickup,
  'Icons.wheelchair_pickup_sharp': Icons.wheelchair_pickup_sharp,
  'Icons.wheelchair_pickup_rounded': Icons.wheelchair_pickup_rounded,
  'Icons.wheelchair_pickup_outlined': Icons.wheelchair_pickup_outlined,
  'Icons.where_to_vote': Icons.where_to_vote,
  'Icons.where_to_vote_sharp': Icons.where_to_vote_sharp,
  'Icons.where_to_vote_rounded': Icons.where_to_vote_rounded,
  'Icons.where_to_vote_outlined': Icons.where_to_vote_outlined,
  'Icons.widgets': Icons.widgets,
  'Icons.widgets_sharp': Icons.widgets_sharp,
  'Icons.widgets_rounded': Icons.widgets_rounded,
  'Icons.widgets_outlined': Icons.widgets_outlined,
  'Icons.width_full': Icons.width_full,
  'Icons.width_full_sharp': Icons.width_full_sharp,
  'Icons.width_full_rounded': Icons.width_full_rounded,
  'Icons.width_full_outlined': Icons.width_full_outlined,
  'Icons.width_normal': Icons.width_normal,
  'Icons.width_normal_sharp': Icons.width_normal_sharp,
  'Icons.width_normal_rounded': Icons.width_normal_rounded,
  'Icons.width_normal_outlined': Icons.width_normal_outlined,
  'Icons.width_wide': Icons.width_wide,
  'Icons.width_wide_sharp': Icons.width_wide_sharp,
  'Icons.width_wide_rounded': Icons.width_wide_rounded,
  'Icons.width_wide_outlined': Icons.width_wide_outlined,
  'Icons.wifi': Icons.wifi,
  'Icons.wifi_sharp': Icons.wifi_sharp,
  'Icons.wifi_rounded': Icons.wifi_rounded,
  'Icons.wifi_outlined': Icons.wifi_outlined,
  'Icons.wifi_1_bar': Icons.wifi_1_bar,
  'Icons.wifi_1_bar_sharp': Icons.wifi_1_bar_sharp,
  'Icons.wifi_1_bar_rounded': Icons.wifi_1_bar_rounded,
  'Icons.wifi_1_bar_outlined': Icons.wifi_1_bar_outlined,
  'Icons.wifi_2_bar': Icons.wifi_2_bar,
  'Icons.wifi_2_bar_sharp': Icons.wifi_2_bar_sharp,
  'Icons.wifi_2_bar_rounded': Icons.wifi_2_bar_rounded,
  'Icons.wifi_2_bar_outlined': Icons.wifi_2_bar_outlined,
  'Icons.wifi_calling': Icons.wifi_calling,
  'Icons.wifi_calling_sharp': Icons.wifi_calling_sharp,
  'Icons.wifi_calling_rounded': Icons.wifi_calling_rounded,
  'Icons.wifi_calling_outlined': Icons.wifi_calling_outlined,
  'Icons.wifi_calling_3': Icons.wifi_calling_3,
  'Icons.wifi_calling_3_sharp': Icons.wifi_calling_3_sharp,
  'Icons.wifi_calling_3_rounded': Icons.wifi_calling_3_rounded,
  'Icons.wifi_calling_3_outlined': Icons.wifi_calling_3_outlined,
  'Icons.wifi_channel': Icons.wifi_channel,
  'Icons.wifi_channel_sharp': Icons.wifi_channel_sharp,
  'Icons.wifi_channel_rounded': Icons.wifi_channel_rounded,
  'Icons.wifi_channel_outlined': Icons.wifi_channel_outlined,
  'Icons.wifi_find': Icons.wifi_find,
  'Icons.wifi_find_sharp': Icons.wifi_find_sharp,
  'Icons.wifi_find_rounded': Icons.wifi_find_rounded,
  'Icons.wifi_find_outlined': Icons.wifi_find_outlined,
  'Icons.wifi_lock': Icons.wifi_lock,
  'Icons.wifi_lock_sharp': Icons.wifi_lock_sharp,
  'Icons.wifi_lock_rounded': Icons.wifi_lock_rounded,
  'Icons.wifi_lock_outlined': Icons.wifi_lock_outlined,
  'Icons.wifi_off': Icons.wifi_off,
  'Icons.wifi_off_sharp': Icons.wifi_off_sharp,
  'Icons.wifi_off_rounded': Icons.wifi_off_rounded,
  'Icons.wifi_off_outlined': Icons.wifi_off_outlined,
  'Icons.wifi_password': Icons.wifi_password,
  'Icons.wifi_password_sharp': Icons.wifi_password_sharp,
  'Icons.wifi_password_rounded': Icons.wifi_password_rounded,
  'Icons.wifi_password_outlined': Icons.wifi_password_outlined,
  'Icons.wifi_protected_setup': Icons.wifi_protected_setup,
  'Icons.wifi_protected_setup_sharp': Icons.wifi_protected_setup_sharp,
  'Icons.wifi_protected_setup_rounded': Icons.wifi_protected_setup_rounded,
  'Icons.wifi_protected_setup_outlined': Icons.wifi_protected_setup_outlined,
  'Icons.wifi_tethering': Icons.wifi_tethering,
  'Icons.wifi_tethering_sharp': Icons.wifi_tethering_sharp,
  'Icons.wifi_tethering_rounded': Icons.wifi_tethering_rounded,
  'Icons.wifi_tethering_outlined': Icons.wifi_tethering_outlined,
  'Icons.wifi_tethering_error': Icons.wifi_tethering_error,
  'Icons.wifi_tethering_error_sharp': Icons.wifi_tethering_error_sharp,
  'Icons.wifi_tethering_error_rounded': Icons.wifi_tethering_error_rounded,
  'Icons.wifi_tethering_error_outlined': Icons.wifi_tethering_error_outlined,
  'Icons.wifi_tethering_error_rounded_sharp':
      Icons.wifi_tethering_error_rounded_sharp,
  'Icons.wifi_tethering_error_rounded_rounded':
      Icons.wifi_tethering_error_rounded_rounded,
  'Icons.wifi_tethering_error_rounded_outlined':
      Icons.wifi_tethering_error_rounded_outlined,
  'Icons.wifi_tethering_off': Icons.wifi_tethering_off,
  'Icons.wifi_tethering_off_sharp': Icons.wifi_tethering_off_sharp,
  'Icons.wifi_tethering_off_rounded': Icons.wifi_tethering_off_rounded,
  'Icons.wifi_tethering_off_outlined': Icons.wifi_tethering_off_outlined,
  'Icons.wind_power': Icons.wind_power,
  'Icons.wind_power_sharp': Icons.wind_power_sharp,
  'Icons.wind_power_rounded': Icons.wind_power_rounded,
  'Icons.wind_power_outlined': Icons.wind_power_outlined,
  'Icons.window': Icons.window,
  'Icons.window_sharp': Icons.window_sharp,
  'Icons.window_rounded': Icons.window_rounded,
  'Icons.window_outlined': Icons.window_outlined,
  'Icons.wine_bar': Icons.wine_bar,
  'Icons.wine_bar_sharp': Icons.wine_bar_sharp,
  'Icons.wine_bar_rounded': Icons.wine_bar_rounded,
  'Icons.wine_bar_outlined': Icons.wine_bar_outlined,
  'Icons.woman': Icons.woman,
  'Icons.woman_sharp': Icons.woman_sharp,
  'Icons.woman_rounded': Icons.woman_rounded,
  'Icons.woman_outlined': Icons.woman_outlined,
  'Icons.woo_commerce': Icons.woo_commerce,
  'Icons.woo_commerce_sharp': Icons.woo_commerce_sharp,
  'Icons.woo_commerce_rounded': Icons.woo_commerce_rounded,
  'Icons.woo_commerce_outlined': Icons.woo_commerce_outlined,
  'Icons.wordpress': Icons.wordpress,
  'Icons.wordpress_sharp': Icons.wordpress_sharp,
  'Icons.wordpress_rounded': Icons.wordpress_rounded,
  'Icons.wordpress_outlined': Icons.wordpress_outlined,
  'Icons.work': Icons.work,
  'Icons.work_sharp': Icons.work_sharp,
  'Icons.work_rounded': Icons.work_rounded,
  'Icons.work_outlined': Icons.work_outlined,
  'Icons.work_history': Icons.work_history,
  'Icons.work_history_sharp': Icons.work_history_sharp,
  'Icons.work_history_rounded': Icons.work_history_rounded,
  'Icons.work_history_outlined': Icons.work_history_outlined,
  'Icons.work_off': Icons.work_off,
  'Icons.work_off_sharp': Icons.work_off_sharp,
  'Icons.work_off_rounded': Icons.work_off_rounded,
  'Icons.work_off_outlined': Icons.work_off_outlined,
  'Icons.work_outline': Icons.work_outline,
  'Icons.work_outline_sharp': Icons.work_outline_sharp,
  'Icons.work_outline_rounded': Icons.work_outline_rounded,
  'Icons.work_outline_outlined': Icons.work_outline_outlined,
  'Icons.workspace_premium': Icons.workspace_premium,
  'Icons.workspace_premium_sharp': Icons.workspace_premium_sharp,
  'Icons.workspace_premium_rounded': Icons.workspace_premium_rounded,
  'Icons.workspace_premium_outlined': Icons.workspace_premium_outlined,
  'Icons.workspaces': Icons.workspaces,
  'Icons.workspaces_sharp': Icons.workspaces_sharp,
  'Icons.workspaces_rounded': Icons.workspaces_rounded,
  'Icons.workspaces_outlined': Icons.workspaces_outlined,
  'Icons.workspaces_filled': Icons.workspaces_filled,
  'Icons.workspaces_outline': Icons.workspaces_outline,
  'Icons.wrap_text': Icons.wrap_text,
  'Icons.wrap_text_sharp': Icons.wrap_text_sharp,
  'Icons.wrap_text_rounded': Icons.wrap_text_rounded,
  'Icons.wrap_text_outlined': Icons.wrap_text_outlined,
  'Icons.wrong_location': Icons.wrong_location,
  'Icons.wrong_location_sharp': Icons.wrong_location_sharp,
  'Icons.wrong_location_rounded': Icons.wrong_location_rounded,
  'Icons.wrong_location_outlined': Icons.wrong_location_outlined,
  'Icons.wysiwyg': Icons.wysiwyg,
  'Icons.wysiwyg_sharp': Icons.wysiwyg_sharp,
  'Icons.wysiwyg_rounded': Icons.wysiwyg_rounded,
  'Icons.wysiwyg_outlined': Icons.wysiwyg_outlined,
  'Icons.yard': Icons.yard,
  'Icons.yard_sharp': Icons.yard_sharp,
  'Icons.yard_rounded': Icons.yard_rounded,
  'Icons.yard_outlined': Icons.yard_outlined,
  'Icons.youtube_searched_for': Icons.youtube_searched_for,
  'Icons.youtube_searched_for_sharp': Icons.youtube_searched_for_sharp,
  'Icons.youtube_searched_for_rounded': Icons.youtube_searched_for_rounded,
  'Icons.youtube_searched_for_outlined': Icons.youtube_searched_for_outlined,
  'Icons.zoom_in': Icons.zoom_in,
  'Icons.zoom_in_sharp': Icons.zoom_in_sharp,
  'Icons.zoom_in_rounded': Icons.zoom_in_rounded,
  'Icons.zoom_in_outlined': Icons.zoom_in_outlined,
  'Icons.zoom_in_map': Icons.zoom_in_map,
  'Icons.zoom_in_map_sharp': Icons.zoom_in_map_sharp,
  'Icons.zoom_in_map_rounded': Icons.zoom_in_map_rounded,
  'Icons.zoom_in_map_outlined': Icons.zoom_in_map_outlined,
  'Icons.zoom_out': Icons.zoom_out,
  'Icons.zoom_out_sharp': Icons.zoom_out_sharp,
  'Icons.zoom_out_rounded': Icons.zoom_out_rounded,
  'Icons.zoom_out_outlined': Icons.zoom_out_outlined,
  'Icons.zoom_out_map': Icons.zoom_out_map,
  'Icons.zoom_out_map_sharp': Icons.zoom_out_map_sharp,
  'Icons.zoom_out_map_rounded': Icons.zoom_out_map_rounded,
  'Icons.zoom_out_map_outlined': Icons.zoom_out_map_outlined,
  'Autocomplete': (props) => Autocomplete(
        key: props['key'],
        optionsBuilder: props['optionsBuilder'],
        displayStringForOption: props['displayStringForOption'] ??
            RawAutocomplete.defaultStringForOption,
        fieldViewBuilder: props['fieldViewBuilder'] ?? _defaultFieldViewBuilder,
        onSelected: props['onSelected'],
        optionsMaxHeight: props['optionsMaxHeight']?.toDouble() ?? 200.0,
        optionsViewBuilder: props['optionsViewBuilder'],
        initialValue: props['initialValue'],
      ),
  'InkSplash': (props) => InkSplash(
        controller: props['controller'],
        referenceBox: props['referenceBox'],
        textDirection: props['textDirection'],
        position: props['position'],
        color: props['color'],
        containedInkWell: props['containedInkWell'] ?? false,
        rectCallback: props['rectCallback'],
        borderRadius: props['borderRadius'],
        customBorder: props['customBorder'],
        radius: props['radius']?.toDouble(),
        onRemoved: props['onRemoved'],
      ),
  'InkSplash.splashFactory': InkSplash.splashFactory,
  'ExpansionPanel': (props) => ExpansionPanel(
        headerBuilder: props['headerBuilder'],
        body: props['body'],
        isExpanded: props['isExpanded'] ?? false,
        canTapOnHeader: props['canTapOnHeader'] ?? false,
        backgroundColor: props['backgroundColor'],
      ),
  'ExpansionPanelRadio': (props) => ExpansionPanelRadio(
        value: props['value'],
        headerBuilder: props['headerBuilder'],
        body: props['body'],
        canTapOnHeader: props['canTapOnHeader'] ?? false,
        backgroundColor: props['backgroundColor'],
      ),
  'ExpansionPanelList': (props) => ExpansionPanelList(
        key: props['key'],
        children:
            as<ExpansionPanel>(props['children']) ?? const <ExpansionPanel>[],
        expansionCallback: props['expansionCallback'],
        animationDuration:
            props['animationDuration'] ?? kThemeAnimationDuration,
        dividerColor: props['dividerColor'],
        elevation: props['elevation']?.toDouble() ?? 2,
      ),
  'ExpansionPanelList.radio': (props) => ExpansionPanelList.radio(
        key: props['key'],
        children: as<ExpansionPanel>(props['children']) ??
            const <ExpansionPanelRadio>[],
        expansionCallback: props['expansionCallback'],
        animationDuration:
            props['animationDuration'] ?? kThemeAnimationDuration,
        initialOpenPanelValue: props['initialOpenPanelValue'],
        dividerColor: props['dividerColor'],
        elevation: props['elevation']?.toDouble() ?? 2,
      ),
  'ButtonBarThemeData': (props) => ButtonBarThemeData(
        alignment: props['alignment'],
        mainAxisSize: props['mainAxisSize'],
        buttonTextTheme: props['buttonTextTheme'],
        buttonMinWidth: props['buttonMinWidth']?.toDouble(),
        buttonHeight: props['buttonHeight']?.toDouble(),
        buttonPadding: props['buttonPadding'],
        buttonAlignedDropdown: props['buttonAlignedDropdown'],
        layoutBehavior: props['layoutBehavior'],
        overflowDirection: props['overflowDirection'],
      ),
  'ButtonBarThemeData.lerp': (props) => ButtonBarThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ButtonBarTheme': (props) => ButtonBarTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'ButtonBarTheme.of': (props) => ButtonBarTheme.of(
        props['pa'][0],
      ),
  'Theme': (props) => Theme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'Theme.of': (props) => Theme.of(
        props['pa'][0],
      ),
  'ThemeDataTween': (props) => ThemeDataTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'AnimatedTheme': (props) => AnimatedTheme(
        key: props['key'],
        data: props['data'],
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'] ?? kThemeAnimationDuration,
        onEnd: props['onEnd'],
        child: props['child'],
      ),
  'IconButton': (props) => IconButton(
        key: props['key'],
        iconSize: props['iconSize']?.toDouble(),
        visualDensity: props['visualDensity'],
        padding: props['padding'] ?? const EdgeInsets.all(8.0),
        alignment: props['alignment'] ?? Alignment.center,
        splashRadius: props['splashRadius']?.toDouble(),
        color: props['color'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        highlightColor: props['highlightColor'],
        splashColor: props['splashColor'],
        disabledColor: props['disabledColor'],
        onPressed: props['onPressed'],
        mouseCursor: props['mouseCursor'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        tooltip: props['tooltip'],
        enableFeedback: props['enableFeedback'] ?? true,
        constraints: props['constraints'],
        style: props['style'],
        isSelected: props['isSelected'],
        selectedIcon: props['selectedIcon'],
        icon: props['icon'],
      ),
  'IconButton.styleFrom': (props) => IconButton.styleFrom(
        foregroundColor: props['foregroundColor'],
        backgroundColor: props['backgroundColor'],
        disabledForegroundColor: props['disabledForegroundColor'],
        disabledBackgroundColor: props['disabledBackgroundColor'],
        focusColor: props['focusColor'],
        hoverColor: props['hoverColor'],
        highlightColor: props['highlightColor'],
        shadowColor: props['shadowColor'],
        surfaceTintColor: props['surfaceTintColor'],
        elevation: props['elevation']?.toDouble(),
        minimumSize: props['minimumSize'],
        fixedSize: props['fixedSize'],
        maximumSize: props['maximumSize'],
        side: props['side'],
        shape: props['shape'],
        padding: props['padding'] ?? const EdgeInsets.all(8.0),
        enabledMouseCursor: props['enabledMouseCursor'],
        disabledMouseCursor: props['disabledMouseCursor'],
        visualDensity: props['visualDensity'],
        tapTargetSize: props['tapTargetSize'],
        animationDuration: props['animationDuration'],
        enableFeedback: props['enableFeedback'] ?? true,
        alignment: props['alignment'] ?? Alignment.center,
        splashFactory: props['splashFactory'],
      ),
  'ToggleButtons': (props) => ToggleButtons(
        key: props['key'],
        children: as<Widget>(props['children']) ?? const [],
        isSelected: as<bool>(props['isSelected']) ?? const [],
        onPressed: props['onPressed'],
        mouseCursor: props['mouseCursor'],
        tapTargetSize: props['tapTargetSize'],
        textStyle: props['textStyle'],
        constraints: props['constraints'],
        color: props['color'],
        selectedColor: props['selectedColor'],
        disabledColor: props['disabledColor'],
        fillColor: props['fillColor'],
        focusColor: props['focusColor'],
        highlightColor: props['highlightColor'],
        hoverColor: props['hoverColor'],
        splashColor: props['splashColor'],
        focusNodes: as<FocusNode>(props['focusNodes']),
        renderBorder: props['renderBorder'] ?? true,
        borderColor: props['borderColor'],
        selectedBorderColor: props['selectedBorderColor'],
        disabledBorderColor: props['disabledBorderColor'],
        borderRadius: props['borderRadius'],
        borderWidth: props['borderWidth']?.toDouble(),
        direction: props['direction'] ?? Axis.horizontal,
        verticalDirection: props['verticalDirection'] ?? VerticalDirection.down,
      ),
  'MouseTrackerAnnotation': (props) => MouseTrackerAnnotation(
        onEnter: props['onEnter'],
        onExit: props['onExit'],
        cursor: props['cursor'] ?? MouseCursor.defer,
        validForMouseTracker: props['validForMouseTracker'] ?? true,
      ),
  'KeyboardLockMode.numLock': KeyboardLockMode.numLock,
  'KeyboardLockMode.scrollLock': KeyboardLockMode.scrollLock,
  'KeyboardLockMode.capsLock': KeyboardLockMode.capsLock,
  'KeyboardLockMode.findLockByLogicalKey': (props) =>
      KeyboardLockMode.findLockByLogicalKey(
        props['pa'][0],
      ),
  'KeyDownEvent': (props) => KeyDownEvent(
        physicalKey: props['physicalKey'],
        logicalKey: props['logicalKey'],
        character: props['character'],
        timeStamp: props['timeStamp'],
        synthesized: props['synthesized'] ?? false,
      ),
  'KeyUpEvent': (props) => KeyUpEvent(
        physicalKey: props['physicalKey'],
        logicalKey: props['logicalKey'],
        timeStamp: props['timeStamp'],
        synthesized: props['synthesized'] ?? false,
      ),
  'KeyRepeatEvent': (props) => KeyRepeatEvent(
        physicalKey: props['physicalKey'],
        logicalKey: props['logicalKey'],
        character: props['character'],
        timeStamp: props['timeStamp'],
      ),
  'HardwareKeyboard': (props) => HardwareKeyboard(),
  'KeyMessage': (props) => KeyMessage(
        props['pa'][0],
        props['pa'][1],
      ),
  'KeyEventManager': (props) => KeyEventManager(
        props['pa'][0],
        props['pa'][1],
      ),
  'KeyDataTransitMode.rawKeyData': KeyDataTransitMode.rawKeyData,
  'KeyDataTransitMode.keyDataThenRawKeyData':
      KeyDataTransitMode.keyDataThenRawKeyData,
  'KeyDataTransitMode.values': KeyDataTransitMode.values,
  'RawKeyEventDataLinux': (props) => RawKeyEventDataLinux(
        keyHelper: props['keyHelper'],
        unicodeScalarValues: props['unicodeScalarValues'] ?? 0,
        scanCode: props['scanCode'] ?? 0,
        keyCode: props['keyCode'] ?? 0,
        modifiers: props['modifiers'] ?? 0,
        isDown: props['isDown'],
        specifiedLogicalKey: props['specifiedLogicalKey'],
      ),
  'GLFWKeyHelper': (props) => GLFWKeyHelper(),
  'GLFWKeyHelper.modifierCapsLock': GLFWKeyHelper.modifierCapsLock,
  'GLFWKeyHelper.modifierShift': GLFWKeyHelper.modifierShift,
  'GLFWKeyHelper.modifierControl': GLFWKeyHelper.modifierControl,
  'GLFWKeyHelper.modifierAlt': GLFWKeyHelper.modifierAlt,
  'GLFWKeyHelper.modifierMeta': GLFWKeyHelper.modifierMeta,
  'GLFWKeyHelper.modifierNumericPad': GLFWKeyHelper.modifierNumericPad,
  'GtkKeyHelper': (props) => GtkKeyHelper(),
  'GtkKeyHelper.modifierShift': GtkKeyHelper.modifierShift,
  'GtkKeyHelper.modifierCapsLock': GtkKeyHelper.modifierCapsLock,
  'GtkKeyHelper.modifierControl': GtkKeyHelper.modifierControl,
  'GtkKeyHelper.modifierMod1': GtkKeyHelper.modifierMod1,
  'GtkKeyHelper.modifierMod2': GtkKeyHelper.modifierMod2,
  'GtkKeyHelper.modifierMeta': GtkKeyHelper.modifierMeta,
  'BasicMessageChannel': (props) => BasicMessageChannel(
        props['pa'][0],
        props['pa'][1],
        binaryMessenger: props['binaryMessenger'],
      ),
  'MethodChannel': (props) => MethodChannel(
        props['pa'][0],
        props['pa'][1] ?? const StandardMethodCodec(),
        props['pa'][2],
      ),
  'OptionalMethodChannel': (props) => OptionalMethodChannel(
        props['pa'][0],
        props['pa'][1] ?? const StandardMethodCodec(),
        props['pa'][2],
      ),
  'EventChannel': (props) => EventChannel(
        props['pa'][0],
        props['pa'][1] ?? const StandardMethodCodec(),
        props['pa'][2],
      ),
  'RawKeyEventDataAndroid': (props) => RawKeyEventDataAndroid(
        flags: props['flags'] ?? 0,
        codePoint: props['codePoint'] ?? 0,
        plainCodePoint: props['plainCodePoint'] ?? 0,
        keyCode: props['keyCode'] ?? 0,
        scanCode: props['scanCode'] ?? 0,
        metaState: props['metaState'] ?? 0,
        eventSource: props['eventSource'] ?? 0,
        vendorId: props['vendorId'] ?? 0,
        productId: props['productId'] ?? 0,
        deviceId: props['deviceId'] ?? 0,
        repeatCount: props['repeatCount'] ?? 0,
      ),
  'RawKeyEventDataAndroid.modifierNone': RawKeyEventDataAndroid.modifierNone,
  'RawKeyEventDataAndroid.modifierAlt': RawKeyEventDataAndroid.modifierAlt,
  'RawKeyEventDataAndroid.modifierLeftAlt':
      RawKeyEventDataAndroid.modifierLeftAlt,
  'RawKeyEventDataAndroid.modifierRightAlt':
      RawKeyEventDataAndroid.modifierRightAlt,
  'RawKeyEventDataAndroid.modifierShift': RawKeyEventDataAndroid.modifierShift,
  'RawKeyEventDataAndroid.modifierLeftShift':
      RawKeyEventDataAndroid.modifierLeftShift,
  'RawKeyEventDataAndroid.modifierRightShift':
      RawKeyEventDataAndroid.modifierRightShift,
  'RawKeyEventDataAndroid.modifierSym': RawKeyEventDataAndroid.modifierSym,
  'RawKeyEventDataAndroid.modifierFunction':
      RawKeyEventDataAndroid.modifierFunction,
  'RawKeyEventDataAndroid.modifierControl':
      RawKeyEventDataAndroid.modifierControl,
  'RawKeyEventDataAndroid.modifierLeftControl':
      RawKeyEventDataAndroid.modifierLeftControl,
  'RawKeyEventDataAndroid.modifierRightControl':
      RawKeyEventDataAndroid.modifierRightControl,
  'RawKeyEventDataAndroid.modifierMeta': RawKeyEventDataAndroid.modifierMeta,
  'RawKeyEventDataAndroid.modifierLeftMeta':
      RawKeyEventDataAndroid.modifierLeftMeta,
  'RawKeyEventDataAndroid.modifierRightMeta':
      RawKeyEventDataAndroid.modifierRightMeta,
  'RawKeyEventDataAndroid.modifierCapsLock':
      RawKeyEventDataAndroid.modifierCapsLock,
  'RawKeyEventDataAndroid.modifierNumLock':
      RawKeyEventDataAndroid.modifierNumLock,
  'RawKeyEventDataAndroid.modifierScrollLock':
      RawKeyEventDataAndroid.modifierScrollLock,
  'RawKeyEventDataWeb': (props) => RawKeyEventDataWeb(
        code: props['code'],
        key: props['key'],
        location: props['location'] ?? 0,
        metaState: props['metaState'] ?? modifierNone,
        keyCode: props['keyCode'] ?? 0,
      ),
  'RawKeyEventDataWeb.modifierNone': RawKeyEventDataWeb.modifierNone,
  'RawKeyEventDataWeb.modifierShift': RawKeyEventDataWeb.modifierShift,
  'RawKeyEventDataWeb.modifierAlt': RawKeyEventDataWeb.modifierAlt,
  'RawKeyEventDataWeb.modifierControl': RawKeyEventDataWeb.modifierControl,
  'RawKeyEventDataWeb.modifierMeta': RawKeyEventDataWeb.modifierMeta,
  'RawKeyEventDataWeb.modifierNumLock': RawKeyEventDataWeb.modifierNumLock,
  'RawKeyEventDataWeb.modifierCapsLock': RawKeyEventDataWeb.modifierCapsLock,
  'RawKeyEventDataWeb.modifierScrollLock':
      RawKeyEventDataWeb.modifierScrollLock,
  'TextSelection': (props) => TextSelection(
        baseOffset: props['baseOffset'],
        extentOffset: props['extentOffset'],
        affinity: props['affinity'] ?? TextAffinity.downstream,
        isDirectional: props['isDirectional'] ?? false,
      ),
  'TextSelection.collapsed': (props) => TextSelection.collapsed(
        offset: props['offset'],
        affinity: props['affinity'] ?? TextAffinity.downstream,
      ),
  'TextSelection.fromPosition': (props) => TextSelection.fromPosition(
        props['pa'][0],
      ),
  'RawKeyEventDataIos': (props) => RawKeyEventDataIos(
        characters: props['characters'] ?? '',
        charactersIgnoringModifiers: props['charactersIgnoringModifiers'] ?? '',
        keyCode: props['keyCode'] ?? 0,
        modifiers: props['modifiers'] ?? 0,
      ),
  'RawKeyEventDataIos.modifierCapsLock': RawKeyEventDataIos.modifierCapsLock,
  'RawKeyEventDataIos.modifierShift': RawKeyEventDataIos.modifierShift,
  'RawKeyEventDataIos.modifierLeftShift': RawKeyEventDataIos.modifierLeftShift,
  'RawKeyEventDataIos.modifierRightShift':
      RawKeyEventDataIos.modifierRightShift,
  'RawKeyEventDataIos.modifierControl': RawKeyEventDataIos.modifierControl,
  'RawKeyEventDataIos.modifierLeftControl':
      RawKeyEventDataIos.modifierLeftControl,
  'RawKeyEventDataIos.modifierRightControl':
      RawKeyEventDataIos.modifierRightControl,
  'RawKeyEventDataIos.modifierOption': RawKeyEventDataIos.modifierOption,
  'RawKeyEventDataIos.modifierLeftOption':
      RawKeyEventDataIos.modifierLeftOption,
  'RawKeyEventDataIos.modifierRightOption':
      RawKeyEventDataIos.modifierRightOption,
  'RawKeyEventDataIos.modifierCommand': RawKeyEventDataIos.modifierCommand,
  'RawKeyEventDataIos.modifierLeftCommand':
      RawKeyEventDataIos.modifierLeftCommand,
  'RawKeyEventDataIos.modifierRightCommand':
      RawKeyEventDataIos.modifierRightCommand,
  'RawKeyEventDataIos.modifierNumericPad':
      RawKeyEventDataIos.modifierNumericPad,
  'RawKeyEventDataIos.modifierHelp': RawKeyEventDataIos.modifierHelp,
  'RawKeyEventDataIos.modifierFunction': RawKeyEventDataIos.modifierFunction,
  'RawKeyEventDataIos.deviceIndependentMask':
      RawKeyEventDataIos.deviceIndependentMask,
  'SystemSound.play': (props) => SystemSound.play(
        props['pa'][0],
      ),
  'SystemSoundType.click': SystemSoundType.click,
  'SystemSoundType.alert': SystemSoundType.alert,
  'SystemSoundType.values': SystemSoundType.values,
  'SystemNavigator.pop': (props) => SystemNavigator.pop(
        animated: props['animated'],
      ),
  'SystemNavigator.selectSingleEntryHistory': (props) =>
      SystemNavigator.selectSingleEntryHistory(),
  'SystemNavigator.selectMultiEntryHistory': (props) =>
      SystemNavigator.selectMultiEntryHistory(),
  'SystemNavigator.routeInformationUpdated': (props) =>
      SystemNavigator.routeInformationUpdated(
        location: props['location'],
        state: props['state'],
        replace: props['replace'] ?? false,
      ),
  'HapticFeedback.vibrate': (props) => HapticFeedback.vibrate(),
  'HapticFeedback.lightImpact': (props) => HapticFeedback.lightImpact(),
  'HapticFeedback.mediumImpact': (props) => HapticFeedback.mediumImpact(),
  'HapticFeedback.heavyImpact': (props) => HapticFeedback.heavyImpact(),
  'HapticFeedback.selectionClick': (props) => HapticFeedback.selectionClick(),
  'ClipboardData': (props) => ClipboardData(
        text: props['text'],
      ),
  'Clipboard.kTextPlain': Clipboard.kTextPlain,
  'Clipboard.setData': (props) => Clipboard.setData(
        props['pa'][0],
      ),
  'Clipboard.getData': (props) => Clipboard.getData(
        props['pa'][0],
      ),
  'Clipboard.hasStrings': (props) => Clipboard.hasStrings(),
  'FontLoader': (props) => FontLoader(
        props['pa'][0],
      ),
  'TextInputType.numberWithOptions': (props) => TextInputType.numberWithOptions(
        signed: props['signed'] ?? false,
        decimal: props['decimal'] ?? false,
      ),
  'TextInputType.text': TextInputType.text,
  'TextInputType.multiline': TextInputType.multiline,
  'TextInputType.number': TextInputType.number,
  'TextInputType.phone': TextInputType.phone,
  'TextInputType.datetime': TextInputType.datetime,
  'TextInputType.emailAddress': TextInputType.emailAddress,
  'TextInputType.url': TextInputType.url,
  'TextInputType.visiblePassword': TextInputType.visiblePassword,
  'TextInputType.name': TextInputType.name,
  'TextInputType.streetAddress': TextInputType.streetAddress,
  'TextInputType.none': TextInputType.none,
  'TextInputType.values': TextInputType.values,
  'TextInputConfiguration': (props) => TextInputConfiguration(
        inputType: props['inputType'] ?? TextInputType.text,
        readOnly: props['readOnly'] ?? false,
        obscureText: props['obscureText'] ?? false,
        autocorrect: props['autocorrect'] ?? true,
        smartDashesType: props['smartDashesType'],
        smartQuotesType: props['smartQuotesType'],
        enableSuggestions: props['enableSuggestions'] ?? true,
        enableInteractiveSelection: props['enableInteractiveSelection'] ?? true,
        actionLabel: props['actionLabel'],
        inputAction: props['inputAction'] ?? TextInputAction.done,
        keyboardAppearance: props['keyboardAppearance'] ?? Brightness.light,
        textCapitalization:
            props['textCapitalization'] ?? TextCapitalization.none,
        autofillConfiguration:
            props['autofillConfiguration'] ?? AutofillConfiguration.disabled,
        enableIMEPersonalizedLearning:
            props['enableIMEPersonalizedLearning'] ?? true,
        enableDeltaModel: props['enableDeltaModel'] ?? false,
      ),
  'RawFloatingCursorPoint': (props) => RawFloatingCursorPoint(
        offset: props['offset'],
        state: props['state'],
      ),
  'TextEditingValue': (props) => TextEditingValue(
        text: props['text'] ?? '',
        selection:
            props['selection'] ?? const TextSelection.collapsed(offset: -1),
        composing: props['composing'] ?? TextRange.empty,
      ),
  'TextEditingValue.fromJSON': (props) => TextEditingValue.fromJSON(
        props['pa'][0],
      ),
  'TextEditingValue.empty': TextEditingValue.empty,
  'SelectionRect': (props) => SelectionRect(
        position: props['position'],
        bounds: props['bounds'],
      ),
  'TextInput.ensureInitialized': (props) => TextInput.ensureInitialized(),
  'TextInput.attach': (props) => TextInput.attach(
        props['pa'][0],
        props['pa'][1],
      ),
  'TextInput.finishAutofillContext': (props) => TextInput.finishAutofillContext(
        shouldSave: props['shouldSave'] ?? true,
      ),
  'TextInput.registerScribbleElement': (props) =>
      TextInput.registerScribbleElement(
        props['pa'][0],
        props['pa'][1],
      ),
  'TextInput.unregisterScribbleElement': (props) =>
      TextInput.unregisterScribbleElement(
        props['pa'][0],
      ),
  'SmartDashesType.disabled': SmartDashesType.disabled,
  'SmartDashesType.enabled': SmartDashesType.enabled,
  'SmartDashesType.values': SmartDashesType.values,
  'SmartQuotesType.disabled': SmartQuotesType.disabled,
  'SmartQuotesType.enabled': SmartQuotesType.enabled,
  'SmartQuotesType.values': SmartQuotesType.values,
  'TextInputAction.none': TextInputAction.none,
  'TextInputAction.unspecified': TextInputAction.unspecified,
  'TextInputAction.done': TextInputAction.done,
  'TextInputAction.go': TextInputAction.go,
  'TextInputAction.search': TextInputAction.search,
  'TextInputAction.send': TextInputAction.send,
  'TextInputAction.next': TextInputAction.next,
  'TextInputAction.previous': TextInputAction.previous,
  'TextInputAction.continueAction': TextInputAction.continueAction,
  'TextInputAction.join': TextInputAction.join,
  'TextInputAction.route': TextInputAction.route,
  'TextInputAction.emergencyCall': TextInputAction.emergencyCall,
  'TextInputAction.newline': TextInputAction.newline,
  'TextInputAction.values': TextInputAction.values,
  'TextCapitalization.words': TextCapitalization.words,
  'TextCapitalization.sentences': TextCapitalization.sentences,
  'TextCapitalization.characters': TextCapitalization.characters,
  'TextCapitalization.none': TextCapitalization.none,
  'TextCapitalization.values': TextCapitalization.values,
  'FloatingCursorDragState.Start': FloatingCursorDragState.Start,
  'FloatingCursorDragState.Update': FloatingCursorDragState.Update,
  'FloatingCursorDragState.End': FloatingCursorDragState.End,
  'FloatingCursorDragState.values': FloatingCursorDragState.values,
  'SelectionChangedCause.tap': SelectionChangedCause.tap,
  'SelectionChangedCause.doubleTap': SelectionChangedCause.doubleTap,
  'SelectionChangedCause.longPress': SelectionChangedCause.longPress,
  'SelectionChangedCause.forcePress': SelectionChangedCause.forcePress,
  'SelectionChangedCause.keyboard': SelectionChangedCause.keyboard,
  'SelectionChangedCause.toolbar': SelectionChangedCause.toolbar,
  'SelectionChangedCause.drag': SelectionChangedCause.drag,
  'SelectionChangedCause.scribble': SelectionChangedCause.scribble,
  'SelectionChangedCause.values': SelectionChangedCause.values,
  'NetworkAssetBundle': (props) => NetworkAssetBundle(
        props['pa'][0],
      ),
  'PlatformAssetBundle': (props) => PlatformAssetBundle(),
  'FilteringTextInputFormatter': (props) => FilteringTextInputFormatter(
        props['pa'][0],
        allow: props['allow'],
        replacementString: props['replacementString'] ?? '',
      ),
  'FilteringTextInputFormatter.allow': (props) =>
      FilteringTextInputFormatter.allow(
        props['pa'][0],
        replacementString: props['replacementString'] ?? '',
      ),
  'FilteringTextInputFormatter.deny': (props) =>
      FilteringTextInputFormatter.deny(
        props['pa'][0],
        replacementString: props['replacementString'] ?? '',
      ),
  'LengthLimitingTextInputFormatter': (props) =>
      LengthLimitingTextInputFormatter(
        props['pa'][0],
        maxLengthEnforcement: props['maxLengthEnforcement'],
      ),
  'LengthLimitingTextInputFormatter.getDefaultMaxLengthEnforcement': (props) =>
      LengthLimitingTextInputFormatter.getDefaultMaxLengthEnforcement(
        props['pa'][0],
      ),
  'MaxLengthEnforcement.none': MaxLengthEnforcement.none,
  'MaxLengthEnforcement.enforced': MaxLengthEnforcement.enforced,
  'MaxLengthEnforcement.truncateAfterCompositionEnds':
      MaxLengthEnforcement.truncateAfterCompositionEnds,
  'MaxLengthEnforcement.values': MaxLengthEnforcement.values,
  'RawKeyEventDataMacOs': (props) => RawKeyEventDataMacOs(
        characters: props['characters'] ?? '',
        charactersIgnoringModifiers: props['charactersIgnoringModifiers'] ?? '',
        keyCode: props['keyCode'] ?? 0,
        modifiers: props['modifiers'] ?? 0,
        specifiedLogicalKey: props['specifiedLogicalKey'],
      ),
  'RawKeyEventDataMacOs.modifierCapsLock':
      RawKeyEventDataMacOs.modifierCapsLock,
  'RawKeyEventDataMacOs.modifierShift': RawKeyEventDataMacOs.modifierShift,
  'RawKeyEventDataMacOs.modifierLeftShift':
      RawKeyEventDataMacOs.modifierLeftShift,
  'RawKeyEventDataMacOs.modifierRightShift':
      RawKeyEventDataMacOs.modifierRightShift,
  'RawKeyEventDataMacOs.modifierControl': RawKeyEventDataMacOs.modifierControl,
  'RawKeyEventDataMacOs.modifierLeftControl':
      RawKeyEventDataMacOs.modifierLeftControl,
  'RawKeyEventDataMacOs.modifierRightControl':
      RawKeyEventDataMacOs.modifierRightControl,
  'RawKeyEventDataMacOs.modifierOption': RawKeyEventDataMacOs.modifierOption,
  'RawKeyEventDataMacOs.modifierLeftOption':
      RawKeyEventDataMacOs.modifierLeftOption,
  'RawKeyEventDataMacOs.modifierRightOption':
      RawKeyEventDataMacOs.modifierRightOption,
  'RawKeyEventDataMacOs.modifierCommand': RawKeyEventDataMacOs.modifierCommand,
  'RawKeyEventDataMacOs.modifierLeftCommand':
      RawKeyEventDataMacOs.modifierLeftCommand,
  'RawKeyEventDataMacOs.modifierRightCommand':
      RawKeyEventDataMacOs.modifierRightCommand,
  'RawKeyEventDataMacOs.modifierNumericPad':
      RawKeyEventDataMacOs.modifierNumericPad,
  'RawKeyEventDataMacOs.modifierHelp': RawKeyEventDataMacOs.modifierHelp,
  'RawKeyEventDataMacOs.modifierFunction':
      RawKeyEventDataMacOs.modifierFunction,
  'RawKeyEventDataMacOs.deviceIndependentMask':
      RawKeyEventDataMacOs.deviceIndependentMask,
  'ApplicationSwitcherDescription': (props) => ApplicationSwitcherDescription(
        label: props['label'],
        primaryColor: props['primaryColor'],
      ),
  'SystemUiOverlayStyle': (props) => SystemUiOverlayStyle(
        systemNavigationBarColor: props['systemNavigationBarColor'],
        systemNavigationBarDividerColor:
            props['systemNavigationBarDividerColor'],
        systemNavigationBarIconBrightness:
            props['systemNavigationBarIconBrightness'],
        systemNavigationBarContrastEnforced:
            props['systemNavigationBarContrastEnforced'],
        statusBarColor: props['statusBarColor'],
        statusBarBrightness: props['statusBarBrightness'],
        statusBarIconBrightness: props['statusBarIconBrightness'],
        systemStatusBarContrastEnforced:
            props['systemStatusBarContrastEnforced'],
      ),
  'SystemUiOverlayStyle.light': SystemUiOverlayStyle.light,
  'SystemUiOverlayStyle.dark': SystemUiOverlayStyle.dark,
  'SystemChrome.setPreferredOrientations': (props) =>
      SystemChrome.setPreferredOrientations(
        props['pa'][0],
      ),
  'SystemChrome.setApplicationSwitcherDescription': (props) =>
      SystemChrome.setApplicationSwitcherDescription(
        props['pa'][0],
      ),
  'SystemChrome.setEnabledSystemUIMode': (props) =>
      SystemChrome.setEnabledSystemUIMode(
        props['pa'][0],
        overlays: as(props['overlays']),
      ),
  'SystemChrome.setSystemUIChangeCallback': (props) =>
      SystemChrome.setSystemUIChangeCallback(
        props['pa'][0],
      ),
  'SystemChrome.restoreSystemUIOverlays': (props) =>
      SystemChrome.restoreSystemUIOverlays(),
  'SystemChrome.setSystemUIOverlayStyle': (props) =>
      SystemChrome.setSystemUIOverlayStyle(
        props['pa'][0],
      ),
  'DeviceOrientation.portraitUp': DeviceOrientation.portraitUp,
  'DeviceOrientation.landscapeLeft': DeviceOrientation.landscapeLeft,
  'DeviceOrientation.portraitDown': DeviceOrientation.portraitDown,
  'DeviceOrientation.landscapeRight': DeviceOrientation.landscapeRight,
  'DeviceOrientation.values': DeviceOrientation.values,
  'SystemUiOverlay.top': SystemUiOverlay.top,
  'SystemUiOverlay.bottom': SystemUiOverlay.bottom,
  'SystemUiOverlay.values': SystemUiOverlay.values,
  'SystemUiMode.leanBack': SystemUiMode.leanBack,
  'SystemUiMode.immersive': SystemUiMode.immersive,
  'SystemUiMode.immersiveSticky': SystemUiMode.immersiveSticky,
  'SystemUiMode.edgeToEdge': SystemUiMode.edgeToEdge,
  'SystemUiMode.manual': SystemUiMode.manual,
  'SystemUiMode.values': SystemUiMode.values,
  'SystemChannels.navigation': SystemChannels.navigation,
  'SystemChannels.platform': SystemChannels.platform,
  'SystemChannels.textInput': SystemChannels.textInput,
  'SystemChannels.keyEvent': SystemChannels.keyEvent,
  'SystemChannels.lifecycle': SystemChannels.lifecycle,
  'SystemChannels.system': SystemChannels.system,
  'SystemChannels.accessibility': SystemChannels.accessibility,
  'SystemChannels.platform_views': SystemChannels.platform_views,
  'SystemChannels.skia': SystemChannels.skia,
  'SystemChannels.mouseCursor': SystemChannels.mouseCursor,
  'SystemChannels.restoration': SystemChannels.restoration,
  'SystemChannels.deferredComponent': SystemChannels.deferredComponent,
  'SystemChannels.localization': SystemChannels.localization,
  'SystemChannels.menu': SystemChannels.menu,
  'RawKeyEventDataFuchsia': (props) => RawKeyEventDataFuchsia(
        hidUsage: props['hidUsage'] ?? 0,
        codePoint: props['codePoint'] ?? 0,
        modifiers: props['modifiers'] ?? 0,
      ),
  'RawKeyEventDataFuchsia.modifierNone': RawKeyEventDataFuchsia.modifierNone,
  'RawKeyEventDataFuchsia.modifierCapsLock':
      RawKeyEventDataFuchsia.modifierCapsLock,
  'RawKeyEventDataFuchsia.modifierLeftShift':
      RawKeyEventDataFuchsia.modifierLeftShift,
  'RawKeyEventDataFuchsia.modifierRightShift':
      RawKeyEventDataFuchsia.modifierRightShift,
  'RawKeyEventDataFuchsia.modifierShift': RawKeyEventDataFuchsia.modifierShift,
  'RawKeyEventDataFuchsia.modifierLeftControl':
      RawKeyEventDataFuchsia.modifierLeftControl,
  'RawKeyEventDataFuchsia.modifierRightControl':
      RawKeyEventDataFuchsia.modifierRightControl,
  'RawKeyEventDataFuchsia.modifierControl':
      RawKeyEventDataFuchsia.modifierControl,
  'RawKeyEventDataFuchsia.modifierLeftAlt':
      RawKeyEventDataFuchsia.modifierLeftAlt,
  'RawKeyEventDataFuchsia.modifierRightAlt':
      RawKeyEventDataFuchsia.modifierRightAlt,
  'RawKeyEventDataFuchsia.modifierAlt': RawKeyEventDataFuchsia.modifierAlt,
  'RawKeyEventDataFuchsia.modifierLeftMeta':
      RawKeyEventDataFuchsia.modifierLeftMeta,
  'RawKeyEventDataFuchsia.modifierRightMeta':
      RawKeyEventDataFuchsia.modifierRightMeta,
  'RawKeyEventDataFuchsia.modifierMeta': RawKeyEventDataFuchsia.modifierMeta,
  'RawKeyEventDataWindows': (props) => RawKeyEventDataWindows(
        keyCode: props['keyCode'] ?? 0,
        scanCode: props['scanCode'] ?? 0,
        characterCodePoint: props['characterCodePoint'] ?? 0,
        modifiers: props['modifiers'] ?? 0,
      ),
  'RawKeyEventDataWindows.modifierShift': RawKeyEventDataWindows.modifierShift,
  'RawKeyEventDataWindows.modifierLeftShift':
      RawKeyEventDataWindows.modifierLeftShift,
  'RawKeyEventDataWindows.modifierRightShift':
      RawKeyEventDataWindows.modifierRightShift,
  'RawKeyEventDataWindows.modifierControl':
      RawKeyEventDataWindows.modifierControl,
  'RawKeyEventDataWindows.modifierLeftControl':
      RawKeyEventDataWindows.modifierLeftControl,
  'RawKeyEventDataWindows.modifierRightControl':
      RawKeyEventDataWindows.modifierRightControl,
  'RawKeyEventDataWindows.modifierAlt': RawKeyEventDataWindows.modifierAlt,
  'RawKeyEventDataWindows.modifierLeftAlt':
      RawKeyEventDataWindows.modifierLeftAlt,
  'RawKeyEventDataWindows.modifierRightAlt':
      RawKeyEventDataWindows.modifierRightAlt,
  'RawKeyEventDataWindows.modifierLeftMeta':
      RawKeyEventDataWindows.modifierLeftMeta,
  'RawKeyEventDataWindows.modifierRightMeta':
      RawKeyEventDataWindows.modifierRightMeta,
  'RawKeyEventDataWindows.modifierCaps': RawKeyEventDataWindows.modifierCaps,
  'RawKeyEventDataWindows.modifierNumLock':
      RawKeyEventDataWindows.modifierNumLock,
  'RawKeyEventDataWindows.modifierScrollLock':
      RawKeyEventDataWindows.modifierScrollLock,
  'RawKeyDownEvent': (props) => RawKeyDownEvent(
        data: props['data'],
        character: props['character'],
        repeat: props['repeat'] ?? false,
      ),
  'RawKeyUpEvent': (props) => RawKeyUpEvent(
        data: props['data'],
        character: props['character'],
      ),
  'KeyboardSide.any': KeyboardSide.any,
  'KeyboardSide.left': KeyboardSide.left,
  'KeyboardSide.right': KeyboardSide.right,
  'KeyboardSide.all': KeyboardSide.all,
  'KeyboardSide.values': KeyboardSide.values,
  'ModifierKey.controlModifier': ModifierKey.controlModifier,
  'ModifierKey.shiftModifier': ModifierKey.shiftModifier,
  'ModifierKey.altModifier': ModifierKey.altModifier,
  'ModifierKey.metaModifier': ModifierKey.metaModifier,
  'ModifierKey.capsLockModifier': ModifierKey.capsLockModifier,
  'ModifierKey.numLockModifier': ModifierKey.numLockModifier,
  'ModifierKey.scrollLockModifier': ModifierKey.scrollLockModifier,
  'ModifierKey.functionModifier': ModifierKey.functionModifier,
  'ModifierKey.symbolModifier': ModifierKey.symbolModifier,
  'ModifierKey.values': ModifierKey.values,
  'PlatformViewsService.initAndroidView': (props) =>
      PlatformViewsService.initAndroidView(
        id: props['id'],
        viewType: props['viewType'],
        layoutDirection: props['layoutDirection'],
        creationParams: props['creationParams'],
        creationParamsCodec: props['creationParamsCodec'],
        onFocus: props['onFocus'],
      ),
  'PlatformViewsService.initSurfaceAndroidView': (props) =>
      PlatformViewsService.initSurfaceAndroidView(
        id: props['id'],
        viewType: props['viewType'],
        layoutDirection: props['layoutDirection'],
        creationParams: props['creationParams'],
        creationParamsCodec: props['creationParamsCodec'],
        onFocus: props['onFocus'],
      ),
  'PlatformViewsService.initExpensiveAndroidView': (props) =>
      PlatformViewsService.initExpensiveAndroidView(
        id: props['id'],
        viewType: props['viewType'],
        layoutDirection: props['layoutDirection'],
        creationParams: props['creationParams'],
        creationParamsCodec: props['creationParamsCodec'],
        onFocus: props['onFocus'],
      ),
  'PlatformViewsService.initUiKitView': (props) =>
      PlatformViewsService.initUiKitView(
        id: props['id'],
        viewType: props['viewType'],
        layoutDirection: props['layoutDirection'],
        creationParams: props['creationParams'],
        creationParamsCodec: props['creationParamsCodec'],
        onFocus: props['onFocus'],
      ),
  'AndroidPointerProperties': (props) => AndroidPointerProperties(
        id: props['id'],
        toolType: props['toolType'],
      ),
  'AndroidPointerProperties.kToolTypeUnknown':
      AndroidPointerProperties.kToolTypeUnknown,
  'AndroidPointerProperties.kToolTypeFinger':
      AndroidPointerProperties.kToolTypeFinger,
  'AndroidPointerProperties.kToolTypeStylus':
      AndroidPointerProperties.kToolTypeStylus,
  'AndroidPointerProperties.kToolTypeMouse':
      AndroidPointerProperties.kToolTypeMouse,
  'AndroidPointerProperties.kToolTypeEraser':
      AndroidPointerProperties.kToolTypeEraser,
  'AndroidPointerCoords': (props) => AndroidPointerCoords(
        orientation: props['orientation']?.toDouble() ?? 0,
        pressure: props['pressure']?.toDouble() ?? 0,
        size: props['size']?.toDouble() ?? 0,
        toolMajor: props['toolMajor']?.toDouble() ?? 0,
        toolMinor: props['toolMinor']?.toDouble() ?? 0,
        touchMajor: props['touchMajor']?.toDouble() ?? 0,
        touchMinor: props['touchMinor']?.toDouble() ?? 0,
        x: props['x']?.toDouble() ?? 0,
        y: props['y']?.toDouble() ?? 0,
      ),
  'AndroidMotionEvent': (props) => AndroidMotionEvent(
        downTime: props['downTime'],
        eventTime: props['eventTime'],
        action: props['action'],
        pointerCount: props['pointerCount'],
        pointerProperties:
            as<AndroidPointerProperties>(props['pointerProperties']) ??
                const [],
        pointerCoords:
            as<AndroidPointerCoords>(props['pointerCoords']) ?? const [],
        metaState: props['metaState'],
        buttonState: props['buttonState'],
        xPrecision: props['xPrecision']?.toDouble() ?? 0,
        yPrecision: props['yPrecision']?.toDouble() ?? 0,
        deviceId: props['deviceId'],
        edgeFlags: props['edgeFlags'],
        source: props['source'],
        flags: props['flags'],
        motionEventId: props['motionEventId'],
      ),
  'RestorationManager': (props) => RestorationManager(),
  'RestorationBucket.empty': (props) => RestorationBucket.empty(
        restorationId: props['restorationId'],
        debugOwner: props['debugOwner'],
      ),
  'RestorationBucket.root': (props) => RestorationBucket.root(
        manager: props['manager'],
        rawData: props['rawData'],
      ),
  'RestorationBucket.child': (props) => RestorationBucket.child(
        restorationId: props['restorationId'],
        parent: props['parent'],
        debugOwner: props['debugOwner'],
      ),
  'BinaryCodec': (props) => const BinaryCodec(),
  'StringCodec': (props) => const StringCodec(),
  'JSONMessageCodec': (props) => const JSONMessageCodec(),
  'JSONMethodCodec': (props) => const JSONMethodCodec(),
  'StandardMessageCodec': (props) => const StandardMessageCodec(),
  'StandardMethodCodec': (props) => StandardMethodCodec(
        props['pa'][0] ?? const StandardMessageCodec(),
      ),
  'AutofillHints.addressCity': AutofillHints.addressCity,
  'AutofillHints.addressCityAndState': AutofillHints.addressCityAndState,
  'AutofillHints.addressState': AutofillHints.addressState,
  'AutofillHints.birthday': AutofillHints.birthday,
  'AutofillHints.birthdayDay': AutofillHints.birthdayDay,
  'AutofillHints.birthdayMonth': AutofillHints.birthdayMonth,
  'AutofillHints.birthdayYear': AutofillHints.birthdayYear,
  'AutofillHints.countryCode': AutofillHints.countryCode,
  'AutofillHints.countryName': AutofillHints.countryName,
  'AutofillHints.creditCardExpirationDate':
      AutofillHints.creditCardExpirationDate,
  'AutofillHints.creditCardExpirationDay':
      AutofillHints.creditCardExpirationDay,
  'AutofillHints.creditCardExpirationMonth':
      AutofillHints.creditCardExpirationMonth,
  'AutofillHints.creditCardExpirationYear':
      AutofillHints.creditCardExpirationYear,
  'AutofillHints.creditCardFamilyName': AutofillHints.creditCardFamilyName,
  'AutofillHints.creditCardGivenName': AutofillHints.creditCardGivenName,
  'AutofillHints.creditCardMiddleName': AutofillHints.creditCardMiddleName,
  'AutofillHints.creditCardName': AutofillHints.creditCardName,
  'AutofillHints.creditCardNumber': AutofillHints.creditCardNumber,
  'AutofillHints.creditCardSecurityCode': AutofillHints.creditCardSecurityCode,
  'AutofillHints.creditCardType': AutofillHints.creditCardType,
  'AutofillHints.email': AutofillHints.email,
  'AutofillHints.familyName': AutofillHints.familyName,
  'AutofillHints.fullStreetAddress': AutofillHints.fullStreetAddress,
  'AutofillHints.gender': AutofillHints.gender,
  'AutofillHints.givenName': AutofillHints.givenName,
  'AutofillHints.impp': AutofillHints.impp,
  'AutofillHints.jobTitle': AutofillHints.jobTitle,
  'AutofillHints.language': AutofillHints.language,
  'AutofillHints.location': AutofillHints.location,
  'AutofillHints.middleInitial': AutofillHints.middleInitial,
  'AutofillHints.middleName': AutofillHints.middleName,
  'AutofillHints.name': AutofillHints.name,
  'AutofillHints.namePrefix': AutofillHints.namePrefix,
  'AutofillHints.nameSuffix': AutofillHints.nameSuffix,
  'AutofillHints.newPassword': AutofillHints.newPassword,
  'AutofillHints.newUsername': AutofillHints.newUsername,
  'AutofillHints.nickname': AutofillHints.nickname,
  'AutofillHints.oneTimeCode': AutofillHints.oneTimeCode,
  'AutofillHints.organizationName': AutofillHints.organizationName,
  'AutofillHints.password': AutofillHints.password,
  'AutofillHints.photo': AutofillHints.photo,
  'AutofillHints.postalAddress': AutofillHints.postalAddress,
  'AutofillHints.postalAddressExtended': AutofillHints.postalAddressExtended,
  'AutofillHints.postalAddressExtendedPostalCode':
      AutofillHints.postalAddressExtendedPostalCode,
  'AutofillHints.postalCode': AutofillHints.postalCode,
  'AutofillHints.streetAddressLevel1': AutofillHints.streetAddressLevel1,
  'AutofillHints.streetAddressLevel2': AutofillHints.streetAddressLevel2,
  'AutofillHints.streetAddressLevel3': AutofillHints.streetAddressLevel3,
  'AutofillHints.streetAddressLevel4': AutofillHints.streetAddressLevel4,
  'AutofillHints.streetAddressLine1': AutofillHints.streetAddressLine1,
  'AutofillHints.streetAddressLine2': AutofillHints.streetAddressLine2,
  'AutofillHints.streetAddressLine3': AutofillHints.streetAddressLine3,
  'AutofillHints.sublocality': AutofillHints.sublocality,
  'AutofillHints.telephoneNumber': AutofillHints.telephoneNumber,
  'AutofillHints.telephoneNumberAreaCode':
      AutofillHints.telephoneNumberAreaCode,
  'AutofillHints.telephoneNumberCountryCode':
      AutofillHints.telephoneNumberCountryCode,
  'AutofillHints.telephoneNumberDevice': AutofillHints.telephoneNumberDevice,
  'AutofillHints.telephoneNumberExtension':
      AutofillHints.telephoneNumberExtension,
  'AutofillHints.telephoneNumberLocal': AutofillHints.telephoneNumberLocal,
  'AutofillHints.telephoneNumberLocalPrefix':
      AutofillHints.telephoneNumberLocalPrefix,
  'AutofillHints.telephoneNumberLocalSuffix':
      AutofillHints.telephoneNumberLocalSuffix,
  'AutofillHints.telephoneNumberNational':
      AutofillHints.telephoneNumberNational,
  'AutofillHints.transactionAmount': AutofillHints.transactionAmount,
  'AutofillHints.transactionCurrency': AutofillHints.transactionCurrency,
  'AutofillHints.url': AutofillHints.url,
  'AutofillHints.username': AutofillHints.username,
  'AutofillConfiguration': (props) => AutofillConfiguration(
        uniqueIdentifier: props['uniqueIdentifier'],
        autofillHints: as<String>(props['autofillHints']) ?? const [],
        currentEditingValue: props['currentEditingValue'],
        hintText: props['hintText'],
      ),
  'AutofillConfiguration.disabled': AutofillConfiguration.disabled,
  'MethodCall': (props) => MethodCall(
        props['pa'][0],
        props['pa'][1],
      ),
  'PlatformException': (props) => PlatformException(
        code: props['code'],
        message: props['message'],
        details: props['details'],
        stacktrace: props['stacktrace'],
      ),
  'MissingPluginException': (props) => MissingPluginException(
        props['pa'][0],
      ),
  'DeferredComponent.installDeferredComponent': (props) =>
      DeferredComponent.installDeferredComponent(
        componentName: props['componentName'],
      ),
  'DeferredComponent.uninstallDeferredComponent': (props) =>
      DeferredComponent.uninstallDeferredComponent(
        componentName: props['componentName'],
      ),
  'MouseCursorManager': (props) => MouseCursorManager(
        props['pa'][0],
      ),
  'SystemMouseCursors.none': SystemMouseCursors.none,
  'SystemMouseCursors.basic': SystemMouseCursors.basic,
  'SystemMouseCursors.click': SystemMouseCursors.click,
  'SystemMouseCursors.forbidden': SystemMouseCursors.forbidden,
  'SystemMouseCursors.wait': SystemMouseCursors.wait,
  'SystemMouseCursors.progress': SystemMouseCursors.progress,
  'SystemMouseCursors.contextMenu': SystemMouseCursors.contextMenu,
  'SystemMouseCursors.help': SystemMouseCursors.help,
  'SystemMouseCursors.text': SystemMouseCursors.text,
  'SystemMouseCursors.verticalText': SystemMouseCursors.verticalText,
  'SystemMouseCursors.cell': SystemMouseCursors.cell,
  'SystemMouseCursors.precise': SystemMouseCursors.precise,
  'SystemMouseCursors.move': SystemMouseCursors.move,
  'SystemMouseCursors.grab': SystemMouseCursors.grab,
  'SystemMouseCursors.grabbing': SystemMouseCursors.grabbing,
  'SystemMouseCursors.noDrop': SystemMouseCursors.noDrop,
  'SystemMouseCursors.alias': SystemMouseCursors.alias,
  'SystemMouseCursors.copy': SystemMouseCursors.copy,
  'SystemMouseCursors.disappearing': SystemMouseCursors.disappearing,
  'SystemMouseCursors.allScroll': SystemMouseCursors.allScroll,
  'SystemMouseCursors.resizeLeftRight': SystemMouseCursors.resizeLeftRight,
  'SystemMouseCursors.resizeUpDown': SystemMouseCursors.resizeUpDown,
  'SystemMouseCursors.resizeUpLeftDownRight':
      SystemMouseCursors.resizeUpLeftDownRight,
  'SystemMouseCursors.resizeUpRightDownLeft':
      SystemMouseCursors.resizeUpRightDownLeft,
  'SystemMouseCursors.resizeUp': SystemMouseCursors.resizeUp,
  'SystemMouseCursors.resizeDown': SystemMouseCursors.resizeDown,
  'SystemMouseCursors.resizeLeft': SystemMouseCursors.resizeLeft,
  'SystemMouseCursors.resizeRight': SystemMouseCursors.resizeRight,
  'SystemMouseCursors.resizeUpLeft': SystemMouseCursors.resizeUpLeft,
  'SystemMouseCursors.resizeUpRight': SystemMouseCursors.resizeUpRight,
  'SystemMouseCursors.resizeDownLeft': SystemMouseCursors.resizeDownLeft,
  'SystemMouseCursors.resizeDownRight': SystemMouseCursors.resizeDownRight,
  'SystemMouseCursors.resizeColumn': SystemMouseCursors.resizeColumn,
  'SystemMouseCursors.resizeRow': SystemMouseCursors.resizeRow,
  'SystemMouseCursors.zoomIn': SystemMouseCursors.zoomIn,
  'SystemMouseCursors.zoomOut': SystemMouseCursors.zoomOut,
  'TextEditingDeltaInsertion': (props) => TextEditingDeltaInsertion(
        oldText: props['oldText'],
        textInserted: props['textInserted'],
        insertionOffset: props['insertionOffset'],
        selection: props['selection'],
        composing: props['composing'],
      ),
  'TextEditingDeltaDeletion': (props) => TextEditingDeltaDeletion(
        oldText: props['oldText'],
        deletedRange: props['deletedRange'],
        selection: props['selection'],
        composing: props['composing'],
      ),
  'TextEditingDeltaReplacement': (props) => TextEditingDeltaReplacement(
        oldText: props['oldText'],
        replacementText: props['replacementText'],
        replacedRange: props['replacedRange'],
        selection: props['selection'],
        composing: props['composing'],
      ),
  'TextEditingDeltaNonTextUpdate': (props) => TextEditingDeltaNonTextUpdate(
        oldText: props['oldText'],
        selection: props['selection'],
        composing: props['composing'],
      ),
  'SingleChildScrollView': (props) => SingleChildScrollView(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        padding: props['padding'],
        primary: props['primary'],
        physics: props['physics'],
        controller: props['controller'],
        child: props['child'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        restorationId: props['restorationId'],
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
      ),
  'BoxConstraintsTween': (props) => BoxConstraintsTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'DecorationTween': (props) => DecorationTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'EdgeInsetsTween': (props) => EdgeInsetsTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'EdgeInsetsGeometryTween': (props) => EdgeInsetsGeometryTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'BorderRadiusTween': (props) => BorderRadiusTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'BorderTween': (props) => BorderTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'Matrix4Tween': (props) => Matrix4Tween(
        begin: props['begin'],
        end: props['end'],
      ),
  'TextStyleTween': (props) => TextStyleTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'AnimatedContainer': (props) => AnimatedContainer(
        key: props['key'],
        alignment: props['alignment'],
        padding: props['padding'],
        color: props['color'],
        decoration: props['decoration'],
        foregroundDecoration: props['foregroundDecoration'],
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        constraints: props['constraints'],
        margin: props['margin'],
        transform: props['transform'],
        transformAlignment: props['transformAlignment'],
        child: props['child'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedPadding': (props) => AnimatedPadding(
        key: props['key'],
        padding: props['padding'],
        child: props['child'],
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedAlign': (props) => AnimatedAlign(
        key: props['key'],
        alignment: props['alignment'],
        child: props['child'],
        heightFactor: props['heightFactor']?.toDouble(),
        widthFactor: props['widthFactor']?.toDouble(),
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedPositioned': (props) => AnimatedPositioned(
        key: props['key'],
        child: props['child'],
        left: props['left']?.toDouble(),
        top: props['top']?.toDouble(),
        right: props['right']?.toDouble(),
        bottom: props['bottom']?.toDouble(),
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedPositioned.fromRect': (props) => AnimatedPositioned.fromRect(
        key: props['key'],
        child: props['child'],
        rect: props['rect'],
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedPositionedDirectional': (props) => AnimatedPositionedDirectional(
        key: props['key'],
        child: props['child'],
        start: props['start']?.toDouble(),
        top: props['top']?.toDouble(),
        end: props['end']?.toDouble(),
        bottom: props['bottom']?.toDouble(),
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedScale': (props) => AnimatedScale(
        key: props['key'],
        child: props['child'],
        scale: props['scale']?.toDouble() ?? 0,
        alignment: props['alignment'] ?? Alignment.center,
        filterQuality: props['filterQuality'],
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedRotation': (props) => AnimatedRotation(
        key: props['key'],
        child: props['child'],
        turns: props['turns']?.toDouble() ?? 0,
        alignment: props['alignment'] ?? Alignment.center,
        filterQuality: props['filterQuality'],
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedSlide': (props) => AnimatedSlide(
        key: props['key'],
        child: props['child'],
        offset: props['offset'],
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedOpacity': (props) => AnimatedOpacity(
        key: props['key'],
        child: props['child'],
        opacity: props['opacity']?.toDouble() ?? 0,
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
      ),
  'SliverAnimatedOpacity': (props) => SliverAnimatedOpacity(
        key: props['key'],
        sliver: props['sliver'],
        opacity: props['opacity']?.toDouble() ?? 0,
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
      ),
  'AnimatedDefaultTextStyle': (props) => AnimatedDefaultTextStyle(
        key: props['key'],
        child: props['child'],
        style: props['style'],
        textAlign: props['textAlign'],
        softWrap: props['softWrap'] ?? true,
        overflow: props['overflow'] ?? TextOverflow.clip,
        maxLines: props['maxLines'],
        textWidthBasis: props['textWidthBasis'] ?? TextWidthBasis.parent,
        textHeightBehavior: props['textHeightBehavior'],
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedPhysicalModel': (props) => AnimatedPhysicalModel(
        key: props['key'],
        child: props['child'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        borderRadius: props['borderRadius'] ?? BorderRadius.zero,
        elevation: props['elevation']?.toDouble() ?? 0,
        color: props['color'],
        animateColor: props['animateColor'] ?? true,
        shadowColor: props['shadowColor'],
        animateShadowColor: props['animateShadowColor'] ?? true,
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedFractionallySizedBox': (props) => AnimatedFractionallySizedBox(
        key: props['key'],
        alignment: props['alignment'] ?? Alignment.center,
        child: props['child'],
        heightFactor: props['heightFactor']?.toDouble(),
        widthFactor: props['widthFactor']?.toDouble(),
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        onEnd: props['onEnd'],
      ),
  'AnimatedCrossFade': (props) => AnimatedCrossFade(
        key: props['key'],
        firstChild: props['firstChild'],
        secondChild: props['secondChild'],
        firstCurve: props['firstCurve'] ?? Curves.linear,
        secondCurve: props['secondCurve'] ?? Curves.linear,
        sizeCurve: props['sizeCurve'] ?? Curves.linear,
        alignment: props['alignment'] ?? Alignment.topCenter,
        crossFadeState: props['crossFadeState'],
        duration: props['duration'],
        reverseDuration: props['reverseDuration'],
        excludeBottomFocus: props['excludeBottomFocus'] ?? true,
      ),
  'AnimatedCrossFade.defaultLayoutBuilder': (props) =>
      AnimatedCrossFade.defaultLayoutBuilder(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
      ),
  'CrossFadeState.showFirst': CrossFadeState.showFirst,
  'CrossFadeState.showSecond': CrossFadeState.showSecond,
  'CrossFadeState.values': CrossFadeState.values,
  'GridPaper': (props) => GridPaper(
        key: props['key'],
        color: props['color'] ?? const Color(0x7FC3E8F3),
        interval: props['interval']?.toDouble() ?? 100.0,
        divisions: props['divisions'] ?? 2,
        subdivisions: props['subdivisions'] ?? 5,
        child: props['child'],
      ),
  'TweenAnimationBuilder': (props) => TweenAnimationBuilder(
        key: props['key'],
        tween: props['tween'],
        duration: props['duration'],
        curve: props['curve'] ?? Curves.linear,
        builder: props['builder'],
        onEnd: props['onEnd'],
        child: props['child'],
      ),
  'WidgetSpan': (props) => WidgetSpan(
        child: props['child'],
        alignment: props['alignment'] ?? ui.PlaceholderAlignment.bottom,
        baseline: props['baseline'],
        style: props['style'],
      ),
  'FixedScrollMetrics': (props) => FixedScrollMetrics(
        minScrollExtent: props['minScrollExtent']?.toDouble() ?? 0,
        maxScrollExtent: props['maxScrollExtent']?.toDouble() ?? 0,
        pixels: props['pixels']?.toDouble() ?? 0,
        viewportDimension: props['viewportDimension']?.toDouble() ?? 0,
        axisDirection: props['axisDirection'],
      ),
  'DefaultTextEditingShortcuts': (props) => DefaultTextEditingShortcuts(
        key: props['key'],
        child: props['child'],
      ),
  'SlideTransition': (props) => SlideTransition(
        key: props['key'],
        position: props['position'],
        transformHitTests: props['transformHitTests'] ?? true,
        textDirection: props['textDirection'],
        child: props['child'],
      ),
  'ScaleTransition': (props) => ScaleTransition(
        key: props['key'],
        scale: props['scale'],
        alignment: props['alignment'] ?? Alignment.center,
        filterQuality: props['filterQuality'],
        child: props['child'],
      ),
  'RotationTransition': (props) => RotationTransition(
        key: props['key'],
        turns: props['turns'],
        alignment: props['alignment'] ?? Alignment.center,
        filterQuality: props['filterQuality'],
        child: props['child'],
      ),
  'SizeTransition': (props) => SizeTransition(
        key: props['key'],
        axis: props['axis'] ?? Axis.vertical,
        sizeFactor: props['sizeFactor'],
        axisAlignment: props['axisAlignment']?.toDouble() ?? 0.0,
        child: props['child'],
      ),
  'FadeTransition': (props) => FadeTransition(
        key: props['key'],
        opacity: props['opacity'],
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
        child: props['child'],
      ),
  'SliverFadeTransition': (props) => SliverFadeTransition(
        key: props['key'],
        opacity: props['opacity'],
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
        sliver: props['sliver'],
      ),
  'RelativeRectTween': (props) => RelativeRectTween(
        begin: props['begin'],
        end: props['end'],
      ),
  'PositionedTransition': (props) => PositionedTransition(
        key: props['key'],
        rect: props['rect'],
        child: props['child'],
      ),
  'RelativePositionedTransition': (props) => RelativePositionedTransition(
        key: props['key'],
        rect: props['rect'],
        size: props['size'],
        child: props['child'],
      ),
  'DecoratedBoxTransition': (props) => DecoratedBoxTransition(
        key: props['key'],
        decoration: props['decoration'],
        position: props['position'] ?? DecorationPosition.background,
        child: props['child'],
      ),
  'AlignTransition': (props) => AlignTransition(
        key: props['key'],
        alignment: props['alignment'],
        child: props['child'],
        widthFactor: props['widthFactor']?.toDouble(),
        heightFactor: props['heightFactor']?.toDouble(),
      ),
  'DefaultTextStyleTransition': (props) => DefaultTextStyleTransition(
        key: props['key'],
        style: props['style'],
        child: props['child'],
        textAlign: props['textAlign'],
        softWrap: props['softWrap'] ?? true,
        overflow: props['overflow'] ?? TextOverflow.clip,
        maxLines: props['maxLines'],
      ),
  'AnimatedBuilder': (props) => AnimatedBuilder(
        key: props['key'],
        animation: props['animation'],
        builder: props['builder'],
        child: props['child'],
      ),
  'SliverPersistentHeader': (props) => SliverPersistentHeader(
        key: props['key'],
        delegate: props['delegate'],
        pinned: props['pinned'] ?? false,
        floating: props['floating'] ?? false,
      ),
  'PageStorageKey': (props) => PageStorageKey(
        props['pa'][0],
      ),
  'PageStorageBucket': (props) => PageStorageBucket(),
  'PageStorage': (props) => PageStorage(
        key: props['key'],
        bucket: props['bucket'],
        child: props['child'],
      ),
  'PageStorage.of': (props) => PageStorage.of(
        props['pa'][0],
      ),
  'RouteInformation': (props) => RouteInformation(
        location: props['location'],
        state: props['state'],
      ),
  'RouterConfig': (props) => RouterConfig(
        routeInformationProvider: props['routeInformationProvider'],
        routeInformationParser: props['routeInformationParser'],
        routerDelegate: props['routerDelegate'],
        backButtonDispatcher: props['backButtonDispatcher'],
      ),
  'Router': (props) => Router(
        key: props['key'],
        routeInformationProvider: props['routeInformationProvider'],
        routeInformationParser: props['routeInformationParser'],
        routerDelegate: props['routerDelegate'],
        backButtonDispatcher: props['backButtonDispatcher'],
        restorationScopeId: props['restorationScopeId'],
      ),
  'Router.withConfig': (props) => Router.withConfig(
        key: props['key'],
        config: props['config'],
        restorationScopeId: props['restorationScopeId'],
      ),
  'Router.of': (props) => Router.of(
        props['pa'][0],
      ),
  'Router.maybeOf': (props) => Router.maybeOf(
        props['pa'][0],
      ),
  'Router.navigate': (props) => Router.navigate(
        props['pa'][0],
        props['pa'][1],
      ),
  'Router.neglect': (props) => Router.neglect(
        props['pa'][0],
        props['pa'][1],
      ),
  'RootBackButtonDispatcher': (props) => RootBackButtonDispatcher(),
  'ChildBackButtonDispatcher': (props) => ChildBackButtonDispatcher(
        props['pa'][0],
      ),
  'BackButtonListener': (props) => BackButtonListener(
        key: props['key'],
        child: props['child'],
        onBackButtonPressed: props['onBackButtonPressed'],
      ),
  'PlatformRouteInformationProvider': (props) =>
      PlatformRouteInformationProvider(
        initialRouteInformation: props['initialRouteInformation'],
      ),
  'RouteInformationReportingType.none': RouteInformationReportingType.none,
  'RouteInformationReportingType.neglect':
      RouteInformationReportingType.neglect,
  'RouteInformationReportingType.navigate':
      RouteInformationReportingType.navigate,
  'RouteInformationReportingType.values': RouteInformationReportingType.values,
  'LocalHistoryEntry': (props) => LocalHistoryEntry(
        onRemove: props['onRemove'],
        impliesAppBarDismissal: props['impliesAppBarDismissal'] ?? true,
      ),
  'RouteObserver': (props) => RouteObserver(),
  'RawDialogRoute': (props) => RawDialogRoute(
        pageBuilder: props['pageBuilder'],
        barrierDismissible: props['barrierDismissible'] ?? true,
        barrierColor: props['barrierColor'] ?? const Color(0x80000000),
        barrierLabel: props['barrierLabel'],
        transitionDuration:
            props['transitionDuration'] ?? const Duration(milliseconds: 200),
        transitionBuilder: props['transitionBuilder'],
        settings: props['settings'],
        anchorPoint: props['anchorPoint'],
      ),
  'FocusTrap': (props) => FocusTrap(
        focusScopeNode: props['focusScopeNode'],
        child: props['child'],
        key: props['key'],
      ),
  'FocusTrapArea': (props) => FocusTrapArea(
        focusNode: props['focusNode'],
        key: props['key'],
        child: props['child'],
      ),
  'Directionality': (props) => Directionality(
        key: props['key'],
        textDirection: props['textDirection'],
        child: props['child'],
      ),
  'Directionality.of': (props) => Directionality.of(
        props['pa'][0],
      ),
  'Directionality.maybeOf': (props) => Directionality.maybeOf(
        props['pa'][0],
      ),
  'Opacity': (props) => Opacity(
        key: props['key'],
        opacity: props['opacity']?.toDouble() ?? 0,
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
        child: props['child'],
      ),
  'ShaderMask': (props) => ShaderMask(
        key: props['key'],
        shaderCallback: props['shaderCallback'],
        blendMode: props['blendMode'] ?? BlendMode.modulate,
        child: props['child'],
      ),
  'BackdropFilter': (props) => BackdropFilter(
        key: props['key'],
        filter: props['filter'],
        child: props['child'],
        blendMode: props['blendMode'] ?? BlendMode.srcOver,
      ),
  'CustomPaint': (props) => CustomPaint(
        key: props['key'],
        painter: props['painter'],
        foregroundPainter: props['foregroundPainter'],
        size: props['size'] ?? Size.zero,
        isComplex: props['isComplex'] ?? false,
        willChange: props['willChange'] ?? false,
        child: props['child'],
      ),
  'ClipRect': (props) => ClipRect(
        key: props['key'],
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        child: props['child'],
      ),
  'ClipRRect': (props) => ClipRRect(
        key: props['key'],
        borderRadius: props['borderRadius'] ?? BorderRadius.zero,
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
        child: props['child'],
      ),
  'ClipOval': (props) => ClipOval(
        key: props['key'],
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
        child: props['child'],
      ),
  'ClipPath': (props) => ClipPath(
        key: props['key'],
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
        child: props['child'],
      ),
  'ClipPath.shape': (props) => ClipPath.shape(
        key: props['key'],
        shape: props['shape'],
        clipBehavior: props['clipBehavior'] ?? Clip.antiAlias,
        child: props['child'],
      ),
  'PhysicalModel': (props) => PhysicalModel(
        key: props['key'],
        shape: props['shape'] ?? BoxShape.rectangle,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        borderRadius: props['borderRadius'],
        elevation: props['elevation']?.toDouble() ?? 0.0,
        color: props['color'],
        shadowColor: props['shadowColor'] ?? const Color(0xFF000000),
        child: props['child'],
      ),
  'PhysicalShape': (props) => PhysicalShape(
        key: props['key'],
        clipper: props['clipper'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        elevation: props['elevation']?.toDouble() ?? 0.0,
        color: props['color'],
        shadowColor: props['shadowColor'] ?? const Color(0xFF000000),
        child: props['child'],
      ),
  'Transform': (props) => Transform(
        key: props['key'],
        transform: props['transform'],
        origin: props['origin'],
        alignment: props['alignment'],
        transformHitTests: props['transformHitTests'] ?? true,
        filterQuality: props['filterQuality'],
        child: props['child'],
      ),
  'Transform.rotate': (props) => Transform.rotate(
        key: props['key'],
        angle: props['angle']?.toDouble() ?? 0,
        origin: props['origin'],
        alignment: props['alignment'] ?? Alignment.center,
        transformHitTests: props['transformHitTests'] ?? true,
        filterQuality: props['filterQuality'],
        child: props['child'],
      ),
  'Transform.translate': (props) => Transform.translate(
        key: props['key'],
        offset: props['offset'],
        transformHitTests: props['transformHitTests'] ?? true,
        filterQuality: props['filterQuality'],
        child: props['child'],
      ),
  'Transform.scale': (props) => Transform.scale(
        key: props['key'],
        scale: props['scale']?.toDouble(),
        scaleX: props['scaleX']?.toDouble(),
        scaleY: props['scaleY']?.toDouble(),
        origin: props['origin'],
        alignment: props['alignment'] ?? Alignment.center,
        transformHitTests: props['transformHitTests'] ?? true,
        filterQuality: props['filterQuality'],
        child: props['child'],
      ),
  'CompositedTransformTarget': (props) => CompositedTransformTarget(
        key: props['key'],
        link: props['link'],
        child: props['child'],
      ),
  'CompositedTransformFollower': (props) => CompositedTransformFollower(
        key: props['key'],
        link: props['link'],
        showWhenUnlinked: props['showWhenUnlinked'] ?? true,
        offset: props['offset'] ?? Offset.zero,
        targetAnchor: props['targetAnchor'] ?? Alignment.topLeft,
        followerAnchor: props['followerAnchor'] ?? Alignment.topLeft,
        child: props['child'],
      ),
  'FittedBox': (props) => FittedBox(
        key: props['key'],
        fit: props['fit'] ?? BoxFit.contain,
        alignment: props['alignment'] ?? Alignment.center,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        child: props['child'],
      ),
  'FractionalTranslation': (props) => FractionalTranslation(
        key: props['key'],
        translation: props['translation'],
        transformHitTests: props['transformHitTests'] ?? true,
        child: props['child'],
      ),
  'RotatedBox': (props) => RotatedBox(
        key: props['key'],
        quarterTurns: props['quarterTurns'],
        child: props['child'],
      ),
  'Padding': (props) => Padding(
        key: props['key'],
        padding: props['padding'],
        child: props['child'],
      ),
  'Align': (props) => Align(
        key: props['key'],
        alignment: props['alignment'] ?? Alignment.center,
        widthFactor: props['widthFactor']?.toDouble(),
        heightFactor: props['heightFactor']?.toDouble(),
        child: props['child'],
      ),
  'Center': (props) => Center(
        key: props['key'],
        widthFactor: props['widthFactor']?.toDouble(),
        heightFactor: props['heightFactor']?.toDouble(),
        child: props['child'],
      ),
  'CustomSingleChildLayout': (props) => CustomSingleChildLayout(
        key: props['key'],
        delegate: props['delegate'],
        child: props['child'],
      ),
  'LayoutId': (props) => LayoutId(
        key: props['key'],
        id: props['id'],
        child: props['child'],
      ),
  'CustomMultiChildLayout': (props) => CustomMultiChildLayout(
        key: props['key'],
        delegate: props['delegate'],
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'SizedBox': (props) => SizedBox(
        key: props['key'],
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        child: props['child'],
      ),
  'SizedBox.expand': (props) => SizedBox.expand(
        key: props['key'],
        child: props['child'],
      ),
  'SizedBox.shrink': (props) => SizedBox.shrink(
        key: props['key'],
        child: props['child'],
      ),
  'SizedBox.fromSize': (props) => SizedBox.fromSize(
        key: props['key'],
        child: props['child'],
        size: props['size'],
      ),
  'SizedBox.square': (props) => SizedBox.square(
        key: props['key'],
        child: props['child'],
        dimension: props['dimension']?.toDouble(),
      ),
  'ConstrainedBox': (props) => ConstrainedBox(
        key: props['key'],
        constraints: props['constraints'],
        child: props['child'],
      ),
  'ConstraintsTransformBox': (props) => ConstraintsTransformBox(
        key: props['key'],
        child: props['child'],
        textDirection: props['textDirection'],
        alignment: props['alignment'] ?? Alignment.center,
        constraintsTransform: props['constraintsTransform'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        debugTransformType: props['debugTransformType'] ?? '',
      ),
  'ConstraintsTransformBox.unmodified': (props) =>
      ConstraintsTransformBox.unmodified(
        props['pa'][0],
      ),
  'ConstraintsTransformBox.unconstrained': (props) =>
      ConstraintsTransformBox.unconstrained(
        props['pa'][0],
      ),
  'ConstraintsTransformBox.widthUnconstrained': (props) =>
      ConstraintsTransformBox.widthUnconstrained(
        props['pa'][0],
      ),
  'ConstraintsTransformBox.heightUnconstrained': (props) =>
      ConstraintsTransformBox.heightUnconstrained(
        props['pa'][0],
      ),
  'ConstraintsTransformBox.maxHeightUnconstrained': (props) =>
      ConstraintsTransformBox.maxHeightUnconstrained(
        props['pa'][0],
      ),
  'ConstraintsTransformBox.maxWidthUnconstrained': (props) =>
      ConstraintsTransformBox.maxWidthUnconstrained(
        props['pa'][0],
      ),
  'ConstraintsTransformBox.maxUnconstrained': (props) =>
      ConstraintsTransformBox.maxUnconstrained(
        props['pa'][0],
      ),
  'UnconstrainedBox': (props) => UnconstrainedBox(
        key: props['key'],
        child: props['child'],
        textDirection: props['textDirection'],
        alignment: props['alignment'] ?? Alignment.center,
        constrainedAxis: props['constrainedAxis'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
      ),
  'FractionallySizedBox': (props) => FractionallySizedBox(
        key: props['key'],
        alignment: props['alignment'] ?? Alignment.center,
        widthFactor: props['widthFactor']?.toDouble(),
        heightFactor: props['heightFactor']?.toDouble(),
        child: props['child'],
      ),
  'LimitedBox': (props) => LimitedBox(
        key: props['key'],
        maxWidth: props['maxWidth']?.toDouble() ?? double.infinity,
        maxHeight: props['maxHeight']?.toDouble() ?? double.infinity,
        child: props['child'],
      ),
  'OverflowBox': (props) => OverflowBox(
        key: props['key'],
        alignment: props['alignment'] ?? Alignment.center,
        minWidth: props['minWidth']?.toDouble(),
        maxWidth: props['maxWidth']?.toDouble(),
        minHeight: props['minHeight']?.toDouble(),
        maxHeight: props['maxHeight']?.toDouble(),
        child: props['child'],
      ),
  'SizedOverflowBox': (props) => SizedOverflowBox(
        key: props['key'],
        size: props['size'],
        alignment: props['alignment'] ?? Alignment.center,
        child: props['child'],
      ),
  'Offstage': (props) => Offstage(
        key: props['key'],
        offstage: props['offstage'] ?? true,
        child: props['child'],
      ),
  'AspectRatio': (props) => AspectRatio(
        key: props['key'],
        aspectRatio: props['aspectRatio']?.toDouble() ?? 0,
        child: props['child'],
      ),
  'IntrinsicWidth': (props) => IntrinsicWidth(
        key: props['key'],
        stepWidth: props['stepWidth']?.toDouble(),
        stepHeight: props['stepHeight']?.toDouble(),
        child: props['child'],
      ),
  'IntrinsicHeight': (props) => IntrinsicHeight(
        key: props['key'],
        child: props['child'],
      ),
  'Baseline': (props) => Baseline(
        key: props['key'],
        baseline: props['baseline']?.toDouble() ?? 0,
        baselineType: props['baselineType'],
        child: props['child'],
      ),
  'SliverToBoxAdapter': (props) => SliverToBoxAdapter(
        key: props['key'],
        child: props['child'],
      ),
  'SliverPadding': (props) => SliverPadding(
        key: props['key'],
        padding: props['padding'],
        sliver: props['sliver'],
      ),
  'ListBody': (props) => ListBody(
        key: props['key'],
        mainAxis: props['mainAxis'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'Stack': (props) => Stack(
        key: props['key'],
        alignment: props['alignment'] ?? AlignmentDirectional.topStart,
        textDirection: props['textDirection'],
        fit: props['fit'] ?? StackFit.loose,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'IndexedStack': (props) => IndexedStack(
        key: props['key'],
        alignment: props['alignment'] ?? AlignmentDirectional.topStart,
        textDirection: props['textDirection'],
        sizing: props['sizing'] ?? StackFit.loose,
        index: props['index'] ?? 0,
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'Positioned': (props) => Positioned(
        key: props['key'],
        left: props['left']?.toDouble(),
        top: props['top']?.toDouble(),
        right: props['right']?.toDouble(),
        bottom: props['bottom']?.toDouble(),
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        child: props['child'],
      ),
  'Positioned.fromRect': (props) => Positioned.fromRect(
        key: props['key'],
        rect: props['rect'],
        child: props['child'],
      ),
  'Positioned.fromRelativeRect': (props) => Positioned.fromRelativeRect(
        key: props['key'],
        rect: props['rect'],
        child: props['child'],
      ),
  'Positioned.fill': (props) => Positioned.fill(
        key: props['key'],
        left: props['left']?.toDouble() ?? 0.0,
        top: props['top']?.toDouble() ?? 0.0,
        right: props['right']?.toDouble() ?? 0.0,
        bottom: props['bottom']?.toDouble() ?? 0.0,
        child: props['child'],
      ),
  'Positioned.directional': (props) => Positioned.directional(
        key: props['key'],
        textDirection: props['textDirection'],
        start: props['start']?.toDouble(),
        top: props['top']?.toDouble() ?? 0.0,
        end: props['end']?.toDouble(),
        bottom: props['bottom']?.toDouble() ?? 0.0,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        child: props['child'],
      ),
  'PositionedDirectional': (props) => PositionedDirectional(
        key: props['key'],
        start: props['start']?.toDouble(),
        top: props['top']?.toDouble(),
        end: props['end']?.toDouble(),
        bottom: props['bottom']?.toDouble(),
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        child: props['child'],
      ),
  'Flex': (props) => Flex(
        key: props['key'],
        direction: props['direction'],
        mainAxisAlignment:
            props['mainAxisAlignment'] ?? MainAxisAlignment.start,
        mainAxisSize: props['mainAxisSize'] ?? MainAxisSize.max,
        crossAxisAlignment:
            props['crossAxisAlignment'] ?? CrossAxisAlignment.center,
        textDirection: props['textDirection'],
        verticalDirection: props['verticalDirection'] ?? VerticalDirection.down,
        textBaseline: props['textBaseline'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'Row': (props) => Row(
        key: props['key'],
        mainAxisAlignment:
            props['mainAxisAlignment'] ?? MainAxisAlignment.start,
        mainAxisSize: props['mainAxisSize'] ?? MainAxisSize.max,
        crossAxisAlignment:
            props['crossAxisAlignment'] ?? CrossAxisAlignment.center,
        textDirection: props['textDirection'],
        verticalDirection: props['verticalDirection'] ?? VerticalDirection.down,
        textBaseline: props['textBaseline'],
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'Column': (props) => Column(
        key: props['key'],
        mainAxisAlignment:
            props['mainAxisAlignment'] ?? MainAxisAlignment.start,
        mainAxisSize: props['mainAxisSize'] ?? MainAxisSize.max,
        crossAxisAlignment:
            props['crossAxisAlignment'] ?? CrossAxisAlignment.center,
        textDirection: props['textDirection'],
        verticalDirection: props['verticalDirection'] ?? VerticalDirection.down,
        textBaseline: props['textBaseline'],
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'Flexible': (props) => Flexible(
        key: props['key'],
        flex: props['flex'] ?? 1,
        fit: props['fit'] ?? FlexFit.loose,
        child: props['child'],
      ),
  'Expanded': (props) => Expanded(
        key: props['key'],
        flex: props['flex'] ?? 1,
        child: props['child'],
      ),
  'Wrap': (props) => Wrap(
        key: props['key'],
        direction: props['direction'] ?? Axis.horizontal,
        alignment: props['alignment'] ?? WrapAlignment.start,
        spacing: props['spacing']?.toDouble() ?? 0.0,
        runAlignment: props['runAlignment'] ?? WrapAlignment.start,
        runSpacing: props['runSpacing']?.toDouble() ?? 0.0,
        crossAxisAlignment:
            props['crossAxisAlignment'] ?? WrapCrossAlignment.start,
        textDirection: props['textDirection'],
        verticalDirection: props['verticalDirection'] ?? VerticalDirection.down,
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'Flow': (props) => Flow(
        key: props['key'],
        delegate: props['delegate'],
        children: as<Widget>(props['children']) ?? const <Widget>[],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'Flow.unwrapped': (props) => Flow.unwrapped(
        key: props['key'],
        delegate: props['delegate'],
        children: as<Widget>(props['children']) ?? const <Widget>[],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'RichText': (props) => RichText(
        key: props['key'],
        text: props['text'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textDirection: props['textDirection'],
        softWrap: props['softWrap'] ?? true,
        overflow: props['overflow'] ?? TextOverflow.clip,
        textScaleFactor: props['textScaleFactor']?.toDouble() ?? 1.0,
        maxLines: props['maxLines'],
        locale: props['locale'],
        strutStyle: props['strutStyle'],
        textWidthBasis: props['textWidthBasis'] ?? TextWidthBasis.parent,
        textHeightBehavior: props['textHeightBehavior'],
        selectionRegistrar: props['selectionRegistrar'],
        selectionColor: props['selectionColor'],
      ),
  'RawImage': (props) => RawImage(
        key: props['key'],
        image: props['image'],
        debugImageLabel: props['debugImageLabel'],
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        scale: props['scale']?.toDouble() ?? 1.0,
        color: props['color'],
        opacity: props['opacity'],
        colorBlendMode: props['colorBlendMode'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        centerSlice: props['centerSlice'],
        matchTextDirection: props['matchTextDirection'] ?? false,
        invertColors: props['invertColors'] ?? false,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
        isAntiAlias: props['isAntiAlias'] ?? false,
      ),
  'DefaultAssetBundle': (props) => DefaultAssetBundle(
        key: props['key'],
        bundle: props['bundle'],
        child: props['child'],
      ),
  'DefaultAssetBundle.of': (props) => DefaultAssetBundle.of(
        props['pa'][0],
      ),
  'WidgetToRenderBoxAdapter': (props) => WidgetToRenderBoxAdapter(
        renderBox: props['renderBox'],
        onBuild: props['onBuild'],
        onUnmount: props['onUnmount'],
      ),
  'Listener': (props) => Listener(
        key: props['key'],
        onPointerDown: props['onPointerDown'],
        onPointerMove: props['onPointerMove'],
        onPointerUp: props['onPointerUp'],
        onPointerHover: props['onPointerHover'],
        onPointerCancel: props['onPointerCancel'],
        onPointerPanZoomStart: props['onPointerPanZoomStart'],
        onPointerPanZoomUpdate: props['onPointerPanZoomUpdate'],
        onPointerPanZoomEnd: props['onPointerPanZoomEnd'],
        onPointerSignal: props['onPointerSignal'],
        behavior: props['behavior'] ?? HitTestBehavior.deferToChild,
        child: props['child'],
      ),
  'MouseRegion': (props) => MouseRegion(
        key: props['key'],
        onEnter: props['onEnter'],
        onExit: props['onExit'],
        onHover: props['onHover'],
        cursor: props['cursor'] ?? MouseCursor.defer,
        opaque: props['opaque'] ?? true,
        hitTestBehavior: props['hitTestBehavior'],
        child: props['child'],
      ),
  'RepaintBoundary': (props) => RepaintBoundary(
        key: props['key'],
        child: props['child'],
      ),
  'RepaintBoundary.wrap': (props) => RepaintBoundary.wrap(
        props['pa'][0],
        props['pa'][1],
      ),
  'RepaintBoundary.wrapAll': (props) => RepaintBoundary.wrapAll(
        props['pa'][0],
      ),
  'IgnorePointer': (props) => IgnorePointer(
        key: props['key'],
        ignoring: props['ignoring'] ?? true,
        ignoringSemantics: props['ignoringSemantics'],
        child: props['child'],
      ),
  'AbsorbPointer': (props) => AbsorbPointer(
        key: props['key'],
        absorbing: props['absorbing'] ?? true,
        child: props['child'],
        ignoringSemantics: props['ignoringSemantics'],
      ),
  'MetaData': (props) => MetaData(
        key: props['key'],
        metaData: props['metaData'],
        behavior: props['behavior'] ?? HitTestBehavior.deferToChild,
        child: props['child'],
      ),
  'Semantics': (props) => Semantics(
        key: props['key'],
        child: props['child'],
        container: props['container'] ?? false,
        explicitChildNodes: props['explicitChildNodes'] ?? false,
        excludeSemantics: props['excludeSemantics'] ?? false,
        enabled: props['enabled'],
        checked: props['checked'],
        selected: props['selected'],
        toggled: props['toggled'],
        button: props['button'],
        slider: props['slider'],
        keyboardKey: props['keyboardKey'],
        link: props['link'],
        header: props['header'],
        textField: props['textField'],
        readOnly: props['readOnly'],
        focusable: props['focusable'],
        focused: props['focused'],
        inMutuallyExclusiveGroup: props['inMutuallyExclusiveGroup'],
        obscured: props['obscured'],
        multiline: props['multiline'],
        scopesRoute: props['scopesRoute'],
        namesRoute: props['namesRoute'],
        hidden: props['hidden'],
        image: props['image'],
        liveRegion: props['liveRegion'],
        maxValueLength: props['maxValueLength'],
        currentValueLength: props['currentValueLength'],
        label: props['label'],
        attributedLabel: props['attributedLabel'],
        value: props['value'],
        attributedValue: props['attributedValue'],
        increasedValue: props['increasedValue'],
        attributedIncreasedValue: props['attributedIncreasedValue'],
        decreasedValue: props['decreasedValue'],
        attributedDecreasedValue: props['attributedDecreasedValue'],
        hint: props['hint'],
        attributedHint: props['attributedHint'],
        tooltip: props['tooltip'],
        onTapHint: props['onTapHint'],
        onLongPressHint: props['onLongPressHint'],
        textDirection: props['textDirection'],
        sortKey: props['sortKey'],
        tagForChildren: props['tagForChildren'],
        onTap: props['onTap'],
        onLongPress: props['onLongPress'],
        onScrollLeft: props['onScrollLeft'],
        onScrollRight: props['onScrollRight'],
        onScrollUp: props['onScrollUp'],
        onScrollDown: props['onScrollDown'],
        onIncrease: props['onIncrease'],
        onDecrease: props['onDecrease'],
        onCopy: props['onCopy'],
        onCut: props['onCut'],
        onPaste: props['onPaste'],
        onDismiss: props['onDismiss'],
        onMoveCursorForwardByCharacter: props['onMoveCursorForwardByCharacter'],
        onMoveCursorBackwardByCharacter:
            props['onMoveCursorBackwardByCharacter'],
        onSetSelection: props['onSetSelection'],
        onSetText: props['onSetText'],
        onDidGainAccessibilityFocus: props['onDidGainAccessibilityFocus'],
        onDidLoseAccessibilityFocus: props['onDidLoseAccessibilityFocus'],
        customSemanticsActions: props['customSemanticsActions'],
      ),
  'Semantics.fromProperties': (props) => Semantics.fromProperties(
        key: props['key'],
        child: props['child'],
        container: props['container'] ?? false,
        explicitChildNodes: props['explicitChildNodes'] ?? false,
        excludeSemantics: props['excludeSemantics'] ?? false,
        properties: props['properties'],
      ),
  'MergeSemantics': (props) => MergeSemantics(
        key: props['key'],
        child: props['child'],
      ),
  'BlockSemantics': (props) => BlockSemantics(
        key: props['key'],
        blocking: props['blocking'] ?? true,
        child: props['child'],
      ),
  'ExcludeSemantics': (props) => ExcludeSemantics(
        key: props['key'],
        excluding: props['excluding'] ?? true,
        child: props['child'],
      ),
  'IndexedSemantics': (props) => IndexedSemantics(
        key: props['key'],
        index: props['index'],
        child: props['child'],
      ),
  'KeyedSubtree': (props) => KeyedSubtree(
        key: props['key'],
        child: props['child'],
      ),
  'KeyedSubtree.wrap': (props) => KeyedSubtree.wrap(
        props['pa'][0],
        props['pa'][1],
      ),
  'KeyedSubtree.ensureUniqueKeysForList': (props) =>
      KeyedSubtree.ensureUniqueKeysForList(
        props['pa'][0],
        baseIndex: props['baseIndex'] ?? 0,
      ),
  'Builder': (props) => Builder(
        key: props['key'],
        builder: props['builder'],
      ),
  'StatefulBuilder': (props) => StatefulBuilder(
        key: props['key'],
        builder: props['builder'],
      ),
  'ColoredBox': (props) => ColoredBox(
        color: props['color'],
        child: props['child'],
        key: props['key'],
      ),
  'DisposableBuildContext': (props) => DisposableBuildContext<State>(
        props['pa'][0],
      ),
  'GestureRecognizerFactoryWithHandlers': (props) =>
      GestureRecognizerFactoryWithHandlers(
        props['pa'][0],
        props['pa'][1],
      ),
  'GestureDetector': (props) => GestureDetector(
        key: props['key'],
        child: props['child'],
        onTapDown: props['onTapDown'],
        onTapUp: props['onTapUp'],
        onTap: props['onTap'],
        onTapCancel: props['onTapCancel'],
        onSecondaryTap: props['onSecondaryTap'],
        onSecondaryTapDown: props['onSecondaryTapDown'],
        onSecondaryTapUp: props['onSecondaryTapUp'],
        onSecondaryTapCancel: props['onSecondaryTapCancel'],
        onTertiaryTapDown: props['onTertiaryTapDown'],
        onTertiaryTapUp: props['onTertiaryTapUp'],
        onTertiaryTapCancel: props['onTertiaryTapCancel'],
        onDoubleTapDown: props['onDoubleTapDown'],
        onDoubleTap: props['onDoubleTap'],
        onDoubleTapCancel: props['onDoubleTapCancel'],
        onLongPressDown: props['onLongPressDown'],
        onLongPressCancel: props['onLongPressCancel'],
        onLongPress: props['onLongPress'],
        onLongPressStart: props['onLongPressStart'],
        onLongPressMoveUpdate: props['onLongPressMoveUpdate'],
        onLongPressUp: props['onLongPressUp'],
        onLongPressEnd: props['onLongPressEnd'],
        onSecondaryLongPressDown: props['onSecondaryLongPressDown'],
        onSecondaryLongPressCancel: props['onSecondaryLongPressCancel'],
        onSecondaryLongPress: props['onSecondaryLongPress'],
        onSecondaryLongPressStart: props['onSecondaryLongPressStart'],
        onSecondaryLongPressMoveUpdate: props['onSecondaryLongPressMoveUpdate'],
        onSecondaryLongPressUp: props['onSecondaryLongPressUp'],
        onSecondaryLongPressEnd: props['onSecondaryLongPressEnd'],
        onTertiaryLongPressDown: props['onTertiaryLongPressDown'],
        onTertiaryLongPressCancel: props['onTertiaryLongPressCancel'],
        onTertiaryLongPress: props['onTertiaryLongPress'],
        onTertiaryLongPressStart: props['onTertiaryLongPressStart'],
        onTertiaryLongPressMoveUpdate: props['onTertiaryLongPressMoveUpdate'],
        onTertiaryLongPressUp: props['onTertiaryLongPressUp'],
        onTertiaryLongPressEnd: props['onTertiaryLongPressEnd'],
        onVerticalDragDown: props['onVerticalDragDown'],
        onVerticalDragStart: props['onVerticalDragStart'],
        onVerticalDragUpdate: props['onVerticalDragUpdate'],
        onVerticalDragEnd: props['onVerticalDragEnd'],
        onVerticalDragCancel: props['onVerticalDragCancel'],
        onHorizontalDragDown: props['onHorizontalDragDown'],
        onHorizontalDragStart: props['onHorizontalDragStart'],
        onHorizontalDragUpdate: props['onHorizontalDragUpdate'],
        onHorizontalDragEnd: props['onHorizontalDragEnd'],
        onHorizontalDragCancel: props['onHorizontalDragCancel'],
        onForcePressStart: props['onForcePressStart'],
        onForcePressPeak: props['onForcePressPeak'],
        onForcePressUpdate: props['onForcePressUpdate'],
        onForcePressEnd: props['onForcePressEnd'],
        onPanDown: props['onPanDown'],
        onPanStart: props['onPanStart'],
        onPanUpdate: props['onPanUpdate'],
        onPanEnd: props['onPanEnd'],
        onPanCancel: props['onPanCancel'],
        onScaleStart: props['onScaleStart'],
        onScaleUpdate: props['onScaleUpdate'],
        onScaleEnd: props['onScaleEnd'],
        behavior: props['behavior'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
      ),
  'RawGestureDetector': (props) => RawGestureDetector(
        key: props['key'],
        child: props['child'],
        gestures: props['gestures'] ?? const <Type, GestureRecognizerFactory>{},
        behavior: props['behavior'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        semantics: props['semantics'],
      ),
  'RestorableNum': (props) => RestorableNum<num>(
        props['pa'][0],
      ),
  'RestorableDouble': (props) => RestorableDouble(
        props['pa'][0]?.toDouble(),
      ),
  'RestorableInt': (props) => RestorableInt(
        props['pa'][0],
      ),
  'RestorableString': (props) => RestorableString(
        props['pa'][0],
      ),
  'RestorableBool': (props) => RestorableBool(
        props['pa'][0],
      ),
  'RestorableBoolN': (props) => RestorableBoolN(
        props['pa'][0],
      ),
  'RestorableNumN': (props) => RestorableNumN<num?>(
        props['pa'][0],
      ),
  'RestorableDoubleN': (props) => RestorableDoubleN(
        props['pa'][0]?.toDouble(),
      ),
  'RestorableIntN': (props) => RestorableIntN(
        props['pa'][0],
      ),
  'RestorableStringN': (props) => RestorableStringN(
        props['pa'][0],
      ),
  'RestorableDateTime': (props) => RestorableDateTime(
        props['pa'][0],
      ),
  'RestorableDateTimeN': (props) => RestorableDateTimeN(
        props['pa'][0],
      ),
  'RestorableTextEditingController': (props) => RestorableTextEditingController(
        text: props['text'],
      ),
  'RestorableTextEditingController.fromValue': (props) =>
      RestorableTextEditingController.fromValue(
        props['pa'][0],
      ),
  'SlottedRenderObjectElement': (props) => SlottedRenderObjectElement(
        props['pa'][0],
      ),
  'AsyncSnapshot.nothing': (props) => const AsyncSnapshot.nothing(),
  'AsyncSnapshot.waiting': (props) => const AsyncSnapshot.waiting(),
  'AsyncSnapshot.withData': (props) => AsyncSnapshot.withData(
        props['pa'][0],
        props['pa'][1],
      ),
  'AsyncSnapshot.withError': (props) => AsyncSnapshot.withError(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2] ?? StackTrace.empty,
      ),
  'StreamBuilder': (props) => StreamBuilder(
        key: props['key'],
        initialData: props['initialData'],
        stream: props['stream'],
        builder: props['builder'],
      ),
  'FutureBuilder': (props) => FutureBuilder(
        key: props['key'],
        future: props['future'],
        initialData: props['initialData'],
        builder: props['builder'],
      ),
  'ConnectionState.none': ConnectionState.none,
  'ConnectionState.waiting': ConnectionState.waiting,
  'ConnectionState.active': ConnectionState.active,
  'ConnectionState.done': ConnectionState.done,
  'ConnectionState.values': ConnectionState.values,
  'DefaultTextStyle': (props) => DefaultTextStyle(
        key: props['key'],
        style: props['style'],
        textAlign: props['textAlign'],
        softWrap: props['softWrap'] ?? true,
        overflow: props['overflow'] ?? TextOverflow.clip,
        maxLines: props['maxLines'],
        textWidthBasis: props['textWidthBasis'] ?? TextWidthBasis.parent,
        textHeightBehavior: props['textHeightBehavior'],
        child: props['child'],
      ),
  'DefaultTextStyle.fallback': (props) => DefaultTextStyle.fallback(
        key: props['key'],
      ),
  'DefaultTextStyle.merge': (props) => DefaultTextStyle.merge(
        key: props['key'],
        style: props['style'],
        textAlign: props['textAlign'],
        softWrap: props['softWrap'] ?? true,
        overflow: props['overflow'] ?? TextOverflow.clip,
        maxLines: props['maxLines'],
        textWidthBasis: props['textWidthBasis'] ?? TextWidthBasis.parent,
        child: props['child'],
      ),
  'DefaultTextStyle.of': (props) => DefaultTextStyle.of(
        props['pa'][0],
      ),
  'DefaultTextHeightBehavior': (props) => DefaultTextHeightBehavior(
        key: props['key'],
        textHeightBehavior: props['textHeightBehavior'],
        child: props['child'],
      ),
  'DefaultTextHeightBehavior.of': (props) => DefaultTextHeightBehavior.of(
        props['pa'][0],
      ),
  'Text': (props) => Text(
        props['pa'][0],
        key: props['key'],
        style: props['style'],
        strutStyle: props['strutStyle'],
        textAlign: props['textAlign'],
        textDirection: props['textDirection'],
        locale: props['locale'],
        softWrap: props['softWrap'],
        overflow: props['overflow'],
        textScaleFactor: props['textScaleFactor']?.toDouble(),
        maxLines: props['maxLines'],
        semanticsLabel: props['semanticsLabel'],
        textWidthBasis: props['textWidthBasis'],
        textHeightBehavior: props['textHeightBehavior'],
        selectionColor: props['selectionColor'],
      ),
  'Text.rich': (props) => Text.rich(
        props['pa'][0],
        key: props['key'],
        style: props['style'],
        strutStyle: props['strutStyle'],
        textAlign: props['textAlign'],
        textDirection: props['textDirection'],
        locale: props['locale'],
        softWrap: props['softWrap'],
        overflow: props['overflow'],
        textScaleFactor: props['textScaleFactor']?.toDouble(),
        maxLines: props['maxLines'],
        semanticsLabel: props['semanticsLabel'],
        textWidthBasis: props['textWidthBasis'],
        textHeightBehavior: props['textHeightBehavior'],
        selectionColor: props['selectionColor'],
      ),
  'ActionListener': (props) => ActionListener(
        key: props['key'],
        listener: props['listener'],
        action: props['action'],
        child: props['child'],
      ),
  'CallbackAction': (props) => CallbackAction(
        onInvoke: props['onInvoke'],
      ),
  'ActionDispatcher': (props) => const ActionDispatcher(),
  'Actions': (props) => Actions(
        key: props['key'],
        dispatcher: props['dispatcher'],
        actions: props['actions'],
        child: props['child'],
      ),
  'Actions.handler': (props) => Actions.handler<Intent>(
        props['pa'][0],
        props['pa'][1],
      ),
  'Actions.find': (props) => Actions.find<Intent>(
        props['pa'][0],
        intent: props['intent'],
      ),
  'Actions.maybeFind': (props) => Actions.maybeFind<Intent>(
        props['pa'][0],
        intent: props['intent'],
      ),
  'Actions.of': (props) => Actions.of(
        props['pa'][0],
      ),
  'Actions.invoke': (props) => Actions.invoke<Intent>(
        props['pa'][0],
        props['pa'][1],
      ),
  'Actions.maybeInvoke': (props) => Actions.maybeInvoke<Intent>(
        props['pa'][0],
        props['pa'][1],
      ),
  'FocusableActionDetector': (props) => FocusableActionDetector(
        key: props['key'],
        enabled: props['enabled'] ?? true,
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        descendantsAreFocusable: props['descendantsAreFocusable'] ?? true,
        descendantsAreTraversable: props['descendantsAreTraversable'] ?? true,
        shortcuts: props['shortcuts'],
        actions: props['actions'],
        onShowFocusHighlight: props['onShowFocusHighlight'],
        onShowHoverHighlight: props['onShowHoverHighlight'],
        onFocusChange: props['onFocusChange'],
        mouseCursor: props['mouseCursor'] ?? MouseCursor.defer,
        child: props['child'],
      ),
  'VoidCallbackIntent': (props) => VoidCallbackIntent(
        props['pa'][0],
      ),
  'VoidCallbackAction': (props) => VoidCallbackAction(),
  'DoNothingIntent': (props) => const DoNothingIntent(),
  'DoNothingAndStopPropagationIntent': (props) =>
      const DoNothingAndStopPropagationIntent(),
  'DoNothingAction': (props) => DoNothingAction(
        consumesKey: props['consumesKey'] ?? true,
      ),
  'ActivateIntent': (props) => const ActivateIntent(),
  'ButtonActivateIntent': (props) => const ButtonActivateIntent(),
  'SelectIntent': (props) => const SelectIntent(),
  'DismissIntent': (props) => const DismissIntent(),
  'PrioritizedIntents': (props) => PrioritizedIntents(
        orderedIntents: as<Intent>(props['orderedIntents']) ?? const [],
      ),
  'PrioritizedAction': (props) => PrioritizedAction(),
  'Form': (props) => Form(
        key: props['key'],
        child: props['child'],
        onWillPop: props['onWillPop'],
        onChanged: props['onChanged'],
        autovalidateMode: props['autovalidateMode'],
      ),
  'Form.of': (props) => Form.of(
        props['pa'][0],
      ),
  'FormField': (props) => FormField(
        key: props['key'],
        builder: props['builder'],
        onSaved: props['onSaved'],
        validator: props['validator'],
        initialValue: props['initialValue'],
        enabled: props['enabled'] ?? true,
        autovalidateMode: props['autovalidateMode'],
        restorationId: props['restorationId'],
      ),
  'AutovalidateMode.disabled': AutovalidateMode.disabled,
  'AutovalidateMode.always': AutovalidateMode.always,
  'AutovalidateMode.onUserInteraction': AutovalidateMode.onUserInteraction,
  'AutovalidateMode.values': AutovalidateMode.values,
  'Image': (props) => Image(
        key: props['key'],
        image: props['image'],
        frameBuilder: props['frameBuilder'],
        loadingBuilder: props['loadingBuilder'],
        errorBuilder: props['errorBuilder'],
        semanticLabel: props['semanticLabel'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        color: props['color'],
        opacity: props['opacity'],
        colorBlendMode: props['colorBlendMode'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        centerSlice: props['centerSlice'],
        matchTextDirection: props['matchTextDirection'] ?? false,
        gaplessPlayback: props['gaplessPlayback'] ?? false,
        isAntiAlias: props['isAntiAlias'] ?? false,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
      ),
  'Image.network': (props) => Image.network(
        props['pa'][0],
        key: props['key'],
        scale: props['scale']?.toDouble() ?? 1.0,
        frameBuilder: props['frameBuilder'],
        loadingBuilder: props['loadingBuilder'],
        errorBuilder: props['errorBuilder'],
        semanticLabel: props['semanticLabel'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        color: props['color'],
        opacity: props['opacity'],
        colorBlendMode: props['colorBlendMode'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        centerSlice: props['centerSlice'],
        matchTextDirection: props['matchTextDirection'] ?? false,
        gaplessPlayback: props['gaplessPlayback'] ?? false,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
        isAntiAlias: props['isAntiAlias'] ?? false,
        headers: props['headers'],
        cacheWidth: props['cacheWidth'],
        cacheHeight: props['cacheHeight'],
      ),
  'Image.file': (props) => Image.file(
        props['pa'][0],
        key: props['key'],
        scale: props['scale']?.toDouble() ?? 1.0,
        frameBuilder: props['frameBuilder'],
        errorBuilder: props['errorBuilder'],
        semanticLabel: props['semanticLabel'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        color: props['color'],
        opacity: props['opacity'],
        colorBlendMode: props['colorBlendMode'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        centerSlice: props['centerSlice'],
        matchTextDirection: props['matchTextDirection'] ?? false,
        gaplessPlayback: props['gaplessPlayback'] ?? false,
        isAntiAlias: props['isAntiAlias'] ?? false,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
        cacheWidth: props['cacheWidth'],
        cacheHeight: props['cacheHeight'],
      ),
  'Image.asset': (props) => Image.asset(
        props['pa'][0],
        key: props['key'],
        bundle: props['bundle'],
        frameBuilder: props['frameBuilder'],
        errorBuilder: props['errorBuilder'],
        semanticLabel: props['semanticLabel'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        scale: props['scale']?.toDouble() ?? 1.0,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        color: props['color'],
        opacity: props['opacity'],
        colorBlendMode: props['colorBlendMode'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        centerSlice: props['centerSlice'],
        matchTextDirection: props['matchTextDirection'] ?? false,
        gaplessPlayback: props['gaplessPlayback'] ?? false,
        isAntiAlias: props['isAntiAlias'] ?? false,
        package: props['package'],
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
        cacheWidth: props['cacheWidth'],
        cacheHeight: props['cacheHeight'],
      ),
  'Image.memory': (props) => Image.memory(
        props['pa'][0],
        key: props['key'],
        scale: props['scale']?.toDouble() ?? 1.0,
        frameBuilder: props['frameBuilder'],
        errorBuilder: props['errorBuilder'],
        semanticLabel: props['semanticLabel'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        color: props['color'],
        opacity: props['opacity'],
        colorBlendMode: props['colorBlendMode'],
        fit: props['fit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        centerSlice: props['centerSlice'],
        matchTextDirection: props['matchTextDirection'] ?? false,
        gaplessPlayback: props['gaplessPlayback'] ?? false,
        isAntiAlias: props['isAntiAlias'] ?? false,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
        cacheWidth: props['cacheWidth'],
        cacheHeight: props['cacheHeight'],
      ),
  'IconThemeData': (props) => IconThemeData(
        color: props['color'],
        opacity: props['opacity']?.toDouble(),
        size: props['size']?.toDouble(),
        shadows: as<Shadow>(props['shadows']),
      ),
  'IconThemeData.fallback': (props) => const IconThemeData.fallback(),
  'IconThemeData.lerp': (props) => IconThemeData.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Texture': (props) => Texture(
        key: props['key'],
        textureId: props['textureId'],
        freeze: props['freeze'] ?? false,
        filterQuality: props['filterQuality'] ?? FilterQuality.low,
      ),
  'NestedScrollView': (props) => NestedScrollView(
        key: props['key'],
        controller: props['controller'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        physics: props['physics'],
        headerSliverBuilder: props['headerSliverBuilder'],
        body: props['body'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        floatHeaderSlivers: props['floatHeaderSlivers'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        restorationId: props['restorationId'],
        scrollBehavior: props['scrollBehavior'],
      ),
  'NestedScrollView.sliverOverlapAbsorberHandleFor': (props) =>
      NestedScrollView.sliverOverlapAbsorberHandleFor(
        props['pa'][0],
      ),
  'SliverOverlapAbsorberHandle': (props) => SliverOverlapAbsorberHandle(),
  'SliverOverlapAbsorber': (props) => SliverOverlapAbsorber(
        key: props['key'],
        handle: props['handle'],
        sliver: props['sliver'],
      ),
  'RenderSliverOverlapAbsorber': (props) => RenderSliverOverlapAbsorber(
        handle: props['handle'],
        sliver: props['sliver'],
      ),
  'SliverOverlapInjector': (props) => SliverOverlapInjector(
        key: props['key'],
        handle: props['handle'],
        sliver: props['sliver'],
      ),
  'RenderSliverOverlapInjector': (props) => RenderSliverOverlapInjector(
        handle: props['handle'],
      ),
  'NestedScrollViewViewport': (props) => NestedScrollViewViewport(
        key: props['key'],
        axisDirection: props['axisDirection'] ?? AxisDirection.down,
        crossAxisDirection: props['crossAxisDirection'],
        anchor: props['anchor']?.toDouble() ?? 0.0,
        offset: props['offset'],
        center: props['center'],
        slivers: as<Widget>(props['slivers']) ?? const <Widget>[],
        handle: props['handle'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'RenderNestedScrollViewViewport': (props) => RenderNestedScrollViewViewport(
        axisDirection: props['axisDirection'] ?? AxisDirection.down,
        crossAxisDirection: props['crossAxisDirection'],
        offset: props['offset'],
        anchor: props['anchor']?.toDouble() ?? 0.0,
        children: as<RenderSliver>(props['children']),
        center: props['center'],
        handle: props['handle'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'SelectionContainer': (props) => SelectionContainer(
        key: props['key'],
        registrar: props['registrar'],
        delegate: props['delegate'],
        child: props['child'],
      ),
  'SelectionContainer.disabled': (props) => SelectionContainer.disabled(
        key: props['key'],
        child: props['child'],
      ),
  'SelectionContainer.maybeOf': (props) => SelectionContainer.maybeOf(
        props['pa'][0],
      ),
  'SelectionRegistrarScope': (props) => SelectionRegistrarScope(
        key: props['key'],
        registrar: props['registrar'],
        child: props['child'],
      ),
  'NavigationToolbar': (props) => NavigationToolbar(
        key: props['key'],
        leading: props['leading'],
        middle: props['middle'],
        trailing: props['trailing'],
        centerMiddle: props['centerMiddle'] ?? true,
        middleSpacing: props['middleSpacing']?.toDouble() ?? kMiddleSpacing,
      ),
  'NavigationToolbar.kMiddleSpacing': NavigationToolbar.kMiddleSpacing,
  'ReorderableList': (props) => ReorderableList(
        key: props['key'],
        itemBuilder: props['itemBuilder'],
        itemCount: props['itemCount'],
        onReorder: props['onReorder'],
        onReorderStart: props['onReorderStart'],
        onReorderEnd: props['onReorderEnd'],
        itemExtent: props['itemExtent']?.toDouble(),
        prototypeItem: props['prototypeItem'],
        proxyDecorator: props['proxyDecorator'],
        padding: props['padding'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        anchor: props['anchor']?.toDouble() ?? 0.0,
        cacheExtent: props['cacheExtent']?.toDouble(),
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ReorderableList.of': (props) => ReorderableList.of(
        props['pa'][0],
      ),
  'ReorderableList.maybeOf': (props) => ReorderableList.maybeOf(
        props['pa'][0],
      ),
  'SliverReorderableList': (props) => SliverReorderableList(
        key: props['key'],
        itemBuilder: props['itemBuilder'],
        findChildIndexCallback: props['findChildIndexCallback'],
        itemCount: props['itemCount'],
        onReorder: props['onReorder'],
        onReorderStart: props['onReorderStart'],
        onReorderEnd: props['onReorderEnd'],
        itemExtent: props['itemExtent']?.toDouble(),
        prototypeItem: props['prototypeItem'],
        proxyDecorator: props['proxyDecorator'],
      ),
  'SliverReorderableList.of': (props) => SliverReorderableList.of(
        props['pa'][0],
      ),
  'SliverReorderableList.maybeOf': (props) => SliverReorderableList.maybeOf(
        props['pa'][0],
      ),
  'ReorderableDragStartListener': (props) => ReorderableDragStartListener(
        key: props['key'],
        child: props['child'],
        index: props['index'],
        enabled: props['enabled'] ?? true,
      ),
  'ReorderableDelayedDragStartListener': (props) =>
      ReorderableDelayedDragStartListener(
        key: props['key'],
        child: props['child'],
        index: props['index'],
        enabled: props['enabled'] ?? true,
      ),
  'PageRouteBuilder': (props) => PageRouteBuilder(
        settings: props['settings'],
        pageBuilder: props['pageBuilder'],
        transitionsBuilder:
            props['transitionsBuilder'] ?? _defaultTransitionsBuilder,
        transitionDuration:
            props['transitionDuration'] ?? const Duration(milliseconds: 300),
        reverseTransitionDuration: props['reverseTransitionDuration'] ??
            const Duration(milliseconds: 300),
        opaque: props['opaque'] ?? true,
        barrierDismissible: props['barrierDismissible'] ?? false,
        barrierColor: props['barrierColor'],
        barrierLabel: props['barrierLabel'],
        maintainState: props['maintainState'] ?? true,
        fullscreenDialog: props['fullscreenDialog'] ?? false,
      ),
  'ScrollController': (props) => ScrollController(
        initialScrollOffset: props['initialScrollOffset']?.toDouble() ?? 0.0,
        keepScrollOffset: props['keepScrollOffset'] ?? true,
        debugLabel: props['debugLabel'],
      ),
  'TrackingScrollController': (props) => TrackingScrollController(
        initialScrollOffset: props['initialScrollOffset']?.toDouble() ?? 0.0,
        keepScrollOffset: props['keepScrollOffset'] ?? true,
        debugLabel: props['debugLabel'],
      ),
  'SliverLayoutBuilder': (props) => SliverLayoutBuilder(
        key: props['key'],
        builder: props['builder'],
      ),
  'RouteSettings': (props) => RouteSettings(
        name: props['name'],
        arguments: props['arguments'],
      ),
  'NavigatorObserver': (props) => NavigatorObserver(),
  'HeroControllerScope': (props) => HeroControllerScope(
        key: props['key'],
        controller: props['controller'],
        child: props['child'],
      ),
  'HeroControllerScope.none': (props) => HeroControllerScope.none(
        key: props['key'],
        child: props['child'],
      ),
  'HeroControllerScope.of': (props) => HeroControllerScope.of(
        props['pa'][0],
      ),
  'DefaultTransitionDelegate': (props) => const DefaultTransitionDelegate(),
  'Navigator': (props) => Navigator(
        key: props['key'],
        pages: as<Page>(props['pages']) ?? const <Page<dynamic>>[],
        onPopPage: props['onPopPage'],
        initialRoute: props['initialRoute'],
        onGenerateInitialRoutes: props['onGenerateInitialRoutes'] ??
            Navigator.defaultGenerateInitialRoutes,
        onGenerateRoute: props['onGenerateRoute'],
        onUnknownRoute: props['onUnknownRoute'],
        transitionDelegate: props['transitionDelegate'] ??
            const DefaultTransitionDelegate<dynamic>(),
        reportsRouteUpdateToEngine:
            props['reportsRouteUpdateToEngine'] ?? false,
        observers: as<NavigatorObserver>(props['observers']) ??
            const <NavigatorObserver>[],
        requestFocus: props['requestFocus'] ?? true,
        restorationScopeId: props['restorationScopeId'],
      ),
  'Navigator.defaultRouteName': Navigator.defaultRouteName,
  'Navigator.pushNamed': (props) => Navigator.pushNamed(
        props['pa'][0],
        props['pa'][1],
        arguments: props['arguments'],
      ),
  'Navigator.restorablePushNamed': (props) => Navigator.restorablePushNamed(
        props['pa'][0],
        props['pa'][1],
        arguments: props['arguments'],
      ),
  'Navigator.pushReplacementNamed': (props) => Navigator.pushReplacementNamed(
        props['pa'][0],
        props['pa'][1],
        result: props['result'],
        arguments: props['arguments'],
      ),
  'Navigator.restorablePushReplacementNamed': (props) =>
      Navigator.restorablePushReplacementNamed(
        props['pa'][0],
        props['pa'][1],
        result: props['result'],
        arguments: props['arguments'],
      ),
  'Navigator.popAndPushNamed': (props) => Navigator.popAndPushNamed(
        props['pa'][0],
        props['pa'][1],
        result: props['result'],
        arguments: props['arguments'],
      ),
  'Navigator.restorablePopAndPushNamed': (props) =>
      Navigator.restorablePopAndPushNamed(
        props['pa'][0],
        props['pa'][1],
        result: props['result'],
        arguments: props['arguments'],
      ),
  'Navigator.pushNamedAndRemoveUntil': (props) =>
      Navigator.pushNamedAndRemoveUntil(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        arguments: props['arguments'],
      ),
  'Navigator.restorablePushNamedAndRemoveUntil': (props) =>
      Navigator.restorablePushNamedAndRemoveUntil(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        arguments: props['arguments'],
      ),
  'Navigator.push': (props) => Navigator.push(
        props['pa'][0],
        props['pa'][1],
      ),
  'Navigator.restorablePush': (props) => Navigator.restorablePush(
        props['pa'][0],
        props['pa'][1],
        arguments: props['arguments'],
      ),
  'Navigator.pushReplacement': (props) => Navigator.pushReplacement(
        props['pa'][0],
        props['pa'][1],
        result: props['result'],
      ),
  'Navigator.restorablePushReplacement': (props) =>
      Navigator.restorablePushReplacement(
        props['pa'][0],
        props['pa'][1],
        result: props['result'],
        arguments: props['arguments'],
      ),
  'Navigator.pushAndRemoveUntil': (props) => Navigator.pushAndRemoveUntil(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'Navigator.restorablePushAndRemoveUntil': (props) =>
      Navigator.restorablePushAndRemoveUntil(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        arguments: props['arguments'],
      ),
  'Navigator.replace': (props) => Navigator.replace(
        props['pa'][0],
        oldRoute: props['oldRoute'],
        newRoute: props['newRoute'],
      ),
  'Navigator.restorableReplace': (props) => Navigator.restorableReplace(
        props['pa'][0],
        oldRoute: props['oldRoute'],
        newRouteBuilder: props['newRouteBuilder'],
        arguments: props['arguments'],
      ),
  'Navigator.replaceRouteBelow': (props) => Navigator.replaceRouteBelow(
        props['pa'][0],
        anchorRoute: props['anchorRoute'],
        newRoute: props['newRoute'],
      ),
  'Navigator.restorableReplaceRouteBelow': (props) =>
      Navigator.restorableReplaceRouteBelow(
        props['pa'][0],
        anchorRoute: props['anchorRoute'],
        newRouteBuilder: props['newRouteBuilder'],
        arguments: props['arguments'],
      ),
  'Navigator.canPop': (props) => Navigator.canPop(
        props['pa'][0],
      ),
  'Navigator.maybePop': (props) => Navigator.maybePop(
        props['pa'][0],
        props['pa'][1],
      ),
  'Navigator.pop': (props) => Navigator.pop(
        props['pa'][0],
        props['pa'][1],
      ),
  'Navigator.popUntil': (props) => Navigator.popUntil(
        props['pa'][0],
        props['pa'][1],
      ),
  'Navigator.removeRoute': (props) => Navigator.removeRoute(
        props['pa'][0],
        props['pa'][1],
      ),
  'Navigator.removeRouteBelow': (props) => Navigator.removeRouteBelow(
        props['pa'][0],
        props['pa'][1],
      ),
  'Navigator.of': (props) => Navigator.of(
        props['pa'][0],
        rootNavigator: props['rootNavigator'] ?? false,
      ),
  'Navigator.maybeOf': (props) => Navigator.maybeOf(
        props['pa'][0],
        rootNavigator: props['rootNavigator'] ?? false,
      ),
  'Navigator.defaultGenerateInitialRoutes': (props) =>
      Navigator.defaultGenerateInitialRoutes(
        props['pa'][0],
        props['pa'][1],
      ),
  'RestorableRouteFuture': (props) => RestorableRouteFuture(
        navigatorFinder: props['navigatorFinder'] ?? _defaultNavigatorFinder,
        onPresent: props['onPresent'],
        onComplete: props['onComplete'],
      ),
  'RoutePopDisposition.pop': RoutePopDisposition.pop,
  'RoutePopDisposition.doNotPop': RoutePopDisposition.doNotPop,
  'RoutePopDisposition.bubble': RoutePopDisposition.bubble,
  'RoutePopDisposition.values': RoutePopDisposition.values,
  'DoNothingAndStopPropagationTextIntent': (props) =>
      const DoNothingAndStopPropagationTextIntent(),
  'DeleteCharacterIntent': (props) => DeleteCharacterIntent(
        forward: props['forward'],
      ),
  'DeleteToNextWordBoundaryIntent': (props) => DeleteToNextWordBoundaryIntent(
        forward: props['forward'],
      ),
  'DeleteToLineBreakIntent': (props) => DeleteToLineBreakIntent(
        forward: props['forward'],
      ),
  'ExtendSelectionByCharacterIntent': (props) =>
      ExtendSelectionByCharacterIntent(
        forward: props['forward'],
        collapseSelection: props['collapseSelection'],
      ),
  'ExtendSelectionToNextWordBoundaryIntent': (props) =>
      ExtendSelectionToNextWordBoundaryIntent(
        forward: props['forward'],
        collapseSelection: props['collapseSelection'],
      ),
  'ExtendSelectionToNextWordBoundaryOrCaretLocationIntent': (props) =>
      ExtendSelectionToNextWordBoundaryOrCaretLocationIntent(
        forward: props['forward'],
      ),
  'ExpandSelectionToDocumentBoundaryIntent': (props) =>
      ExpandSelectionToDocumentBoundaryIntent(
        forward: props['forward'],
      ),
  'ExpandSelectionToLineBreakIntent': (props) =>
      ExpandSelectionToLineBreakIntent(
        forward: props['forward'],
      ),
  'ExtendSelectionToLineBreakIntent': (props) =>
      ExtendSelectionToLineBreakIntent(
        forward: props['forward'],
        collapseSelection: props['collapseSelection'],
        collapseAtReversal: props['collapseAtReversal'] ?? false,
        continuesAtWrap: props['continuesAtWrap'] ?? false,
      ),
  'ExtendSelectionVerticallyToAdjacentLineIntent': (props) =>
      ExtendSelectionVerticallyToAdjacentLineIntent(
        forward: props['forward'],
        collapseSelection: props['collapseSelection'],
      ),
  'ExtendSelectionToDocumentBoundaryIntent': (props) =>
      ExtendSelectionToDocumentBoundaryIntent(
        forward: props['forward'],
        collapseSelection: props['collapseSelection'],
      ),
  'ScrollToDocumentBoundaryIntent': (props) => ScrollToDocumentBoundaryIntent(
        forward: props['forward'],
      ),
  'SelectAllTextIntent': (props) => SelectAllTextIntent(
        props['pa'][0],
      ),
  'CopySelectionTextIntent.cut': (props) => CopySelectionTextIntent.cut(
        props['pa'][0],
      ),
  'CopySelectionTextIntent.copy': CopySelectionTextIntent.copy,
  'PasteTextIntent': (props) => PasteTextIntent(
        props['pa'][0],
      ),
  'RedoTextIntent': (props) => RedoTextIntent(
        props['pa'][0],
      ),
  'ReplaceTextIntent': (props) => ReplaceTextIntent(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
      ),
  'UndoTextIntent': (props) => UndoTextIntent(
        props['pa'][0],
      ),
  'UpdateSelectionIntent': (props) => UpdateSelectionIntent(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'TransposeCharactersIntent': (props) => const TransposeCharactersIntent(),
  'PreferredSize': (props) => PreferredSize(
        key: props['key'],
        child: props['child'],
        preferredSize: props['preferredSize'],
      ),
  'ValueListenableBuilder': (props) => ValueListenableBuilder(
        key: props['key'],
        valueListenable: props['valueListenable'],
        builder: props['builder'],
        child: props['child'],
      ),
  'MediaQueryData': (props) => MediaQueryData(
        size: props['size'] ?? Size.zero,
        devicePixelRatio: props['devicePixelRatio']?.toDouble() ?? 1.0,
        textScaleFactor: props['textScaleFactor']?.toDouble() ?? 1.0,
        platformBrightness: props['platformBrightness'] ?? Brightness.light,
        padding: props['padding'] ?? EdgeInsets.zero,
        viewInsets: props['viewInsets'] ?? EdgeInsets.zero,
        systemGestureInsets: props['systemGestureInsets'] ?? EdgeInsets.zero,
        viewPadding: props['viewPadding'] ?? EdgeInsets.zero,
        alwaysUse24HourFormat: props['alwaysUse24HourFormat'] ?? false,
        accessibleNavigation: props['accessibleNavigation'] ?? false,
        invertColors: props['invertColors'] ?? false,
        highContrast: props['highContrast'] ?? false,
        disableAnimations: props['disableAnimations'] ?? false,
        boldText: props['boldText'] ?? false,
        navigationMode: props['navigationMode'] ?? NavigationMode.traditional,
        gestureSettings: props['gestureSettings'] ??
            const DeviceGestureSettings(touchSlop: kTouchSlop),
        displayFeatures: as<DisplayFeature>(props['displayFeatures']) ??
            const <ui.DisplayFeature>[],
      ),
  'MediaQueryData.fromWindow': (props) => MediaQueryData.fromWindow(
        props['pa'][0],
      ),
  'MediaQuery': (props) => MediaQuery(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'MediaQuery.removePadding': (props) => MediaQuery.removePadding(
        key: props['key'],
        context: props['context'],
        removeLeft: props['removeLeft'] ?? false,
        removeTop: props['removeTop'] ?? false,
        removeRight: props['removeRight'] ?? false,
        removeBottom: props['removeBottom'] ?? false,
        child: props['child'],
      ),
  'MediaQuery.removeViewInsets': (props) => MediaQuery.removeViewInsets(
        key: props['key'],
        context: props['context'],
        removeLeft: props['removeLeft'] ?? false,
        removeTop: props['removeTop'] ?? false,
        removeRight: props['removeRight'] ?? false,
        removeBottom: props['removeBottom'] ?? false,
        child: props['child'],
      ),
  'MediaQuery.removeViewPadding': (props) => MediaQuery.removeViewPadding(
        key: props['key'],
        context: props['context'],
        removeLeft: props['removeLeft'] ?? false,
        removeTop: props['removeTop'] ?? false,
        removeRight: props['removeRight'] ?? false,
        removeBottom: props['removeBottom'] ?? false,
        child: props['child'],
      ),
  'MediaQuery.fromWindow': (props) => MediaQuery.fromWindow(
        key: props['key'],
        child: props['child'],
      ),
  'MediaQuery.of': (props) => MediaQuery.of(
        props['pa'][0],
      ),
  'MediaQuery.maybeOf': (props) => MediaQuery.maybeOf(
        props['pa'][0],
      ),
  'MediaQuery.textScaleFactorOf': (props) => MediaQuery.textScaleFactorOf(
        props['pa'][0],
      ),
  'MediaQuery.platformBrightnessOf': (props) => MediaQuery.platformBrightnessOf(
        props['pa'][0],
      ),
  'MediaQuery.highContrastOf': (props) => MediaQuery.highContrastOf(
        props['pa'][0],
      ),
  'MediaQuery.boldTextOverride': (props) => MediaQuery.boldTextOverride(
        props['pa'][0],
      ),
  'Orientation.portrait': Orientation.portrait,
  'Orientation.landscape': Orientation.landscape,
  'Orientation.values': Orientation.values,
  'NavigationMode.traditional': NavigationMode.traditional,
  'NavigationMode.directional': NavigationMode.directional,
  'NavigationMode.values': NavigationMode.values,
  'DraggableScrollableController': (props) => DraggableScrollableController(),
  'DraggableScrollableSheet': (props) => DraggableScrollableSheet(
        key: props['key'],
        initialChildSize: props['initialChildSize']?.toDouble() ?? 0.5,
        minChildSize: props['minChildSize']?.toDouble() ?? 0.25,
        maxChildSize: props['maxChildSize']?.toDouble() ?? 1.0,
        expand: props['expand'] ?? true,
        snap: props['snap'] ?? false,
        snapSizes: as<double>(props['snapSizes']),
        controller: props['controller'],
        builder: props['builder'],
      ),
  'DraggableScrollableNotification': (props) => DraggableScrollableNotification(
        extent: props['extent']?.toDouble() ?? 0,
        minExtent: props['minExtent']?.toDouble() ?? 0,
        maxExtent: props['maxExtent']?.toDouble() ?? 0,
        initialExtent: props['initialExtent']?.toDouble() ?? 0,
        context: props['context'],
      ),
  'DraggableScrollableActuator': (props) => DraggableScrollableActuator(
        key: props['key'],
        child: props['child'],
      ),
  'DraggableScrollableActuator.reset': (props) =>
      DraggableScrollableActuator.reset(
        props['pa'][0],
      ),
  'DecoratedBox': (props) => DecoratedBox(
        key: props['key'],
        decoration: props['decoration'],
        position: props['position'] ?? DecorationPosition.background,
        child: props['child'],
      ),
  'Container': (props) => Container(
        key: props['key'],
        alignment: props['alignment'],
        padding: props['padding'],
        color: props['color'],
        decoration: props['decoration'],
        foregroundDecoration: props['foregroundDecoration'],
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        constraints: props['constraints'],
        margin: props['margin'],
        transform: props['transform'],
        transformAlignment: props['transformAlignment'],
        child: props['child'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
      ),
  'ScrollAwareImageProvider': (props) => ScrollAwareImageProvider(
        context: props['context'],
        imageProvider: props['imageProvider'],
      ),
  'TextEditingController': (props) => TextEditingController(
        text: props['text'],
      ),
  'TextEditingController.fromValue': (props) => TextEditingController.fromValue(
        props['pa'][0],
      ),
  'ToolbarOptions': (props) => ToolbarOptions(
        copy: props['copy'] ?? false,
        cut: props['cut'] ?? false,
        paste: props['paste'] ?? false,
        selectAll: props['selectAll'] ?? false,
      ),
  'EditableText': (props) => EditableText(
        key: props['key'],
        controller: props['controller'],
        focusNode: props['focusNode'],
        readOnly: props['readOnly'] ?? false,
        obscuringCharacter: props['obscuringCharacter'] ?? '•',
        obscureText: props['obscureText'] ?? false,
        autocorrect: props['autocorrect'] ?? true,
        smartDashesType: props['smartDashesType'],
        smartQuotesType: props['smartQuotesType'],
        enableSuggestions: props['enableSuggestions'] ?? true,
        style: props['style'],
        strutStyle: props['strutStyle'],
        cursorColor: props['cursorColor'],
        backgroundCursorColor: props['backgroundCursorColor'],
        textAlign: props['textAlign'] ?? TextAlign.start,
        textDirection: props['textDirection'],
        locale: props['locale'],
        textScaleFactor: props['textScaleFactor']?.toDouble(),
        maxLines: props['maxLines'] ?? 1,
        minLines: props['minLines'],
        expands: props['expands'] ?? false,
        forceLine: props['forceLine'] ?? true,
        textHeightBehavior: props['textHeightBehavior'],
        textWidthBasis: props['textWidthBasis'] ?? TextWidthBasis.parent,
        autofocus: props['autofocus'] ?? false,
        showCursor: props['showCursor'],
        showSelectionHandles: props['showSelectionHandles'] ?? false,
        selectionColor: props['selectionColor'],
        selectionControls: props['selectionControls'],
        keyboardType: props['keyboardType'],
        textInputAction: props['textInputAction'],
        textCapitalization:
            props['textCapitalization'] ?? TextCapitalization.none,
        onChanged: props['onChanged'],
        onEditingComplete: props['onEditingComplete'],
        onSubmitted: props['onSubmitted'],
        onAppPrivateCommand: props['onAppPrivateCommand'],
        onSelectionChanged: props['onSelectionChanged'],
        onSelectionHandleTapped: props['onSelectionHandleTapped'],
        inputFormatters: as<TextInputFormatter>(props['inputFormatters']),
        mouseCursor: props['mouseCursor'],
        rendererIgnoresPointer: props['rendererIgnoresPointer'] ?? false,
        cursorWidth: props['cursorWidth']?.toDouble() ?? 2.0,
        cursorHeight: props['cursorHeight']?.toDouble(),
        cursorRadius: props['cursorRadius'],
        cursorOpacityAnimates: props['cursorOpacityAnimates'] ?? false,
        cursorOffset: props['cursorOffset'],
        paintCursorAboveText: props['paintCursorAboveText'] ?? false,
        selectionHeightStyle:
            props['selectionHeightStyle'] ?? ui.BoxHeightStyle.tight,
        selectionWidthStyle:
            props['selectionWidthStyle'] ?? ui.BoxWidthStyle.tight,
        scrollPadding: props['scrollPadding'] ?? const EdgeInsets.all(20.0),
        keyboardAppearance: props['keyboardAppearance'] ?? Brightness.light,
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        enableInteractiveSelection: props['enableInteractiveSelection'],
        scrollController: props['scrollController'],
        scrollPhysics: props['scrollPhysics'],
        autocorrectionTextRectColor: props['autocorrectionTextRectColor'],
        toolbarOptions: props['toolbarOptions'],
        autofillHints: props['autofillHints'] ?? const <String>[],
        autofillClient: props['autofillClient'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        restorationId: props['restorationId'],
        scrollBehavior: props['scrollBehavior'],
        scribbleEnabled: props['scribbleEnabled'] ?? true,
        enableIMEPersonalizedLearning:
            props['enableIMEPersonalizedLearning'] ?? true,
      ),
  'Placeholder': (props) => Placeholder(
        key: props['key'],
        color: props['color'] ?? const Color(0xFF455A64),
        strokeWidth: props['strokeWidth']?.toDouble() ?? 2.0,
        fallbackWidth: props['fallbackWidth']?.toDouble() ?? 400.0,
        fallbackHeight: props['fallbackHeight']?.toDouble() ?? 400.0,
        child: props['child'],
      ),
  'Icon': (props) => Icon(
        props['pa'][0],
        key: props['key'],
        size: props['size']?.toDouble(),
        color: props['color'],
        semanticLabel: props['semanticLabel'],
        textDirection: props['textDirection'],
        shadows: as<Shadow>(props['shadows']),
      ),
  'BottomNavigationBarItem': (props) => BottomNavigationBarItem(
        icon: props['icon'],
        label: props['label'],
        activeIcon: props['activeIcon'],
        backgroundColor: props['backgroundColor'],
        tooltip: props['tooltip'],
      ),
  'LayoutBuilder': (props) => LayoutBuilder(
        key: props['key'],
        builder: props['builder'],
      ),
  'PrimaryScrollController': (props) => PrimaryScrollController(
        key: props['key'],
        controller: props['controller'],
        automaticallyInheritForPlatforms:
            props['automaticallyInheritForPlatforms'] ?? _kMobilePlatforms,
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        child: props['child'],
      ),
  'PrimaryScrollController.none': (props) => PrimaryScrollController.none(
        key: props['key'],
        child: props['child'],
      ),
  'PrimaryScrollController.shouldInherit': (props) =>
      PrimaryScrollController.shouldInherit(
        props['pa'][0],
        props['pa'][1],
      ),
  'PrimaryScrollController.of': (props) => PrimaryScrollController.of(
        props['pa'][0],
      ),
  'ScrollMetricsNotification': (props) => ScrollMetricsNotification(
        metrics: props['metrics'],
        context: props['context'],
      ),
  'ScrollPositionAlignmentPolicy.explicit':
      ScrollPositionAlignmentPolicy.explicit,
  'ScrollPositionAlignmentPolicy.keepVisibleAtEnd':
      ScrollPositionAlignmentPolicy.keepVisibleAtEnd,
  'ScrollPositionAlignmentPolicy.keepVisibleAtStart':
      ScrollPositionAlignmentPolicy.keepVisibleAtStart,
  'ScrollPositionAlignmentPolicy.values': ScrollPositionAlignmentPolicy.values,
  'ImageIcon': (props) => ImageIcon(
        props['pa'][0],
        key: props['key'],
        size: props['size']?.toDouble(),
        color: props['color'],
        semanticLabel: props['semanticLabel'],
      ),
  'Scrollable': (props) => Scrollable(
        key: props['key'],
        axisDirection: props['axisDirection'] ?? AxisDirection.down,
        controller: props['controller'],
        physics: props['physics'],
        viewportBuilder: props['viewportBuilder'],
        incrementCalculator: props['incrementCalculator'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        restorationId: props['restorationId'],
        scrollBehavior: props['scrollBehavior'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'Scrollable.of': (props) => Scrollable.of(
        props['pa'][0],
      ),
  'Scrollable.recommendDeferredLoadingForContext': (props) =>
      Scrollable.recommendDeferredLoadingForContext(
        props['pa'][0],
      ),
  'Scrollable.ensureVisible': (props) => Scrollable.ensureVisible(
        props['pa'][0],
        alignment: props['alignment']?.toDouble() ?? 0.0,
        duration: props['duration'] ?? Duration.zero,
        curve: props['curve'] ?? Curves.ease,
        alignmentPolicy:
            props['alignmentPolicy'] ?? ScrollPositionAlignmentPolicy.explicit,
      ),
  'EdgeDraggingAutoScroller': (props) => EdgeDraggingAutoScroller(
        props['pa'][0],
        onScrollViewScrolled: props['onScrollViewScrolled'],
        velocityScalar: props['velocityScalar']?.toDouble() ??
            _kDefaultAutoScrollVelocityScalar,
      ),
  'ScrollableDetails': (props) => ScrollableDetails(
        direction: props['direction'],
        controller: props['controller'],
        clipBehavior: props['clipBehavior'],
      ),
  'ScrollIncrementDetails': (props) => ScrollIncrementDetails(
        type: props['type'],
        metrics: props['metrics'],
      ),
  'ScrollIntent': (props) => ScrollIntent(
        direction: props['direction'],
        type: props['type'] ?? ScrollIncrementType.line,
      ),
  'ScrollAction': (props) => ScrollAction(),
  'ScrollIncrementType.line': ScrollIncrementType.line,
  'ScrollIncrementType.page': ScrollIncrementType.page,
  'ScrollIncrementType.values': ScrollIncrementType.values,
  'OrientationBuilder': (props) => OrientationBuilder(
        key: props['key'],
        builder: props['builder'],
      ),
  'FocusNode': (props) => FocusNode(
        debugLabel: props['debugLabel'],
        onKey: props['onKey'],
        onKeyEvent: props['onKeyEvent'],
        skipTraversal: props['skipTraversal'] ?? false,
        canRequestFocus: props['canRequestFocus'] ?? true,
        descendantsAreFocusable: props['descendantsAreFocusable'] ?? true,
        descendantsAreTraversable: props['descendantsAreTraversable'] ?? true,
      ),
  'FocusScopeNode': (props) => FocusScopeNode(
        debugLabel: props['debugLabel'],
        onKeyEvent: props['onKeyEvent'],
        onKey: props['onKey'],
        skipTraversal: props['skipTraversal'] ?? false,
        canRequestFocus: props['canRequestFocus'] ?? true,
      ),
  'FocusManager': (props) => FocusManager(),
  'KeyEventResult.handled': KeyEventResult.handled,
  'KeyEventResult.ignored': KeyEventResult.ignored,
  'KeyEventResult.skipRemainingHandlers': KeyEventResult.skipRemainingHandlers,
  'KeyEventResult.values': KeyEventResult.values,
  'UnfocusDisposition.scope': UnfocusDisposition.scope,
  'UnfocusDisposition.previouslyFocusedChild':
      UnfocusDisposition.previouslyFocusedChild,
  'UnfocusDisposition.values': UnfocusDisposition.values,
  'FocusHighlightMode.touch': FocusHighlightMode.touch,
  'FocusHighlightMode.traditional': FocusHighlightMode.traditional,
  'FocusHighlightMode.values': FocusHighlightMode.values,
  'FocusHighlightStrategy.automatic': FocusHighlightStrategy.automatic,
  'FocusHighlightStrategy.alwaysTouch': FocusHighlightStrategy.alwaysTouch,
  'FocusHighlightStrategy.alwaysTraditional':
      FocusHighlightStrategy.alwaysTraditional,
  'FocusHighlightStrategy.values': FocusHighlightStrategy.values,
  'WidgetOrderTraversalPolicy': (props) => WidgetOrderTraversalPolicy(),
  'ReadingOrderTraversalPolicy': (props) => ReadingOrderTraversalPolicy(),
  'NumericFocusOrder': (props) => NumericFocusOrder(
        props['pa'][0]?.toDouble(),
      ),
  'LexicalFocusOrder': (props) => LexicalFocusOrder(
        props['pa'][0],
      ),
  'OrderedTraversalPolicy': (props) => OrderedTraversalPolicy(
        secondary: props['secondary'],
      ),
  'FocusTraversalOrder': (props) => FocusTraversalOrder(
        key: props['key'],
        order: props['order'],
        child: props['child'],
      ),
  'FocusTraversalOrder.of': (props) => FocusTraversalOrder.of(
        props['pa'][0],
      ),
  'FocusTraversalOrder.maybeOf': (props) => FocusTraversalOrder.maybeOf(
        props['pa'][0],
      ),
  'FocusTraversalGroup': (props) => FocusTraversalGroup(
        key: props['key'],
        policy: props['policy'],
        descendantsAreFocusable: props['descendantsAreFocusable'] ?? true,
        descendantsAreTraversable: props['descendantsAreTraversable'] ?? true,
        child: props['child'],
      ),
  'FocusTraversalGroup.of': (props) => FocusTraversalGroup.of(
        props['pa'][0],
      ),
  'FocusTraversalGroup.maybeOf': (props) => FocusTraversalGroup.maybeOf(
        props['pa'][0],
      ),
  'RequestFocusIntent': (props) => RequestFocusIntent(
        props['pa'][0],
      ),
  'RequestFocusAction': (props) => RequestFocusAction(),
  'NextFocusIntent': (props) => const NextFocusIntent(),
  'NextFocusAction': (props) => NextFocusAction(),
  'PreviousFocusIntent': (props) => const PreviousFocusIntent(),
  'PreviousFocusAction': (props) => PreviousFocusAction(),
  'DirectionalFocusIntent': (props) => DirectionalFocusIntent(
        props['pa'][0],
        ignoreTextFields: props['ignoreTextFields'] ?? true,
      ),
  'DirectionalFocusAction': (props) => DirectionalFocusAction(),
  'DirectionalFocusAction.forTextField': (props) =>
      DirectionalFocusAction.forTextField(),
  'ExcludeFocusTraversal': (props) => ExcludeFocusTraversal(
        key: props['key'],
        excluding: props['excluding'] ?? true,
        child: props['child'],
      ),
  'TraversalDirection.up': TraversalDirection.up,
  'TraversalDirection.right': TraversalDirection.right,
  'TraversalDirection.down': TraversalDirection.down,
  'TraversalDirection.left': TraversalDirection.left,
  'TraversalDirection.values': TraversalDirection.values,
  'ColorFiltered': (props) => ColorFiltered(
        colorFilter: props['colorFilter'],
        child: props['child'],
        key: props['key'],
      ),
  'Title': (props) => Title(
        key: props['key'],
        title: props['title'] ?? '',
        color: props['color'],
        child: props['child'],
      ),
  'AnimatedSwitcher': (props) => AnimatedSwitcher(
        key: props['key'],
        child: props['child'],
        duration: props['duration'],
        reverseDuration: props['reverseDuration'],
        switchInCurve: props['switchInCurve'] ?? Curves.linear,
        switchOutCurve: props['switchOutCurve'] ?? Curves.linear,
        transitionBuilder: props['transitionBuilder'] ??
            AnimatedSwitcher.defaultTransitionBuilder,
      ),
  'AnimatedSwitcher.defaultTransitionBuilder': (props) =>
      AnimatedSwitcher.defaultTransitionBuilder(
        props['pa'][0],
        props['pa'][1],
      ),
  'AnimatedSwitcher.defaultLayoutBuilder': (props) =>
      AnimatedSwitcher.defaultLayoutBuilder(
        props['pa'][0],
        props['pa'][1],
      ),
  'SliverPrototypeExtentList': (props) => SliverPrototypeExtentList(
        key: props['key'],
        delegate: props['delegate'],
        prototypeItem: props['prototypeItem'],
      ),
  'TableRow': (props) => TableRow(
        key: props['key'],
        decoration: props['decoration'],
        children: as<Widget>(props['children']),
      ),
  'Table': (props) => Table(
        key: props['key'],
        children: as<TableRow>(props['children']) ?? const <TableRow>[],
        columnWidths: props['columnWidths'],
        defaultColumnWidth:
            props['defaultColumnWidth'] ?? const FlexColumnWidth(),
        textDirection: props['textDirection'],
        border: props['border'],
        defaultVerticalAlignment:
            props['defaultVerticalAlignment'] ?? TableCellVerticalAlignment.top,
        textBaseline: props['textBaseline'],
      ),
  'TableCell': (props) => TableCell(
        key: props['key'],
        verticalAlignment: props['verticalAlignment'],
        child: props['child'],
      ),
  'InheritedModelElement': (props) => InheritedModelElement(
        props['pa'][0],
      ),
  'DualTransitionBuilder': (props) => DualTransitionBuilder(
        key: props['key'],
        animation: props['animation'],
        forwardBuilder: props['forwardBuilder'],
        reverseBuilder: props['reverseBuilder'],
        child: props['child'],
      ),
  'Visibility': (props) => Visibility(
        key: props['key'],
        child: props['child'],
        replacement: props['replacement'] ?? const SizedBox.shrink(),
        visible: props['visible'] ?? true,
        maintainState: props['maintainState'] ?? false,
        maintainAnimation: props['maintainAnimation'] ?? false,
        maintainSize: props['maintainSize'] ?? false,
        maintainSemantics: props['maintainSemantics'] ?? false,
        maintainInteractivity: props['maintainInteractivity'] ?? false,
      ),
  'SliverVisibility': (props) => SliverVisibility(
        key: props['key'],
        sliver: props['sliver'],
        replacementSliver:
            props['replacementSliver'] ?? const SliverToBoxAdapter(),
        visible: props['visible'] ?? true,
        maintainState: props['maintainState'] ?? false,
        maintainAnimation: props['maintainAnimation'] ?? false,
        maintainSize: props['maintainSize'] ?? false,
        maintainSemantics: props['maintainSemantics'] ?? false,
        maintainInteractivity: props['maintainInteractivity'] ?? false,
      ),
  'AnnotatedRegion': (props) => AnnotatedRegion<Object>(
        key: props['key'],
        child: props['child'],
        value: props['value'],
        sized: props['sized'] ?? true,
      ),
  'BannerPainter': (props) => BannerPainter(
        message: props['message'],
        textDirection: props['textDirection'],
        location: props['location'],
        layoutDirection: props['layoutDirection'],
        color: props['color'] ?? _kColor,
        textStyle: props['textStyle'] ?? _kTextStyle,
      ),
  'Banner': (props) => Banner(
        key: props['key'],
        child: props['child'],
        message: props['message'],
        textDirection: props['textDirection'],
        location: props['location'],
        layoutDirection: props['layoutDirection'],
        color: props['color'] ?? _kColor,
        textStyle: props['textStyle'] ?? _kTextStyle,
      ),
  'CheckedModeBanner': (props) => CheckedModeBanner(
        key: props['key'],
        child: props['child'],
      ),
  'BannerLocation.topStart': BannerLocation.topStart,
  'BannerLocation.topEnd': BannerLocation.topEnd,
  'BannerLocation.bottomStart': BannerLocation.bottomStart,
  'BannerLocation.bottomEnd': BannerLocation.bottomEnd,
  'BannerLocation.values': BannerLocation.values,
  'NotificationListener': (props) => NotificationListener(
        key: props['key'],
        child: props['child'],
        onNotification: props['onNotification'],
      ),
  'LayoutChangedNotification': (props) => const LayoutChangedNotification(),
  'PageController': (props) => PageController(
        initialPage: props['initialPage'] ?? 0,
        keepPage: props['keepPage'] ?? true,
        viewportFraction: props['viewportFraction']?.toDouble() ?? 1.0,
      ),
  'PageMetrics': (props) => PageMetrics(
        minScrollExtent: props['minScrollExtent']?.toDouble() ?? 0,
        maxScrollExtent: props['maxScrollExtent']?.toDouble() ?? 0,
        pixels: props['pixels']?.toDouble() ?? 0,
        viewportDimension: props['viewportDimension']?.toDouble() ?? 0,
        axisDirection: props['axisDirection'],
        viewportFraction: props['viewportFraction']?.toDouble() ?? 0,
      ),
  'PageScrollPhysics': (props) => PageScrollPhysics(
        parent: props['parent'],
      ),
  'PageView': (props) => PageView(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.horizontal,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        physics: props['physics'],
        pageSnapping: props['pageSnapping'] ?? true,
        onPageChanged: props['onPageChanged'],
        children: as<Widget>(props['children']) ?? const <Widget>[],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        allowImplicitScrolling: props['allowImplicitScrolling'] ?? false,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        scrollBehavior: props['scrollBehavior'],
        padEnds: props['padEnds'] ?? true,
      ),
  'PageView.builder': (props) => PageView.builder(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.horizontal,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        physics: props['physics'],
        pageSnapping: props['pageSnapping'] ?? true,
        onPageChanged: props['onPageChanged'],
        itemBuilder: props['itemBuilder'],
        findChildIndexCallback: props['findChildIndexCallback'],
        itemCount: props['itemCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        allowImplicitScrolling: props['allowImplicitScrolling'] ?? false,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        scrollBehavior: props['scrollBehavior'],
        padEnds: props['padEnds'] ?? true,
      ),
  'PageView.custom': (props) => PageView.custom(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.horizontal,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        physics: props['physics'],
        pageSnapping: props['pageSnapping'] ?? true,
        onPageChanged: props['onPageChanged'],
        childrenDelegate: props['childrenDelegate'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        allowImplicitScrolling: props['allowImplicitScrolling'] ?? false,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        scrollBehavior: props['scrollBehavior'],
        padEnds: props['padEnds'] ?? true,
      ),
  'KeySet': (props) => KeySet<KeyboardKey>(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
      ),
  'KeySet.fromSet': (props) => KeySet.fromSet(
        props['pa'][0],
      ),
  'LogicalKeySet': (props) => LogicalKeySet(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
      ),
  'LogicalKeySet.fromSet': (props) => LogicalKeySet.fromSet(
        props['pa'][0],
      ),
  'ShortcutMapProperty': (props) => ShortcutMapProperty(
        props['pa'][0],
        props['pa'][1],
        showName: props['showName'] ?? true,
        defaultValue: props['defaultValue'] ?? kNoDefaultValue,
        level: props['level'] ?? DiagnosticLevel.info,
        description: props['description'],
      ),
  'SingleActivator': (props) => SingleActivator(
        props['pa'][0],
        control: props['control'] ?? false,
        shift: props['shift'] ?? false,
        alt: props['alt'] ?? false,
        meta: props['meta'] ?? false,
        includeRepeats: props['includeRepeats'] ?? true,
      ),
  'CharacterActivator': (props) => CharacterActivator(
        props['pa'][0],
      ),
  'ShortcutManager': (props) => ShortcutManager(
        shortcuts: props['shortcuts'] ?? const <ShortcutActivator, Intent>{},
        modal: props['modal'] ?? false,
      ),
  'Shortcuts': (props) => Shortcuts(
        key: props['key'],
        shortcuts: props['shortcuts'],
        child: props['child'],
        debugLabel: props['debugLabel'],
      ),
  'Shortcuts.manager': (props) => Shortcuts.manager(
        key: props['key'],
        manager: props['manager'],
        child: props['child'],
        debugLabel: props['debugLabel'],
      ),
  'CallbackShortcuts': (props) => CallbackShortcuts(
        key: props['key'],
        bindings: props['bindings'],
        child: props['child'],
      ),
  'ShortcutRegistry': (props) => ShortcutRegistry(),
  'ShortcutRegistry.of': (props) => ShortcutRegistry.of(
        props['pa'][0],
      ),
  'ShortcutRegistry.maybeOf': (props) => ShortcutRegistry.maybeOf(
        props['pa'][0],
      ),
  'ShortcutRegistrar': (props) => ShortcutRegistrar(
        key: props['key'],
        child: props['child'],
      ),
  'KeyboardListener': (props) => KeyboardListener(
        key: props['key'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        includeSemantics: props['includeSemantics'] ?? true,
        onKeyEvent: props['onKeyEvent'],
        child: props['child'],
      ),
  'ImageFiltered': (props) => ImageFiltered(
        key: props['key'],
        imageFilter: props['imageFilter'],
        child: props['child'],
        enabled: props['enabled'] ?? true,
      ),
  'ScrollNotificationObserver': (props) => ScrollNotificationObserver(
        key: props['key'],
        child: props['child'],
      ),
  'ScrollNotificationObserver.of': (props) => ScrollNotificationObserver.of(
        props['pa'][0],
      ),
  'SharedAppData': (props) => SharedAppData(
        key: props['key'],
        child: props['child'],
      ),
  'SharedAppData.getValue': (props) => SharedAppData.getValue<Object, dynamic>(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'SharedAppData.setValue': (props) => SharedAppData.setValue<Object, dynamic>(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'Draggable': (props) => Draggable(
        key: props['key'],
        child: props['child'],
        feedback: props['feedback'],
        data: props['data'],
        axis: props['axis'],
        childWhenDragging: props['childWhenDragging'],
        feedbackOffset: props['feedbackOffset'] ?? Offset.zero,
        dragAnchor: props['dragAnchor'] ?? DragAnchor.child,
        dragAnchorStrategy: props['dragAnchorStrategy'],
        affinity: props['affinity'],
        maxSimultaneousDrags: props['maxSimultaneousDrags'],
        onDragStarted: props['onDragStarted'],
        onDragUpdate: props['onDragUpdate'],
        onDraggableCanceled: props['onDraggableCanceled'],
        onDragEnd: props['onDragEnd'],
        onDragCompleted: props['onDragCompleted'],
        ignoringFeedbackSemantics: props['ignoringFeedbackSemantics'] ?? true,
        ignoringFeedbackPointer: props['ignoringFeedbackPointer'] ?? true,
        rootOverlay: props['rootOverlay'] ?? false,
        hitTestBehavior:
            props['hitTestBehavior'] ?? HitTestBehavior.deferToChild,
      ),
  'LongPressDraggable': (props) => LongPressDraggable(
        key: props['key'],
        child: props['child'],
        feedback: props['feedback'],
        data: props['data'],
        axis: props['axis'],
        childWhenDragging: props['childWhenDragging'],
        feedbackOffset: props['feedbackOffset'] ?? Offset.zero,
        dragAnchor: props['dragAnchor'] ?? DragAnchor.child,
        dragAnchorStrategy: props['dragAnchorStrategy'],
        maxSimultaneousDrags: props['maxSimultaneousDrags'],
        onDragStarted: props['onDragStarted'],
        onDragUpdate: props['onDragUpdate'],
        onDraggableCanceled: props['onDraggableCanceled'],
        onDragEnd: props['onDragEnd'],
        onDragCompleted: props['onDragCompleted'],
        hapticFeedbackOnStart: props['hapticFeedbackOnStart'] ?? true,
        ignoringFeedbackSemantics: props['ignoringFeedbackSemantics'] ?? true,
        ignoringFeedbackPointer: props['ignoringFeedbackPointer'] ?? true,
        delay: props['delay'] ?? kLongPressTimeout,
      ),
  'DraggableDetails': (props) => DraggableDetails(
        wasAccepted: props['wasAccepted'] ?? false,
        velocity: props['velocity'],
        offset: props['offset'],
      ),
  'DragTargetDetails': (props) => DragTargetDetails(
        data: props['data'],
        offset: props['offset'],
      ),
  'DragTarget': (props) => DragTarget(
        key: props['key'],
        builder: props['builder'],
        onWillAccept: props['onWillAccept'],
        onAccept: props['onAccept'],
        onAcceptWithDetails: props['onAcceptWithDetails'],
        onLeave: props['onLeave'],
        onMove: props['onMove'],
        hitTestBehavior:
            props['hitTestBehavior'] ?? HitTestBehavior.translucent,
      ),
  'GlowingOverscrollIndicator': (props) => GlowingOverscrollIndicator(
        key: props['key'],
        showLeading: props['showLeading'] ?? true,
        showTrailing: props['showTrailing'] ?? true,
        axisDirection: props['axisDirection'],
        color: props['color'],
        notificationPredicate: props['notificationPredicate'] ??
            defaultScrollNotificationPredicate,
        child: props['child'],
      ),
  'StretchingOverscrollIndicator': (props) => StretchingOverscrollIndicator(
        key: props['key'],
        axisDirection: props['axisDirection'],
        notificationPredicate: props['notificationPredicate'] ??
            defaultScrollNotificationPredicate,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        child: props['child'],
      ),
  'OverscrollIndicatorNotification': (props) => OverscrollIndicatorNotification(
        leading: props['leading'],
      ),
  'Hero': (props) => Hero(
        key: props['key'],
        tag: props['tag'],
        createRectTween: props['createRectTween'],
        flightShuttleBuilder: props['flightShuttleBuilder'],
        placeholderBuilder: props['placeholderBuilder'],
        transitionOnUserGestures: props['transitionOnUserGestures'] ?? false,
        child: props['child'],
      ),
  'HeroController': (props) => HeroController(
        createRectTween: props['createRectTween'],
      ),
  'HeroMode': (props) => HeroMode(
        key: props['key'],
        child: props['child'],
        enabled: props['enabled'] ?? true,
      ),
  'HeroFlightDirection.push': HeroFlightDirection.push,
  'HeroFlightDirection.pop': HeroFlightDirection.pop,
  'HeroFlightDirection.values': HeroFlightDirection.values,
  'SizeChangedLayoutNotification': (props) =>
      const SizeChangedLayoutNotification(),
  'SizeChangedLayoutNotifier': (props) => SizeChangedLayoutNotifier(
        key: props['key'],
        child: props['child'],
      ),
  'Viewport': (props) => Viewport(
        key: props['key'],
        axisDirection: props['axisDirection'] ?? AxisDirection.down,
        crossAxisDirection: props['crossAxisDirection'],
        anchor: props['anchor']?.toDouble() ?? 0.0,
        offset: props['offset'],
        center: props['center'],
        cacheExtent: props['cacheExtent']?.toDouble(),
        cacheExtentStyle: props['cacheExtentStyle'] ?? CacheExtentStyle.pixel,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        slivers: as<Widget>(props['slivers']) ?? const <Widget>[],
      ),
  'Viewport.getDefaultCrossAxisDirection': (props) =>
      Viewport.getDefaultCrossAxisDirection(
        props['pa'][0],
        props['pa'][1],
      ),
  'ShrinkWrappingViewport': (props) => ShrinkWrappingViewport(
        key: props['key'],
        axisDirection: props['axisDirection'] ?? AxisDirection.down,
        crossAxisDirection: props['crossAxisDirection'],
        offset: props['offset'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        slivers: as<Widget>(props['slivers']) ?? const <Widget>[],
      ),
  'AutomaticKeepAlive': (props) => AutomaticKeepAlive(
        key: props['key'],
        child: props['child'],
      ),
  'KeepAliveNotification': (props) => KeepAliveNotification(
        props['pa'][0],
      ),
  'KeepAliveHandle': (props) => KeepAliveHandle(),
  'ObjectKey': (props) => ObjectKey(
        props['pa'][0],
      ),
  'LabeledGlobalKey': (props) => LabeledGlobalKey(
        props['pa'][0],
      ),
  'GlobalObjectKey': (props) => GlobalObjectKey(
        props['pa'][0],
      ),
  'BuildOwner': (props) => BuildOwner(
        onBuildScheduled: props['onBuildScheduled'],
        focusManager: props['focusManager'],
      ),
  'ErrorWidget': (props) => ErrorWidget(
        props['pa'][0],
      ),
  'ErrorWidget.withDetails': (props) => ErrorWidget.withDetails(
        message: props['message'] ?? '',
        error: props['error'],
      ),
  'StatelessElement': (props) => StatelessElement(
        props['pa'][0],
      ),
  'StatefulElement': (props) => StatefulElement(
        props['pa'][0],
      ),
  'ParentDataElement': (props) => ParentDataElement(
        props['pa'][0],
      ),
  'InheritedElement': (props) => InheritedElement(
        props['pa'][0],
      ),
  'LeafRenderObjectElement': (props) => LeafRenderObjectElement(
        props['pa'][0],
      ),
  'SingleChildRenderObjectElement': (props) => SingleChildRenderObjectElement(
        props['pa'][0],
      ),
  'MultiChildRenderObjectElement': (props) => MultiChildRenderObjectElement(
        props['pa'][0],
      ),
  'DebugCreator': (props) => DebugCreator(
        props['pa'][0],
      ),
  'IndexedSlot': (props) => IndexedSlot<Element?>(
        props['pa'][0],
        props['pa'][1],
      ),
  'ScrollBehavior': (props) => ScrollBehavior(
        androidOverscrollIndicator: props['androidOverscrollIndicator'],
      ),
  'ScrollConfiguration': (props) => ScrollConfiguration(
        key: props['key'],
        behavior: props['behavior'],
        child: props['child'],
      ),
  'ScrollConfiguration.of': (props) => ScrollConfiguration.of(
        props['pa'][0],
      ),
  'AndroidOverscrollIndicator.stretch': AndroidOverscrollIndicator.stretch,
  'AndroidOverscrollIndicator.glow': AndroidOverscrollIndicator.glow,
  'AndroidOverscrollIndicator.values': AndroidOverscrollIndicator.values,
  'IconTheme': (props) => IconTheme(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'IconTheme.merge': (props) => IconTheme.merge(
        key: props['key'],
        data: props['data'],
        child: props['child'],
      ),
  'IconTheme.of': (props) => IconTheme.of(
        props['pa'][0],
      ),
  'SemanticsDebugger': (props) => SemanticsDebugger(
        key: props['key'],
        child: props['child'],
        labelStyle: props['labelStyle'] ??
            const TextStyle(
                color: Color(0xFF000000), fontSize: 10.0, height: 0.8),
      ),
  'ToolbarItemsParentData': (props) => ToolbarItemsParentData(),
  'TextSelectionOverlay': (props) => TextSelectionOverlay(
        value: props['value'],
        context: props['context'],
        debugRequiredFor: props['debugRequiredFor'],
        toolbarLayerLink: props['toolbarLayerLink'],
        startHandleLayerLink: props['startHandleLayerLink'],
        endHandleLayerLink: props['endHandleLayerLink'],
        renderObject: props['renderObject'],
        selectionControls: props['selectionControls'],
        handlesVisible: props['handlesVisible'] ?? false,
        selectionDelegate: props['selectionDelegate'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        onSelectionHandleTapped: props['onSelectionHandleTapped'],
        clipboardStatus: props['clipboardStatus'],
      ),
  'SelectionOverlay': (props) => SelectionOverlay(
        context: props['context'],
        debugRequiredFor: props['debugRequiredFor'],
        startHandleType: props['startHandleType'],
        lineHeightAtStart: props['lineHeightAtStart']?.toDouble() ?? 0,
        startHandlesVisible: props['startHandlesVisible'],
        onStartHandleDragStart: props['onStartHandleDragStart'],
        onStartHandleDragUpdate: props['onStartHandleDragUpdate'],
        onStartHandleDragEnd: props['onStartHandleDragEnd'],
        endHandleType: props['endHandleType'],
        lineHeightAtEnd: props['lineHeightAtEnd']?.toDouble() ?? 0,
        endHandlesVisible: props['endHandlesVisible'],
        onEndHandleDragStart: props['onEndHandleDragStart'],
        onEndHandleDragUpdate: props['onEndHandleDragUpdate'],
        onEndHandleDragEnd: props['onEndHandleDragEnd'],
        toolbarVisible: props['toolbarVisible'],
        selectionEndpoints:
            as<TextSelectionPoint>(props['selectionEndpoints']) ?? const [],
        selectionControls: props['selectionControls'],
        selectionDelegate: props['selectionDelegate'],
        clipboardStatus: props['clipboardStatus'],
        startHandleLayerLink: props['startHandleLayerLink'],
        endHandleLayerLink: props['endHandleLayerLink'],
        toolbarLayerLink: props['toolbarLayerLink'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        onSelectionHandleTapped: props['onSelectionHandleTapped'],
        toolbarLocation: props['toolbarLocation'],
      ),
  'SelectionOverlay.fadeDuration': SelectionOverlay.fadeDuration,
  'TextSelectionGestureDetectorBuilder': (props) =>
      TextSelectionGestureDetectorBuilder(
        delegate: props['delegate'],
      ),
  'TextSelectionGestureDetector': (props) => TextSelectionGestureDetector(
        key: props['key'],
        onTapDown: props['onTapDown'],
        onForcePressStart: props['onForcePressStart'],
        onForcePressEnd: props['onForcePressEnd'],
        onSecondaryTap: props['onSecondaryTap'],
        onSecondaryTapDown: props['onSecondaryTapDown'],
        onSingleTapUp: props['onSingleTapUp'],
        onSingleTapCancel: props['onSingleTapCancel'],
        onSingleLongTapStart: props['onSingleLongTapStart'],
        onSingleLongTapMoveUpdate: props['onSingleLongTapMoveUpdate'],
        onSingleLongTapEnd: props['onSingleLongTapEnd'],
        onDoubleTapDown: props['onDoubleTapDown'],
        onDragSelectionStart: props['onDragSelectionStart'],
        onDragSelectionUpdate: props['onDragSelectionUpdate'],
        onDragSelectionEnd: props['onDragSelectionEnd'],
        behavior: props['behavior'],
        child: props['child'],
      ),
  'ClipboardStatusNotifier': (props) => ClipboardStatusNotifier(
        value: props['value'] ?? ClipboardStatus.unknown,
      ),
  'ClipboardStatus.pasteable': ClipboardStatus.pasteable,
  'ClipboardStatus.unknown': ClipboardStatus.unknown,
  'ClipboardStatus.notPasteable': ClipboardStatus.notPasteable,
  'ClipboardStatus.values': ClipboardStatus.values,
  'TickerMode': (props) => TickerMode(
        key: props['key'],
        enabled: props['enabled'],
        child: props['child'],
      ),
  'TickerMode.of': (props) => TickerMode.of(
        props['pa'][0],
      ),
  'TickerMode.getNotifier': (props) => TickerMode.getNotifier(
        props['pa'][0],
      ),
  'RestorationScope': (props) => RestorationScope(
        key: props['key'],
        restorationId: props['restorationId'],
        child: props['child'],
      ),
  'RestorationScope.of': (props) => RestorationScope.of(
        props['pa'][0],
      ),
  'UnmanagedRestorationScope': (props) => UnmanagedRestorationScope(
        key: props['key'],
        bucket: props['bucket'],
        child: props['child'],
      ),
  'RootRestorationScope': (props) => RootRestorationScope(
        key: props['key'],
        restorationId: props['restorationId'],
        child: props['child'],
      ),
  'AnimatedList': (props) => AnimatedList(
        key: props['key'],
        itemBuilder: props['itemBuilder'],
        initialItemCount: props['initialItemCount'] ?? 0,
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'AnimatedList.of': (props) => AnimatedList.of(
        props['pa'][0],
      ),
  'AnimatedList.maybeOf': (props) => AnimatedList.maybeOf(
        props['pa'][0],
      ),
  'SliverAnimatedList': (props) => SliverAnimatedList(
        key: props['key'],
        itemBuilder: props['itemBuilder'],
        findChildIndexCallback: props['findChildIndexCallback'],
        initialItemCount: props['initialItemCount'] ?? 0,
      ),
  'SliverAnimatedList.of': (props) => SliverAnimatedList.of(
        props['pa'][0],
      ),
  'SliverAnimatedList.maybeOf': (props) => SliverAnimatedList.maybeOf(
        props['pa'][0],
      ),
  'ScrollPhysics': (props) => ScrollPhysics(
        parent: props['parent'],
      ),
  'RangeMaintainingScrollPhysics': (props) => RangeMaintainingScrollPhysics(
        parent: props['parent'],
      ),
  'BouncingScrollPhysics': (props) => BouncingScrollPhysics(
        parent: props['parent'],
      ),
  'ClampingScrollPhysics': (props) => ClampingScrollPhysics(
        parent: props['parent'],
      ),
  'AlwaysScrollableScrollPhysics': (props) => AlwaysScrollableScrollPhysics(
        parent: props['parent'],
      ),
  'NeverScrollableScrollPhysics': (props) => NeverScrollableScrollPhysics(
        parent: props['parent'],
      ),
  'IconDataProperty': (props) => IconDataProperty(
        props['pa'][0],
        props['pa'][1],
        ifNull: props['ifNull'],
        showName: props['showName'] ?? true,
        style: props['style'] ?? DiagnosticsTreeStyle.singleLine,
        level: props['level'] ?? DiagnosticLevel.info,
      ),
  'OverflowBar': (props) => OverflowBar(
        key: props['key'],
        spacing: props['spacing']?.toDouble() ?? 0.0,
        alignment: props['alignment'],
        overflowSpacing: props['overflowSpacing']?.toDouble() ?? 0.0,
        overflowAlignment:
            props['overflowAlignment'] ?? OverflowBarAlignment.start,
        overflowDirection: props['overflowDirection'] ?? VerticalDirection.down,
        textDirection: props['textDirection'],
        clipBehavior: props['clipBehavior'] ?? Clip.none,
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'OverflowBarAlignment.start': OverflowBarAlignment.start,
  'OverflowBarAlignment.end': OverflowBarAlignment.end,
  'OverflowBarAlignment.center': OverflowBarAlignment.center,
  'OverflowBarAlignment.values': OverflowBarAlignment.values,
  'FadeInImage': (props) => FadeInImage(
        key: props['key'],
        placeholder: props['placeholder'],
        placeholderErrorBuilder: props['placeholderErrorBuilder'],
        image: props['image'],
        imageErrorBuilder: props['imageErrorBuilder'],
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        imageSemanticLabel: props['imageSemanticLabel'],
        fadeOutDuration:
            props['fadeOutDuration'] ?? const Duration(milliseconds: 300),
        fadeOutCurve: props['fadeOutCurve'] ?? Curves.easeOut,
        fadeInDuration:
            props['fadeInDuration'] ?? const Duration(milliseconds: 700),
        fadeInCurve: props['fadeInCurve'] ?? Curves.easeIn,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        fit: props['fit'],
        placeholderFit: props['placeholderFit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        matchTextDirection: props['matchTextDirection'] ?? false,
      ),
  'FadeInImage.memoryNetwork': (props) => FadeInImage.memoryNetwork(
        key: props['key'],
        placeholder: props['placeholder'],
        placeholderErrorBuilder: props['placeholderErrorBuilder'],
        image: props['image'],
        imageErrorBuilder: props['imageErrorBuilder'],
        placeholderScale: props['placeholderScale']?.toDouble() ?? 1.0,
        imageScale: props['imageScale']?.toDouble() ?? 1.0,
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        imageSemanticLabel: props['imageSemanticLabel'],
        fadeOutDuration:
            props['fadeOutDuration'] ?? const Duration(milliseconds: 300),
        fadeOutCurve: props['fadeOutCurve'] ?? Curves.easeOut,
        fadeInDuration:
            props['fadeInDuration'] ?? const Duration(milliseconds: 700),
        fadeInCurve: props['fadeInCurve'] ?? Curves.easeIn,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        fit: props['fit'],
        placeholderFit: props['placeholderFit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        matchTextDirection: props['matchTextDirection'] ?? false,
        placeholderCacheWidth: props['placeholderCacheWidth'],
        placeholderCacheHeight: props['placeholderCacheHeight'],
        imageCacheWidth: props['imageCacheWidth'],
        imageCacheHeight: props['imageCacheHeight'],
      ),
  'FadeInImage.assetNetwork': (props) => FadeInImage.assetNetwork(
        key: props['key'],
        placeholder: props['placeholder'],
        placeholderErrorBuilder: props['placeholderErrorBuilder'],
        image: props['image'],
        imageErrorBuilder: props['imageErrorBuilder'],
        bundle: props['bundle'],
        placeholderScale: props['placeholderScale']?.toDouble() ?? 1.0,
        imageScale: props['imageScale']?.toDouble() ?? 1.0,
        excludeFromSemantics: props['excludeFromSemantics'] ?? false,
        imageSemanticLabel: props['imageSemanticLabel'],
        fadeOutDuration:
            props['fadeOutDuration'] ?? const Duration(milliseconds: 300),
        fadeOutCurve: props['fadeOutCurve'] ?? Curves.easeOut,
        fadeInDuration:
            props['fadeInDuration'] ?? const Duration(milliseconds: 700),
        fadeInCurve: props['fadeInCurve'] ?? Curves.easeIn,
        width: props['width']?.toDouble(),
        height: props['height']?.toDouble(),
        fit: props['fit'],
        placeholderFit: props['placeholderFit'],
        alignment: props['alignment'] ?? Alignment.center,
        repeat: props['repeat'] ?? ImageRepeat.noRepeat,
        matchTextDirection: props['matchTextDirection'] ?? false,
        placeholderCacheWidth: props['placeholderCacheWidth'],
        placeholderCacheHeight: props['placeholderCacheHeight'],
        imageCacheWidth: props['imageCacheWidth'],
        imageCacheHeight: props['imageCacheHeight'],
      ),
  'Focus': (props) => Focus(
        key: props['key'],
        child: props['child'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        onFocusChange: props['onFocusChange'],
        onKeyEvent: props['onKeyEvent'],
        onKey: props['onKey'],
        canRequestFocus: props['canRequestFocus'],
        skipTraversal: props['skipTraversal'],
        descendantsAreFocusable: props['descendantsAreFocusable'],
        descendantsAreTraversable: props['descendantsAreTraversable'],
        includeSemantics: props['includeSemantics'] ?? true,
        debugLabel: props['debugLabel'],
      ),
  'Focus.withExternalFocusNode': (props) => Focus.withExternalFocusNode(
        key: props['key'],
        child: props['child'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        onFocusChange: props['onFocusChange'],
        includeSemantics: props['includeSemantics'] ?? true,
      ),
  'Focus.of': (props) => Focus.of(
        props['pa'][0],
        scopeOk: props['scopeOk'] ?? false,
      ),
  'Focus.maybeOf': (props) => Focus.maybeOf(
        props['pa'][0],
        scopeOk: props['scopeOk'] ?? false,
      ),
  'Focus.isAt': (props) => Focus.isAt(
        props['pa'][0],
      ),
  'FocusScope': (props) => FocusScope(
        key: props['key'],
        node: props['node'],
        child: props['child'],
        autofocus: props['autofocus'] ?? false,
        onFocusChange: props['onFocusChange'],
        canRequestFocus: props['canRequestFocus'],
        skipTraversal: props['skipTraversal'],
        onKeyEvent: props['onKeyEvent'],
        onKey: props['onKey'],
        debugLabel: props['debugLabel'],
      ),
  'FocusScope.withExternalFocusNode': (props) =>
      FocusScope.withExternalFocusNode(
        key: props['key'],
        child: props['child'],
        focusScopeNode: props['focusScopeNode'],
        autofocus: props['autofocus'] ?? false,
        onFocusChange: props['onFocusChange'],
      ),
  'FocusScope.of': (props) => FocusScope.of(
        props['pa'][0],
      ),
  'ExcludeFocus': (props) => ExcludeFocus(
        key: props['key'],
        excluding: props['excluding'] ?? true,
        child: props['child'],
      ),
  'ModalBarrier': (props) => ModalBarrier(
        key: props['key'],
        color: props['color'],
        dismissible: props['dismissible'] ?? true,
        onDismiss: props['onDismiss'],
        semanticsLabel: props['semanticsLabel'],
        barrierSemanticsDismissible:
            props['barrierSemanticsDismissible'] ?? true,
      ),
  'AnimatedModalBarrier': (props) => AnimatedModalBarrier(
        key: props['key'],
        color: props['color'],
        dismissible: props['dismissible'] ?? true,
        semanticsLabel: props['semanticsLabel'],
        barrierSemanticsDismissible: props['barrierSemanticsDismissible'],
        onDismiss: props['onDismiss'],
      ),
  'InteractiveViewer': (props) => InteractiveViewer(
        key: props['key'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        alignPanAxis: props['alignPanAxis'] ?? false,
        boundaryMargin: props['boundaryMargin'] ?? EdgeInsets.zero,
        constrained: props['constrained'] ?? true,
        maxScale: props['maxScale']?.toDouble() ?? 2.5,
        minScale: props['minScale']?.toDouble() ?? 0.8,
        onInteractionEnd: props['onInteractionEnd'],
        onInteractionStart: props['onInteractionStart'],
        onInteractionUpdate: props['onInteractionUpdate'],
        panEnabled: props['panEnabled'] ?? true,
        scaleEnabled: props['scaleEnabled'] ?? true,
        scaleFactor: props['scaleFactor']?.toDouble() ?? 200.0,
        transformationController: props['transformationController'],
        child: props['child'],
      ),
  'InteractiveViewer.builder': (props) => InteractiveViewer.builder(
        key: props['key'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        alignPanAxis: props['alignPanAxis'] ?? false,
        boundaryMargin: props['boundaryMargin'] ?? EdgeInsets.zero,
        maxScale: props['maxScale']?.toDouble() ?? 2.5,
        minScale: props['minScale']?.toDouble() ?? 0.8,
        onInteractionEnd: props['onInteractionEnd'],
        onInteractionStart: props['onInteractionStart'],
        onInteractionUpdate: props['onInteractionUpdate'],
        panEnabled: props['panEnabled'] ?? true,
        scaleEnabled: props['scaleEnabled'] ?? true,
        scaleFactor: props['scaleFactor']?.toDouble() ?? 200.0,
        transformationController: props['transformationController'],
        builder: props['builder'],
      ),
  'TransformationController': (props) => TransformationController(
        props['pa'][0],
      ),
  'DisplayFeatureSubScreen': (props) => DisplayFeatureSubScreen(
        key: props['key'],
        anchorPoint: props['anchorPoint'],
        child: props['child'],
      ),
  'DisplayFeatureSubScreen.avoidBounds': (props) =>
      DisplayFeatureSubScreen.avoidBounds(
        props['pa'][0],
      ),
  'DisplayFeatureSubScreen.subScreensInBounds': (props) =>
      DisplayFeatureSubScreen.subScreensInBounds(
        props['pa'][0],
        props['pa'][1],
      ),
  'AutofillGroup': (props) => AutofillGroup(
        key: props['key'],
        child: props['child'],
        onDisposeAction:
            props['onDisposeAction'] ?? AutofillContextAction.commit,
      ),
  'AutofillGroup.of': (props) => AutofillGroup.of(
        props['pa'][0],
      ),
  'AutofillContextAction.commit': AutofillContextAction.commit,
  'AutofillContextAction.cancel': AutofillContextAction.cancel,
  'AutofillContextAction.values': AutofillContextAction.values,
  'IdleScrollActivity': (props) => IdleScrollActivity(
        props['pa'][0],
      ),
  'HoldScrollActivity': (props) => HoldScrollActivity(
        delegate: props['delegate'],
        onHoldCanceled: props['onHoldCanceled'],
      ),
  'ScrollDragController': (props) => ScrollDragController(
        delegate: props['delegate'],
        details: props['details'],
        onDragCanceled: props['onDragCanceled'],
        carriedVelocity: props['carriedVelocity']?.toDouble(),
        motionStartDistanceThreshold:
            props['motionStartDistanceThreshold']?.toDouble(),
      ),
  'ScrollDragController.momentumRetainStationaryDurationThreshold':
      ScrollDragController.momentumRetainStationaryDurationThreshold,
  'ScrollDragController.momentumRetainVelocityThresholdFactor':
      ScrollDragController.momentumRetainVelocityThresholdFactor,
  'ScrollDragController.motionStoppedDurationThreshold':
      ScrollDragController.motionStoppedDurationThreshold,
  'DragScrollActivity': (props) => DragScrollActivity(
        props['pa'][0],
        props['pa'][1],
      ),
  'BallisticScrollActivity': (props) => BallisticScrollActivity(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'DrivenScrollActivity': (props) => DrivenScrollActivity(
        props['pa'][0],
        from: props['from']?.toDouble() ?? 0,
        to: props['to']?.toDouble() ?? 0,
        duration: props['duration'],
        curve: props['curve'],
        vsync: props['vsync'],
      ),
  'ListWheelChildListDelegate': (props) => ListWheelChildListDelegate(
        children: as<Widget>(props['children']) ?? const [],
      ),
  'ListWheelChildLoopingListDelegate': (props) =>
      ListWheelChildLoopingListDelegate(
        children: as<Widget>(props['children']) ?? const [],
      ),
  'ListWheelChildBuilderDelegate': (props) => ListWheelChildBuilderDelegate(
        builder: props['builder'],
        childCount: props['childCount'],
      ),
  'FixedExtentScrollController': (props) => FixedExtentScrollController(
        initialItem: props['initialItem'] ?? 0,
      ),
  'FixedExtentMetrics': (props) => FixedExtentMetrics(
        minScrollExtent: props['minScrollExtent']?.toDouble() ?? 0,
        maxScrollExtent: props['maxScrollExtent']?.toDouble() ?? 0,
        pixels: props['pixels']?.toDouble() ?? 0,
        viewportDimension: props['viewportDimension']?.toDouble() ?? 0,
        axisDirection: props['axisDirection'],
        itemIndex: props['itemIndex'],
      ),
  'FixedExtentScrollPhysics': (props) => FixedExtentScrollPhysics(
        parent: props['parent'],
      ),
  'ListWheelScrollView': (props) => ListWheelScrollView(
        key: props['key'],
        controller: props['controller'],
        physics: props['physics'],
        diameterRatio: props['diameterRatio']?.toDouble() ??
            RenderListWheelViewport.defaultDiameterRatio,
        perspective: props['perspective']?.toDouble() ??
            RenderListWheelViewport.defaultPerspective,
        offAxisFraction: props['offAxisFraction']?.toDouble() ?? 0.0,
        useMagnifier: props['useMagnifier'] ?? false,
        magnification: props['magnification']?.toDouble() ?? 1.0,
        overAndUnderCenterOpacity:
            props['overAndUnderCenterOpacity']?.toDouble() ?? 1.0,
        itemExtent: props['itemExtent']?.toDouble() ?? 0,
        squeeze: props['squeeze']?.toDouble() ?? 1.0,
        onSelectedItemChanged: props['onSelectedItemChanged'],
        renderChildrenOutsideViewport:
            props['renderChildrenOutsideViewport'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        restorationId: props['restorationId'],
        scrollBehavior: props['scrollBehavior'],
        children: as<Widget>(props['children']) ?? const [],
      ),
  'ListWheelScrollView.useDelegate': (props) => ListWheelScrollView.useDelegate(
        key: props['key'],
        controller: props['controller'],
        physics: props['physics'],
        diameterRatio: props['diameterRatio']?.toDouble() ??
            RenderListWheelViewport.defaultDiameterRatio,
        perspective: props['perspective']?.toDouble() ??
            RenderListWheelViewport.defaultPerspective,
        offAxisFraction: props['offAxisFraction']?.toDouble() ?? 0.0,
        useMagnifier: props['useMagnifier'] ?? false,
        magnification: props['magnification']?.toDouble() ?? 1.0,
        overAndUnderCenterOpacity:
            props['overAndUnderCenterOpacity']?.toDouble() ?? 1.0,
        itemExtent: props['itemExtent']?.toDouble() ?? 0,
        squeeze: props['squeeze']?.toDouble() ?? 1.0,
        onSelectedItemChanged: props['onSelectedItemChanged'],
        renderChildrenOutsideViewport:
            props['renderChildrenOutsideViewport'] ?? false,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        restorationId: props['restorationId'],
        scrollBehavior: props['scrollBehavior'],
        childDelegate: props['childDelegate'],
      ),
  'ListWheelElement': (props) => ListWheelElement(
        props['pa'][0],
      ),
  'ListWheelViewport': (props) => ListWheelViewport(
        key: props['key'],
        diameterRatio: props['diameterRatio']?.toDouble() ??
            RenderListWheelViewport.defaultDiameterRatio,
        perspective: props['perspective']?.toDouble() ??
            RenderListWheelViewport.defaultPerspective,
        offAxisFraction: props['offAxisFraction']?.toDouble() ?? 0.0,
        useMagnifier: props['useMagnifier'] ?? false,
        magnification: props['magnification']?.toDouble() ?? 1.0,
        overAndUnderCenterOpacity:
            props['overAndUnderCenterOpacity']?.toDouble() ?? 1.0,
        itemExtent: props['itemExtent']?.toDouble() ?? 0,
        squeeze: props['squeeze']?.toDouble() ?? 1.0,
        renderChildrenOutsideViewport:
            props['renderChildrenOutsideViewport'] ?? false,
        offset: props['offset'],
        childDelegate: props['childDelegate'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'SliverChildBuilderDelegate': (props) => SliverChildBuilderDelegate(
        props['pa'][0],
        findChildIndexCallback: props['findChildIndexCallback'],
        childCount: props['childCount'],
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        semanticIndexCallback:
            props['semanticIndexCallback'] ?? _kDefaultSemanticIndexCallback,
        semanticIndexOffset: props['semanticIndexOffset'] ?? 0,
      ),
  'SliverChildListDelegate': (props) => SliverChildListDelegate(
        props['pa'][0],
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        semanticIndexCallback:
            props['semanticIndexCallback'] ?? _kDefaultSemanticIndexCallback,
        semanticIndexOffset: props['semanticIndexOffset'] ?? 0,
      ),
  'SliverChildListDelegate.fixed': (props) => SliverChildListDelegate.fixed(
        props['pa'][0],
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        semanticIndexCallback:
            props['semanticIndexCallback'] ?? _kDefaultSemanticIndexCallback,
        semanticIndexOffset: props['semanticIndexOffset'] ?? 0,
      ),
  'SliverList': (props) => SliverList(
        key: props['key'],
        delegate: props['delegate'],
      ),
  'SliverFixedExtentList': (props) => SliverFixedExtentList(
        key: props['key'],
        delegate: props['delegate'],
        itemExtent: props['itemExtent']?.toDouble() ?? 0,
      ),
  'SliverGrid': (props) => SliverGrid(
        key: props['key'],
        delegate: props['delegate'],
        gridDelegate: props['gridDelegate'],
      ),
  'SliverGrid.count': (props) => SliverGrid.count(
        key: props['key'],
        crossAxisCount: props['crossAxisCount'],
        mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0.0,
        crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0.0,
        childAspectRatio: props['childAspectRatio']?.toDouble() ?? 1.0,
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'SliverGrid.extent': (props) => SliverGrid.extent(
        key: props['key'],
        maxCrossAxisExtent: props['maxCrossAxisExtent']?.toDouble() ?? 0,
        mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0.0,
        crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0.0,
        childAspectRatio: props['childAspectRatio']?.toDouble() ?? 1.0,
        children: as<Widget>(props['children']) ?? const <Widget>[],
      ),
  'SliverMultiBoxAdaptorElement': (props) => SliverMultiBoxAdaptorElement(
        props['pa'][0],
        replaceMovedChildren: props['replaceMovedChildren'] ?? false,
      ),
  'SliverOpacity': (props) => SliverOpacity(
        key: props['key'],
        opacity: props['opacity']?.toDouble() ?? 0,
        alwaysIncludeSemantics: props['alwaysIncludeSemantics'] ?? false,
        sliver: props['sliver'],
      ),
  'SliverIgnorePointer': (props) => SliverIgnorePointer(
        key: props['key'],
        ignoring: props['ignoring'] ?? true,
        ignoringSemantics: props['ignoringSemantics'],
        sliver: props['sliver'],
      ),
  'SliverOffstage': (props) => SliverOffstage(
        key: props['key'],
        offstage: props['offstage'] ?? true,
        sliver: props['sliver'],
      ),
  'KeepAlive': (props) => KeepAlive(
        key: props['key'],
        keepAlive: props['keepAlive'],
        child: props['child'],
      ),
  'ShortcutSerialization.character': (props) => ShortcutSerialization.character(
        props['pa'][0],
      ),
  'ShortcutSerialization.modifier': (props) => ShortcutSerialization.modifier(
        props['pa'][0],
        control: props['control'] ?? false,
        shift: props['shift'] ?? false,
        alt: props['alt'] ?? false,
        meta: props['meta'] ?? false,
      ),
  'DefaultPlatformMenuDelegate': (props) => DefaultPlatformMenuDelegate(
        channel: props['channel'],
      ),
  'PlatformMenuBar': (props) => PlatformMenuBar(
        key: props['key'],
        menus: as<MenuItem>(props['menus']) ?? const [],
        child: props['child'],
        body: props['body'],
      ),
  'PlatformMenu': (props) => PlatformMenu(
        label: props['label'],
        onOpen: props['onOpen'],
        onClose: props['onClose'],
        menus: as<MenuItem>(props['menus']) ?? const [],
      ),
  'PlatformMenu.getDescendants': (props) => PlatformMenu.getDescendants(
        props['pa'][0],
      ),
  'PlatformMenu.serialize': (props) => PlatformMenu.serialize(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'PlatformMenuItemGroup': (props) => PlatformMenuItemGroup(
        members: as<MenuItem>(props['members']) ?? const [],
      ),
  'PlatformMenuItemGroup.serialize': (props) => PlatformMenuItemGroup.serialize(
        props['pa'][0],
        props['pa'][1],
        getId: props['getId'],
      ),
  'PlatformMenuItem': (props) => PlatformMenuItem(
        label: props['label'],
        shortcut: props['shortcut'],
        onSelected: props['onSelected'],
        onSelectedIntent: props['onSelectedIntent'],
      ),
  'PlatformMenuItem.serialize': (props) => PlatformMenuItem.serialize(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'PlatformProvidedMenuItem': (props) => PlatformProvidedMenuItem(
        type: props['type'],
        enabled: props['enabled'] ?? true,
      ),
  'PlatformProvidedMenuItem.hasMenu': (props) =>
      PlatformProvidedMenuItem.hasMenu(
        props['pa'][0],
      ),
  'PlatformProvidedMenuItemType.about': PlatformProvidedMenuItemType.about,
  'PlatformProvidedMenuItemType.quit': PlatformProvidedMenuItemType.quit,
  'PlatformProvidedMenuItemType.servicesSubmenu':
      PlatformProvidedMenuItemType.servicesSubmenu,
  'PlatformProvidedMenuItemType.hide': PlatformProvidedMenuItemType.hide,
  'PlatformProvidedMenuItemType.hideOtherApplications':
      PlatformProvidedMenuItemType.hideOtherApplications,
  'PlatformProvidedMenuItemType.showAllApplications':
      PlatformProvidedMenuItemType.showAllApplications,
  'PlatformProvidedMenuItemType.startSpeaking':
      PlatformProvidedMenuItemType.startSpeaking,
  'PlatformProvidedMenuItemType.stopSpeaking':
      PlatformProvidedMenuItemType.stopSpeaking,
  'PlatformProvidedMenuItemType.toggleFullScreen':
      PlatformProvidedMenuItemType.toggleFullScreen,
  'PlatformProvidedMenuItemType.minimizeWindow':
      PlatformProvidedMenuItemType.minimizeWindow,
  'PlatformProvidedMenuItemType.zoomWindow':
      PlatformProvidedMenuItemType.zoomWindow,
  'PlatformProvidedMenuItemType.arrangeWindowsInFront':
      PlatformProvidedMenuItemType.arrangeWindowsInFront,
  'PlatformProvidedMenuItemType.values': PlatformProvidedMenuItemType.values,
  'Dismissible': (props) => Dismissible(
        key: props['key'],
        child: props['child'],
        background: props['background'],
        secondaryBackground: props['secondaryBackground'],
        confirmDismiss: props['confirmDismiss'],
        onResize: props['onResize'],
        onUpdate: props['onUpdate'],
        onDismissed: props['onDismissed'],
        direction: props['direction'] ?? DismissDirection.horizontal,
        resizeDuration:
            props['resizeDuration'] ?? const Duration(milliseconds: 300),
        dismissThresholds:
            props['dismissThresholds'] ?? const <DismissDirection, double>{},
        movementDuration:
            props['movementDuration'] ?? const Duration(milliseconds: 200),
        crossAxisEndOffset: props['crossAxisEndOffset']?.toDouble() ?? 0.0,
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        behavior: props['behavior'] ?? HitTestBehavior.opaque,
      ),
  'DismissUpdateDetails': (props) => DismissUpdateDetails(
        direction: props['direction'] ?? DismissDirection.horizontal,
        reached: props['reached'] ?? false,
        previousReached: props['previousReached'] ?? false,
        progress: props['progress']?.toDouble() ?? 0.0,
      ),
  'DismissDirection.vertical': DismissDirection.vertical,
  'DismissDirection.horizontal': DismissDirection.horizontal,
  'DismissDirection.endToStart': DismissDirection.endToStart,
  'DismissDirection.startToEnd': DismissDirection.startToEnd,
  'DismissDirection.up': DismissDirection.up,
  'DismissDirection.down': DismissDirection.down,
  'DismissDirection.none': DismissDirection.none,
  'DismissDirection.values': DismissDirection.values,
  'ScrollPositionWithSingleContext': (props) => ScrollPositionWithSingleContext(
        physics: props['physics'],
        context: props['context'],
        initialPixels: props['initialPixels']?.toDouble() ?? 0.0,
        keepScrollOffset: props['keepScrollOffset'] ?? true,
        oldPosition: props['oldPosition'],
        debugLabel: props['debugLabel'],
      ),
  'WillPopScope': (props) => WillPopScope(
        key: props['key'],
        child: props['child'],
        onWillPop: props['onWillPop'],
      ),
  'TextSelectionToolbarLayoutDelegate': (props) =>
      TextSelectionToolbarLayoutDelegate(
        anchorAbove: props['anchorAbove'],
        anchorBelow: props['anchorBelow'],
        fitsAbove: props['fitsAbove'],
      ),
  'DesktopTextSelectionToolbarLayoutDelegate': (props) =>
      DesktopTextSelectionToolbarLayoutDelegate(
        anchor: props['anchor'],
      ),
  'SafeArea': (props) => SafeArea(
        key: props['key'],
        left: props['left'] ?? true,
        top: props['top'] ?? true,
        right: props['right'] ?? true,
        bottom: props['bottom'] ?? true,
        minimum: props['minimum'] ?? EdgeInsets.zero,
        maintainBottomViewPadding: props['maintainBottomViewPadding'] ?? false,
        child: props['child'],
      ),
  'SliverSafeArea': (props) => SliverSafeArea(
        key: props['key'],
        left: props['left'] ?? true,
        top: props['top'] ?? true,
        right: props['right'] ?? true,
        bottom: props['bottom'] ?? true,
        minimum: props['minimum'] ?? EdgeInsets.zero,
        sliver: props['sliver'],
      ),
  'ScrollbarPainter': (props) => ScrollbarPainter(
        color: props['color'],
        fadeoutOpacityAnimation: props['fadeoutOpacityAnimation'],
        trackColor: props['trackColor'] ?? const Color(0x00000000),
        trackBorderColor: props['trackBorderColor'] ?? const Color(0x00000000),
        textDirection: props['textDirection'],
        thickness: props['thickness']?.toDouble() ?? _kScrollbarThickness,
        padding: props['padding'] ?? EdgeInsets.zero,
        mainAxisMargin: props['mainAxisMargin']?.toDouble() ?? 0.0,
        crossAxisMargin: props['crossAxisMargin']?.toDouble() ?? 0.0,
        radius: props['radius'],
        trackRadius: props['trackRadius'],
        shape: props['shape'],
        minLength: props['minLength']?.toDouble() ?? _kMinThumbExtent,
        minOverscrollLength: props['minOverscrollLength']?.toDouble(),
        scrollbarOrientation: props['scrollbarOrientation'],
        ignorePointer: props['ignorePointer'] ?? false,
      ),
  'RawScrollbar': (props) => RawScrollbar(
        key: props['key'],
        child: props['child'],
        controller: props['controller'],
        thumbVisibility: props['thumbVisibility'],
        shape: props['shape'],
        radius: props['radius'],
        thickness: props['thickness']?.toDouble(),
        thumbColor: props['thumbColor'],
        minThumbLength: props['minThumbLength']?.toDouble() ?? _kMinThumbExtent,
        minOverscrollLength: props['minOverscrollLength']?.toDouble(),
        trackVisibility: props['trackVisibility'],
        trackRadius: props['trackRadius'],
        trackColor: props['trackColor'],
        trackBorderColor: props['trackBorderColor'],
        fadeDuration: props['fadeDuration'] ?? _kScrollbarFadeDuration,
        timeToFade: props['timeToFade'] ?? _kScrollbarTimeToFade,
        pressDuration: props['pressDuration'] ?? Duration.zero,
        notificationPredicate: props['notificationPredicate'] ??
            defaultScrollNotificationPredicate,
        interactive: props['interactive'],
        scrollbarOrientation: props['scrollbarOrientation'],
        mainAxisMargin: props['mainAxisMargin']?.toDouble() ?? 0.0,
        crossAxisMargin: props['crossAxisMargin']?.toDouble() ?? 0.0,
        isAlwaysShown: props['isAlwaysShown'],
      ),
  'ScrollbarOrientation.left': ScrollbarOrientation.left,
  'ScrollbarOrientation.right': ScrollbarOrientation.right,
  'ScrollbarOrientation.top': ScrollbarOrientation.top,
  'ScrollbarOrientation.bottom': ScrollbarOrientation.bottom,
  'ScrollbarOrientation.values': ScrollbarOrientation.values,
  'AndroidView': (props) => AndroidView(
        key: props['key'],
        viewType: props['viewType'],
        onPlatformViewCreated: props['onPlatformViewCreated'],
        hitTestBehavior:
            props['hitTestBehavior'] ?? PlatformViewHitTestBehavior.opaque,
        layoutDirection: props['layoutDirection'],
        gestureRecognizers: props['gestureRecognizers'],
        creationParams: props['creationParams'],
        creationParamsCodec: props['creationParamsCodec'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'UiKitView': (props) => UiKitView(
        key: props['key'],
        viewType: props['viewType'],
        onPlatformViewCreated: props['onPlatformViewCreated'],
        hitTestBehavior:
            props['hitTestBehavior'] ?? PlatformViewHitTestBehavior.opaque,
        layoutDirection: props['layoutDirection'],
        creationParams: props['creationParams'],
        creationParamsCodec: props['creationParamsCodec'],
        gestureRecognizers: props['gestureRecognizers'],
      ),
  'HtmlElementView': (props) => HtmlElementView(
        key: props['key'],
        viewType: props['viewType'],
        onPlatformViewCreated: props['onPlatformViewCreated'],
      ),
  'PlatformViewLink': (props) => PlatformViewLink(
        key: props['key'],
        surfaceFactory: props['surfaceFactory'],
        onCreatePlatformView: props['onCreatePlatformView'],
        viewType: props['viewType'],
      ),
  'PlatformViewSurface': (props) => PlatformViewSurface(
        key: props['key'],
        controller: props['controller'],
        hitTestBehavior: props['hitTestBehavior'],
        gestureRecognizers: props['gestureRecognizers'],
      ),
  'AndroidViewSurface': (props) => AndroidViewSurface(
        key: props['key'],
        controller: props['controller'],
        hitTestBehavior: props['hitTestBehavior'],
        gestureRecognizers: props['gestureRecognizers'],
      ),
  'WidgetsApp': (props) => WidgetsApp(
        key: props['key'],
        navigatorKey: props['navigatorKey'],
        onGenerateRoute: props['onGenerateRoute'],
        onGenerateInitialRoutes: props['onGenerateInitialRoutes'],
        onUnknownRoute: props['onUnknownRoute'],
        navigatorObservers:
            as<NavigatorObserver>(props['navigatorObservers']) ??
                const <NavigatorObserver>[],
        initialRoute: props['initialRoute'],
        pageRouteBuilder: props['pageRouteBuilder'],
        home: props['home'],
        routes: props['routes'] ?? const <String, WidgetBuilder>{},
        builder: props['builder'],
        title: props['title'] ?? '',
        onGenerateTitle: props['onGenerateTitle'],
        textStyle: props['textStyle'],
        color: props['color'],
        locale: props['locale'],
        localizationsDelegates: props['localizationsDelegates'],
        localeListResolutionCallback: props['localeListResolutionCallback'],
        localeResolutionCallback: props['localeResolutionCallback'],
        supportedLocales:
            props['supportedLocales'] ?? const <Locale>[Locale('en', 'US')],
        showPerformanceOverlay: props['showPerformanceOverlay'] ?? false,
        checkerboardRasterCacheImages:
            props['checkerboardRasterCacheImages'] ?? false,
        checkerboardOffscreenLayers:
            props['checkerboardOffscreenLayers'] ?? false,
        showSemanticsDebugger: props['showSemanticsDebugger'] ?? false,
        debugShowWidgetInspector: props['debugShowWidgetInspector'] ?? false,
        debugShowCheckedModeBanner: props['debugShowCheckedModeBanner'] ?? true,
        inspectorSelectButtonBuilder: props['inspectorSelectButtonBuilder'],
        shortcuts: props['shortcuts'],
        actions: props['actions'],
        restorationScopeId: props['restorationScopeId'],
        useInheritedMediaQuery: props['useInheritedMediaQuery'] ?? false,
      ),
  'WidgetsApp.router': (props) => WidgetsApp.router(
        key: props['key'],
        routeInformationProvider: props['routeInformationProvider'],
        routeInformationParser: props['routeInformationParser'],
        routerDelegate: props['routerDelegate'],
        routerConfig: props['routerConfig'],
        backButtonDispatcher: props['backButtonDispatcher'],
        builder: props['builder'],
        title: props['title'] ?? '',
        onGenerateTitle: props['onGenerateTitle'],
        textStyle: props['textStyle'],
        color: props['color'],
        locale: props['locale'],
        localizationsDelegates: props['localizationsDelegates'],
        localeListResolutionCallback: props['localeListResolutionCallback'],
        localeResolutionCallback: props['localeResolutionCallback'],
        supportedLocales:
            props['supportedLocales'] ?? const <Locale>[Locale('en', 'US')],
        showPerformanceOverlay: props['showPerformanceOverlay'] ?? false,
        checkerboardRasterCacheImages:
            props['checkerboardRasterCacheImages'] ?? false,
        checkerboardOffscreenLayers:
            props['checkerboardOffscreenLayers'] ?? false,
        showSemanticsDebugger: props['showSemanticsDebugger'] ?? false,
        debugShowWidgetInspector: props['debugShowWidgetInspector'] ?? false,
        debugShowCheckedModeBanner: props['debugShowCheckedModeBanner'] ?? true,
        inspectorSelectButtonBuilder: props['inspectorSelectButtonBuilder'],
        shortcuts: props['shortcuts'],
        actions: props['actions'],
        restorationScopeId: props['restorationScopeId'],
        useInheritedMediaQuery: props['useInheritedMediaQuery'] ?? false,
      ),
  'RawAutocomplete': (props) => RawAutocomplete(
        key: props['key'],
        optionsViewBuilder: props['optionsViewBuilder'],
        optionsBuilder: props['optionsBuilder'],
        displayStringForOption:
            props['displayStringForOption'] ?? defaultStringForOption,
        fieldViewBuilder: props['fieldViewBuilder'],
        focusNode: props['focusNode'],
        onSelected: props['onSelected'],
        textEditingController: props['textEditingController'],
        initialValue: props['initialValue'],
      ),
  'RawAutocomplete.onFieldSubmitted': (props) =>
      RawAutocomplete.onFieldSubmitted(
        props['pa'][0],
      ),
  'RawAutocomplete.defaultStringForOption': (props) =>
      RawAutocomplete.defaultStringForOption(
        props['pa'][0],
      ),
  'AutocompletePreviousOptionIntent': (props) =>
      const AutocompletePreviousOptionIntent(),
  'AutocompleteNextOptionIntent': (props) =>
      const AutocompleteNextOptionIntent(),
  'AutocompleteHighlightedOption': (props) => AutocompleteHighlightedOption(
        key: props['key'],
        highlightIndexNotifier: props['highlightIndexNotifier'],
        child: props['child'],
      ),
  'AutocompleteHighlightedOption.of': (props) =>
      AutocompleteHighlightedOption.of(
        props['pa'][0],
      ),
  'ScrollStartNotification': (props) => ScrollStartNotification(
        metrics: props['metrics'],
        context: props['context'],
        dragDetails: props['dragDetails'],
      ),
  'ScrollUpdateNotification': (props) => ScrollUpdateNotification(
        metrics: props['metrics'],
        context: props['context'],
        dragDetails: props['dragDetails'],
        scrollDelta: props['scrollDelta']?.toDouble(),
        depth: props['depth'],
      ),
  'OverscrollNotification': (props) => OverscrollNotification(
        metrics: props['metrics'],
        context: props['context'],
        dragDetails: props['dragDetails'],
        overscroll: props['overscroll']?.toDouble() ?? 0,
        velocity: props['velocity']?.toDouble() ?? 0.0,
      ),
  'ScrollEndNotification': (props) => ScrollEndNotification(
        metrics: props['metrics'],
        context: props['context'],
        dragDetails: props['dragDetails'],
      ),
  'UserScrollNotification': (props) => UserScrollNotification(
        metrics: props['metrics'],
        context: props['context'],
        direction: props['direction'],
      ),
  'OverlayEntry': (props) => OverlayEntry(
        builder: props['builder'],
        opaque: props['opaque'] ?? false,
        maintainState: props['maintainState'] ?? false,
      ),
  'Overlay': (props) => Overlay(
        key: props['key'],
        initialEntries:
            as<OverlayEntry>(props['initialEntries']) ?? const <OverlayEntry>[],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'Overlay.of': (props) => Overlay.of(
        props['pa'][0],
        rootOverlay: props['rootOverlay'] ?? false,
        debugRequiredFor: props['debugRequiredFor'],
      ),
  'DefaultSelectionStyle': (props) => DefaultSelectionStyle(
        key: props['key'],
        cursorColor: props['cursorColor'],
        selectionColor: props['selectionColor'],
        child: props['child'],
      ),
  'DefaultSelectionStyle.fallback': (props) => DefaultSelectionStyle.fallback(
        key: props['key'],
      ),
  'DefaultSelectionStyle.of': (props) => DefaultSelectionStyle.of(
        props['pa'][0],
      ),
  'BouncingScrollSimulation': (props) => BouncingScrollSimulation(
        position: props['position']?.toDouble() ?? 0,
        velocity: props['velocity']?.toDouble() ?? 0,
        leadingExtent: props['leadingExtent']?.toDouble() ?? 0,
        trailingExtent: props['trailingExtent']?.toDouble() ?? 0,
        spring: props['spring'],
        tolerance: props['tolerance'] ?? Tolerance.defaultTolerance,
      ),
  'BouncingScrollSimulation.maxSpringTransferVelocity':
      BouncingScrollSimulation.maxSpringTransferVelocity,
  'ClampingScrollSimulation': (props) => ClampingScrollSimulation(
        position: props['position']?.toDouble() ?? 0,
        velocity: props['velocity']?.toDouble() ?? 0,
        friction: props['friction']?.toDouble() ?? 0.015,
        tolerance: props['tolerance'] ?? Tolerance.defaultTolerance,
      ),
  'RawKeyboardListener': (props) => RawKeyboardListener(
        key: props['key'],
        focusNode: props['focusNode'],
        autofocus: props['autofocus'] ?? false,
        includeSemantics: props['includeSemantics'] ?? true,
        onKey: props['onKey'],
        child: props['child'],
      ),
  'Spacer': (props) => Spacer(
        key: props['key'],
        flex: props['flex'] ?? 1,
      ),
  'CustomScrollView': (props) => CustomScrollView(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        scrollBehavior: props['scrollBehavior'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        center: props['center'],
        anchor: props['anchor']?.toDouble() ?? 0.0,
        cacheExtent: props['cacheExtent']?.toDouble(),
        slivers: as<Widget>(props['slivers']) ?? const <Widget>[],
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ListView': (props) => ListView(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        itemExtent: props['itemExtent']?.toDouble(),
        prototypeItem: props['prototypeItem'],
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        cacheExtent: props['cacheExtent']?.toDouble(),
        children: as<Widget>(props['children']) ?? const <Widget>[],
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ListView.builder': (props) => ListView.builder(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        itemExtent: props['itemExtent']?.toDouble(),
        prototypeItem: props['prototypeItem'],
        itemBuilder: props['itemBuilder'],
        findChildIndexCallback: props['findChildIndexCallback'],
        itemCount: props['itemCount'],
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        cacheExtent: props['cacheExtent']?.toDouble(),
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ListView.separated': (props) => ListView.separated(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        itemBuilder: props['itemBuilder'],
        findChildIndexCallback: props['findChildIndexCallback'],
        separatorBuilder: props['separatorBuilder'],
        itemCount: props['itemCount'],
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        cacheExtent: props['cacheExtent']?.toDouble(),
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ListView.custom': (props) => ListView.custom(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        itemExtent: props['itemExtent']?.toDouble(),
        prototypeItem: props['prototypeItem'],
        childrenDelegate: props['childrenDelegate'],
        cacheExtent: props['cacheExtent']?.toDouble(),
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'GridView': (props) => GridView(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        gridDelegate: props['gridDelegate'],
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        cacheExtent: props['cacheExtent']?.toDouble(),
        children: as<Widget>(props['children']) ?? const <Widget>[],
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
      ),
  'GridView.builder': (props) => GridView.builder(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        gridDelegate: props['gridDelegate'],
        itemBuilder: props['itemBuilder'],
        findChildIndexCallback: props['findChildIndexCallback'],
        itemCount: props['itemCount'],
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        cacheExtent: props['cacheExtent']?.toDouble(),
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'GridView.custom': (props) => GridView.custom(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        gridDelegate: props['gridDelegate'],
        childrenDelegate: props['childrenDelegate'],
        cacheExtent: props['cacheExtent']?.toDouble(),
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'GridView.count': (props) => GridView.count(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        crossAxisCount: props['crossAxisCount'],
        mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0.0,
        crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0.0,
        childAspectRatio: props['childAspectRatio']?.toDouble() ?? 1.0,
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        cacheExtent: props['cacheExtent']?.toDouble(),
        children: as<Widget>(props['children']) ?? const <Widget>[],
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'GridView.extent': (props) => GridView.extent(
        key: props['key'],
        scrollDirection: props['scrollDirection'] ?? Axis.vertical,
        reverse: props['reverse'] ?? false,
        controller: props['controller'],
        primary: props['primary'],
        physics: props['physics'],
        shrinkWrap: props['shrinkWrap'] ?? false,
        padding: props['padding'],
        maxCrossAxisExtent: props['maxCrossAxisExtent']?.toDouble() ?? 0,
        mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0.0,
        crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0.0,
        childAspectRatio: props['childAspectRatio']?.toDouble() ?? 1.0,
        addAutomaticKeepAlives: props['addAutomaticKeepAlives'] ?? true,
        addRepaintBoundaries: props['addRepaintBoundaries'] ?? true,
        addSemanticIndexes: props['addSemanticIndexes'] ?? true,
        cacheExtent: props['cacheExtent']?.toDouble(),
        children: as<Widget>(props['children']) ?? const <Widget>[],
        semanticChildCount: props['semanticChildCount'],
        dragStartBehavior:
            props['dragStartBehavior'] ?? DragStartBehavior.start,
        keyboardDismissBehavior: props['keyboardDismissBehavior'] ??
            ScrollViewKeyboardDismissBehavior.manual,
        restorationId: props['restorationId'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'ScrollViewKeyboardDismissBehavior.manual':
      ScrollViewKeyboardDismissBehavior.manual,
  'ScrollViewKeyboardDismissBehavior.onDrag':
      ScrollViewKeyboardDismissBehavior.onDrag,
  'ScrollViewKeyboardDismissBehavior.values':
      ScrollViewKeyboardDismissBehavior.values,
  'DefaultWidgetsLocalizations': (props) => const DefaultWidgetsLocalizations(),
  'DefaultWidgetsLocalizations.delegate': DefaultWidgetsLocalizations.delegate,
  'DefaultWidgetsLocalizations.load': (props) =>
      DefaultWidgetsLocalizations.load(
        props['pa'][0],
      ),
  'Localizations': (props) => Localizations(
        key: props['key'],
        locale: props['locale'],
        delegates: as<LocalizationsDelegate>(props['delegates']) ?? const [],
        child: props['child'],
      ),
  'Localizations.override': (props) => Localizations.override(
        key: props['key'],
        context: props['context'],
        locale: props['locale'],
        delegates: as<LocalizationsDelegate>(props['delegates']),
        child: props['child'],
      ),
  'Localizations.localeOf': (props) => Localizations.localeOf(
        props['pa'][0],
      ),
  'Localizations.maybeLocaleOf': (props) => Localizations.maybeLocaleOf(
        props['pa'][0],
      ),
  'Localizations.of': (props) => Localizations.of(
        props['pa'][0],
        props['pa'][1],
      ),
  'SelectableRegion': (props) => SelectableRegion(
        key: props['key'],
        focusNode: props['focusNode'],
        selectionControls: props['selectionControls'],
        child: props['child'],
      ),
  'SliverFillViewport': (props) => SliverFillViewport(
        key: props['key'],
        delegate: props['delegate'],
        viewportFraction: props['viewportFraction']?.toDouble() ?? 1.0,
        padEnds: props['padEnds'] ?? true,
      ),
  'SliverFillRemaining': (props) => SliverFillRemaining(
        key: props['key'],
        child: props['child'],
        hasScrollBody: props['hasScrollBody'] ?? true,
        fillOverscroll: props['fillOverscroll'] ?? false,
      ),
  'AnimatedSize': (props) => AnimatedSize(
        key: props['key'],
        child: props['child'],
        alignment: props['alignment'] ?? Alignment.center,
        curve: props['curve'] ?? Curves.linear,
        duration: props['duration'],
        reverseDuration: props['reverseDuration'],
        vsync: props['vsync'],
        clipBehavior: props['clipBehavior'] ?? Clip.hardEdge,
      ),
  'RenderObjectToWidgetAdapter': (props) => RenderObjectToWidgetAdapter(
        child: props['child'],
        container: props['container'],
        debugShortDescription: props['debugShortDescription'],
      ),
  'RenderObjectToWidgetElement': (props) => RenderObjectToWidgetElement(
        props['pa'][0],
      ),
  'WidgetsFlutterBinding': (props) => WidgetsFlutterBinding(),
  'WidgetsFlutterBinding.ensureInitialized': (props) =>
      WidgetsFlutterBinding.ensureInitialized(),
  'GestureSettings': (props) => GestureSettings(
        physicalTouchSlop: props['physicalTouchSlop']?.toDouble(),
        physicalDoubleTapSlop: props['physicalDoubleTapSlop']?.toDouble(),
      ),
  'Brightness.dark': Brightness.dark,
  'Brightness.light': Brightness.light,
  'Brightness.values': Brightness.values,
  'ChannelBuffers': (props) => ChannelBuffers(),
  'ChannelBuffers.kDefaultBufferSize': ChannelBuffers.kDefaultBufferSize,
  'ChannelBuffers.kControlChannelName': ChannelBuffers.kControlChannelName,
  'CallbackHandle.fromRawHandle': (props) => CallbackHandle.fromRawHandle(
        props['pa'][0],
      ),
  'PluginUtilities.getCallbackHandle': (props) =>
      PluginUtilities.getCallbackHandle(
        props['pa'][0],
      ),
  'PluginUtilities.getCallbackFromHandle': (props) =>
      PluginUtilities.getCallbackFromHandle(
        props['pa'][0],
      ),
  'FontWeight.w100': FontWeight.w100,
  'FontWeight.w200': FontWeight.w200,
  'FontWeight.w300': FontWeight.w300,
  'FontWeight.w400': FontWeight.w400,
  'FontWeight.w500': FontWeight.w500,
  'FontWeight.w600': FontWeight.w600,
  'FontWeight.w700': FontWeight.w700,
  'FontWeight.w800': FontWeight.w800,
  'FontWeight.w900': FontWeight.w900,
  'FontWeight.normal': FontWeight.normal,
  'FontWeight.bold': FontWeight.bold,
  'FontWeight.values': FontWeight.values,
  'FontWeight.lerp': (props) => FontWeight.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'FontFeature': (props) => FontFeature(
        props['pa'][0],
        props['pa'][1] ?? 1,
      ),
  'FontFeature.enable': (props) => FontFeature.enable(
        props['pa'][0],
      ),
  'FontFeature.disable': (props) => FontFeature.disable(
        props['pa'][0],
      ),
  'FontFeature.alternative': (props) => FontFeature.alternative(
        props['pa'][0],
      ),
  'FontFeature.alternativeFractions': (props) =>
      const FontFeature.alternativeFractions(),
  'FontFeature.contextualAlternates': (props) =>
      const FontFeature.contextualAlternates(),
  'FontFeature.caseSensitiveForms': (props) =>
      const FontFeature.caseSensitiveForms(),
  'FontFeature.characterVariant': (props) => FontFeature.characterVariant(
        props['pa'][0],
      ),
  'FontFeature.denominator': (props) => const FontFeature.denominator(),
  'FontFeature.fractions': (props) => const FontFeature.fractions(),
  'FontFeature.historicalForms': (props) => const FontFeature.historicalForms(),
  'FontFeature.historicalLigatures': (props) =>
      const FontFeature.historicalLigatures(),
  'FontFeature.liningFigures': (props) => const FontFeature.liningFigures(),
  'FontFeature.localeAware': (props) => FontFeature.localeAware(
        enable: props['enable'] ?? true,
      ),
  'FontFeature.notationalForms': (props) => FontFeature.notationalForms(
        props['pa'][0] ?? 1,
      ),
  'FontFeature.numerators': (props) => const FontFeature.numerators(),
  'FontFeature.oldstyleFigures': (props) => const FontFeature.oldstyleFigures(),
  'FontFeature.ordinalForms': (props) => const FontFeature.ordinalForms(),
  'FontFeature.proportionalFigures': (props) =>
      const FontFeature.proportionalFigures(),
  'FontFeature.randomize': (props) => const FontFeature.randomize(),
  'FontFeature.stylisticAlternates': (props) =>
      const FontFeature.stylisticAlternates(),
  'FontFeature.scientificInferiors': (props) =>
      const FontFeature.scientificInferiors(),
  'FontFeature.stylisticSet': (props) => FontFeature.stylisticSet(
        props['pa'][0],
      ),
  'FontFeature.subscripts': (props) => const FontFeature.subscripts(),
  'FontFeature.superscripts': (props) => const FontFeature.superscripts(),
  'FontFeature.swash': (props) => FontFeature.swash(
        props['pa'][0] ?? 1,
      ),
  'FontFeature.tabularFigures': (props) => const FontFeature.tabularFigures(),
  'FontFeature.slashedZero': (props) => const FontFeature.slashedZero(),
  'FontVariation': (props) => FontVariation(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
      ),
  'TextDecoration.combine': (props) => TextDecoration.combine(
        props['pa'][0],
      ),
  'TextDecoration.none': TextDecoration.none,
  'TextDecoration.underline': TextDecoration.underline,
  'TextDecoration.overline': TextDecoration.overline,
  'TextDecoration.lineThrough': TextDecoration.lineThrough,
  'TextHeightBehavior': (props) => TextHeightBehavior(
        applyHeightToFirstAscent: props['applyHeightToFirstAscent'] ?? true,
        applyHeightToLastDescent: props['applyHeightToLastDescent'] ?? true,
        leadingDistribution: props['leadingDistribution'] ??
            TextLeadingDistribution.proportional,
      ),
  'ParagraphStyle': (props) => ParagraphStyle(
        textAlign: props['textAlign'],
        textDirection: props['textDirection'],
        maxLines: props['maxLines'],
        fontFamily: props['fontFamily'],
        fontSize: props['fontSize']?.toDouble(),
        height: props['height']?.toDouble(),
        textHeightBehavior: props['textHeightBehavior'],
        fontWeight: props['fontWeight'],
        fontStyle: props['fontStyle'],
        strutStyle: props['strutStyle'],
        ellipsis: props['ellipsis'],
        locale: props['locale'],
      ),
  'TextBox.fromLTRBD': (props) => TextBox.fromLTRBD(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
        props['pa'][4],
      ),
  'TextPosition': (props) => TextPosition(
        offset: props['offset'],
        affinity: props['affinity'] ?? TextAffinity.downstream,
      ),
  'TextRange': (props) => TextRange(
        start: props['start'],
        end: props['end'],
      ),
  'TextRange.collapsed': (props) => TextRange.collapsed(
        props['pa'][0],
      ),
  'TextRange.empty': TextRange.empty,
  'ParagraphConstraints': (props) => ParagraphConstraints(
        width: props['width']?.toDouble() ?? 0,
      ),
  'LineMetrics': (props) => LineMetrics(
        hardBreak: props['hardBreak'],
        ascent: props['ascent']?.toDouble() ?? 0,
        descent: props['descent']?.toDouble() ?? 0,
        unscaledAscent: props['unscaledAscent']?.toDouble() ?? 0,
        height: props['height']?.toDouble() ?? 0,
        width: props['width']?.toDouble() ?? 0,
        left: props['left']?.toDouble() ?? 0,
        baseline: props['baseline']?.toDouble() ?? 0,
        lineNumber: props['lineNumber'],
      ),
  'ParagraphBuilder': (props) => ParagraphBuilder(
        props['pa'][0],
      ),
  'FontStyle.normal': FontStyle.normal,
  'FontStyle.italic': FontStyle.italic,
  'FontStyle.values': FontStyle.values,
  'TextAlign.left': TextAlign.left,
  'TextAlign.right': TextAlign.right,
  'TextAlign.center': TextAlign.center,
  'TextAlign.justify': TextAlign.justify,
  'TextAlign.start': TextAlign.start,
  'TextAlign.end': TextAlign.end,
  'TextAlign.values': TextAlign.values,
  'TextBaseline.alphabetic': TextBaseline.alphabetic,
  'TextBaseline.ideographic': TextBaseline.ideographic,
  'TextBaseline.values': TextBaseline.values,
  'TextDecorationStyle.solid': TextDecorationStyle.solid,
  'TextDecorationStyle.double': TextDecorationStyle.double,
  'TextDecorationStyle.dotted': TextDecorationStyle.dotted,
  'TextDecorationStyle.dashed': TextDecorationStyle.dashed,
  'TextDecorationStyle.wavy': TextDecorationStyle.wavy,
  'TextDecorationStyle.values': TextDecorationStyle.values,
  'TextLeadingDistribution.proportional': TextLeadingDistribution.proportional,
  'TextLeadingDistribution.even': TextLeadingDistribution.even,
  'TextLeadingDistribution.values': TextLeadingDistribution.values,
  'TextDirection.rtl': TextDirection.rtl,
  'TextDirection.ltr': TextDirection.ltr,
  'TextDirection.values': TextDirection.values,
  'TextAffinity.upstream': TextAffinity.upstream,
  'TextAffinity.downstream': TextAffinity.downstream,
  'TextAffinity.values': TextAffinity.values,
  'BoxHeightStyle.tight': BoxHeightStyle.tight,
  'BoxHeightStyle.max': BoxHeightStyle.max,
  'BoxHeightStyle.includeLineSpacingMiddle':
      BoxHeightStyle.includeLineSpacingMiddle,
  'BoxHeightStyle.includeLineSpacingTop': BoxHeightStyle.includeLineSpacingTop,
  'BoxHeightStyle.includeLineSpacingBottom':
      BoxHeightStyle.includeLineSpacingBottom,
  'BoxHeightStyle.strut': BoxHeightStyle.strut,
  'BoxHeightStyle.values': BoxHeightStyle.values,
  'BoxWidthStyle.tight': BoxWidthStyle.tight,
  'BoxWidthStyle.max': BoxWidthStyle.max,
  'BoxWidthStyle.values': BoxWidthStyle.values,
  'PlaceholderAlignment.baseline': PlaceholderAlignment.baseline,
  'PlaceholderAlignment.aboveBaseline': PlaceholderAlignment.aboveBaseline,
  'PlaceholderAlignment.belowBaseline': PlaceholderAlignment.belowBaseline,
  'PlaceholderAlignment.top': PlaceholderAlignment.top,
  'PlaceholderAlignment.bottom': PlaceholderAlignment.bottom,
  'PlaceholderAlignment.middle': PlaceholderAlignment.middle,
  'PlaceholderAlignment.values': PlaceholderAlignment.values,
  'PointerData': (props) => PointerData(
        embedderId: props['embedderId'] ?? 0,
        timeStamp: props['timeStamp'] ?? Duration.zero,
        change: props['change'] ?? PointerChange.cancel,
        kind: props['kind'] ?? PointerDeviceKind.touch,
        signalKind: props['signalKind'],
        device: props['device'] ?? 0,
        pointerIdentifier: props['pointerIdentifier'] ?? 0,
        physicalX: props['physicalX']?.toDouble() ?? 0.0,
        physicalY: props['physicalY']?.toDouble() ?? 0.0,
        physicalDeltaX: props['physicalDeltaX']?.toDouble() ?? 0.0,
        physicalDeltaY: props['physicalDeltaY']?.toDouble() ?? 0.0,
        buttons: props['buttons'] ?? 0,
        obscured: props['obscured'] ?? false,
        synthesized: props['synthesized'] ?? false,
        pressure: props['pressure']?.toDouble() ?? 0.0,
        pressureMin: props['pressureMin']?.toDouble() ?? 0.0,
        pressureMax: props['pressureMax']?.toDouble() ?? 0.0,
        distance: props['distance']?.toDouble() ?? 0.0,
        distanceMax: props['distanceMax']?.toDouble() ?? 0.0,
        size: props['size']?.toDouble() ?? 0.0,
        radiusMajor: props['radiusMajor']?.toDouble() ?? 0.0,
        radiusMinor: props['radiusMinor']?.toDouble() ?? 0.0,
        radiusMin: props['radiusMin']?.toDouble() ?? 0.0,
        radiusMax: props['radiusMax']?.toDouble() ?? 0.0,
        orientation: props['orientation']?.toDouble() ?? 0.0,
        tilt: props['tilt']?.toDouble() ?? 0.0,
        platformData: props['platformData'] ?? 0,
        scrollDeltaX: props['scrollDeltaX']?.toDouble() ?? 0.0,
        scrollDeltaY: props['scrollDeltaY']?.toDouble() ?? 0.0,
        panX: props['panX']?.toDouble() ?? 0.0,
        panY: props['panY']?.toDouble() ?? 0.0,
        panDeltaX: props['panDeltaX']?.toDouble() ?? 0.0,
        panDeltaY: props['panDeltaY']?.toDouble() ?? 0.0,
        scale: props['scale']?.toDouble() ?? 0.0,
        rotation: props['rotation']?.toDouble() ?? 0.0,
      ),
  'PointerDataPacket': (props) => PointerDataPacket(
        data: as<PointerData>(props['data']) ?? const <PointerData>[],
      ),
  'PointerChange.cancel': PointerChange.cancel,
  'PointerChange.add': PointerChange.add,
  'PointerChange.remove': PointerChange.remove,
  'PointerChange.hover': PointerChange.hover,
  'PointerChange.down': PointerChange.down,
  'PointerChange.move': PointerChange.move,
  'PointerChange.up': PointerChange.up,
  'PointerChange.panZoomStart': PointerChange.panZoomStart,
  'PointerChange.panZoomUpdate': PointerChange.panZoomUpdate,
  'PointerChange.panZoomEnd': PointerChange.panZoomEnd,
  'PointerChange.values': PointerChange.values,
  'PointerDeviceKind.touch': PointerDeviceKind.touch,
  'PointerDeviceKind.mouse': PointerDeviceKind.mouse,
  'PointerDeviceKind.stylus': PointerDeviceKind.stylus,
  'PointerDeviceKind.invertedStylus': PointerDeviceKind.invertedStylus,
  'PointerDeviceKind.trackpad': PointerDeviceKind.trackpad,
  'PointerDeviceKind.unknown': PointerDeviceKind.unknown,
  'PointerDeviceKind.values': PointerDeviceKind.values,
  'PointerSignalKind.none': PointerSignalKind.none,
  'PointerSignalKind.scroll': PointerSignalKind.scroll,
  'PointerSignalKind.unknown': PointerSignalKind.unknown,
  'PointerSignalKind.values': PointerSignalKind.values,
  'Color': (props) => Color(
        props['pa'][0],
      ),
  'Color.fromARGB': (props) => Color.fromARGB(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
      ),
  'Color.fromRGBO': (props) => Color.fromRGBO(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3]?.toDouble(),
      ),
  'Color.lerp': (props) => Color.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Color.alphaBlend': (props) => Color.alphaBlend(
        props['pa'][0],
        props['pa'][1],
      ),
  'Color.getAlphaFromOpacity': (props) => Color.getAlphaFromOpacity(
        props['pa'][0]?.toDouble(),
      ),
  'Paint': (props) => Paint(),
  'Path': (props) => Path(),
  'Path.from': (props) => Path.from(
        props['pa'][0],
      ),
  'Path.combine': (props) => Path.combine(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
      ),
  'Tangent': (props) => Tangent(
        props['pa'][0],
        props['pa'][1],
      ),
  'Tangent.fromAngle': (props) => Tangent.fromAngle(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
      ),
  'MaskFilter.blur': (props) => MaskFilter.blur(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
      ),
  'ColorFilter.mode': (props) => ColorFilter.mode(
        props['pa'][0],
        props['pa'][1],
      ),
  'ColorFilter.matrix': (props) => ColorFilter.matrix(
        props['pa'][0],
      ),
  'ColorFilter.linearToSrgbGamma': (props) =>
      const ColorFilter.linearToSrgbGamma(),
  'ColorFilter.srgbToLinearGamma': (props) =>
      const ColorFilter.srgbToLinearGamma(),
  'ImageShader': (props) => ImageShader(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2],
        props['pa'][3],
        filterQuality: props['filterQuality'],
      ),
  'FragmentProgram.compile': (props) => FragmentProgram.compile(
        spirv: props['spirv'],
        debugPrint: props['debugPrint'] ?? false,
      ),
  'Vertices': (props) => Vertices(
        props['pa'][0],
        props['pa'][1],
        textureCoordinates: as<Offset>(props['textureCoordinates']),
        colors: as<Color>(props['colors']),
        indices: as<int>(props['indices']),
      ),
  'Vertices.raw': (props) => Vertices.raw(
        props['pa'][0],
        props['pa'][1],
        textureCoordinates: props['textureCoordinates'],
        colors: props['colors'],
        indices: props['indices'],
      ),
  'Canvas': (props) => Canvas(
        props['pa'][0],
        props['pa'][1],
      ),
  'PictureRecorder': (props) => PictureRecorder(),
  'Shadow': (props) => Shadow(
        color: props['color'] ?? const Color(_kColorDefault),
        offset: props['offset'] ?? Offset.zero,
        blurRadius: props['blurRadius']?.toDouble() ?? 0.0,
      ),
  'Shadow.convertRadiusToSigma': (props) => Shadow.convertRadiusToSigma(
        props['pa'][0]?.toDouble(),
      ),
  'Shadow.lerp': (props) => Shadow.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Shadow.lerpList': (props) => Shadow.lerpList(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'ImmutableBuffer.fromUint8List': (props) => ImmutableBuffer.fromUint8List(
        props['pa'][0],
      ),
  'ImmutableBuffer.fromAsset': (props) => ImmutableBuffer.fromAsset(
        props['pa'][0],
      ),
  'ImageDescriptor.raw': (props) => ImageDescriptor.raw(
        props['pa'][0],
        width: props['width'],
        height: props['height'],
        rowBytes: props['rowBytes'],
        pixelFormat: props['pixelFormat'],
      ),
  'ImageDescriptor.encoded': (props) => ImageDescriptor.encoded(
        props['pa'][0],
      ),
  'BlendMode.clear': BlendMode.clear,
  'BlendMode.src': BlendMode.src,
  'BlendMode.dst': BlendMode.dst,
  'BlendMode.srcOver': BlendMode.srcOver,
  'BlendMode.dstOver': BlendMode.dstOver,
  'BlendMode.srcIn': BlendMode.srcIn,
  'BlendMode.dstIn': BlendMode.dstIn,
  'BlendMode.srcOut': BlendMode.srcOut,
  'BlendMode.dstOut': BlendMode.dstOut,
  'BlendMode.srcATop': BlendMode.srcATop,
  'BlendMode.dstATop': BlendMode.dstATop,
  'BlendMode.xor': BlendMode.xor,
  'BlendMode.plus': BlendMode.plus,
  'BlendMode.modulate': BlendMode.modulate,
  'BlendMode.screen': BlendMode.screen,
  'BlendMode.overlay': BlendMode.overlay,
  'BlendMode.darken': BlendMode.darken,
  'BlendMode.lighten': BlendMode.lighten,
  'BlendMode.colorDodge': BlendMode.colorDodge,
  'BlendMode.colorBurn': BlendMode.colorBurn,
  'BlendMode.hardLight': BlendMode.hardLight,
  'BlendMode.softLight': BlendMode.softLight,
  'BlendMode.difference': BlendMode.difference,
  'BlendMode.exclusion': BlendMode.exclusion,
  'BlendMode.multiply': BlendMode.multiply,
  'BlendMode.hue': BlendMode.hue,
  'BlendMode.saturation': BlendMode.saturation,
  'BlendMode.color': BlendMode.color,
  'BlendMode.luminosity': BlendMode.luminosity,
  'BlendMode.values': BlendMode.values,
  'FilterQuality.none': FilterQuality.none,
  'FilterQuality.low': FilterQuality.low,
  'FilterQuality.medium': FilterQuality.medium,
  'FilterQuality.high': FilterQuality.high,
  'FilterQuality.values': FilterQuality.values,
  'StrokeCap.butt': StrokeCap.butt,
  'StrokeCap.round': StrokeCap.round,
  'StrokeCap.square': StrokeCap.square,
  'StrokeCap.values': StrokeCap.values,
  'StrokeJoin.miter': StrokeJoin.miter,
  'StrokeJoin.round': StrokeJoin.round,
  'StrokeJoin.bevel': StrokeJoin.bevel,
  'StrokeJoin.values': StrokeJoin.values,
  'PaintingStyle.fill': PaintingStyle.fill,
  'PaintingStyle.stroke': PaintingStyle.stroke,
  'PaintingStyle.values': PaintingStyle.values,
  'Clip.none': Clip.none,
  'Clip.hardEdge': Clip.hardEdge,
  'Clip.antiAlias': Clip.antiAlias,
  'Clip.antiAliasWithSaveLayer': Clip.antiAliasWithSaveLayer,
  'Clip.values': Clip.values,
  'ImageByteFormat.rawRgba': ImageByteFormat.rawRgba,
  'ImageByteFormat.rawStraightRgba': ImageByteFormat.rawStraightRgba,
  'ImageByteFormat.rawUnmodified': ImageByteFormat.rawUnmodified,
  'ImageByteFormat.png': ImageByteFormat.png,
  'ImageByteFormat.values': ImageByteFormat.values,
  'PixelFormat.rgba8888': PixelFormat.rgba8888,
  'PixelFormat.bgra8888': PixelFormat.bgra8888,
  'PixelFormat.values': PixelFormat.values,
  'PathFillType.nonZero': PathFillType.nonZero,
  'PathFillType.evenOdd': PathFillType.evenOdd,
  'PathFillType.values': PathFillType.values,
  'PathOperation.difference': PathOperation.difference,
  'PathOperation.intersect': PathOperation.intersect,
  'PathOperation.union': PathOperation.union,
  'PathOperation.xor': PathOperation.xor,
  'PathOperation.reverseDifference': PathOperation.reverseDifference,
  'PathOperation.values': PathOperation.values,
  'BlurStyle.normal': BlurStyle.normal,
  'BlurStyle.solid': BlurStyle.solid,
  'BlurStyle.outer': BlurStyle.outer,
  'BlurStyle.inner': BlurStyle.inner,
  'BlurStyle.values': BlurStyle.values,
  'TileMode.clamp': TileMode.clamp,
  'TileMode.repeated': TileMode.repeated,
  'TileMode.mirror': TileMode.mirror,
  'TileMode.decal': TileMode.decal,
  'TileMode.values': TileMode.values,
  'VertexMode.triangles': VertexMode.triangles,
  'VertexMode.triangleStrip': VertexMode.triangleStrip,
  'VertexMode.triangleFan': VertexMode.triangleFan,
  'VertexMode.values': VertexMode.values,
  'PointMode.points': PointMode.points,
  'PointMode.lines': PointMode.lines,
  'PointMode.polygon': PointMode.polygon,
  'PointMode.values': PointMode.values,
  'ClipOp.difference': ClipOp.difference,
  'ClipOp.intersect': ClipOp.intersect,
  'ClipOp.values': ClipOp.values,
  'SemanticsAction.tap': SemanticsAction.tap,
  'SemanticsAction.longPress': SemanticsAction.longPress,
  'SemanticsAction.scrollLeft': SemanticsAction.scrollLeft,
  'SemanticsAction.scrollRight': SemanticsAction.scrollRight,
  'SemanticsAction.scrollUp': SemanticsAction.scrollUp,
  'SemanticsAction.scrollDown': SemanticsAction.scrollDown,
  'SemanticsAction.increase': SemanticsAction.increase,
  'SemanticsAction.decrease': SemanticsAction.decrease,
  'SemanticsAction.showOnScreen': SemanticsAction.showOnScreen,
  'SemanticsAction.moveCursorForwardByCharacter':
      SemanticsAction.moveCursorForwardByCharacter,
  'SemanticsAction.moveCursorBackwardByCharacter':
      SemanticsAction.moveCursorBackwardByCharacter,
  'SemanticsAction.setText': SemanticsAction.setText,
  'SemanticsAction.setSelection': SemanticsAction.setSelection,
  'SemanticsAction.copy': SemanticsAction.copy,
  'SemanticsAction.cut': SemanticsAction.cut,
  'SemanticsAction.paste': SemanticsAction.paste,
  'SemanticsAction.didGainAccessibilityFocus':
      SemanticsAction.didGainAccessibilityFocus,
  'SemanticsAction.didLoseAccessibilityFocus':
      SemanticsAction.didLoseAccessibilityFocus,
  'SemanticsAction.customAction': SemanticsAction.customAction,
  'SemanticsAction.dismiss': SemanticsAction.dismiss,
  'SemanticsAction.moveCursorForwardByWord':
      SemanticsAction.moveCursorForwardByWord,
  'SemanticsAction.moveCursorBackwardByWord':
      SemanticsAction.moveCursorBackwardByWord,
  'SemanticsAction.values': SemanticsAction.values,
  'SemanticsFlag.hasCheckedState': SemanticsFlag.hasCheckedState,
  'SemanticsFlag.isChecked': SemanticsFlag.isChecked,
  'SemanticsFlag.isSelected': SemanticsFlag.isSelected,
  'SemanticsFlag.isButton': SemanticsFlag.isButton,
  'SemanticsFlag.isTextField': SemanticsFlag.isTextField,
  'SemanticsFlag.isSlider': SemanticsFlag.isSlider,
  'SemanticsFlag.isKeyboardKey': SemanticsFlag.isKeyboardKey,
  'SemanticsFlag.isReadOnly': SemanticsFlag.isReadOnly,
  'SemanticsFlag.isLink': SemanticsFlag.isLink,
  'SemanticsFlag.isFocusable': SemanticsFlag.isFocusable,
  'SemanticsFlag.isFocused': SemanticsFlag.isFocused,
  'SemanticsFlag.hasEnabledState': SemanticsFlag.hasEnabledState,
  'SemanticsFlag.isEnabled': SemanticsFlag.isEnabled,
  'SemanticsFlag.isInMutuallyExclusiveGroup':
      SemanticsFlag.isInMutuallyExclusiveGroup,
  'SemanticsFlag.isHeader': SemanticsFlag.isHeader,
  'SemanticsFlag.isObscured': SemanticsFlag.isObscured,
  'SemanticsFlag.isMultiline': SemanticsFlag.isMultiline,
  'SemanticsFlag.scopesRoute': SemanticsFlag.scopesRoute,
  'SemanticsFlag.namesRoute': SemanticsFlag.namesRoute,
  'SemanticsFlag.isHidden': SemanticsFlag.isHidden,
  'SemanticsFlag.isImage': SemanticsFlag.isImage,
  'SemanticsFlag.isLiveRegion': SemanticsFlag.isLiveRegion,
  'SemanticsFlag.hasToggledState': SemanticsFlag.hasToggledState,
  'SemanticsFlag.isToggled': SemanticsFlag.isToggled,
  'SemanticsFlag.hasImplicitScrolling': SemanticsFlag.hasImplicitScrolling,
  'SemanticsFlag.values': SemanticsFlag.values,
  'SpellOutStringAttribute': (props) => SpellOutStringAttribute(
        range: props['range'],
      ),
  'LocaleStringAttribute': (props) => LocaleStringAttribute(
        range: props['range'],
        locale: props['locale'],
      ),
  'SemanticsUpdateBuilder': (props) => SemanticsUpdateBuilder(),
  'Offset': (props) => Offset(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
      ),
  'Offset.fromDirection': (props) => Offset.fromDirection(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble() ?? 1.0,
      ),
  'Offset.zero': Offset.zero,
  'Offset.infinite': Offset.infinite,
  'Offset.lerp': (props) => Offset.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Size': (props) => Size(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
      ),
  'Size.copy': (props) => Size.copy(
        props['pa'][0],
      ),
  'Size.square': (props) => Size.square(
        props['pa'][0]?.toDouble(),
      ),
  'Size.fromWidth': (props) => Size.fromWidth(
        props['pa'][0]?.toDouble(),
      ),
  'Size.fromHeight': (props) => Size.fromHeight(
        props['pa'][0]?.toDouble(),
      ),
  'Size.fromRadius': (props) => Size.fromRadius(
        props['pa'][0]?.toDouble(),
      ),
  'Size.zero': Size.zero,
  'Size.infinite': Size.infinite,
  'Size.lerp': (props) => Size.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Rect.fromLTRB': (props) => Rect.fromLTRB(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'Rect.fromLTWH': (props) => Rect.fromLTWH(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'Rect.fromCircle': (props) => Rect.fromCircle(
        center: props['center'],
        radius: props['radius']?.toDouble() ?? 0,
      ),
  'Rect.fromCenter': (props) => Rect.fromCenter(
        center: props['center'],
        width: props['width']?.toDouble() ?? 0,
        height: props['height']?.toDouble() ?? 0,
      ),
  'Rect.fromPoints': (props) => Rect.fromPoints(
        props['pa'][0],
        props['pa'][1],
      ),
  'Rect.zero': Rect.zero,
  'Rect.largest': Rect.largest,
  'Rect.lerp': (props) => Rect.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'Radius.circular': (props) => Radius.circular(
        props['pa'][0]?.toDouble(),
      ),
  'Radius.elliptical': (props) => Radius.elliptical(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
      ),
  'Radius.zero': Radius.zero,
  'Radius.lerp': (props) => Radius.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'RRect.fromLTRBXY': (props) => RRect.fromLTRBXY(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
        props['pa'][4]?.toDouble(),
        props['pa'][5]?.toDouble(),
      ),
  'RRect.fromLTRBR': (props) => RRect.fromLTRBR(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
        props['pa'][4],
      ),
  'RRect.fromRectXY': (props) => RRect.fromRectXY(
        props['pa'][0],
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
      ),
  'RRect.fromRectAndRadius': (props) => RRect.fromRectAndRadius(
        props['pa'][0],
        props['pa'][1],
      ),
  'RRect.fromLTRBAndCorners': (props) => RRect.fromLTRBAndCorners(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
        topLeft: props['topLeft'] ?? Radius.zero,
        topRight: props['topRight'] ?? Radius.zero,
        bottomRight: props['bottomRight'] ?? Radius.zero,
        bottomLeft: props['bottomLeft'] ?? Radius.zero,
      ),
  'RRect.fromRectAndCorners': (props) => RRect.fromRectAndCorners(
        props['pa'][0],
        topLeft: props['topLeft'] ?? Radius.zero,
        topRight: props['topRight'] ?? Radius.zero,
        bottomRight: props['bottomRight'] ?? Radius.zero,
        bottomLeft: props['bottomLeft'] ?? Radius.zero,
      ),
  'RRect.zero': RRect.zero,
  'RRect.lerp': (props) => RRect.lerp(
        props['pa'][0],
        props['pa'][1],
        props['pa'][2]?.toDouble(),
      ),
  'RSTransform': (props) => RSTransform(
        props['pa'][0]?.toDouble(),
        props['pa'][1]?.toDouble(),
        props['pa'][2]?.toDouble(),
        props['pa'][3]?.toDouble(),
      ),
  'RSTransform.fromComponents': (props) => RSTransform.fromComponents(
        rotation: props['rotation']?.toDouble() ?? 0,
        scale: props['scale']?.toDouble() ?? 0,
        anchorX: props['anchorX']?.toDouble() ?? 0,
        anchorY: props['anchorY']?.toDouble() ?? 0,
        translateX: props['translateX']?.toDouble() ?? 0,
        translateY: props['translateY']?.toDouble() ?? 0,
      ),
  'SceneBuilder': (props) => SceneBuilder(),
  'FrameTiming': (props) => FrameTiming(
        vsyncStart: props['vsyncStart'],
        buildStart: props['buildStart'],
        buildFinish: props['buildFinish'],
        rasterStart: props['rasterStart'],
        rasterFinish: props['rasterFinish'],
        rasterFinishWallTime: props['rasterFinishWallTime'],
        layerCacheCount: props['layerCacheCount'] ?? 0,
        layerCacheBytes: props['layerCacheBytes'] ?? 0,
        pictureCacheCount: props['pictureCacheCount'] ?? 0,
        pictureCacheBytes: props['pictureCacheBytes'] ?? 0,
        frameNumber: props['frameNumber'] ?? -1,
      ),
  'WindowPadding.zero': WindowPadding.zero,
  'DisplayFeature': (props) => DisplayFeature(
        bounds: props['bounds'],
        type: props['type'],
        state: props['state'],
      ),
  'Locale': (props) => Locale(
        props['pa'][0],
        props['pa'][1],
      ),
  'Locale.fromSubtags': (props) => Locale.fromSubtags(
        languageCode: props['languageCode'] ?? 'und',
        scriptCode: props['scriptCode'],
        countryCode: props['countryCode'],
      ),
  'FramePhase.vsyncStart': FramePhase.vsyncStart,
  'FramePhase.buildStart': FramePhase.buildStart,
  'FramePhase.buildFinish': FramePhase.buildFinish,
  'FramePhase.rasterStart': FramePhase.rasterStart,
  'FramePhase.rasterFinish': FramePhase.rasterFinish,
  'FramePhase.rasterFinishWallTime': FramePhase.rasterFinishWallTime,
  'FramePhase.values': FramePhase.values,
  'AppLifecycleState.resumed': AppLifecycleState.resumed,
  'AppLifecycleState.inactive': AppLifecycleState.inactive,
  'AppLifecycleState.paused': AppLifecycleState.paused,
  'AppLifecycleState.detached': AppLifecycleState.detached,
  'AppLifecycleState.values': AppLifecycleState.values,
  'DisplayFeatureType.unknown': DisplayFeatureType.unknown,
  'DisplayFeatureType.fold': DisplayFeatureType.fold,
  'DisplayFeatureType.hinge': DisplayFeatureType.hinge,
  'DisplayFeatureType.cutout': DisplayFeatureType.cutout,
  'DisplayFeatureType.values': DisplayFeatureType.values,
  'DisplayFeatureState.unknown': DisplayFeatureState.unknown,
  'DisplayFeatureState.postureFlat': DisplayFeatureState.postureFlat,
  'DisplayFeatureState.postureHalfOpened':
      DisplayFeatureState.postureHalfOpened,
  'DisplayFeatureState.values': DisplayFeatureState.values,
  'IsolateNameServer.lookupPortByName': (props) =>
      IsolateNameServer.lookupPortByName(
        props['pa'][0],
      ),
  'IsolateNameServer.registerPortWithName': (props) =>
      IsolateNameServer.registerPortWithName(
        props['pa'][0],
        props['pa'][1],
      ),
  'IsolateNameServer.removePortNameMapping': (props) =>
      IsolateNameServer.removePortNameMapping(
        props['pa'][0],
      ),
  'KeyData': (props) => KeyData(
        timeStamp: props['timeStamp'],
        type: props['type'],
        physical: props['physical'],
        logical: props['logical'],
        character: props['character'],
        synthesized: props['synthesized'],
      ),
  'KeyEventType.down': KeyEventType.down,
  'KeyEventType.up': KeyEventType.up,
  'KeyEventType.repeat': KeyEventType.repeat,
  'KeyEventType.values': KeyEventType.values,
  'DartPluginRegistrant': (props) => DartPluginRegistrant(),
  'DartPluginRegistrant.ensureInitialized': (props) =>
      DartPluginRegistrant.ensureInitialized(),
};

Map<String, bool> flutterMapping = {
  'Ticker': false,
  'TickerFuture': false,
  'TickerCanceled': false,
  'Priority': false,
  'SchedulerPhase': false,
  'Tween': false,
  'ReverseTween': false,
  'ColorTween': false,
  'SizeTween': false,
  'RectTween': false,
  'IntTween': false,
  'StepTween': false,
  'ConstantTween': false,
  'CurveTween': false,
  'TweenSequence': false,
  'FlippedTweenSequence': false,
  'TweenSequenceItem': false,
  'AnimationController': false,
  'AnimationBehavior': false,
  'AnimationStatus': false,
  'SawTooth': false,
  'Interval': false,
  'Threshold': false,
  'Cubic': false,
  'ThreePointCubic': false,
  'Curve2DSample': false,
  'CatmullRomSpline': false,
  'CatmullRomCurve': false,
  'FlippedCurve': false,
  'ElasticInCurve': false,
  'ElasticOutCurve': false,
  'ElasticInOutCurve': false,
  'Curves': false,
  'AlwaysStoppedAnimation': false,
  'ProxyAnimation': false,
  'ReverseAnimation': false,
  'CurvedAnimation': false,
  'TrainHoppingAnimation': false,
  'AnimationMean': false,
  'AnimationMax': false,
  'AnimationMin': false,
  'Category': false,
  'DocumentationIcon': false,
  'Summary': false,
  'PartialStackFrame': false,
  'RepetitiveStackFrameFilter': false,
  'ErrorDescription': false,
  'ErrorSummary': false,
  'ErrorHint': false,
  'ErrorSpacer': false,
  'FlutterErrorDetails': false,
  'FlutterError': false,
  'DiagnosticsStackTrace': false,
  'AbstractNode': false,
  'WriteBuffer': false,
  'ReadBuffer': false,
  'LicenseParagraph': false,
  'LicenseEntryWithLineBreaks': false,
  'LicenseRegistry': false,
  'ObserverList': false,
  'HashedObserverList': false,
  'CachingIterable': false,
  'Factory': false,
  'SynchronousFuture': false,
  'Unicode': false,
  'TextTreeConfiguration': false,
  'TextTreeRenderer': false,
  'MessageProperty': false,
  'StringProperty': false,
  'DoubleProperty': false,
  'IntProperty': false,
  'PercentProperty': false,
  'FlagProperty': false,
  'IterableProperty': false,
  'EnumProperty': false,
  'ObjectFlagProperty': false,
  'FlagsSummary': false,
  'DiagnosticsProperty': false,
  'DiagnosticableNode': false,
  'DiagnosticableTreeNode': false,
  'DiagnosticPropertiesBuilder': false,
  'DiagnosticsBlock': false,
  'DiagnosticLevel': false,
  'DiagnosticsTreeStyle': false,
  'TargetPlatform': false,
  'StackFrame': false,
  'ChangeNotifier': false,
  'ValueNotifier': false,
  'BitField': false,
  'UniqueKey': false,
  'ValueKey': false,
  'DebugReassembleConfig': false,
  'AnnounceSemanticsEvent': false,
  'TooltipSemanticsEvent': false,
  'LongPressSemanticsEvent': false,
  'TapSemanticEvent': false,
  'SemanticsService': false,
  'SemanticsTag': false,
  'CustomSemanticsAction': false,
  'AttributedString': false,
  'AttributedStringProperty': false,
  'SemanticsData': false,
  'SemanticsHintOverrides': false,
  'SemanticsProperties': false,
  'SemanticsNode': false,
  'SemanticsOwner': false,
  'SemanticsConfiguration': false,
  'OrdinalSortKey': false,
  'DebugSemanticsDumpOrder': false,
  'BorderSide': false,
  'BorderStyle': false,
  'StrokeAlign': false,
  'Border': false,
  'BorderDirectional': false,
  'BoxShape': false,
  'ImageConfiguration': false,
  'AssetBundleImageKey': false,
  'ResizeImage': false,
  'FileImage': false,
  'MemoryImage': false,
  'ExactAssetImage': false,
  'NetworkImageLoadException': false,
  'BoxShadow': false,
  'NetworkImage': false,
  'BorderRadius': false,
  'BorderRadiusDirectional': false,
  'ContinuousRectangleBorder': false,
  'HSVColor': false,
  'HSLColor': false,
  'ColorSwatch': false,
  'ColorProperty': false,
  'TextStyle': false,
  'AssetImage': false,
  'CircleBorder': false,
  'BeveledRectangleBorder': false,
  'GradientRotation': false,
  'LinearGradient': false,
  'RadialGradient': false,
  'SweepGradient': false,
  'Alignment': false,
  'AlignmentDirectional': false,
  'TextAlignVertical': false,
  'TextSpan': false,
  'ImageSizeInfo': false,
  'FlutterLogoDecoration': false,
  'FlutterLogoStyle': false,
  'RenderComparison': false,
  'Axis': false,
  'VerticalDirection': false,
  'AxisDirection': false,
  'BoxDecoration': false,
  'Accumulator': false,
  'InlineSpanSemanticsInformation': false,
  'FractionalOffset': false,
  'FittedSizes': false,
  'BoxFit': false,
  'CircularNotchedRectangle': false,
  'AutomaticNotchedShape': false,
  'MatrixUtils': false,
  'TransformProperty': false,
  'StadiumBorder': false,
  'PlaceholderDimensions': false,
  'TextPainter': false,
  'TextOverflow': false,
  'TextWidthBasis': false,
  'RoundedRectangleBorder': false,
  'ShapeDecoration': false,
  'EdgeInsets': false,
  'EdgeInsetsDirectional': false,
  'DecorationImage': false,
  'ImageRepeat': false,
  'StrutStyle': false,
  'ImageInfo': false,
  'ImageStreamListener': false,
  'ImageChunkEvent': false,
  'ImageStream': false,
  'OneFrameImageStreamCompleter': false,
  'MultiFrameImageStreamCompleter': false,
  'ImageCache': false,
  'PolynomialFit': false,
  'LeastSquaresSolver': false,
  'EagerGestureRecognizer': false,
  'GestureArenaTeam': false,
  'DoubleTapGestureRecognizer': false,
  'MultiTapGestureRecognizer': false,
  'SerialTapDownDetails': false,
  'SerialTapCancelDetails': false,
  'SerialTapUpDetails': false,
  'SerialTapGestureRecognizer': false,
  'Velocity': false,
  'VelocityEstimate': false,
  'VelocityTracker': false,
  'IOSScrollViewFlingVelocityTracker': false,
  'HitTestEntry': false,
  'HitTestResult': false,
  'TapDownDetails': false,
  'TapUpDetails': false,
  'TapGestureRecognizer': false,
  'GestureArenaManager': false,
  'GestureDisposition': false,
  'OffsetPair': false,
  'DragStartBehavior': false,
  'GestureRecognizerState': false,
  'ImmediateMultiDragGestureRecognizer': false,
  'HorizontalMultiDragGestureRecognizer': false,
  'VerticalMultiDragGestureRecognizer': false,
  'DelayedMultiDragGestureRecognizer': false,
  'PointerEventConverter': false,
  'ForcePressDetails': false,
  'ForcePressGestureRecognizer': false,
  'PointerSignalResolver': false,
  'LongPressDownDetails': false,
  'LongPressStartDetails': false,
  'LongPressMoveUpdateDetails': false,
  'LongPressEndDetails': false,
  'LongPressGestureRecognizer': false,
  'DragDownDetails': false,
  'DragStartDetails': false,
  'DragUpdateDetails': false,
  'DragEndDetails': false,
  'ScaleStartDetails': false,
  'ScaleUpdateDetails': false,
  'ScaleEndDetails': false,
  'ScaleGestureRecognizer': false,
  'PointerEventResampler': false,
  'PointerAddedEvent': false,
  'PointerRemovedEvent': false,
  'PointerHoverEvent': false,
  'PointerEnterEvent': false,
  'PointerExitEvent': false,
  'PointerDownEvent': false,
  'PointerMoveEvent': false,
  'PointerUpEvent': false,
  'PointerScrollEvent': false,
  'PointerPanZoomStartEvent': false,
  'PointerPanZoomUpdateEvent': false,
  'PointerPanZoomEndEvent': false,
  'PointerCancelEvent': false,
  'DeviceGestureSettings': false,
  'VerticalDragGestureRecognizer': false,
  'HorizontalDragGestureRecognizer': false,
  'PanGestureRecognizer': false,
  'SamplingClock': false,
  'FlutterErrorDetailsForPointerEventDispatcher': false,
  'PointerRouter': false,
  'CustomPainterSemantics': false,
  'RenderCustomPaint': false,
  'OverScrollHeaderStretchConfiguration': false,
  'PersistentHeaderShowOnScreenConfiguration': false,
  'FloatingHeaderSnapConfiguration': false,
  'RenderImage': false,
  'TextureBox': false,
  'WrapParentData': false,
  'RenderWrap': false,
  'WrapAlignment': false,
  'WrapCrossAlignment': false,
  'TableBorder': false,
  'RenderProxyBox': false,
  'RenderConstrainedBox': false,
  'RenderLimitedBox': false,
  'RenderAspectRatio': false,
  'RenderIntrinsicWidth': false,
  'RenderIntrinsicHeight': false,
  'RenderOpacity': false,
  'RenderAnimatedOpacity': false,
  'RenderShaderMask': false,
  'RenderBackdropFilter': false,
  'ShapeBorderClipper': false,
  'RenderClipRect': false,
  'RenderClipRRect': false,
  'RenderClipOval': false,
  'RenderClipPath': false,
  'RenderPhysicalModel': false,
  'RenderPhysicalShape': false,
  'RenderDecoratedBox': false,
  'RenderTransform': false,
  'RenderFittedBox': false,
  'RenderFractionalTranslation': false,
  'RenderPointerListener': false,
  'RenderMouseRegion': false,
  'RenderRepaintBoundary': false,
  'RenderIgnorePointer': false,
  'RenderOffstage': false,
  'RenderAbsorbPointer': false,
  'RenderMetaData': false,
  'RenderSemanticsGestureHandler': false,
  'RenderSemanticsAnnotations': false,
  'RenderBlockSemantics': false,
  'RenderMergeSemantics': false,
  'RenderExcludeSemantics': false,
  'RenderIndexedSemantics': false,
  'RenderLeaderLayer': false,
  'RenderFollowerLayer': false,
  'RenderAnnotatedRegion': false,
  'HitTestBehavior': false,
  'DecorationPosition': false,
  'ScrollDirection': false,
  'SliverMultiBoxAdaptorParentData': false,
  'FlowParentData': false,
  'RenderFlow': false,
  'ParentData': false,
  'PaintingContext': false,
  'PipelineOwner': false,
  'DiagnosticsDebugCreator': false,
  'SelectedContent': false,
  'SelectionUtils': false,
  'SelectAllSelectionEvent': false,
  'ClearSelectionEvent': false,
  'SelectWordSelectionEvent': false,
  'SelectionEdgeUpdateEvent': false,
  'SelectionGeometry': false,
  'SelectionPoint': false,
  'SelectionResult': false,
  'SelectionEventType': false,
  'SelectionStatus': false,
  'TextSelectionHandleType': false,
  'FlexParentData': false,
  'RenderFlex': false,
  'FlexFit': false,
  'MainAxisSize': false,
  'MainAxisAlignment': false,
  'CrossAxisAlignment': false,
  'RenderSliverFixedExtentList': false,
  'TableCellParentData': false,
  'IntrinsicColumnWidth': false,
  'FixedColumnWidth': false,
  'FractionColumnWidth': false,
  'FlexColumnWidth': false,
  'MaxColumnWidth': false,
  'MinColumnWidth': false,
  'RenderTable': false,
  'TableCellVerticalAlignment': false,
  'MouseTracker': false,
  'RenderRotatedBox': false,
  'RenderPadding': false,
  'RenderPositionedBox': false,
  'RenderConstrainedOverflowBox': false,
  'RenderConstraintsTransformBox': false,
  'RenderSizedOverflowBox': false,
  'RenderFractionallySizedOverflowBox': false,
  'RenderCustomSingleChildLayoutBox': false,
  'RenderBaseline': false,
  'ChildLayoutHelper': false,
  'RenderSliverOpacity': false,
  'RenderSliverIgnorePointer': false,
  'RenderSliverOffstage': false,
  'RenderSliverAnimatedOpacity': false,
  'ViewConfiguration': false,
  'RenderView': false,
  'SliverGridGeometry': false,
  'SliverGridRegularTileLayout': false,
  'SliverGridDelegateWithFixedCrossAxisCount': false,
  'SliverGridDelegateWithMaxCrossAxisExtent': false,
  'SliverGridParentData': false,
  'RenderSliverGrid': false,
  'RevealedOffset': false,
  'RenderViewport': false,
  'RenderShrinkWrappingViewport': false,
  'CacheExtentStyle': false,
  'RenderSliverList': false,
  'RenderSliverPadding': false,
  'SliverConstraints': false,
  'SliverGeometry': false,
  'SliverHitTestResult': false,
  'SliverHitTestEntry': false,
  'SliverLogicalParentData': false,
  'SliverLogicalContainerParentData': false,
  'SliverPhysicalParentData': false,
  'SliverPhysicalContainerParentData': false,
  'RenderSliverToBoxAdapter': false,
  'GrowthDirection': false,
  'RenderErrorBox': false,
  'RelativeRect': false,
  'StackParentData': false,
  'RenderStack': false,
  'RenderIndexedStack': false,
  'StackFit': false,
  'ListBodyParentData': false,
  'RenderListBody': false,
  'FractionalOffsetTween': false,
  'AlignmentTween': false,
  'AlignmentGeometryTween': false,
  'AnnotationEntry': false,
  'AnnotationResult': false,
  'LayerHandle': false,
  'PictureLayer': false,
  'TextureLayer': false,
  'PlatformViewLayer': false,
  'PerformanceOverlayLayer': false,
  'ContainerLayer': false,
  'OffsetLayer': false,
  'ClipRectLayer': false,
  'ClipRRectLayer': false,
  'ClipPathLayer': false,
  'ColorFilterLayer': false,
  'ImageFilterLayer': false,
  'TransformLayer': false,
  'OpacityLayer': false,
  'ShaderMaskLayer': false,
  'BackdropFilterLayer': false,
  'LayerLink': false,
  'LeaderLayer': false,
  'FollowerLayer': false,
  'AnnotatedRegionLayer': false,
  'RenderAndroidView': false,
  'RenderUiKitView': false,
  'PlatformViewRenderBox': false,
  'PlatformViewHitTestBehavior': false,
  'TextSelectionPoint': false,
  'RenderEditable': false,
  'TextParentData': false,
  'PlaceholderSpanIndexSemanticsTag': false,
  'RenderParagraph': false,
  'RenderSliverFillViewport': false,
  'RenderSliverFillRemainingWithScrollable': false,
  'RenderSliverFillRemaining': false,
  'RenderSliverFillRemainingAndOverscroll': false,
  'RenderAnimatedSize': false,
  'RenderingFlutterBinding': false,
  'MultiChildLayoutParentData': false,
  'RenderCustomMultiChildLayoutBox': false,
  'BoxConstraints': false,
  'BoxHitTestResult': false,
  'BoxHitTestEntry': false,
  'BoxParentData': false,
  'GravitySimulation': false,
  'SpringDescription': false,
  'SpringSimulation': false,
  'ScrollSpringSimulation': false,
  'SpringType': false,
  'FrictionSimulation': false,
  'BoundedFrictionSimulation': false,
  'ClampedSimulation': false,
  'Tolerance': false,
  'CupertinoTabView': true,
  'CupertinoTextThemeData': false,
  'CupertinoTextField': true,
  'OverlayVisibilityMode': false,
  'CupertinoFormRow': true,
  'CupertinoTextSelectionToolbar': true,
  'CupertinoTextSelectionToolbarButton': true,
  'CupertinoSegmentedControl': true,
  'CupertinoIconThemeData': false,
  'CupertinoColors': false,
  'CupertinoDynamicColor': false,
  'CupertinoSlidingSegmentedControl': true,
  'CupertinoSearchTextField': true,
  'CupertinoButton': true,
  'CupertinoTabController': false,
  'CupertinoTabScaffold': true,
  'RestorableCupertinoTabController': false,
  'CupertinoAlertDialog': true,
  'CupertinoPopupSurface': true,
  'CupertinoActionSheet': true,
  'CupertinoActionSheetAction': true,
  'CupertinoDialogAction': true,
  'CupertinoTabBar': true,
  'CupertinoDatePicker': true,
  'CupertinoTimerPicker': true,
  'CupertinoDatePickerMode': false,
  'CupertinoTimerPickerMode': false,
  'CupertinoSliverRefreshControl': true,
  'RefreshIndicatorMode': false,
  'CupertinoPicker': true,
  'CupertinoPickerDefaultSelectionOverlay': true,
  'CupertinoContextMenu': true,
  'CupertinoPageRoute': false,
  'CupertinoPage': false,
  'CupertinoPageTransition': true,
  'CupertinoFullscreenDialogTransition': true,
  'CupertinoModalPopupRoute': false,
  'CupertinoDialogRoute': false,
  'CupertinoThumbPainter': false,
  'CupertinoActivityIndicator': true,
  'CupertinoSlider': true,
  'CupertinoPageScaffold': true,
  'CupertinoTextSelectionControls': false,
  'CupertinoUserInterfaceLevel': true,
  'CupertinoUserInterfaceLevelData': false,
  'CupertinoFormSection': true,
  'CupertinoTextFormFieldRow': true,
  'CupertinoContextMenuAction': true,
  'CupertinoSwitch': true,
  'CupertinoScrollbar': true,
  'CupertinoApp': true,
  'CupertinoScrollBehavior': false,
  'CupertinoIcons': false,
  'CupertinoNavigationBar': true,
  'CupertinoSliverNavigationBar': true,
  'CupertinoNavigationBarBackButton': true,
  'CupertinoTheme': true,
  'CupertinoThemeData': false,
  'NoDefaultCupertinoThemeData': false,
  'DefaultCupertinoLocalizations': false,
  'DatePickerDateTimeOrder': false,
  'DatePickerDateOrder': false,
  'TextButtonThemeData': false,
  'TextButtonTheme': true,
  'DrawerHeader': true,
  'ProgressIndicatorThemeData': false,
  'ProgressIndicatorTheme': true,
  'MaterialButton': true,
  'GridTile': true,
  'Material': true,
  'ShapeBorderTween': false,
  'MaterialType': false,
  'TextTheme': false,
  'SelectionArea': true,
  'InkRipple': false,
  'ElevatedButtonThemeData': false,
  'ElevatedButtonTheme': true,
  'MaterialBannerThemeData': false,
  'MaterialBannerTheme': true,
  'ScaffoldMessenger': true,
  'ScaffoldPrelayoutGeometry': false,
  'ScaffoldGeometry': false,
  'Scaffold': true,
  'Feedback': false,
  'SwitchThemeData': false,
  'SwitchTheme': true,
  'ToggleButtonsThemeData': false,
  'ToggleButtonsTheme': true,
  'BackButtonIcon': true,
  'BackButton': true,
  'CloseButton': true,
  'TextSelectionToolbarTextButton': true,
  'TextField': true,
  'DrawerThemeData': false,
  'DrawerTheme': true,
  'FilterChip': true,
  'NavigationBar': true,
  'NavigationDestination': true,
  'NavigationIndicator': true,
  'NavigationDestinationLabelBehavior': false,
  'NavigationRailThemeData': false,
  'NavigationRailTheme': true,
  'AboutListTile': true,
  'AboutDialog': true,
  'LicensePage': true,
  'TimePickerThemeData': false,
  'TimePickerTheme': true,
  'TextSelectionToolbar': true,
  'TextSelectionThemeData': false,
  'TextSelectionTheme': true,
  'RadioListTile': true,
  'RefreshIndicator': true,
  'RefreshIndicatorTriggerMode': false,
  'ActionChip': true,
  'InputDatePickerFormField': true,
  'BottomAppBarTheme': false,
  'TabBarTheme': false,
  'OutlinedButtonThemeData': false,
  'OutlinedButtonTheme': true,
  'GridTileBar': true,
  'ElevationOverlay': false,
  'ListTileThemeData': false,
  'ListTileTheme': true,
  'SelectableText': true,
  'CircleAvatar': true,
  'Ink': true,
  'InkDecoration': false,
  'ButtonBar': true,
  'FadeUpwardsPageTransitionsBuilder': false,
  'OpenUpwardsPageTransitionsBuilder': false,
  'ZoomPageTransitionsBuilder': false,
  'CupertinoPageTransitionsBuilder': false,
  'PageTransitionsTheme': false,
  'AppBarTheme': false,
  'MaterialPageRoute': false,
  'MaterialPage': false,
  'MaterialColor': false,
  'MaterialAccentColor': false,
  'Colors': false,
  'SnackBarAction': true,
  'SnackBar': true,
  'SnackBarClosedReason': false,
  'FloatingLabelAlignment': false,
  'InputDecorator': true,
  'InputDecoration': false,
  'InputDecorationTheme': false,
  'FloatingLabelBehavior': false,
  'ReorderableListView': true,
  'ColorScheme': false,
  'TimeOfDay': false,
  'RestorableTimeOfDay': false,
  'DayPeriod': false,
  'TimeOfDayFormat': false,
  'HourFormat': false,
  'Card': true,
  'RawMaterialButton': true,
  'PopupMenuThemeData': false,
  'PopupMenuTheme': true,
  'DataColumn': false,
  'DataRow': false,
  'DataCell': false,
  'DataTable': true,
  'TableRowInkWell': true,
  'TabController': false,
  'DefaultTabController': true,
  'NavigationRail': true,
  'NavigationRailDestination': false,
  'NavigationRailLabelType': false,
  'TooltipThemeData': false,
  'TooltipTheme': true,
  'TooltipTriggerMode': false,
  'TextButton': true,
  'Dialog': true,
  'AlertDialog': true,
  'SimpleDialogOption': true,
  'SimpleDialog': true,
  'DialogRoute': false,
  'InkResponse': true,
  'InkWell': true,
  'Checkbox': true,
  'TimePickerDialog': true,
  'TimePickerEntryMode': false,
  'Radio': true,
  'ControlsDetails': false,
  'Step': false,
  'Stepper': true,
  'StepState': false,
  'StepperType': false,
  'CheckboxListTile': true,
  'RadioThemeData': false,
  'RadioTheme': true,
  'Tab': true,
  'TabBar': true,
  'TabBarView': true,
  'TabPageSelectorIndicator': true,
  'TabPageSelector': true,
  'TabBarIndicatorSize': false,
  'DatePickerDialog': true,
  'DateRangePickerDialog': true,
  'BottomNavigationBarThemeData': false,
  'BottomNavigationBarTheme': true,
  'FloatingActionButton': true,
  'TooltipVisibility': true,
  'CheckboxThemeData': false,
  'CheckboxTheme': true,
  'RangeSlider': true,
  'ScrollbarThemeData': false,
  'ScrollbarTheme': true,
  'InkHighlight': false,
  'PopupMenuDivider': true,
  'PopupMenuItem': true,
  'CheckedPopupMenuItem': true,
  'PopupMenuButton': true,
  'PopupMenuPosition': false,
  'ExpandIcon': true,
  'AppBar': true,
  'SliverAppBar': true,
  'BottomAppBar': true,
  'UserAccountsDrawerHeader': true,
  'MaterialBanner': true,
  'MaterialBannerClosedReason': false,
  'CalendarDatePicker': true,
  'YearPicker': true,
  'UnderlineInputBorder': false,
  'OutlineInputBorder': false,
  'Chip': true,
  'RawChip': true,
  'DialogTheme': false,
  'PaginatedDataTable': true,
  'MaterialStatePropertyAll': false,
  'MaterialStatesController': false,
  'MaterialState': false,
  'FloatingActionButtonThemeData': false,
  'FlutterLogo': true,
  'CardTheme': false,
  'BottomSheetThemeData': false,
  'Tooltip': true,
  'ElevatedButton': true,
  'SwitchListTile': true,
  'DropdownMenuItem': true,
  'DropdownButtonHideUnderline': true,
  'DropdownButton': true,
  'DropdownButtonFormField': true,
  'TextFormField': true,
  'Slider': true,
  'UnderlineTabIndicator': false,
  'NoSplash': false,
  'ButtonTheme': true,
  'ButtonThemeData': false,
  'ButtonTextTheme': false,
  'ButtonBarLayoutBehavior': false,
  'MaterialPointArcTween': false,
  'MaterialRectArcTween': false,
  'MaterialRectCenterArcTween': false,
  'LinearProgressIndicator': true,
  'CircularProgressIndicator': true,
  'RefreshProgressIndicator': true,
  'ListTile': true,
  'ListTileStyle': false,
  'ListTileControlAffinity': false,
  'ExpansionTile': true,
  'BottomSheet': true,
  'InputChip': true,
  'MaterialTextSelectionControls': false,
  'DividerThemeData': false,
  'DividerTheme': true,
  'DataTableThemeData': false,
  'DataTableTheme': true,
  'DefaultMaterialLocalizations': false,
  'Typography': false,
  'ScriptCategory': false,
  'OutlinedButton': true,
  'ChoiceChip': true,
  'Divider': true,
  'VerticalDivider': true,
  'SliderTheme': true,
  'SliderThemeData': false,
  'RectangularSliderTrackShape': false,
  'RoundedRectSliderTrackShape': false,
  'RectangularRangeSliderTrackShape': false,
  'RoundedRectRangeSliderTrackShape': false,
  'RoundSliderTickMarkShape': false,
  'RoundRangeSliderTickMarkShape': false,
  'RoundSliderThumbShape': false,
  'RoundRangeSliderThumbShape': false,
  'RoundSliderOverlayShape': false,
  'RectangularSliderValueIndicatorShape': false,
  'RectangularRangeSliderValueIndicatorShape': false,
  'PaddleSliderValueIndicatorShape': false,
  'PaddleRangeSliderValueIndicatorShape': false,
  'RangeValues': false,
  'RangeLabels': false,
  'ShowValueIndicator': false,
  'Thumb': false,
  'ChipTheme': true,
  'ChipThemeData': false,
  'InkSparkle': false,
  'FragmentShaderManager': false,
  'MaterialSlice': false,
  'MaterialGap': false,
  'MergeableMaterial': true,
  'Drawer': true,
  'DrawerController': true,
  'DrawerAlignment': false,
  'ExpansionTileThemeData': false,
  'ExpansionTileTheme': true,
  'DateUtils': false,
  'DateTimeRange': false,
  'DatePickerEntryMode': false,
  'DatePickerMode': false,
  'SnackBarThemeData': false,
  'SnackBarBehavior': false,
  'AnimatedIcon': true,
  'ThemeData': false,
  'MaterialBasedCupertinoThemeData': false,
  'VisualDensity': false,
  'MaterialTapTargetSize': false,
  'FlexibleSpaceBar': true,
  'FlexibleSpaceBarSettings': true,
  'CollapseMode': false,
  'StretchMode': false,
  'NavigationBarThemeData': false,
  'NavigationBarTheme': true,
  'Switch': true,
  'Scrollbar': true,
  'ButtonStyle': false,
  'BottomNavigationBar': true,
  'BottomNavigationBarType': false,
  'BottomNavigationBarLandscapeLayout': false,
  'MaterialApp': true,
  'MaterialScrollBehavior': false,
  'ThemeMode': false,
  'Icons': false,
  'Autocomplete': true,
  'InkSplash': false,
  'ExpansionPanel': false,
  'ExpansionPanelRadio': false,
  'ExpansionPanelList': true,
  'ButtonBarThemeData': false,
  'ButtonBarTheme': true,
  'Theme': true,
  'ThemeDataTween': false,
  'AnimatedTheme': true,
  'IconButton': true,
  'ToggleButtons': true,
  'MouseTrackerAnnotation': false,
  'KeyboardLockMode': false,
  'KeyDownEvent': false,
  'KeyUpEvent': false,
  'KeyRepeatEvent': false,
  'HardwareKeyboard': false,
  'KeyMessage': false,
  'KeyEventManager': false,
  'KeyDataTransitMode': false,
  'RawKeyEventDataLinux': false,
  'GLFWKeyHelper': false,
  'GtkKeyHelper': false,
  'BasicMessageChannel': false,
  'MethodChannel': false,
  'OptionalMethodChannel': false,
  'EventChannel': false,
  'RawKeyEventDataAndroid': false,
  'RawKeyEventDataWeb': false,
  'TextSelection': false,
  'RawKeyEventDataIos': false,
  'SystemSound': false,
  'SystemSoundType': false,
  'SystemNavigator': false,
  'HapticFeedback': false,
  'ClipboardData': false,
  'Clipboard': false,
  'FontLoader': false,
  'TextInputType': false,
  'TextInputConfiguration': false,
  'RawFloatingCursorPoint': false,
  'TextEditingValue': false,
  'SelectionRect': false,
  'TextInput': false,
  'SmartDashesType': false,
  'SmartQuotesType': false,
  'TextInputAction': false,
  'TextCapitalization': false,
  'FloatingCursorDragState': false,
  'SelectionChangedCause': false,
  'NetworkAssetBundle': false,
  'PlatformAssetBundle': false,
  'FilteringTextInputFormatter': false,
  'LengthLimitingTextInputFormatter': false,
  'MaxLengthEnforcement': false,
  'RawKeyEventDataMacOs': false,
  'ApplicationSwitcherDescription': false,
  'SystemUiOverlayStyle': false,
  'SystemChrome': false,
  'DeviceOrientation': false,
  'SystemUiOverlay': false,
  'SystemUiMode': false,
  'SystemChannels': false,
  'RawKeyEventDataFuchsia': false,
  'RawKeyEventDataWindows': false,
  'RawKeyDownEvent': false,
  'RawKeyUpEvent': false,
  'KeyboardSide': false,
  'ModifierKey': false,
  'PlatformViewsService': false,
  'AndroidPointerProperties': false,
  'AndroidPointerCoords': false,
  'AndroidMotionEvent': false,
  'RestorationManager': false,
  'RestorationBucket': false,
  'BinaryCodec': false,
  'StringCodec': false,
  'JSONMessageCodec': false,
  'JSONMethodCodec': false,
  'StandardMessageCodec': false,
  'StandardMethodCodec': false,
  'AutofillHints': false,
  'AutofillConfiguration': false,
  'MethodCall': false,
  'PlatformException': false,
  'MissingPluginException': false,
  'DeferredComponent': false,
  'MouseCursorManager': false,
  'SystemMouseCursors': false,
  'TextEditingDeltaInsertion': false,
  'TextEditingDeltaDeletion': false,
  'TextEditingDeltaReplacement': false,
  'TextEditingDeltaNonTextUpdate': false,
  'SingleChildScrollView': true,
  'BoxConstraintsTween': false,
  'DecorationTween': false,
  'EdgeInsetsTween': false,
  'EdgeInsetsGeometryTween': false,
  'BorderRadiusTween': false,
  'BorderTween': false,
  'Matrix4Tween': false,
  'TextStyleTween': false,
  'AnimatedContainer': true,
  'AnimatedPadding': true,
  'AnimatedAlign': true,
  'AnimatedPositioned': true,
  'AnimatedPositionedDirectional': true,
  'AnimatedScale': true,
  'AnimatedRotation': true,
  'AnimatedSlide': true,
  'AnimatedOpacity': true,
  'SliverAnimatedOpacity': true,
  'AnimatedDefaultTextStyle': true,
  'AnimatedPhysicalModel': true,
  'AnimatedFractionallySizedBox': true,
  'AnimatedCrossFade': true,
  'CrossFadeState': false,
  'GridPaper': true,
  'TweenAnimationBuilder': true,
  'WidgetSpan': false,
  'FixedScrollMetrics': false,
  'DefaultTextEditingShortcuts': true,
  'SlideTransition': true,
  'ScaleTransition': true,
  'RotationTransition': true,
  'SizeTransition': true,
  'FadeTransition': true,
  'SliverFadeTransition': true,
  'RelativeRectTween': false,
  'PositionedTransition': true,
  'RelativePositionedTransition': true,
  'DecoratedBoxTransition': true,
  'AlignTransition': true,
  'DefaultTextStyleTransition': true,
  'AnimatedBuilder': true,
  'SliverPersistentHeader': true,
  'PageStorageKey': false,
  'PageStorageBucket': false,
  'PageStorage': true,
  'RouteInformation': false,
  'RouterConfig': false,
  'Router': true,
  'RootBackButtonDispatcher': false,
  'ChildBackButtonDispatcher': false,
  'BackButtonListener': true,
  'PlatformRouteInformationProvider': false,
  'RouteInformationReportingType': false,
  'LocalHistoryEntry': false,
  'RouteObserver': false,
  'RawDialogRoute': false,
  'FocusTrap': true,
  'FocusTrapArea': true,
  'Directionality': true,
  'Opacity': true,
  'ShaderMask': true,
  'BackdropFilter': true,
  'CustomPaint': true,
  'ClipRect': true,
  'ClipRRect': true,
  'ClipOval': true,
  'ClipPath': true,
  'PhysicalModel': true,
  'PhysicalShape': true,
  'Transform': true,
  'CompositedTransformTarget': true,
  'CompositedTransformFollower': true,
  'FittedBox': true,
  'FractionalTranslation': true,
  'RotatedBox': true,
  'Padding': true,
  'Align': true,
  'Center': true,
  'CustomSingleChildLayout': true,
  'LayoutId': true,
  'CustomMultiChildLayout': true,
  'SizedBox': true,
  'ConstrainedBox': true,
  'ConstraintsTransformBox': true,
  'UnconstrainedBox': true,
  'FractionallySizedBox': true,
  'LimitedBox': true,
  'OverflowBox': true,
  'SizedOverflowBox': true,
  'Offstage': true,
  'AspectRatio': true,
  'IntrinsicWidth': true,
  'IntrinsicHeight': true,
  'Baseline': true,
  'SliverToBoxAdapter': true,
  'SliverPadding': true,
  'ListBody': true,
  'Stack': true,
  'IndexedStack': true,
  'Positioned': true,
  'PositionedDirectional': true,
  'Flex': true,
  'Row': true,
  'Column': true,
  'Flexible': true,
  'Expanded': true,
  'Wrap': true,
  'Flow': true,
  'RichText': true,
  'RawImage': true,
  'DefaultAssetBundle': true,
  'WidgetToRenderBoxAdapter': true,
  'Listener': true,
  'MouseRegion': true,
  'RepaintBoundary': true,
  'IgnorePointer': true,
  'AbsorbPointer': true,
  'MetaData': true,
  'Semantics': true,
  'MergeSemantics': true,
  'BlockSemantics': true,
  'ExcludeSemantics': true,
  'IndexedSemantics': true,
  'KeyedSubtree': true,
  'Builder': true,
  'StatefulBuilder': true,
  'ColoredBox': true,
  'DisposableBuildContext': false,
  'GestureRecognizerFactoryWithHandlers': false,
  'GestureDetector': true,
  'RawGestureDetector': true,
  'RestorableNum': false,
  'RestorableDouble': false,
  'RestorableInt': false,
  'RestorableString': false,
  'RestorableBool': false,
  'RestorableBoolN': false,
  'RestorableNumN': false,
  'RestorableDoubleN': false,
  'RestorableIntN': false,
  'RestorableStringN': false,
  'RestorableDateTime': false,
  'RestorableDateTimeN': false,
  'RestorableTextEditingController': false,
  'SlottedRenderObjectElement': false,
  'AsyncSnapshot': false,
  'StreamBuilder': true,
  'FutureBuilder': true,
  'ConnectionState': false,
  'DefaultTextStyle': true,
  'DefaultTextHeightBehavior': true,
  'Text': true,
  'ActionListener': true,
  'CallbackAction': false,
  'ActionDispatcher': false,
  'Actions': true,
  'FocusableActionDetector': true,
  'VoidCallbackIntent': false,
  'VoidCallbackAction': false,
  'DoNothingIntent': false,
  'DoNothingAndStopPropagationIntent': false,
  'DoNothingAction': false,
  'ActivateIntent': false,
  'ButtonActivateIntent': false,
  'SelectIntent': false,
  'DismissIntent': false,
  'PrioritizedIntents': false,
  'PrioritizedAction': false,
  'Form': true,
  'FormField': true,
  'AutovalidateMode': false,
  'Image': true,
  'IconThemeData': false,
  'Texture': true,
  'NestedScrollView': true,
  'SliverOverlapAbsorberHandle': false,
  'SliverOverlapAbsorber': true,
  'RenderSliverOverlapAbsorber': false,
  'SliverOverlapInjector': true,
  'RenderSliverOverlapInjector': false,
  'NestedScrollViewViewport': true,
  'RenderNestedScrollViewViewport': false,
  'SelectionContainer': true,
  'SelectionRegistrarScope': true,
  'NavigationToolbar': true,
  'ReorderableList': true,
  'SliverReorderableList': true,
  'ReorderableDragStartListener': true,
  'ReorderableDelayedDragStartListener': true,
  'PageRouteBuilder': false,
  'ScrollController': false,
  'TrackingScrollController': false,
  'SliverLayoutBuilder': true,
  'RouteSettings': false,
  'NavigatorObserver': false,
  'HeroControllerScope': true,
  'DefaultTransitionDelegate': false,
  'Navigator': true,
  'RestorableRouteFuture': false,
  'RoutePopDisposition': false,
  'DoNothingAndStopPropagationTextIntent': false,
  'DeleteCharacterIntent': false,
  'DeleteToNextWordBoundaryIntent': false,
  'DeleteToLineBreakIntent': false,
  'ExtendSelectionByCharacterIntent': false,
  'ExtendSelectionToNextWordBoundaryIntent': false,
  'ExtendSelectionToNextWordBoundaryOrCaretLocationIntent': false,
  'ExpandSelectionToDocumentBoundaryIntent': false,
  'ExpandSelectionToLineBreakIntent': false,
  'ExtendSelectionToLineBreakIntent': false,
  'ExtendSelectionVerticallyToAdjacentLineIntent': false,
  'ExtendSelectionToDocumentBoundaryIntent': false,
  'ScrollToDocumentBoundaryIntent': false,
  'SelectAllTextIntent': false,
  'CopySelectionTextIntent': false,
  'PasteTextIntent': false,
  'RedoTextIntent': false,
  'ReplaceTextIntent': false,
  'UndoTextIntent': false,
  'UpdateSelectionIntent': false,
  'TransposeCharactersIntent': false,
  'PreferredSize': true,
  'ValueListenableBuilder': true,
  'MediaQueryData': false,
  'MediaQuery': true,
  'Orientation': false,
  'NavigationMode': false,
  'DraggableScrollableController': false,
  'DraggableScrollableSheet': true,
  'DraggableScrollableNotification': false,
  'DraggableScrollableActuator': true,
  'DecoratedBox': true,
  'Container': true,
  'ScrollAwareImageProvider': false,
  'TextEditingController': false,
  'ToolbarOptions': false,
  'EditableText': true,
  'Placeholder': true,
  'Icon': true,
  'BottomNavigationBarItem': false,
  'LayoutBuilder': true,
  'PrimaryScrollController': true,
  'ScrollMetricsNotification': false,
  'ScrollPositionAlignmentPolicy': false,
  'ImageIcon': true,
  'Scrollable': true,
  'EdgeDraggingAutoScroller': false,
  'ScrollableDetails': false,
  'ScrollIncrementDetails': false,
  'ScrollIntent': false,
  'ScrollAction': false,
  'ScrollIncrementType': false,
  'OrientationBuilder': true,
  'FocusNode': false,
  'FocusScopeNode': false,
  'FocusManager': false,
  'KeyEventResult': false,
  'UnfocusDisposition': false,
  'FocusHighlightMode': false,
  'FocusHighlightStrategy': false,
  'WidgetOrderTraversalPolicy': false,
  'ReadingOrderTraversalPolicy': false,
  'NumericFocusOrder': false,
  'LexicalFocusOrder': false,
  'OrderedTraversalPolicy': false,
  'FocusTraversalOrder': true,
  'FocusTraversalGroup': true,
  'RequestFocusIntent': false,
  'RequestFocusAction': false,
  'NextFocusIntent': false,
  'NextFocusAction': false,
  'PreviousFocusIntent': false,
  'PreviousFocusAction': false,
  'DirectionalFocusIntent': false,
  'DirectionalFocusAction': false,
  'ExcludeFocusTraversal': true,
  'TraversalDirection': false,
  'ColorFiltered': true,
  'Title': true,
  'AnimatedSwitcher': true,
  'SliverPrototypeExtentList': true,
  'TableRow': false,
  'Table': true,
  'TableCell': true,
  'InheritedModelElement': false,
  'DualTransitionBuilder': true,
  'Visibility': true,
  'SliverVisibility': true,
  'AnnotatedRegion': true,
  'BannerPainter': false,
  'Banner': true,
  'CheckedModeBanner': true,
  'BannerLocation': false,
  'NotificationListener': true,
  'LayoutChangedNotification': false,
  'PageController': false,
  'PageMetrics': false,
  'PageScrollPhysics': false,
  'PageView': true,
  'KeySet': false,
  'LogicalKeySet': false,
  'ShortcutMapProperty': false,
  'SingleActivator': false,
  'CharacterActivator': false,
  'ShortcutManager': false,
  'Shortcuts': true,
  'CallbackShortcuts': true,
  'ShortcutRegistry': false,
  'ShortcutRegistrar': true,
  'KeyboardListener': true,
  'ImageFiltered': true,
  'ScrollNotificationObserver': true,
  'SharedAppData': true,
  'Draggable': true,
  'LongPressDraggable': true,
  'DraggableDetails': false,
  'DragTargetDetails': false,
  'DragTarget': true,
  'GlowingOverscrollIndicator': true,
  'StretchingOverscrollIndicator': true,
  'OverscrollIndicatorNotification': false,
  'Hero': true,
  'HeroController': false,
  'HeroMode': true,
  'HeroFlightDirection': false,
  'SizeChangedLayoutNotification': false,
  'SizeChangedLayoutNotifier': true,
  'Viewport': true,
  'ShrinkWrappingViewport': true,
  'AutomaticKeepAlive': true,
  'KeepAliveNotification': false,
  'KeepAliveHandle': false,
  'ObjectKey': false,
  'LabeledGlobalKey': false,
  'GlobalObjectKey': false,
  'BuildOwner': false,
  'ErrorWidget': true,
  'StatelessElement': false,
  'StatefulElement': false,
  'ParentDataElement': false,
  'InheritedElement': false,
  'LeafRenderObjectElement': false,
  'SingleChildRenderObjectElement': false,
  'MultiChildRenderObjectElement': false,
  'DebugCreator': false,
  'IndexedSlot': false,
  'ScrollBehavior': false,
  'ScrollConfiguration': true,
  'AndroidOverscrollIndicator': false,
  'IconTheme': true,
  'SemanticsDebugger': true,
  'ToolbarItemsParentData': false,
  'TextSelectionOverlay': false,
  'SelectionOverlay': false,
  'TextSelectionGestureDetectorBuilder': false,
  'TextSelectionGestureDetector': true,
  'ClipboardStatusNotifier': false,
  'ClipboardStatus': false,
  'TickerMode': true,
  'RestorationScope': true,
  'UnmanagedRestorationScope': true,
  'RootRestorationScope': true,
  'AnimatedList': true,
  'SliverAnimatedList': true,
  'ScrollPhysics': false,
  'RangeMaintainingScrollPhysics': false,
  'BouncingScrollPhysics': false,
  'ClampingScrollPhysics': false,
  'AlwaysScrollableScrollPhysics': false,
  'NeverScrollableScrollPhysics': false,
  'IconDataProperty': false,
  'OverflowBar': true,
  'OverflowBarAlignment': false,
  'FadeInImage': true,
  'Focus': true,
  'FocusScope': true,
  'ExcludeFocus': true,
  'ModalBarrier': true,
  'AnimatedModalBarrier': true,
  'InteractiveViewer': true,
  'TransformationController': false,
  'DisplayFeatureSubScreen': true,
  'AutofillGroup': true,
  'AutofillContextAction': false,
  'IdleScrollActivity': false,
  'HoldScrollActivity': false,
  'ScrollDragController': false,
  'DragScrollActivity': false,
  'BallisticScrollActivity': false,
  'DrivenScrollActivity': false,
  'ListWheelChildListDelegate': false,
  'ListWheelChildLoopingListDelegate': false,
  'ListWheelChildBuilderDelegate': false,
  'FixedExtentScrollController': false,
  'FixedExtentMetrics': false,
  'FixedExtentScrollPhysics': false,
  'ListWheelScrollView': true,
  'ListWheelElement': false,
  'ListWheelViewport': true,
  'SliverChildBuilderDelegate': false,
  'SliverChildListDelegate': false,
  'SliverList': true,
  'SliverFixedExtentList': true,
  'SliverGrid': true,
  'SliverMultiBoxAdaptorElement': false,
  'SliverOpacity': true,
  'SliverIgnorePointer': true,
  'SliverOffstage': true,
  'KeepAlive': true,
  'ShortcutSerialization': false,
  'DefaultPlatformMenuDelegate': false,
  'PlatformMenuBar': true,
  'PlatformMenu': false,
  'PlatformMenuItemGroup': false,
  'PlatformMenuItem': false,
  'PlatformProvidedMenuItem': false,
  'PlatformProvidedMenuItemType': false,
  'Dismissible': true,
  'DismissUpdateDetails': false,
  'DismissDirection': false,
  'ScrollPositionWithSingleContext': false,
  'WillPopScope': true,
  'TextSelectionToolbarLayoutDelegate': false,
  'DesktopTextSelectionToolbarLayoutDelegate': false,
  'SafeArea': true,
  'SliverSafeArea': true,
  'ScrollbarPainter': false,
  'RawScrollbar': true,
  'ScrollbarOrientation': false,
  'AndroidView': true,
  'UiKitView': true,
  'HtmlElementView': true,
  'PlatformViewLink': true,
  'PlatformViewSurface': true,
  'AndroidViewSurface': true,
  'WidgetsApp': true,
  'RawAutocomplete': true,
  'AutocompletePreviousOptionIntent': false,
  'AutocompleteNextOptionIntent': false,
  'AutocompleteHighlightedOption': true,
  'ScrollStartNotification': false,
  'ScrollUpdateNotification': false,
  'OverscrollNotification': false,
  'ScrollEndNotification': false,
  'UserScrollNotification': false,
  'OverlayEntry': false,
  'Overlay': true,
  'DefaultSelectionStyle': true,
  'BouncingScrollSimulation': false,
  'ClampingScrollSimulation': false,
  'RawKeyboardListener': true,
  'Spacer': true,
  'CustomScrollView': true,
  'ListView': true,
  'GridView': true,
  'ScrollViewKeyboardDismissBehavior': false,
  'DefaultWidgetsLocalizations': false,
  'Localizations': true,
  'SelectableRegion': true,
  'SliverFillViewport': true,
  'SliverFillRemaining': true,
  'AnimatedSize': true,
  'RenderObjectToWidgetAdapter': true,
  'RenderObjectToWidgetElement': false,
  'WidgetsFlutterBinding': false,
  'GestureSettings': false,
  'Brightness': false,
  'ChannelBuffers': false,
  'CallbackHandle': false,
  'PluginUtilities': false,
  'FontWeight': false,
  'FontFeature': false,
  'FontVariation': false,
  'TextDecoration': false,
  'TextHeightBehavior': false,
  'ParagraphStyle': false,
  'TextBox': false,
  'TextPosition': false,
  'TextRange': false,
  'ParagraphConstraints': false,
  'LineMetrics': false,
  'ParagraphBuilder': false,
  'FontStyle': false,
  'TextAlign': false,
  'TextBaseline': false,
  'TextDecorationStyle': false,
  'TextLeadingDistribution': false,
  'TextDirection': false,
  'TextAffinity': false,
  'BoxHeightStyle': false,
  'BoxWidthStyle': false,
  'PlaceholderAlignment': false,
  'PointerData': false,
  'PointerDataPacket': false,
  'PointerChange': false,
  'PointerDeviceKind': false,
  'PointerSignalKind': false,
  'Color': false,
  'Paint': false,
  'Path': false,
  'Tangent': false,
  'MaskFilter': false,
  'ColorFilter': false,
  'Gradient': false,
  'ImageShader': false,
  'FragmentProgram': false,
  'Vertices': false,
  'Canvas': false,
  'PictureRecorder': false,
  'Shadow': false,
  'ImmutableBuffer': false,
  'ImageDescriptor': false,
  'BlendMode': false,
  'FilterQuality': false,
  'StrokeCap': false,
  'StrokeJoin': false,
  'PaintingStyle': false,
  'Clip': false,
  'ImageByteFormat': false,
  'PixelFormat': false,
  'PathFillType': false,
  'PathOperation': false,
  'BlurStyle': false,
  'TileMode': false,
  'VertexMode': false,
  'PointMode': false,
  'ClipOp': false,
  'SemanticsAction': false,
  'SemanticsFlag': false,
  'SpellOutStringAttribute': false,
  'LocaleStringAttribute': false,
  'SemanticsUpdateBuilder': false,
  'Offset': false,
  'Size': false,
  'Rect': false,
  'Radius': false,
  'RRect': false,
  'RSTransform': false,
  'SceneBuilder': false,
  'PlatformConfiguration': false,
  'FrameTiming': false,
  'WindowPadding': false,
  'DisplayFeature': false,
  'Locale': false,
  'FramePhase': false,
  'AppLifecycleState': false,
  'DisplayFeatureType': false,
  'DisplayFeatureState': false,
  'IsolateNameServer': false,
  'KeyData': false,
  'KeyEventType': false,
  'DartPluginRegistrant': false,
};
